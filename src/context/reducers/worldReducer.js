import ACTION_TYPES from '../actions/actionTypes';
import { 
  UPDATE_WEATHER, 
  SET_TIME_OF_DAY, 
  WEATHER_SPECIAL_EVENT,
  UPDATE_GAME_TIME,
  INITIALIZE_WEATHER
} from '../actions/weather-actions';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ–∑–æ–Ω–∞–º–∏
const SEASON_LENGTH = 30; // –î–ª–∏–Ω–∞ —Å–µ–∑–æ–Ω–∞ –≤ –¥–Ω—è—Ö
const SEASON_ORDER = ['spring', 'summer', 'autumn', 'winter']; // –ü–æ—Ä—è–¥–æ–∫ —Å–µ–∑–æ–Ω–æ–≤

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—â–µ–≥–æ –¥–Ω—è –º–∏—Ä–∞
 * @param {Number} worldDay - –û–±—â–∏–π –¥–µ–Ω—å –º–∏—Ä–∞
 * @returns {Number} - –î–µ–Ω—å –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∑–æ–Ω–∞ (1-30)
 */
const calculateSeasonDay = (worldDay) => {
  return ((worldDay - 1) % SEASON_LENGTH) + 1;
};

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—â–µ–≥–æ –¥–Ω—è –º–∏—Ä–∞
 * @param {Number} worldDay - –û–±—â–∏–π –¥–µ–Ω—å –º–∏—Ä–∞
 * @returns {String} - –ö–ª—é—á —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∑–æ–Ω–∞ ('spring', 'summer', etc.)
 */
const calculateSeason = (worldDay) => {
  const seasonIndex = Math.floor((worldDay - 1) / SEASON_LENGTH) % SEASON_ORDER.length;
  return SEASON_ORDER[seasonIndex];
};

// –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã
const initialWeatherState = {
  currentTime: 720, // 12:00
  timeOfDay: '–¥–µ–Ω—å',
  formattedTime: '12:00',
  weatherType: '—è—Å–Ω–æ', 
  weatherIntensity: 5,
  weatherEffects: {
    combat: {
      damageModifiers: {},
      hitChanceModifier: 1.0,
      dodgeChanceModifier: 1.0,
      critChanceModifier: 1.0,
      enemySpawnRateModifier: 1.0
    },
    cultivation: {
      elementModifiers: {},
      meditationEfficiencyModifier: 1.0,
      breakthroughChanceModifier: 1.0,
      bottleneckProgressModifier: 3.0
    },
    exploration: {
      movementEnergyCostModifier: 1.0,
      resourceFindRateModifier: 1.0,
      resourceQualityModifier: 1.0,
      hiddenLocationChanceModifier: 1.0,
      visibilityModifier: 1.0
    },
    crafting: {
      alchemySuccessRateModifier: 1.0,
      alchemyQualityModifier: 1.0,
      spiritEnergyConsumptionModifier: 1.0
    },
    system: {
      specialEncounterChance: 0.0,
      uniqueResourceSpawnChance: 0.0
    }
  },
  activeSpecialEvent: null
};

// –†–µ–¥—É–∫—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∏–≥—Ä–æ–≤—ã–º –º–∏—Ä–æ–º
export const worldReducer = (state, action) => {
  switch (action.type) {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–≥–æ–¥—ã —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º
    case INITIALIZE_WEATHER:
      console.log('üîçüîç worldReducer: –ü–æ–ª—É—á–µ–Ω INITIALIZE_WEATHER');
      // –í —Å–ª—É—á–∞–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ—Ä–µ–∑ middleware, —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –º–µ–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–µ—Å—å
      // Middleware —Å–∞–º –≤—ã–∑–æ–≤–µ—Ç updateWeather —Å –Ω—É–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      return state;
      
    case ACTION_TYPES.UPDATE_TIME:
      console.log('üîéüîéüîé –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–¢–õ–ê–î–ö–ê - –ü–û–õ–£–ß–ï–ù UPDATE_TIME:', {
        raw_payload: action.payload, // –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–µ–π—Å—Ç–≤–∏—è
        raw_day_value: action.payload.day, // –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–Ω—è
        raw_day_type: typeof action.payload.day, // –¢–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è –¥–Ω—è
        raw_state_day: state.world?.time?.day, // –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–Ω—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        raw_state_day_type: typeof state.world?.time?.day, // –¢–∏–ø —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–Ω—è 
      });
      
      // world.time —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –ø—Ä–∞–≤–¥—ã –æ –≤—Ä–µ–º–µ–Ω–∏
      // –ü–æ–ª—É—á–∞–µ–º –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      const newDay = action.payload.day !== undefined ? Number(action.payload.day) : (state.world?.time?.day || 1);
      const newHour = action.payload.hour !== undefined ? Number(action.payload.hour) : (state.world?.time?.hour || 0);
      const newMinute = action.payload.minute !== undefined ? Number(action.payload.minute) : (state.world?.time?.minute || 0);
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º let –≤–º–µ—Å—Ç–æ const, —Ç–∞–∫ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ —Å–µ–∑–æ–Ω–∞
      let newSeason = action.payload.season || state.world?.time?.season || 'spring';
      
      // –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å –¥–ª—è –ª–æ–≥–æ–≤
      const currentDay = state.world?.time?.day !== undefined ? Number(state.world.time.day) : 1;
      
      console.log('üïí UPDATE_TIME –≤ —Ä–µ–¥—å—é—Å–µ—Ä–µ - –ü–û–°–õ–ï –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–Ø:', {
        currentDay,
        newDay,
        parsedNewDay: Number(action.payload.day), // –Ø–≤–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
        newHour,
        newMinute,
        newSeason,
        diff: newDay - currentDay,
        actionPayload: action.payload,
        currentValues: state.world?.time || 'time –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        conversion_details: {
          raw: action.payload.day,
          after_number: Number(action.payload.day),
          after_parse_int: parseInt(action.payload.day),
          after_force_num_check: parseFloat(String(action.payload.day).replace(/[^0-9.-]+/g, ''))
        }
      });
      
      // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–º–µ–Ω—É –¥–Ω—è —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      let dayChangedFlag = false;
      if (newDay > currentDay) {
        console.log('üìÖüìÖüìÖ –î–ï–ù–¨ –ò–ó–ú–ï–ù–ò–õ–°–Ø: ' + currentDay + ' -> ' + newDay);
        dayChangedFlag = true;
      } else if (action.payload.day !== undefined && Number(action.payload.day) <= currentDay) {
        console.log('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –¥–µ–Ω—å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –∏–ª–∏ —É–º–µ–Ω—å—à–∏–ª—Å—è:', {
          currentDay, 
          newDay: Number(action.payload.day)
        });
      }
      
      // –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–µ —Ç–æ–ª—å–∫–æ dayCount
      const newHourInMinutes = newHour * 60 + newMinute;
      const formattedTimeValue = `${String(newHour).padStart(2, '0')}:${String(newMinute).padStart(2, '0')}`;
      const timeOfDayValue = 
        (newHour >= 5 && newHour < 7) ? '—Ä–∞—Å—Å–≤–µ—Ç' :
        (newHour >= 7 && newHour < 11) ? '—É—Ç—Ä–æ' :
        (newHour >= 11 && newHour < 14) ? '–ø–æ–ª–¥–µ–Ω—å' :
        (newHour >= 14 && newHour < 17) ? '–¥–µ–Ω—å' :
        (newHour >= 17 && newHour < 20) ? '–≤–µ—á–µ—Ä' :
        (newHour >= 20 && newHour < 23) ? '–Ω–æ—á—å' : '–≥–ª—É–±–æ–∫–∞—è –Ω–æ—á—å';
      
      console.log('üïí –ñ–ï–°–¢–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –í UPDATE_TIME: world.time ‚Üí weather', {
        hour: newHour,
        minute: newMinute,
        day: newDay,
        season: newSeason
      });
      
      // –£–õ–£–ß–®–ï–ù–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –°–ï–ó–û–ù–ù–û–ì–û –î–ù–Ø –° –£–ß–ï–¢–û–ú –ü–ï–†–ï–•–û–î–ê –ß–ï–†–ï–ó –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–£–Æ –î–õ–ò–ù–£ –°–ï–ó–û–ù–ê
      
      // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –∏ —Å–µ–∑–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∏—Ä–æ–≤–æ–≥–æ –¥–Ω—è
      let calculatedSeasonDay, calculatedSeason;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –¥–µ–Ω—å –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
      if (newDay > SEASON_LENGTH) {
        calculatedSeasonDay = calculateSeasonDay(newDay);
        calculatedSeason = calculateSeason(newDay);
        
        console.log('üåà –†–ê–°–ß–ï–¢ –°–ï–ó–û–ù–ê –ü–†–ò –ü–ï–†–ï–•–û–î–ï –ß–ï–†–ï–ó –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–£–Æ –î–õ–ò–ù–£:', {
          –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: newDay,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_–¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: calculatedSeasonDay,
          —Ç–µ–∫—É—â–∏–π_—Å–µ–∑–æ–Ω: newSeason,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_—Å–µ–∑–æ–Ω: calculatedSeason,
          –¥–ª–∏–Ω–∞_—Å–µ–∑–æ–Ω–∞: SEASON_LENGTH
        });
        
        // –ï—Å–ª–∏ –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –≤—ã—á–∏—Å–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
        if (calculatedSeasonDay) {
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω, –µ—Å–ª–∏ –æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ
          if (calculatedSeason !== newSeason) {
            console.log(`üåàüåà –°–ú–ï–ù–ê –°–ï–ó–û–ù–ê: ${newSeason} -> ${calculatedSeason} (–¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞: ${calculatedSeasonDay})`);
            newSeason = calculatedSeason;
          }
        } else {
          // –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–µ–¥–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å - –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ = 1
          calculatedSeasonDay = 1;
          console.warn('‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é = 1');
        }
      } else {
        // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞, –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ = –º–∏—Ä–æ–≤–æ–º—É –¥–Ω—é
        calculatedSeasonDay = newDay;
      }
      
      console.log('üìÖ –ò–¢–û–ì–û–í–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø –ü–û–°–õ–ï –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –°–ï–ó–û–ù–ê:', {
        –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: newDay,
        –¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: calculatedSeasonDay,
        —Å–µ–∑–æ–Ω: newSeason
      });
      
      // –£–õ–£–ß–®–ï–ù–ò–ï: –ü–µ—Ä–µ—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ weatherChangeAt
      let updatedNextWeatherChange = state.weather?.nextWeatherChange;
      const weatherChangeAt = state.weather?.weatherChangeAt;
      
      // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º nextWeatherChange, –µ—Å–ª–∏ weatherChangeAt –¥–æ—Å—Ç—É–ø–µ–Ω
      if (weatherChangeAt !== undefined) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
        const currentAbsoluteMinutes = newHour * 60 + newMinute;
        
        // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –≤—Ä–µ–º–µ–Ω–µ–º —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã –∏ —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
        const remainingMinutes = weatherChangeAt - currentAbsoluteMinutes;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º nextWeatherChange —Å —É—á–µ—Ç–æ–º –Ω–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        updatedNextWeatherChange = Math.max(0, remainingMinutes);
        
        console.log('‚è±Ô∏è UPDATE_TIME: –ü–µ—Ä–µ—Å—á–µ—Ç nextWeatherChange:', {
          weatherChangeAt,
          currentAbsoluteMinutes,
          —Ä–∞–∑–Ω–∏—Ü–∞: remainingMinutes,
          –Ω–æ–≤–æ–µ_–∑–Ω–∞—á–µ–Ω–∏–µ: updatedNextWeatherChange
        });
        
        // –ï—Å–ª–∏ –≤—Ä–µ–º—è –¥–æ —Å–º–µ–Ω—ã —Ä–∞–≤–Ω–æ 0, –Ω–æ –ø–æ–≥–æ–¥–∞ –Ω–µ –º–µ–Ω—è–ª–∞—Å—å, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ª–æ–≥
        if (updatedNextWeatherChange === 0) {
          console.log('‚ö†Ô∏è UPDATE_TIME: –í—Ä–µ–º—è –¥–æ —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã —Ä–∞–≤–Ω–æ 0, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–º–µ–Ω–∏—Ç—å –ø–æ–≥–æ–¥—É');
        }
      } else {
        console.log('‚ö†Ô∏è UPDATE_TIME: weatherChangeAt –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, nextWeatherChange –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω');
      }
      
      // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π weather —Å –ü–û–õ–ù–û–ô —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –≤—Å–µ—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º nextWeatherChange
      const updatedWeather = {
        ...state.weather,
        currentTime: newHourInMinutes,
        formattedTime: formattedTimeValue,
        hour: newHour,
        minute: newMinute,
        dayCount: newDay,
        seasonDay: calculatedSeasonDay, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
        currentSeason: newSeason, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω
        timeOfDay: timeOfDayValue,
        isDayTime: newHour >= 6 && newHour < 20,
        nextWeatherChange: updatedNextWeatherChange // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –¥–æ —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
      };
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
      return {
        ...state,
        world: {
          ...state.world,
          time: {
            ...state.world.time,
            ...action.payload,
            hour: newHour, // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø
            minute: newMinute,
            day: newDay,
            season: newSeason
          },
        },
        weather: updatedWeather // –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π weather
      };
      
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
    case ACTION_TYPES.UPDATE_WEATHER:
      return {
        ...state,
        world: {
          ...state.world,
          weather: action.payload,
        },
      };
      
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –Ω–∞—à–µ–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–≥–æ–¥—ã
    case UPDATE_WEATHER:
      // –õ–æ–≥–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('üå§Ô∏è UPDATE_WEATHER –≤ —Ä–µ–¥—å—é—Å–µ—Ä–µ –ø–æ–ª—É—á–∏–ª:', {
        —Ç–µ–∫—É—â–∞—è_–ø–æ–≥–æ–¥–∞: action.payload.currentWeather,
        –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: action.payload.weatherIntensity,
        –≤—Ä–µ–º—è_–¥–æ_—Å–º–µ–Ω—ã: action.payload.nextWeatherChange,
        –µ—Å—Ç—å_–ø—Ä–æ–≥–Ω–æ–∑: Boolean(action.payload.forecast)
      });
      
      // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ nextWeatherChange –±—É–¥–µ—Ç —á–∏—Å–ª–æ–º
      let cleanedNextWeatherChange = action.payload.nextWeatherChange;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ nextWeatherChange —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
      if (action.payload.nextWeatherChange !== undefined && 
          (typeof action.payload.nextWeatherChange !== 'number' || isNaN(action.payload.nextWeatherChange))) {
        console.warn('‚ö†Ô∏è nextWeatherChange –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º:', action.payload.nextWeatherChange);
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —á–∏—Å–ª–æ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        cleanedNextWeatherChange = parseInt(action.payload.nextWeatherChange, 10);
        if (isNaN(cleanedNextWeatherChange)) {
          cleanedNextWeatherChange = 60; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å
        }
      }
      
      // –ù–û–í–û–ï: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ —Å –º–∏—Ä–æ–≤—ã–º –¥–Ω–µ–º
      let correctSeasonDay = state.weather?.seasonDay || 1;
      const worldDay = state.world?.time?.day;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ world.time.day –∏ –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
      if (worldDay !== undefined) {
        if (worldDay > SEASON_LENGTH) {
          // –ï—Å–ª–∏ –º–∏—Ä–æ–≤–æ–π –¥–µ–Ω—å –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞, –≤—ã—á–∏—Å–ª—è–µ–º –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –ø–æ —Ñ–æ—Ä–º—É–ª–µ
          correctSeasonDay = ((worldDay - 1) % SEASON_LENGTH) + 1;
          console.log('üåà UPDATE_WEATHER: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–Ω—è —Å–µ–∑–æ–Ω–∞ –ø—Ä–∏ –¥–ª–∏–Ω–µ > SEASON_LENGTH:', {
            worldDay,
            correctSeasonDay,
            —Ñ–æ—Ä–º—É–ª–∞: `((${worldDay} - 1) % ${SEASON_LENGTH}) + 1`
          });
        } else {
          // –ò–Ω–∞—á–µ –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ —Ä–∞–≤–µ–Ω –º–∏—Ä–æ–≤–æ–º—É –¥–Ω—é
          correctSeasonDay = worldDay;
          console.log('üåà UPDATE_WEATHER: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–Ω—è —Å–µ–∑–æ–Ω–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Å–µ–∑–æ–Ω–∞:', {
            worldDay,
            correctSeasonDay
          });
        }
      }
      
      // –í–ê–ñ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç —Ä–∞–≤–µ–Ω 0
      if (correctSeasonDay <= 0) {
        console.log('‚ö†Ô∏è UPDATE_WEATHER: –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω—É–ª–µ–≤–æ–π –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ 1');
        correctSeasonDay = 1;
      }
      
      return {
        ...state,
        weather: {
          ...state.weather,
          ...action.payload,
          // –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nextWeatherChange –∫–∞–∫ —á–∏—Å–ª–æ
          nextWeatherChange: cleanedNextWeatherChange,
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
          seasonDay: correctSeasonDay
        }
      };
      
    case SET_TIME_OF_DAY:
      return {
        ...state,
        weather: {
          ...state.weather,
          timeOfDay: action.payload.timeOfDay
        }
      };
      
    case WEATHER_SPECIAL_EVENT:
      return {
        ...state,
        weather: {
          ...state.weather,
          activeSpecialEvent: {
            type: action.payload.eventType,
            data: action.payload.eventData
          }
        }
      };
      
    case UPDATE_GAME_TIME:
      // –≠—Ç–æ—Ç –∫–µ–π—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ middleware, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç —Å–µ—Ä–≤–∏—Å –ø–æ–≥–æ–¥—ã
      return state;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤ weather (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å worldTime)
    case 'DIRECT_UPDATE_WEATHER_TIME':
      console.log('‚ö° –†–µ–¥—å—é—Å–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç DIRECT_UPDATE_WEATHER_TIME:', {
        ...action.payload,
        dayCountType: typeof action.payload.dayCount,
        currentDayType: typeof state.weather?.dayCount
      });
      
      // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ dayCount –≤—Å–µ–≥–¥–∞ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
      const dayCount = action.payload.dayCount !== undefined 
        ? Number(action.payload.dayCount) 
        : (state.weather?.dayCount || 1);
      
      // –Ø–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–µ–∑–æ–Ω, –≤–∞–∂–Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      const providedSeason = action.payload.currentSeason || state.weather?.currentSeason || 'spring';
      
      // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –∏ —Å–µ–∑–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∏—Ä–æ–≤–æ–≥–æ –¥–Ω—è
      let directUpdateSeasonDay, directUpdateSeason = providedSeason;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –¥–µ–Ω—å –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
      if (dayCount > SEASON_LENGTH) {
        directUpdateSeasonDay = calculateSeasonDay(dayCount);
        directUpdateSeason = calculateSeason(dayCount);
        
        console.log('üåà DIRECT_UPDATE_WEATHER_TIME: –†–ê–°–ß–ï–¢ –°–ï–ó–û–ù–ê:', {
          –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: dayCount,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_–¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: directUpdateSeasonDay,
          —Ç–µ–∫—É—â–∏–π_—Å–µ–∑–æ–Ω: providedSeason,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_—Å–µ–∑–æ–Ω: directUpdateSeason
        });
        
        // –ï—Å–ª–∏ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ, –ª–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        if (directUpdateSeason !== providedSeason) {
          console.log(`üåàüåà DIRECT_UPDATE_WEATHER_TIME: –ö–û–†–†–ï–ö–¶–ò–Ø –°–ï–ó–û–ù–ê: ${providedSeason} -> ${directUpdateSeason}`);
        }
      } else {
        // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞
        directUpdateSeasonDay = dayCount;
      }
      
      console.log('üîÑ DIRECT_UPDATE_WEATHER_TIME - –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è weather —Å worldTime:', {
        hour: action.payload.hour,
        minute: action.payload.minute,
        dayCount,
        seasonDay: directUpdateSeasonDay,
        season: directUpdateSeason
      });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏ world.time.season, –µ—Å–ª–∏ —Å–µ–∑–æ–Ω –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
      if (directUpdateSeason !== providedSeason && state.world?.time) {
        console.log(`üåà DIRECT_UPDATE_WEATHER_TIME: –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∑–æ–Ω –≤ world.time: ${providedSeason} -> ${directUpdateSeason}`);
        
        return {
          ...state,
          world: {
            ...state.world,
            time: {
              ...state.world.time,
              season: directUpdateSeason // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–µ–∑–æ–Ω –≤ world.time
            }
          },
          weather: {
            ...state.weather,
            currentTime: action.payload.currentTime,
            formattedTime: action.payload.formattedTime,
            hour: action.payload.hour, // –í–∞–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
            minute: action.payload.minute, // –í–∞–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
            dayCount: dayCount, // –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dayCount –∫–∞–∫ —á–∏—Å–ª–æ
            seasonDay: directUpdateSeasonDay, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
            currentSeason: directUpdateSeason, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ —Å—É—Ç–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–∞—Å–∞
            timeOfDay: 
              (action.payload.hour >= 5 && action.payload.hour < 7) ? '—Ä–∞—Å—Å–≤–µ—Ç' :
              (action.payload.hour >= 7 && action.payload.hour < 11) ? '—É—Ç—Ä–æ' :
              (action.payload.hour >= 11 && action.payload.hour < 14) ? '–ø–æ–ª–¥–µ–Ω—å' :
              (action.payload.hour >= 14 && action.payload.hour < 17) ? '–¥–µ–Ω—å' :
              (action.payload.hour >= 17 && action.payload.hour < 20) ? '–≤–µ—á–µ—Ä' :
              (action.payload.hour >= 20 && action.payload.hour < 23) ? '–Ω–æ—á—å' : '–≥–ª—É–±–æ–∫–∞—è –Ω–æ—á—å',
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –¥–Ω–µ–≤–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            isDayTime: action.payload.hour >= 6 && action.payload.hour < 20
          }
        };
      } else {
        // –ï—Å–ª–∏ —Å–µ–∑–æ–Ω –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ weather
        return {
          ...state,
          weather: {
            ...state.weather,
            currentTime: action.payload.currentTime,
            formattedTime: action.payload.formattedTime,
            hour: action.payload.hour, // –í–∞–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
            minute: action.payload.minute, // –í–∞–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
            dayCount: dayCount, // –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dayCount –∫–∞–∫ —á–∏—Å–ª–æ
            seasonDay: directUpdateSeasonDay, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
            currentSeason: directUpdateSeason, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ —Å—É—Ç–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–∞—Å–∞
            timeOfDay: 
              (action.payload.hour >= 5 && action.payload.hour < 7) ? '—Ä–∞—Å—Å–≤–µ—Ç' :
              (action.payload.hour >= 7 && action.payload.hour < 11) ? '—É—Ç—Ä–æ' :
              (action.payload.hour >= 11 && action.payload.hour < 14) ? '–ø–æ–ª–¥–µ–Ω—å' :
              (action.payload.hour >= 14 && action.payload.hour < 17) ? '–¥–µ–Ω—å' :
              (action.payload.hour >= 17 && action.payload.hour < 20) ? '–≤–µ—á–µ—Ä' :
              (action.payload.hour >= 20 && action.payload.hour < 23) ? '–Ω–æ—á—å' : '–≥–ª—É–±–æ–∫–∞—è –Ω–æ—á—å',
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–ª–∞–≥ –¥–Ω–µ–≤–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
            isDayTime: action.payload.hour >= 6 && action.payload.hour < 20
          }
        };
      }
      
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ world.time –≤ weather
    case 'DIRECT_FORCE_SYNC_WEATHER_TIME':
      // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–±–∞ –æ–±—ä–µ–∫—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
      if (!state.world?.time || !state.weather) {
        console.log('‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å DIRECT_FORCE_SYNC_WEATHER_TIME: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç world.time –∏–ª–∏ weather');
        return state;
      }
      
      console.log('üîÑüîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø weather ‚ü∏ world.time');
      
      // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ worldTime —Å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ–º —Ç–∏–ø–æ–≤ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      const worldTimeHour = Number(state.world.time.hour);
      const worldTimeMinute = Number(state.world.time.minute);
      const worldTimeDay = Number(state.world.time.day);
      const worldTimeSeason = state.world.time.season;
      
      // –í—ã—á–∏—Å–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö –¥–∞–Ω–Ω—ã—Ö
      const syncTotalMinutes = worldTimeHour * 60 + worldTimeMinute;
      const syncFormattedTime = `${String(worldTimeHour).padStart(2, '0')}:${String(worldTimeMinute).padStart(2, '0')}`;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ —Å—É—Ç–æ–∫
      const syncTimeOfDay = 
        (worldTimeHour >= 5 && worldTimeHour < 7) ? '—Ä–∞—Å—Å–≤–µ—Ç' :
        (worldTimeHour >= 7 && worldTimeHour < 11) ? '—É—Ç—Ä–æ' :
        (worldTimeHour >= 11 && worldTimeHour < 14) ? '–ø–æ–ª–¥–µ–Ω—å' :
        (worldTimeHour >= 14 && worldTimeHour < 17) ? '–¥–µ–Ω—å' :
        (worldTimeHour >= 17 && worldTimeHour < 20) ? '–≤–µ—á–µ—Ä' :
        (worldTimeHour >= 20 && worldTimeHour < 23) ? '–Ω–æ—á—å' : '–≥–ª—É–±–æ–∫–∞—è –Ω–æ—á—å';
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–∞–∫ –≤ UPDATE_TIME –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å–µ–∑–æ–Ω–∞
      
      // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –∏ —Å–µ–∑–æ–Ω
      let syncSeasonDay, syncSeason = worldTimeSeason;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –¥–µ–Ω—å –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
      if (worldTimeDay > SEASON_LENGTH) {
        syncSeasonDay = calculateSeasonDay(worldTimeDay);
        syncSeason = calculateSeason(worldTimeDay);
        
        console.log('üåà FORCE_SYNC: –†–ê–°–ß–ï–¢ –°–ï–ó–û–ù–ê –ü–†–ò –ü–ï–†–ï–•–û–î–ï –ß–ï–†–ï–ó –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–£–Æ –î–õ–ò–ù–£:', {
          –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: worldTimeDay,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_–¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: syncSeasonDay,
          —Ç–µ–∫—É—â–∏–π_—Å–µ–∑–æ–Ω: worldTimeSeason,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_—Å–µ–∑–æ–Ω: syncSeason,
          –¥–ª–∏–Ω–∞_—Å–µ–∑–æ–Ω–∞: SEASON_LENGTH
        });
        
        // –ï—Å–ª–∏ —Å–µ–∑–æ–Ω –≤—ã—á–∏—Å–ª–µ–Ω –∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ, –æ–±–Ω–æ–≤–ª—è–µ–º
        if (syncSeason && syncSeason !== worldTimeSeason) {
          console.log(`üåàüåà FORCE_SYNC: –û–ë–ù–ê–†–£–ñ–ï–ù–û –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –°–ï–ó–û–ù–ê: ${worldTimeSeason} -> ${syncSeason}`);
          
          // –ó–¥–µ—Å—å –º—ã –ù–ï –æ–±–Ω–æ–≤–ª—è–µ–º worldTimeSeason, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ world.time,
          // –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å syncSeason
        }
      } else {
        // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞
        syncSeasonDay = worldTimeDay;
      }
      
      console.log('üîÑ FORCE_SYNC: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö:', {
        from: {
          hour: worldTimeHour,
          minute: worldTimeMinute,
          day: worldTimeDay,
          season: worldTimeSeason
        },
        to: {
          currentTime: syncTotalMinutes,
          formattedTime: syncFormattedTime,
          hour: worldTimeHour,
          minute: worldTimeMinute,
          dayCount: worldTimeDay,
          seasonDay: syncSeasonDay,
          timeOfDay: syncTimeOfDay,
          isDayTime: worldTimeHour >= 6 && worldTimeHour < 20,
          currentSeason: syncSeason
        }
      });
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º world.time
      return {
        ...state,
        world: {
          ...state.world,
          time: {
            ...state.world.time,
            season: syncSeason // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∑–æ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
          }
        },
        weather: {
          ...state.weather,
          currentTime: syncTotalMinutes,
          formattedTime: syncFormattedTime,
          hour: worldTimeHour,
          minute: worldTimeMinute,
          dayCount: worldTimeDay,
          seasonDay: syncSeasonDay, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
          timeOfDay: syncTimeOfDay,
          isDayTime: worldTimeHour >= 6 && worldTimeHour < 20,
          currentSeason: syncSeason // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω
        }
      };
      
    // –û–ë–†–ê–ë–û–¢–ß–ò–ö: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–Ω—è —Å–µ–∑–æ–Ω–∞ —Å –º–∏—Ä–æ–≤—ã–º –¥–Ω–µ–º
    case 'SYNC_SEASON_DAY':
      // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–±–∞ –æ–±—ä–µ–∫—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
      if (!state.world?.time || !state.weather) {
        console.log('‚ö†Ô∏è –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å SYNC_SEASON_DAY: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç world.time –∏–ª–∏ weather');
        return state;
      }
      
      const worldDaySync = Number(state.world.time.day);
      const currentSeasonDaySync = state.weather.seasonDay || 1;
      
      // –í–∞–∂–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –≤—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞, –µ—Å–ª–∏ –º–∏—Ä–æ–≤–æ–π –¥–µ–Ω—å –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
      let calculatedSeasonDaySync;
      
      if (worldDaySync > SEASON_LENGTH) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ–æ—Ä–º—É–ª—É, —á—Ç–æ –∏ –≤ calculateSeasonDay
        calculatedSeasonDaySync = ((worldDaySync - 1) % SEASON_LENGTH) + 1;
        
        console.log('üîÑ SYNC_SEASON_DAY: –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–Ω—è —Å–µ–∑–æ–Ω–∞ –¥–ª—è –¥–Ω—è > SEASON_LENGTH:', {
          worldDay: worldDaySync,
          currentSeasonDay: currentSeasonDaySync,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π–î–µ–Ω—å–°–µ–∑–æ–Ω–∞: calculatedSeasonDaySync,
          —Ñ–æ—Ä–º—É–ª–∞: `((${worldDaySync} - 1) % ${SEASON_LENGTH}) + 1 = ${calculatedSeasonDaySync}`
        });
      } else {
        // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞, –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ = –º–∏—Ä–æ–≤–æ–º—É –¥–Ω—é
        calculatedSeasonDaySync = worldDaySync;
        
        console.log('üîÑ SYNC_SEASON_DAY: –î–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Å–µ–∑–æ–Ω–∞:', {
          worldDay: worldDaySync,
          currentSeasonDay: currentSeasonDaySync
        });
      }
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–º –¥–Ω–µ–º —Å–µ–∑–æ–Ω–∞
      return {
        ...state,
        weather: {
          ...state.weather,
          seasonDay: calculatedSeasonDaySync // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
        }
      };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
    case 'FORCE_WEATHER_CHANGE':
      console.log('üå§Ô∏è Reducer: –ø–æ–ª—É—á–µ–Ω FORCE_WEATHER_CHANGE');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–≥–æ–¥–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (!state.weather) {
        console.error('‚ùå FORCE_WEATHER_CHANGE: state.weather –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        return state;
      }
      
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–∞–ø—Ç–µ—Ä —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–≥–æ–¥—ã –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
        const WeatherService = require('../../services/weather-service-adapter');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –∏–∑ world.time –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ weatherChangeAt
        const currentHour = state.world?.time?.hour || state.weather.hour || 0;
        const currentMinute = state.world?.time?.minute || state.weather.minute || 0;
        const currentAbsoluteMinutes = currentHour * 60 + currentMinute;
        
        // –í—ã–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
        const updatedWeather = WeatherService.forceWeatherChange(state.weather, state.world?.currentLocation);
        
        // –£–õ–£–ß–®–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ª–æ–≥–∏—Ä—É–µ–º weatherChangeAt –∏ nextWeatherChange
        if (updatedWeather.weatherChangeAt === undefined && updatedWeather.nextWeatherChange !== undefined) {
          // –ï—Å–ª–∏ weatherChangeAt –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –Ω–æ –µ—Å—Ç—å nextWeatherChange, –≤—ã—á–∏—Å–ª—è–µ–º weatherChangeAt
          updatedWeather.weatherChangeAt = currentAbsoluteMinutes + updatedWeather.nextWeatherChange;
          console.log('‚ö†Ô∏è FORCE_WEATHER_CHANGE: weatherChangeAt –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã—á–∏—Å–ª—è–µ–º:', {
            currentAbsoluteMinutes,
            nextWeatherChange: updatedWeather.nextWeatherChange,
            weatherChangeAt: updatedWeather.weatherChangeAt
          });
        } else if (updatedWeather.weatherChangeAt !== undefined && updatedWeather.nextWeatherChange === undefined) {
          // –ï—Å–ª–∏ weatherChangeAt –µ—Å—Ç—å, –Ω–æ nextWeatherChange –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã—á–∏—Å–ª—è–µ–º nextWeatherChange
          updatedWeather.nextWeatherChange = Math.max(0, updatedWeather.weatherChangeAt - currentAbsoluteMinutes);
          console.log('‚ö†Ô∏è FORCE_WEATHER_CHANGE: nextWeatherChange –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã—á–∏—Å–ª—è–µ–º:', {
            currentAbsoluteMinutes,
            weatherChangeAt: updatedWeather.weatherChangeAt,
            nextWeatherChange: updatedWeather.nextWeatherChange
          });
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π
        const validNextWeatherChange = typeof updatedWeather.nextWeatherChange === 'number' && 
                                    !isNaN(updatedWeather.nextWeatherChange);
        const validWeatherChangeAt = typeof updatedWeather.weatherChangeAt === 'number' && 
                                   !isNaN(updatedWeather.weatherChangeAt);
        
        if (!validNextWeatherChange || !validWeatherChangeAt) {
          console.error('‚ö†Ô∏è FORCE_WEATHER_CHANGE: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø–æ–≥–æ–¥—ã:', {
            nextWeatherChange: updatedWeather.nextWeatherChange,
            weatherChangeAt: updatedWeather.weatherChangeAt
          });
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          if (!validNextWeatherChange) updatedWeather.nextWeatherChange = 60;
          if (!validWeatherChangeAt) updatedWeather.weatherChangeAt = currentAbsoluteMinutes + 60;
        }
        
        console.log('‚úÖ FORCE_WEATHER_CHANGE: –ø–æ–≥–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞', {
          –Ω–æ–≤–∞—è_–ø–æ–≥–æ–¥–∞: updatedWeather.currentWeather,
          –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: updatedWeather.weatherIntensity,
          –≤—Ä–µ–º—è_–¥–æ_—Å–ª–µ–¥—É—é—â–µ–π_—Å–º–µ–Ω—ã: updatedWeather.nextWeatherChange,
          –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ_–≤—Ä–µ–º—è_—Å–º–µ–Ω—ã: updatedWeather.weatherChangeAt
        });
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        return {
          ...state,
          weather: updatedWeather
        };
      } catch (error) {
        console.error('‚ùå FORCE_WEATHER_CHANGE: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã', error);
        return state;
      }
      
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¢–û–õ–¨–ö–û –º–∏–Ω—É—Ç
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–Ω–æ–∂–∏—Ç–µ–ª—è –≤—Ä–µ–º–µ–Ω–∏
    case 'UPDATE_TIME_MULTIPLIER':
      console.log('‚è±Ô∏è Reducer: –ø–æ–ª—É—á–µ–Ω UPDATE_TIME_MULTIPLIER —Å multiplier =', action.payload?.multiplier);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ UI, –Ω–µ –º–µ–Ω—è—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      // –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–∏–≥–Ω–∞–ª, —á—Ç–æ –º–Ω–æ–∂–∏—Ç–µ–ª—å –∏–∑–º–µ–Ω–∏–ª—Å—è, –∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
      
      return state;
      
    case 'FIX_WEATHER_MINUTES':
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
      if (!state.weather || action.payload?.minute === undefined) {
        console.log('‚ö†Ô∏è FIX_WEATHER_MINUTES: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –º–∏–Ω—É—Ç—ã, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ');
        return state;
      }
      
      console.log('üîß –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è FIX_WEATHER_MINUTES: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–Ω—É—Ç', {
        currentMinute: state.weather.minute,
        newMinute: action.payload.minute,
        minuteType: typeof action.payload.minute
      });
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –º–∏–Ω—É—Ç—É –≤ —á–∏—Å–ª–æ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
      const fixedMinute = parseInt(action.payload.minute, 10);
      
      if (isNaN(fixedMinute)) {
        console.error('‚ö†Ô∏è FIX_WEATHER_MINUTES: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å minute –≤ —á–∏—Å–ª–æ', action.payload.minute);
        return state;
      }
      
      // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ currentTime —Å —É—á–µ—Ç–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–∏–Ω—É—Ç
      const hour = state.weather.hour !== undefined ? parseInt(state.weather.hour, 10) : 0;
      const newTotalMinutes = hour * 60 + fixedMinute;
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Ç–æ–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º
      const newFormattedTime = `${String(hour).padStart(2, '0')}:${String(fixedMinute).padStart(2, '0')}`;
      
      console.log('‚úÖ FIX_WEATHER_MINUTES: —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω—É—Ç—ã', {
        hour,
        newMinute: fixedMinute,
        newTotalMinutes,
        newFormattedTime
      });
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      return {
        ...state,
        weather: {
          ...state.weather,
          minute: fixedMinute, // –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω—É—Ç—É –Ω–∞–ø—Ä—è–º—É—é
          currentTime: newTotalMinutes, // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
          formattedTime: newFormattedTime // –ò —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        }
      };
      
    // –ü—Ä—è–º–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö —á–∞—Å–æ–≤
    case 'DIRECT_ADD_GAME_HOURS':
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ world.time —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (!state.world?.time) {
        console.error('‚ùå DIRECT_ADD_GAME_HOURS: state.world.time –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        return state;
      }
      
      console.log(`üïí DIRECT_ADD_GAME_HOURS: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ${action.payload.hours} –∏–≥—Ä–æ–≤—ã—Ö —á–∞—Å–æ–≤`);
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ–º —Ç–∏–ø–æ–≤
      const gameCurrentHour = Number(state.world.time.hour);
      const gameCurrentMinute = Number(state.world.time.minute);
      const gameCurrentDay = Number(state.world.time.day);
      const gameCurrentSeason = state.world.time.season;
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è
      let gameNewHour = gameCurrentHour + action.payload.hours;
      let gameNewMinute = gameCurrentMinute;
      let gameNewDay = gameCurrentDay;
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π –¥–µ–Ω—å
      while (gameNewHour >= 24) {
        gameNewHour -= 24;
        gameNewDay += 1;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è
      const gameNewHourInMinutes = gameNewHour * 60 + gameNewMinute;
      const gameFormattedTimeValue = `${String(gameNewHour).padStart(2, '0')}:${String(gameNewMinute).padStart(2, '0')}`;
      const gameTimeOfDayValue = 
        (gameNewHour >= 5 && gameNewHour < 7) ? '—Ä–∞—Å—Å–≤–µ—Ç' :
        (gameNewHour >= 7 && gameNewHour < 11) ? '—É—Ç—Ä–æ' :
        (gameNewHour >= 11 && gameNewHour < 14) ? '–ø–æ–ª–¥–µ–Ω—å' :
        (gameNewHour >= 14 && gameNewHour < 17) ? '–¥–µ–Ω—å' :
        (gameNewHour >= 17 && gameNewHour < 20) ? '–≤–µ—á–µ—Ä' :
        (gameNewHour >= 20 && gameNewHour < 23) ? '–Ω–æ—á—å' : '–≥–ª—É–±–æ–∫–∞—è –Ω–æ—á—å';
      
      // –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–Ω—è, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–æ
      if (gameNewDay > gameCurrentDay) {
        console.log(`üìÖüìÖüìÖ –î–ï–ù–¨ –ò–ó–ú–ï–ù–ò–õ–°–Ø –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —á–∞—Å–æ–≤: ${gameCurrentDay} -> ${gameNewDay}`);
      }
      
      // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –∏ —Å–µ–∑–æ–Ω –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —á–∞—Å–æ–≤
      let gameCalculatedSeasonDay, gameCalculatedSeason = gameCurrentSeason;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –Ω–æ–≤—ã–π –¥–µ–Ω—å –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
      if (gameNewDay > SEASON_LENGTH) {
        gameCalculatedSeasonDay = calculateSeasonDay(gameNewDay);
        gameCalculatedSeason = calculateSeason(gameNewDay);
        
        console.log('üåà DIRECT_ADD_GAME_HOURS: –†–ê–°–ß–ï–¢ –°–ï–ó–û–ù–ê –ü–†–ò –ü–ï–†–ï–•–û–î–ï –ß–ï–†–ï–ó –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–£–Æ –î–õ–ò–ù–£:', {
          –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: gameNewDay,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_–¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: gameCalculatedSeasonDay,
          —Ç–µ–∫—É—â–∏–π_—Å–µ–∑–æ–Ω: gameCurrentSeason,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_—Å–µ–∑–æ–Ω: gameCalculatedSeason,
          –¥–ª–∏–Ω–∞_—Å–µ–∑–æ–Ω–∞: SEASON_LENGTH
        });
        
        // –ï—Å–ª–∏ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ, –ª–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        if (gameCalculatedSeason !== gameCurrentSeason) {
          console.log(`üåàüåà DIRECT_ADD_GAME_HOURS: –°–ú–ï–ù–ê –°–ï–ó–û–ù–ê: ${gameCurrentSeason} -> ${gameCalculatedSeason}`);
        }
      } else {
        // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞
        gameCalculatedSeasonDay = gameNewDay;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º weather —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å —É—á–µ—Ç–æ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å–µ–∑–æ–Ω–∞
      const gameUpdatedWeather = {
        ...state.weather,
        currentTime: gameNewHourInMinutes,
        formattedTime: gameFormattedTimeValue,
        hour: gameNewHour,
        minute: gameNewMinute,
        dayCount: gameNewDay,
        seasonDay: gameCalculatedSeasonDay, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
        currentSeason: gameCalculatedSeason, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω
        timeOfDay: gameTimeOfDayValue,
        isDayTime: gameNewHour >= 6 && gameNewHour < 20
      };
      
      console.log('‚úÖ DIRECT_ADD_GAME_HOURS: –ù–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏:', {
        —á–∞—Å: gameNewHour,
        –º–∏–Ω—É—Ç–∞: gameNewMinute,
        –¥–µ–Ω—å: gameNewDay,
        —Å–µ–∑–æ–Ω: gameCalculatedSeason, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω –¥–ª—è –ª–æ–≥–æ–≤
        –ø–µ—Ä–∏–æ–¥_—Å—É—Ç–æ–∫: gameTimeOfDayValue
      });
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      return {
        ...state,
        world: {
          ...state.world,
          time: {
            ...state.world.time,
            hour: gameNewHour,
            minute: gameNewMinute,
            day: gameNewDay,
            season: gameCalculatedSeason // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∑–æ–Ω –∏ –≤ world.time —Ç–æ–∂–µ!
          },
        },
        weather: gameUpdatedWeather
      };
      
    case ACTION_TYPES.ADD_EVENT:
      return {
        ...state,
        world: {
          ...state.world,
          events: [...state.world.events, action.payload],
        },
      };
      
    case ACTION_TYPES.REMOVE_EVENT:
      return {
        ...state,
        world: {
          ...state.world,
          events: state.world.events.filter(event => event.id !== action.payload),
        },
      };
    
    case ACTION_TYPES.CACHE_GENERATED_ENEMY:
      const { areaId, enemyId, enemy } = action.payload;
      const key = `${areaId}_${enemyId}`;
      
      console.log(`üéÆ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: ${key}`, {
        —É—Ä–æ–≤–µ–Ω—å: enemy.level,
        requiredLevel: enemy.requiredLevel
      });
      
      return {
        ...state,
        world: {
          ...state.world,
          generatedEnemies: {
            ...(state.world.generatedEnemies || {}),
            [key]: enemy
          }
        }
      };
      
    default:
      return state;
  }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–≥–æ–¥—ã
export const initializeWeatherState = (state) => {
  // –ï—Å–ª–∏ weather –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
  if (!state.weather) {
    console.log('üîÑ initializeWeatherState: state.weather –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç');
    return {
      ...state,
      weather: initialWeatherState
    };
  }
  
  // –ï—Å–ª–∏ weather —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω—É–∂–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å world.time
  if (state.weather && state.world && state.world.time) {
    // –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç weather —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    let updatedWeather = {...state.weather};
    let wasUpdated = false;
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º—è, –µ—Å–ª–∏ –µ—Å—Ç—å hour –∏ minute –≤ world.time
    if (typeof state.world.time.hour === 'number' && typeof state.world.time.minute === 'number') {
      const hour = state.world.time.hour;
      const minute = state.world.time.minute;
      const currentTime = hour * 60 + minute;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º
      updatedWeather = {
        ...updatedWeather,
        currentTime,
        hour,
        minute,
        formattedTime: `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`,
        timeOfDay: 
          (hour >= 5 && hour < 7) ? '—Ä–∞—Å—Å–≤–µ—Ç' :
          (hour >= 7 && hour < 11) ? '—É—Ç—Ä–æ' :
          (hour >= 11 && hour < 14) ? '–ø–æ–ª–¥–µ–Ω—å' :
          (hour >= 14 && hour < 17) ? '–¥–µ–Ω—å' :
          (hour >= 17 && hour < 20) ? '–≤–µ—á–µ—Ä' :
          (hour >= 20 && hour < 23) ? '–Ω–æ—á—å' : '–≥–ª—É–±–æ–∫–∞—è –Ω–æ—á—å',
        isDayTime: hour >= 6 && hour < 20
      };
      
      wasUpdated = true;
      console.log(`üîÑ initializeWeatherState: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º—è: ${hour}:${minute} -> ${currentTime}`);
    }
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–µ–Ω—å –∏ —Å–µ–∑–æ–Ω, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ world.time
    if (typeof state.world.time.day === 'number') {
      const worldDay = state.world.time.day;
      let seasonDay, calculatedSeason;
      
      updatedWeather.dayCount = worldDay;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –¥–µ–Ω—å –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
      if (worldDay > SEASON_LENGTH) {
        // –í—ã—á–∏—Å–ª—è–µ–º –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –∏ —Å–µ–∑–æ–Ω –ø–æ —Ñ–æ—Ä–º—É–ª–µ
        seasonDay = calculateSeasonDay(worldDay);
        calculatedSeason = calculateSeason(worldDay);
        
        console.log('üåà initializeWeatherState: –†–ê–°–ß–ï–¢ –°–ï–ó–û–ù–ê –ü–†–ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò:', {
          –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: worldDay,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_–¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: seasonDay,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_—Å–µ–∑–æ–Ω: calculatedSeason
        });
        
        // –ï—Å–ª–∏ —Å–µ–∑–æ–Ω –≤ state.world.time –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π
        if (state.world.time.season && calculatedSeason !== state.world.time.season) {
          console.log(`üåàüåà initializeWeatherState: –ö–û–†–†–ï–ö–¶–ò–Ø –°–ï–ó–û–ù–ê: ${state.world.time.season} -> ${calculatedSeason}`);
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        updatedWeather.seasonDay = seasonDay;
        updatedWeather.currentSeason = calculatedSeason;
      } else {
        // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞
        updatedWeather.seasonDay = worldDay;
        
        // –ï—Å–ª–∏ —Å–µ–∑–æ–Ω –∑–∞–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ, –∏–Ω–∞—á–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º
        if (state.world.time.season) {
          updatedWeather.currentSeason = state.world.time.season;
        } else {
          // –ï—Å–ª–∏ —Å–µ–∑–æ–Ω –Ω–µ –∑–∞–¥–∞–Ω, –≤—ã—á–∏—Å–ª—è–µ–º –µ–≥–æ
          updatedWeather.currentSeason = 'spring'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–µ—Å–Ω–∞
        }
      }
      
      wasUpdated = true;
      console.log(`üîÑ initializeWeatherState: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–µ–Ω—å –∏ —Å–µ–∑–æ–Ω:`, {
        –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: worldDay,
        –¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: updatedWeather.seasonDay,
        —Å–µ–∑–æ–Ω: updatedWeather.currentSeason
      });
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (wasUpdated) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–∫–∂–µ world.time.season, –µ—Å–ª–∏ –¥–µ–Ω—å –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
      // –∏ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∑–æ–Ω–∞ –≤ world.time
      if (typeof state.world.time.day === 'number' && 
          state.world.time.day > SEASON_LENGTH && 
          state.world.time.season && 
          updatedWeather.currentSeason !== state.world.time.season) {
        
        console.log(`üåà initializeWeatherState: –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –°–ï–ó–û–ù–ê –í WORLD.TIME:`, {
          —Ç–µ–∫—É—â–∏–π_—Å–µ–∑–æ–Ω_world_time: state.world.time.season,
          –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_—Å–µ–∑–æ–Ω: updatedWeather.currentSeason,
          –¥–µ–Ω—å: state.world.time.day
        });
        
        return {
          ...state,
          world: {
            ...state.world,
            time: {
              ...state.world.time,
              season: updatedWeather.currentSeason // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∑–æ–Ω –≤ world.time
            }
          },
          weather: updatedWeather
        };
      }
      
      // –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å world.time.season, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º weather
      return {
        ...state,
        weather: updatedWeather
      };
    }
  }
  
  return state;
};
