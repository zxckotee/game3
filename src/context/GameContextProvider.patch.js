import React, { createContext, useContext, useReducer, useEffect } from 'react';
import apiService from '../services/api';
import SectService from '../services/sect-adapter';
import initialState from './state/initialState';
import { rootReducer } from './reducers/rootReducer';
import { initializeWeatherState } from './reducers/worldReducer';
import ACTION_TYPES from './actions/actionTypes';
import { weatherMiddleware } from './middleware/weatherMiddleware';
import { checkAndNormalizeSectData } from '../utils/sectUtils';
import { normalizePlayerEffects } from '../utils/effectsNormalizer';
import itemService from '../services/item-service';

// –ù–û–í–û–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ–Ω—É—Å–∞–º–∏ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
import { initializeBonusSystem, debugBonusSystem } from '../utils/equipmentBonusInitializer';
import { integrateWithGameContext } from '../utils/equipmentBonusIntegration';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
console.log('[GameContext] –ò–º–ø–æ—Ä—Ç itemService:', !!itemService);
console.log('[GameContext] –ú–µ—Ç–æ–¥—ã itemService:', itemService ? Object.keys(itemService) : '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
import { initRelationshipSync } from '../utils/sectRelationshipSyncer';

// –û—á–µ—Ä–µ–¥—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è –∏ —Ñ–ª–∞–≥ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±–æ–≥–∞—â–µ–Ω–∏—è
let itemEnrichmentQueue = [];
let isEnrichmentScheduled = false;
import { 
  updateWeather, 
  setTimeOfDay, 
  triggerWeatherEvent,
  updateGameTime 
} from './actions/weather-actions';

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
export const GameContext = createContext();

// –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
export const useGameContext = () => useContext(GameContext);

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä SectService –∏–∑ –∞–¥–∞–ø—Ç–µ—Ä–∞
// –û–Ω —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
const sectService = SectService;

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
export const GameContextProvider = ({ children }) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useReducer —Å –∫–æ—Ä–Ω–µ–≤—ã–º —Ä–µ–¥—É–∫—Ç–æ—Ä–æ–º –∏ –Ω–∞—á–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
  const [state, dispatchBase] = useReducer(rootReducer, initialState);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    if (state) {
      const initialProcessedState = initializeWeatherState(state);
      // –ï—Å–ª–∏ state –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω —Ñ—É–Ω–∫—Ü–∏–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–≥–æ–¥—ã, –ø—Ä–∏–º–µ–Ω—è–µ–º —ç—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
      if (initialProcessedState !== state) {
        dispatchBase({ type: 'INITIALIZE_WEATHER_STATE', payload: initialProcessedState });
      }
    }
  }, []);
  
  // –≠–∫—Å–ø–æ—Ä—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  useEffect(() => {
    if (typeof window !== 'undefined') {
      // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      window.__GAME_STATE__ = state;
      // –î–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç actions
      if (!window.__GAME_CONTEXT__) {
        window.__GAME_CONTEXT__ = { state, actions: {} };
      } else {
        // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —É–∂–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        window.__GAME_CONTEXT__.state = state;
      }
      
      // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º data-–∞—Ç—Ä–∏–±—É—Ç –Ω–∞ body –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ DOM
      try {
        // –í–º–µ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ DOM (—á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–±—ã—Ç–æ—á–Ω–æ),
        // —Å–æ–∑–¥–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–ª—è –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        document.body.setAttribute('data-gamestate-available', 'true');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ data-–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        if (state.player) {
          document.body.setAttribute('data-player-health', 
            `${state.player.stats?.health || 0}/${state.player.stats?.maxHealth || 100}`);
          document.body.setAttribute('data-player-level', 
            state.player.cultivation?.level || 1);
        }
      } catch (error) {
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ DOM-–æ–ø–µ—Ä–∞—Ü–∏–π
        console.debug('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å DOM-–∞—Ç—Ä–∏–±—É—Ç—ã:', error);
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      try {
        const stateUpdateEvent = new CustomEvent('game-state-updated', { 
          detail: { timestamp: Date.now() } 
        });
        window.dispatchEvent(stateUpdateEvent);
      } catch (error) {
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–æ–±—ã—Ç–∏–π
        console.debug('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è:', error);
      }
    }
  }, [state]); // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ –ü–û (middleware) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
  const middlewareEnhancer = next => action => {
    // ‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π state –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ middleware
    const middlewareAPI = {
      getState: () => state, // –¢–µ–ø–µ—Ä—å –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π state, –∞ –Ω–µ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–π processedState
      dispatch: dispatchBase
    };
    
    // –í—ã–∑—ã–≤–∞–µ–º middleware –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const middlewareResult = weatherMiddleware(middlewareAPI)(next)(action);
    
    return middlewareResult;
  };
  
  // –°–æ–∑–¥–∞–µ–º dispatch —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º middleware
  const dispatch = action => {
    return middlewareEnhancer(dispatchBase)(action);
  };
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const initializeGame = async () => {
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage
        const savedState = localStorage.getItem('gameState');
        
        if (savedState) {
          // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ
          dispatch({
            type: ACTION_TYPES.LOAD_GAME,
            payload: JSON.parse(savedState)
          });
        } else {
          // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É
          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
          const userData = await apiService.getCurrentUser();
          
          if (userData) {
            dispatch({
              type: ACTION_TYPES.UPDATE_PLAYER,
              payload: userData
            });
          }
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        dispatch({
          type: ACTION_TYPES.SET_INITIALIZED,
          payload: true
        });
        
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã:', error);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É
        dispatch({
          type: ACTION_TYPES.SET_ERROR,
          payload: error.message
        });
      }
    };
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    initializeGame();
  }, []);
  
  // –ù–û–í–û–ï: –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –±–æ–Ω—É—Å–æ–≤ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã
  useEffect(() => {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–æ–Ω—É—Å–æ–≤ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã
    if (state.isInitialized && state.player && state.player.inventory) {
      console.log('üåü –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –±–æ–Ω—É—Å–æ–≤ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏...');
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
      const timer = setTimeout(() => {
        try {
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –±–æ–Ω—É—Å–æ–≤
          initializeBonusSystem(state, dispatch);
          console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –±–æ–Ω—É—Å–æ–≤ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
          
          // –í—ã–≤–æ–¥–∏–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
          setTimeout(() => {
            debugBonusSystem(state);
          }, 100);
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –±–æ–Ω—É—Å–æ–≤:', error);
        }
      }, 500);
      
      return () => clearTimeout(timer);
    }
  }, [state.isInitialized, state.player?.inventory]);
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã
  useEffect(() => {
    // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã
    if (state.isInitialized && Array.isArray(state.player?.techniques) && state.player.techniques.length > 0) {
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
      const timer = setTimeout(() => {
        console.log('üõ†Ô∏è –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
        try {
          // –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫
          dispatch({
            type: ACTION_TYPES.REPAIR_TECHNIQUES
          });
          console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏–∫:', error);
        }
      }, 1000);
      
      return () => clearTimeout(timer);
    }
  }, [state.isInitialized, state.player?.techniques]);
  
  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã
  const normalizeSectDataAction = () => {
    console.log('üßπ –ó–∞–ø—É—Å–∫ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã...');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Ä–µ–¥—É–∫—Ç–æ—Ä
    dispatch({ type: ACTION_TYPES.NORMALIZE_SECT_DATA });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    dispatch({ 
      type: ACTION_TYPES.ADD_NOTIFICATION, 
      payload: { 
        message: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã –±—ã–ª–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–∞', 
        type: 'info' 
      }
    });
  };
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
  const processEnrichmentQueue = () => {
    if (itemEnrichmentQueue.length === 0 || isEnrichmentScheduled) {
      return;
    }
    
    isEnrichmentScheduled = true;
    
    setTimeout(() => {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å—é –æ—á–µ—Ä–µ–¥—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∑–∞ –æ–¥–Ω—É –æ–ø–µ—Ä–∞—Ü–∏—é
      const items = [...itemEnrichmentQueue];
      itemEnrichmentQueue = [];
      
      console.log(`[GameContext] –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –æ–±–æ–≥–∞—â–µ–Ω–∏—è: ${items.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
      if (items.length > 0) {
        dispatch({
          type: ACTION_TYPES.BULK_ENRICH_ITEMS,
          payload: items
        });
      }
      
      isEnrichmentScheduled = false;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ—è–≤–∏–ª–∏—Å—å –ª–∏ –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –æ—á–µ—Ä–µ–¥–∏ –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
      if (itemEnrichmentQueue.length > 0) {
        processEnrichmentQueue();
      }
    }, 50);
  };
  
  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥–º–µ—Ç–µ (–æ–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö)
  const enrichItem = async (itemId) => {
    if (!itemId) {
      console.warn('[GameContext] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–±–æ–≥–∞—Ç–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç: ID –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
      return null;
    }
    
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –∏ –Ω–µ –±—ã–ª –ª–∏ –æ–Ω —É–∂–µ –æ–±–æ–≥–∞—â–µ–Ω
      const existingItem = state.player.inventory.items.find(
        item => (item.id === itemId || item.itemId === itemId) && item.enriched
      );
      
      if (existingItem) {
        console.log(`[GameContext] –ü—Ä–µ–¥–º–µ—Ç ${itemId} —É–∂–µ –æ–±–æ–≥–∞—â–µ–Ω`);
        return existingItem;
      }
      
      console.log(`[GameContext] –ó–∞–ø—Ä–æ—Å –æ–±–æ–≥–∞—â–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞: ${itemId}`);
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      const itemDetails = await itemService.getItemDetails(itemId);
      
      if (!itemDetails) {
        console.warn(`[GameContext] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç–∞: ${itemId}`);
        return null;
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      const inventoryItem = state.player.inventory.items.find(
        item => item.id === itemId || item.itemId === itemId
      );
      
      if (!inventoryItem) {
        console.warn(`[GameContext] –ü—Ä–µ–¥–º–µ—Ç ${itemId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ`);
        return null;
      }
      
      // –û–±–æ–≥–∞—â–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      const enrichedItem = {
        ...inventoryItem,
        ...itemDetails,
        // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –ø—Ä–µ–¥–º–µ—Ç –æ–±–æ–≥–∞—â–µ–Ω
        enriched: true,
        enrichedAt: Date.now()
      };
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
      itemEnrichmentQueue.push(enrichedItem);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—á–µ—Ä–µ–¥–∏
      processEnrichmentQueue();
      
      return enrichedItem;
    } catch (error) {
      console.error(`[GameContext] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–æ–≥–∞—â–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ ${itemId}:`, error);
      return null;
    }
  };
  
  // –ù–û–í–û–ï: –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–∫–∏–ø–∏—Ä–æ–≤–∫–æ–π
  // –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
  const equipItem = (item) => {
    if (!item || !item.id) {
      console.warn('[GameContext] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —ç–∫–∏–ø–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç: –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
      return;
    }
    
    console.log(`[GameContext] –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞: ${item.name || item.id}`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
    dispatch({
      type: 'EQUIP_ITEM',
      payload: { 
        itemId: item.id,
        itemType: item.type,
        armorType: item.properties?.armorType || item.armorType
      }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–æ–Ω—É—Å—ã —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    setTimeout(() => {
      try {
        const { updatePlayerEquipmentBonuses } = require('../utils/equipmentStateUpdater');
        updatePlayerEquipmentBonuses(state, dispatch);
      } catch (error) {
        console.error('[GameContext] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤:', error);
      }
    }, 50);
  };
  
  // –°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
  const unequipItem = (itemId) => {
    if (!itemId) {
      console.warn('[GameContext] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç: ID –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω');
      return;
    }
    
    console.log(`[GameContext] –°–Ω—è—Ç–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞: ${itemId}`);
    
    dispatch({
      type: 'UNEQUIP_ITEM',
      payload: { itemId }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–æ–Ω—É—Å—ã —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    setTimeout(() => {
      try {
        const { updatePlayerEquipmentBonuses } = require('../utils/equipmentStateUpdater');
        updatePlayerEquipmentBonuses(state, dispatch);
      } catch (error) {
        console.error('[GameContext] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤:', error);
      }
    }, 50);
  };
  
  // –Ø–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏
  const updateEquipmentBonuses = () => {
    console.log('[GameContext] –Ø–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏');
    
    try {
      const { updatePlayerEquipmentBonuses } = require('../utils/equipmentStateUpdater');
      return updatePlayerEquipmentBonuses(state, dispatch);
    } catch (error) {
      console.error('[GameContext] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤:', error);
      return null;
    }
  };
  
  // –û–±—ä–µ–∫—Ç —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
  const actions = {
    dispatch,
    // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ–∫—Ç–æ–π
    normalizeSectData: normalizeSectDataAction,
    // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    enrichItem,
    // –ù–û–í–û–ï: –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–∫–∏–ø–∏—Ä–æ–≤–∫–æ–π
    equipItem,
    unequipItem,
    updateEquipmentBonuses,
    // –î—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è...
  };
  
  // –ù–û–í–û–ï: –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π –±–æ–Ω—É—Å–æ–≤
  const gameContext = { state, actions };
  
  // –ù–û–í–û–ï: –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å —Å–∏—Å—Ç–µ–º–æ–π –±–æ–Ω—É—Å–æ–≤
  useEffect(() => {
    if (state.isInitialized) {
      try {
        // –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        integrateWithGameContext(gameContext);
      } catch (error) {
        console.error('[GameContext] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π –±–æ–Ω—É—Å–æ–≤:', error);
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (typeof window !== 'undefined') {
        window.__GAME_CONTEXT__ = gameContext;
      }
    }
  }, [state.isInitialized]);
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  return (
    <GameContext.Provider value={{ state, actions }}>
      {children}
    </GameContext.Provider>
  );
};