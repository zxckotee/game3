/**
 * –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ–∫—Ç–∞–º–∏
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
 */

import { checkAndNormalizeSectData, normalizeSectData } from './sectUtils';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏–≥—Ä—ã
 * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
 */
export const normalizeSectDataConsole = () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ window (–¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ)
    if (typeof window === 'undefined') {
      console.error('–û—à–∏–±–∫–∞: –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
      return false;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏–≥—Ä—ã –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
    const gameState = window.__GAME_STATE__;
    const dispatch = window.__GAME_DISPATCH__;
    
    if (!gameState || !dispatch) {
      console.error('–û—à–∏–±–∫–∞: –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return false;
    }
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ
    const checkResult = checkAndNormalizeSectData(gameState);
    
    // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if (checkResult !== gameState) {
      console.log('üîß –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã
      dispatch({ type: 'NORMALIZE_SECT_DATA' });
      
      // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
      dispatch({ 
        type: 'ADD_NOTIFICATION', 
        payload: { 
          message: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã –±—ã–ª–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–∞', 
          type: 'info' 
        } 
      });
      
      // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
      setTimeout(() => {
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–µ–∫—Ç—ã –ø–æ—Å–ª–µ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏:', gameState.sect);
      }, 100);
      
      return true;
    } else {
      console.log('‚úÖ –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ, –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
      return true;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç—ã:', error);
    return false;
  }
};

/**
 * –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–∫—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {Object} –î–∞–Ω–Ω—ã–µ –æ —Å–µ–∫—Ç–µ
 */
export const printSectData = () => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ window
    if (typeof window === 'undefined') {
      console.error('–û—à–∏–±–∫–∞: –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
      return null;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏–≥—Ä—ã
    const gameState = window.__GAME_STATE__;
    
    if (!gameState) {
      console.error('–û—à–∏–±–∫–∞: –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return null;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–∫—Ç–µ
    const sectState = gameState.sect || {};
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö
    const sectBenefits = sectState.benefits || [];
    const sectSect = sectState.sect || null;
    
    // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    console.group('üìä –î–∞–Ω–Ω—ã–µ –æ —Å–µ–∫—Ç–µ:');
    console.log('–ë–æ–Ω—É—Å—ã —Å–µ–∫—Ç—ã (benefits):', sectBenefits);
    console.log('–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ benefits –º–∞—Å—Å–∏–≤–æ–º:', Array.isArray(sectBenefits));
    
    if (sectSect) {
      console.log('–í–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å–µ–∫—Ç—ã (sect.sect):', sectSect);
      console.log('–í–ª–æ–∂–µ–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã (sect.sect.benefits):', sectSect.benefits);
      console.log('–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ sect.sect.benefits –º–∞—Å—Å–∏–≤–æ–º:', Array.isArray(sectSect.benefits));
    }
    
    console.groupEnd();
    
    return sectState;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ–∫—Ç–µ:', error);
    return null;
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
export default {
  normalizeSectData: normalizeSectDataConsole,
  printSectData
};
