/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–≤–µ—Å—Ç–∞–º–∏
 * –†–µ–∞–ª–∏–∑—É–µ—Ç —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–µ API –∫–∞–∫ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π, —Ç–∞–∫ –∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞–∫ —Ä–∞–±–æ—Ç—É —Å –º–æ–¥–µ–ª—è–º–∏, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ REST API
 */

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π —Å—Ä–µ–¥—ã
const isBrowserEnvironment = typeof window !== 'undefined' && typeof window.document !== 'undefined';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º API-–≤–µ—Ä—Å–∏—é –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
const QuestServiceAPI = require('./quest-api');

// –í –±—Ä–∞—É–∑–µ—Ä–µ –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º API-–≤–µ—Ä—Å–∏—é
const QuestService = QuestServiceAPI;

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
const serviceInstance = new (function() {
  this.getQuests = function(userId) {
    return QuestService.getQuests(userId);
  };
  
  this.acceptQuest = function(userId, questId) {
    return QuestService.acceptQuest(userId, questId);
  };
  
  this.updateQuestProgress = function(userId, questId, progress) {
    return QuestService.updateQuestProgress(userId, questId, progress);
  };
  
  this.completeQuest = function(userId, questId) {
    return QuestService.completeQuest(userId, questId);
  };
  
  // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å UI
  this.normalizeQuestData = function(quest) {
    if (!quest) return null;
    
    // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–±—ä–µ–∫—Ç—ã –∏–º–µ—é—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    return {
      id: quest.id,
      title: quest.title || '',
      description: quest.description || '',
      type: quest.type || 'main',
      level: quest.level || 1,
      requiredLevel: quest.required_level || quest.level || 1,
      required_level: quest.required_level || quest.level || 1, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      difficulty: quest.difficulty || '–°—Ä–µ–¥–Ω–µ',
      category: quest.category || '–æ—Å–Ω–æ–≤–Ω–æ–π —Å—é–∂–µ—Ç',
      rewards: Array.isArray(quest.rewards)
        ? quest.rewards.map(r => ({
            id: r.id,
            type: r.type || 'currency',
            name: r.name || '',
            amount: r.amount || 0,
            gold: r.gold,
            silver: r.silver,
            copper: r.copper,
            icon: r.icon || 'ü™ô'
          }))
        : [],
      objectives: Array.isArray(quest.objectives)
        ? quest.objectives.map(o => {
            // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—É–ª–µ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
            const toBool = (value) => {
              if (value === null || value === undefined) return false;
              if (typeof value === 'boolean') return value;
              if (typeof value === 'number') return value !== 0;
              if (typeof value === 'string') {
                // PostgreSQL –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ 't', 'f', 'true', 'false'
                return value.toLowerCase() === 't' ||
                      value.toLowerCase() === 'true' ||
                      value === '1';
              }
              return Boolean(value);
            };
            
            return {
              id: o.id,
              text: o.objective_text || o.text || '',
              requirement_criteria: o.requirement_criteria || {},
              completed: toBool(o.completed)
            };
          })
        : [],
      status: quest.status || 'available',
      progress: quest.progress || {}
    };
  };
})();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –Ω–∞–ø—Ä—è–º—É—é
const adapter = {
  // –ú–µ—Ç–æ–¥—ã —Å–µ—Ä–≤–∏—Å–∞
  getQuests: QuestService.getQuests,
  acceptQuest: QuestService.acceptQuest,
  updateQuestProgress: QuestService.updateQuestProgress,
  completeQuest: QuestService.completeQuest,
  
  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  normalizeQuestData: serviceInstance.normalizeQuestData,
  
  // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  getInstance: function() {
    return serviceInstance;
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–¥–∞–ø—Ç–µ—Ä –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Å–ø–æ—Ä—Ç
module.exports = adapter;