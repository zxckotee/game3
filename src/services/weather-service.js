/**
 * –°–µ—Ä–≤–∏—Å –ø–æ–≥–æ–¥—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–≥–æ–¥–æ–π, –≤—Ä–µ–º–µ–Ω–µ–º —Å—É—Ç–æ–∫ –∏ —Å–µ–∑–æ–Ω–∞–º–∏ –≤ –∏–≥—Ä–µ
 */
class WeatherService {
  // –ú–Ω–æ–∂–∏—Ç–µ–ª—å –≤—Ä–µ–º–µ–Ω–∏: 1 –º–∏–Ω—É—Ç–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ = x –º–∏–Ω—É—Ç –∏–≥—Ä–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
  // –í–Ω–∏–º–∞–Ω–∏–µ: –∏–∑–º–µ–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –º–Ω–æ–∂–∏—Ç–µ–ª—è –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å —Ç–µ—á–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!
  static TIME_MULTIPLIER = 120;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–Ω–æ–∂–∏—Ç–µ–ª—è
  static updateMultiplier(newValue) {
    console.log(`üîÑ WeatherService - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª—è —Å ${WeatherService.TIME_MULTIPLIER} –Ω–∞ ${newValue}`);
    if (typeof newValue === 'number' && !isNaN(newValue) && newValue > 0) {
      WeatherService.TIME_MULTIPLIER = newValue;
      return true;
    }
    console.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–Ω–æ–∂–∏—Ç–µ–ª—è:', newValue);
    return false;
  }
  
  constructor() {
    // –î–ª–∏–Ω–∞ —Å–µ–∑–æ–Ω–∞ –≤ –¥–Ω—è—Ö (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
    this.SEASON_LENGTH = 30;
    
    // –ü–æ—Ä—è–¥–æ–∫ —Å–µ–∑–æ–Ω–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Å–º–µ–Ω—ã
    this.SEASON_ORDER = ['spring', 'summer', 'autumn', 'winter'];
    
    // –¢–∏–ø—ã –ø–æ–≥–æ–¥—ã —Å –∏—Ö –±–∞–∑–æ–≤–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
    this.weatherTypes = {
      clear: { name: '–Ø—Å–Ω–æ', baseChance: 0.4 },
      cloudy: { name: '–û–±–ª–∞—á–Ω–æ', baseChance: 0.2 },
      rain: { name: '–î–æ–∂–¥—å', baseChance: 0.2 },
      thunderstorm: { name: '–ì—Ä–æ–∑–∞', baseChance: 0.1 },
      fog: { name: '–¢—É–º–∞–Ω', baseChance: 0.05 },
      snow: { name: '–°–Ω–µ–≥', baseChance: 0.05 }
    };
    
    // –°–µ–∑–æ–Ω—ã –∏ –∏—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
    this.seasons = {
      spring: {
        name: '–í–µ—Å–Ω–∞',
        weatherModifiers: {
          clear: 1.2,
          cloudy: 1.1,
          rain: 1.5,
          thunderstorm: 1.2,
          fog: 0.8,
          snow: 0.3
        },
        resourceModifiers: {
          herbs: 1.5, // –ë–æ–Ω—É—Å –∫ —Å–±–æ—Ä—É —Ç—Ä–∞–≤
          cultivation: 1.2 // –ë–æ–Ω—É—Å –∫ –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        },
        specialEvents: ['bloom', 'spirit_tide'] // –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—Å–æ–±—ã–µ —Å–æ–±—ã—Ç–∏—è
      },
      summer: {
        name: '–õ–µ—Ç–æ',
        weatherModifiers: {
          clear: 1.7,
          cloudy: 1.0,
          rain: 0.8,
          thunderstorm: 1.5,
          fog: 0.5,
          snow: 0
        },
        resourceModifiers: {
          minerals: 1.3, // –ë–æ–Ω—É—Å –∫ —Å–±–æ—Ä—É –º–∏–Ω–µ—Ä–∞–ª–æ–≤
          cultivation: 1.3 // –ë–æ–Ω—É—Å –∫ –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        },
        specialEvents: ['solstice', 'meteor_shower'] // –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—Å–æ–±—ã–µ —Å–æ–±—ã—Ç–∏—è
      },
      autumn: {
        name: '–û—Å–µ–Ω—å',
        weatherModifiers: {
          clear: 1.0,
          cloudy: 1.3,
          rain: 1.2,
          thunderstorm: 0.8,
          fog: 1.7,
          snow: 0.4
        },
        resourceModifiers: {
          herbs: 1.4, // –ë–æ–Ω—É—Å –∫ —Å–±–æ—Ä—É —Ç—Ä–∞–≤
          food: 1.5 // –ë–æ–Ω—É—Å –∫ —Å–±–æ—Ä—É –ø–∏—â–∏
        },
        specialEvents: ['harvest', 'spirit_wind'] // –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—Å–æ–±—ã–µ —Å–æ–±—ã—Ç–∏—è
      },
      winter: {
        name: '–ó–∏–º–∞',
        weatherModifiers: {
          clear: 0.7,
          cloudy: 1.0,
          rain: 0.4,
          thunderstorm: 0.2,
          fog: 1.0,
          snow: 2.0
        },
        resourceModifiers: {
          minerals: 1.2, // –ë–æ–Ω—É—Å –∫ —Å–±–æ—Ä—É –º–∏–Ω–µ—Ä–∞–ª–æ–≤
          cultivation: 0.8 // –®—Ç—Ä–∞—Ñ –∫ –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        },
        specialEvents: ['ice_tribulation', 'blizzard'] // –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—Å–æ–±—ã–µ —Å–æ–±—ã—Ç–∏—è
      }
    };
    
  // –û—Å–æ–±—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ –∏ —Å–µ–∑–æ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
    this.specialEvents = {
      // –í–µ—Å–µ–Ω–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
      bloom: {
        name: '–¶–≤–µ—Ç–µ–Ω–∏–µ –¥—É—Ö–æ–≤–Ω—ã—Ö —Ç—Ä–∞–≤',
        duration: 180, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'resource_bonus', target: 'herbs', modifier: 50 }, // +50% –∫ —Ç—Ä–∞–≤–∞–º (—É–∂–µ –∫—Ä–∞—Ç–Ω–æ 5)
          { type: 'special_resources', resources: ['divine_petal', 'spirit_bud'] } // –û—Å–æ–±—ã–µ —Ä–µ—Å—É—Ä—Å—ã
        ],
        visualEffects: { filter: 'saturate(1.2) brightness(1.1)' } // –í–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
      },
      spirit_tide: {
        name: '–ü—Ä–∏–ª–∏–≤ –¥—É—Ö–æ–≤–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏',
        duration: 120, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'cultivation_bonus', modifier: 30 }, // +30% –∫ –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏ (—É–∂–µ –∫—Ä–∞—Ç–Ω–æ 5)
          { type: 'energy_regen', modifier: 20 } // +20% –∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é —ç–Ω–µ—Ä–≥–∏–∏ (—É–∂–µ –∫—Ä–∞—Ç–Ω–æ 5)
        ],
        visualEffects: { filter: 'brightness(1.15) contrast(1.1)' }
      },
      
      // –õ–µ—Ç–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
      solstice: {
        name: '–°–æ–ª–Ω—Ü–µ—Å—Ç–æ—è–Ω–∏–µ',
        duration: 60, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'fire_cultivation', modifier: 50 }, // +50% –∫ –æ–≥–Ω–µ–Ω–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
          { type: 'special_encounters', encounters: ['phoenix_sighting', 'sun_elemental'] }
        ],
        visualEffects: { filter: 'brightness(1.3) sepia(0.3)' }
      },
      meteor_shower: {
        name: '–ú–µ—Ç–µ–æ—Ä–∏—Ç–Ω—ã–π –¥–æ–∂–¥—å',
        duration: 90, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'mineral_bonus', modifier: 40 }, // +40% –∫ –º–∏–Ω–µ—Ä–∞–ª–∞–º
          { type: 'special_resources', resources: ['star_fragment', 'cosmic_dust'] }
        ],
        visualEffects: { filter: 'brightness(0.7) contrast(1.2)' }
      },
      
      // –û—Å–µ–Ω–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
      harvest: {
        name: '–°–±–æ—Ä —É—Ä–æ–∂–∞—è',
        duration: 240, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'market_discount', modifier: 20 }, // –°–∫–∏–¥–∫–∞ 20% –Ω–∞ —Ä—ã–Ω–∫–µ
          { type: 'double_loot', chance: 0.2 } // 20% —à–∞–Ω—Å –¥–≤–æ–π–Ω–æ–π –¥–æ–±—ã—á–∏
        ],
        visualEffects: { filter: 'sepia(0.2) contrast(1.1)' }
      },
      spirit_wind: {
        name: '–î—É—Ö–æ–≤–Ω—ã–π –≤–µ—Ç–µ—Ä',
        duration: 120, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'movement_speed', modifier: 30 }, // +30% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
          { type: 'reduced_encounter', modifier: -30 } // -30% –∫ —à–∞–Ω—Å—É —Å–ª—É—á–∞–π–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á
        ],
        visualEffects: { filter: 'hue-rotate(10deg) blur(0.5px)' }
      },
      
      // –ó–∏–º–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
      ice_tribulation: {
        name: '–õ–µ–¥—è–Ω–∞—è —Ç—Ä–∏–±—É–ª—è—Ü–∏—è',
        duration: 120, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'water_cultivation', modifier: 50 }, // +50% –∫ –≤–æ–¥–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
          { type: 'resistance_required', element: 'ice', value: 20 } // –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è–µ–º–æ—Å—Ç—å –ª—å–¥—É
        ],
        visualEffects: { filter: 'brightness(1.2) contrast(1.3) saturate(0.8)' }
      },
      blizzard: {
        name: '–ú–µ—Ç–µ–ª—å',
        duration: 180, // –º–∏–Ω—É—Ç
        effects: [
          { type: 'movement_penalty', modifier: -50 }, // -50% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
          { type: 'energy_drain', value: 1 } // –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ —ç–Ω–µ—Ä–≥–∏–∏
        ],
        visualEffects: { filter: 'brightness(0.8) contrast(0.9) blur(1px)' }
      }
    };
    
    // –≠—Ñ—Ñ–µ–∫—Ç—ã –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
    this.daytimeEffects = {
      dawn: { // 5:00-7:00
        name: '–†–∞—Å—Å–≤–µ—Ç',
        effects: [
          { type: 'perception', modifier: 10 }, // +10% –∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—é
          { type: 'energy_regen', modifier: 5 } // +5% –∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é —ç–Ω–µ—Ä–≥–∏–∏
        ],
        visualEffects: { filter: 'brightness(0.9) sepia(0.2)' }
      },
      morning: { // 7:00-11:00
        name: '–£—Ç—Ä–æ',
        effects: [
          { type: 'cultivation_speed', modifier: 10 }, // +10% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
          { type: 'gathering_speed', modifier: 15 } // +15% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–±–æ—Ä–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        ],
        visualEffects: { filter: 'brightness(1.1) contrast(1.05)' }
      },
      noon: { // 11:00-14:00
        name: '–ü–æ–ª–¥–µ–Ω—å',
        effects: [
          { type: 'fire_cultivation', modifier: 20 }, // +20% –∫ –æ–≥–Ω–µ–Ω–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
          { type: 'water_cultivation', modifier: -10 } // -10% –∫ –≤–æ–¥–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        ],
        visualEffects: { filter: 'brightness(1.2) contrast(1.1)' }
      },
      afternoon: { // 14:00-17:00
        name: '–î–µ–Ω—å',
        effects: [
          { type: 'combat_damage', modifier: 5 }, // +5% –∫ —É—Ä–æ–Ω—É –≤ –±–æ—é
          { type: 'gathering_speed', modifier: 10 } // +10% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–±–æ—Ä–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        ],
        visualEffects: { filter: 'brightness(1.15) contrast(1.05)' }
      },
      evening: { // 17:00-20:00
        name: '–í–µ—á–µ—Ä',
        effects: [
          { type: 'stealth', modifier: 10 }, // +10% –∫ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
          { type: 'perception', modifier: -5 } // -5% –∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—é
        ],
        visualEffects: { filter: 'brightness(0.9) sepia(0.15)' }
      },
      night: { // 20:00-23:00
        name: '–ù–æ—á—å',
        effects: [
          { type: 'dark_cultivation', modifier: 20 }, // +20% –∫ —Ç—ë–º–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
          { type: 'light_cultivation', modifier: -10 }, // -10% –∫ —Å–≤–µ—Ç–ª–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
          { type: 'stealth', modifier: 20 } // +20% –∫ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
        ],
        visualEffects: { filter: 'brightness(0.7) contrast(1.2) saturate(0.8)' }
      },
      deepNight: { // 23:00-5:00
        name: '–ì–ª—É–±–æ–∫–∞—è –Ω–æ—á—å',
        effects: [
          { type: 'cultivation_insight', chance: 0.05 }, // 5% —à–∞–Ω—Å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–∑—Ä–µ–Ω–∏–µ –ø—Ä–∏ –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
          { type: 'perception', modifier: -15 }, // -15% –∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—é
          { type: 'stealth', modifier: 30 } // +30% –∫ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
        ],
        visualEffects: { filter: 'brightness(0.6) contrast(1.3) saturate(0.7)' }
      }
    };
  }
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏
   * @param {Object} location - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–∫–∞—Ü–∏–∏
   * @param {Object} worldTime - –û–±—ä–µ–∫—Ç —Å –≤—Ä–µ–º–µ–Ω–µ–º –∏–∑ state.world.time (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   * @returns {Object} - –ù–∞—á–∞–ª—å–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
   */
  initWeather(location, worldTime = null) {
    let hour, minute, currentSeason, dayCount;
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ worldTime, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (worldTime && typeof worldTime === 'object') {
      hour = typeof worldTime.hour === 'number' ? worldTime.hour : new Date().getHours();
      minute = typeof worldTime.minute === 'number' ? worldTime.minute : new Date().getMinutes();
      dayCount = typeof worldTime.day === 'number' ? worldTime.day : 1;
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ–∑–æ–Ω –∏–∑ worldTime –∏–ª–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      if (worldTime.season && this.seasons[worldTime.season]) {
        currentSeason = worldTime.season;
      } else {
        const seasons = Object.keys(this.seasons);
        currentSeason = seasons[Math.floor(new Date().getMonth() / 3) % 4];
      }
      
      console.log('üå§Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–≥–æ–¥—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º worldTime:', { 
        hour, minute, dayCount, currentSeason 
      });
    } else {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
      const now = new Date();
      hour = now.getHours();
      minute = now.getMinutes();
      dayCount = 1;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–∑–æ–Ω (–ø—Ä–∏–≤—è–∑–∫–∞ –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É —Å–µ–∑–æ–Ω—É)
      const seasons = Object.keys(this.seasons);
      currentSeason = seasons[Math.floor(now.getMonth() / 3) % 4];
      
      console.log('üå§Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–≥–æ–¥—ã –±–µ–∑ worldTime, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:', { 
        hour, minute, dayCount, currentSeason 
      });
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–≥–æ–¥—É —Å —É—á–µ—Ç–æ–º —Å–µ–∑–æ–Ω–∞ –∏ –ª–æ–∫–∞—Ü–∏–∏
    const initialWeather = this._calculateWeather(currentSeason, location);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
    const forecast = this._generateForecast(initialWeather.type, currentSeason, location, 3); // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É
    
    // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∏—Ä–æ–≤–æ–≥–æ –¥–Ω—è
    let seasonDay, calculatedSeason;
    
    // –ï—Å–ª–∏ –¥–µ–Ω—å –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞, –≤—ã—á–∏—Å–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    if (dayCount > this.SEASON_LENGTH) {
      // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–º–µ—Ä –¥–Ω—è –≤ —Ç–µ–∫—É—â–µ–º —Å–µ–∑–æ–Ω–µ
      seasonDay = ((dayCount - 1) % this.SEASON_LENGTH) + 1;
      
      // –í—ã—á–∏—Å–ª—è–µ–º, –∫–∞–∫–æ–π —Å–µ–∑–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–µ–π—á–∞—Å, —É—á–∏—Ç—ã–≤–∞—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä —Å–µ–∑–æ–Ω–æ–≤
      const seasonIndex = Math.floor((dayCount - 1) / this.SEASON_LENGTH) % this.SEASON_ORDER.length;
      calculatedSeason = this.SEASON_ORDER[seasonIndex];
      
      console.log('üìÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–≥–æ–¥—ã —Å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–æ–π —Å–µ–∑–æ–Ω–∞:', {
        –º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: dayCount,
        –¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: seasonDay,
        –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π_—Å–µ–∑–æ–Ω: calculatedSeason,
        –∏—Å—Ö–æ–¥–Ω—ã–π_—Å–µ–∑–æ–Ω: currentSeason
      });
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π —Å–µ–∑–æ–Ω –≤–º–µ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ
      currentSeason = calculatedSeason;
    } else {
      // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
      seasonDay = dayCount;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –¥–µ–Ω—å —Å–µ–π—á–∞—Å –∏–ª–∏ –Ω–æ—á—å
    const isDayTime = hour >= 6 && hour < 20;
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –¥–Ω—è
    const daytimePeriod = this._getDaytimePeriod(hour);
    
    // –°–±–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø–æ–≥–æ–¥—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
    const weatherEffects = this._collectWeatherEffects(initialWeather.type, currentSeason, daytimePeriod);
    
    // –í—ã—á–∏—Å–ª—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
    const currentGameMinutes = hour * 60 + minute;
    const weatherChangeAt = currentGameMinutes + initialWeather.duration;
    
    return {
      hour,
      minute,
      dayCount: dayCount,
      isDayTime,
      currentWeather: initialWeather.type,
      weatherIntensity: initialWeather.intensity,
      weatherChangeAt: weatherChangeAt, // –ê–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö (—Å –Ω–∞—á–∞–ª–∞ –¥–Ω—è)
      nextWeatherChange: initialWeather.duration, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      currentSeason,
      seasonDay, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
      seasonLength: this.SEASON_LENGTH, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
      activeEvent: null, // –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –≤ –Ω–∞—á–∞–ª–µ
      eventRemainingTime: null,
      weatherEffects,
      forecast
    };
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ —Å—É—Ç–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–∞—Å–∞
   * @param {Number} hour - –¢–µ–∫—É—â–∏–π —á–∞—Å (0-23)
   * @returns {String} - –ü–µ—Ä–∏–æ–¥ —Å—É—Ç–æ–∫
   */
  _getDaytimePeriod(hour) {
    if (hour >= 5 && hour < 7) return 'dawn';
    if (hour >= 7 && hour < 11) return 'morning';
    if (hour >= 11 && hour < 14) return 'noon';
    if (hour >= 14 && hour < 17) return 'afternoon';
    if (hour >= 17 && hour < 20) return 'evening';
    if (hour >= 20 && hour < 23) return 'night';
    return 'deepNight'; // 23:00-5:00
  }

  /**
   * –û–∫—Ä—É–≥–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
   * @param {Number} value - –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è
   * @returns {Number} - –û–∫—Ä—É–≥–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
   */
  _roundToMultipleOf5(value) {
    // –ü—Ä–æ—Å—Ç–æ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ
    return Math.round(value);
  }

  /**
   * –°–±–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –ø–æ–≥–æ–¥—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
   * @param {String} weatherType - –¢–∏–ø –ø–æ–≥–æ–¥—ã
   * @param {String} season - –¢–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω
   * @param {String} daytimePeriod - –ü–µ—Ä–∏–æ–¥ —Å—É—Ç–æ–∫
   * @returns {Array} - –ú–∞—Å—Å–∏–≤ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
   */
  _collectWeatherEffects(weatherType, season, daytimePeriod) {
    const effects = [];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –ø–æ–≥–æ–¥—ã
    const weatherEffects = {
      clear: [
        { type: 'perception', modifier: 10 }, // +10% –∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—é
        { type: 'fire_cultivation', modifier: 15 } // +15% –∫ –æ–≥–Ω–µ–Ω–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
      ],
      cloudy: [
        { type: 'perception', modifier: -5 }, // -5% –∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—é
        { type: 'energy_regen', modifier: -5 } // -5% –∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é —ç–Ω–µ—Ä–≥–∏–∏
      ],
      rain: [
        { type: 'water_cultivation', modifier: 20 }, // +20% –∫ –≤–æ–¥–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        { type: 'fire_cultivation', modifier: -10 }, // -10% –∫ –æ–≥–Ω–µ–Ω–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        { type: 'movement_speed', modifier: -10 }, // -10% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
        { type: 'resource_bonus', target: 'herbs', modifier: 20 } // +20% –∫ —Å–±–æ—Ä—É —Ç—Ä–∞–≤
      ],
      thunderstorm: [
        { type: 'lightning_cultivation', modifier: 30 }, // +30% –∫ –º–æ–ª–Ω–∏–µ–≤–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        { type: 'perception', modifier: -15 }, // -15% –∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—é
        { type: 'movement_speed', modifier: -20 }, // -20% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
        { type: 'resource_bonus', target: 'crystals', modifier: 30 } // +30% –∫ —Å–±–æ—Ä—É –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤
      ],
      fog: [
        { type: 'perception', modifier: -30 }, // -30% –∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—é
        { type: 'stealth', modifier: 20 }, // +20% –∫ —Å–∫—Ä—ã—Ç–Ω–æ—Å—Ç–∏
        { type: 'water_cultivation', modifier: 15 } // +15% –∫ –≤–æ–¥–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
      ],
      snow: [
        { type: 'water_cultivation', modifier: 25 }, // +25% –∫ –≤–æ–¥–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        { type: 'movement_speed', modifier: -30 }, // -30% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è
        { type: 'fire_cultivation', modifier: -15 }, // -15% –∫ –æ–≥–Ω–µ–Ω–Ω–æ–π –∫—É–ª—å—Ç–∏–≤–∞—Ü–∏–∏
        { type: 'resource_bonus', target: 'ores', modifier: 15 } // +15% –∫ —Å–±–æ—Ä—É —Ä—É–¥
      ]
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø–æ–≥–æ–¥—ã –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –≤—Å–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
    if (weatherEffects[weatherType]) {
      // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Å –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–º–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏
      const roundedEffects = weatherEffects[weatherType].map(effect => ({
        ...effect,
        modifier: this._roundToMultipleOf5(effect.modifier)
      }));
      effects.push(...roundedEffects);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ –∏ –æ–∫—Ä—É–≥–ª—è–µ–º
    if (this.daytimeEffects[daytimePeriod]) {
      const roundedTimeEffects = this.daytimeEffects[daytimePeriod].effects.map(effect => ({
        ...effect,
        modifier: this._roundToMultipleOf5(effect.modifier)
      }));
      effects.push(...roundedTimeEffects);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∑–æ–Ω–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫ —ç—Ñ—Ñ–µ–∫—Ç–∞–º –∏ –æ–∫—Ä—É–≥–ª—è–µ–º
    const seasonData = this.seasons[season];
    if (seasonData && seasonData.resourceModifiers) {
      for (const [resource, modifier] of Object.entries(seasonData.resourceModifiers)) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π –±–æ–Ω—É—Å –∏ –æ–∫—Ä—É–≥–ª—è–µ–º
        const percentBonus = (modifier - 1) * 100;
        effects.push({
          type: 'resource_bonus',
          target: resource,
          modifier: this._roundToMultipleOf5(percentBonus)
        });
      }
    }
    
    return effects;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã —Å —É—á–µ—Ç–æ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–≥–æ–¥—ã
   * @param {String} currentWeatherType - –¢–µ–∫—É—â–∏–π —Ç–∏–ø –ø–æ–≥–æ–¥—ã (–¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–æ–≤)
   * @param {String} season - –¢–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω
   * @param {Object} location - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–∫–∞—Ü–∏–∏
   * @param {Number} periods - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–∏–æ–¥–æ–≤ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞
   * @returns {Array} - –ú–∞—Å—Å–∏–≤ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
   */
  _generateForecast(currentWeatherType, season, location, periods) {
    const forecast = [];
    let totalDuration = 0;
    let previousWeatherType = currentWeatherType; // –ù–∞—á–∏–Ω–∞–µ–º —Å —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –ø–æ–≥–æ–¥—ã –¥–ª—è —É—á–µ—Ç–∞ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    const allWeatherTypes = Object.keys(this.weatherTypes);
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã –ø–æ–≥–æ–¥—ã –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    const usedTypesInForecast = new Set([currentWeatherType]);
    
    for (let i = 0; i < periods; i++) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ø–æ–≥–æ–¥—É —Å–æ —Å—Ç—Ä–æ–≥–∏–º —É—á–µ—Ç–æ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
      let newWeather = this._calculateWeather(season, location);
      
      // –£–õ–£–ß–®–ï–ù–û: –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
      let attempts = 0;
      const maxAttempts = 10; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–≥–æ–¥—ã
      while ((newWeather.type === previousWeatherType || usedTypesInForecast.has(newWeather.type)) && 
             attempts < maxAttempts && 
             usedTypesInForecast.size < allWeatherTypes.length) {
        
        // –£–õ–£–ß–®–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –∏–∑ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤, –µ—Å–ª–∏ –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫
        if (attempts > 5) {
          const unusedTypes = allWeatherTypes.filter(type => !usedTypesInForecast.has(type));
          if (unusedTypes.length > 0) {
            // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç–∏–ø –∏–∑ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö
            const randomUnusedType = unusedTypes[Math.floor(Math.random() * unusedTypes.length)];
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–æ–≥–æ–¥—É —Å —ç—Ç–∏–º —Ç–∏–ø–æ–º
            const baseWeather = this._calculateWeather(season, location);
            newWeather = {
              type: randomUnusedType,
              intensity: baseWeather.intensity,
              duration: baseWeather.duration
            };
            
            console.log(`üå¶Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞: –≤—ã–±—Ä–∞–Ω –Ω–æ–≤—ã–π —Ç–∏–ø ${randomUnusedType}`);
            break;
          }
        } else {
          // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π –ø–æ–≥–æ–¥—ã
          newWeather = this._calculateWeather(season, location);
        }
        
        attempts++;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –≤ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ
      usedTypesInForecast.add(newWeather.type);
      
      // –£–õ–£–ß–®–ï–ù–û: –í–∞—Ä—å–∏—Ä—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞
      // –î–µ–ª–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é —Å–ª—É—á–∞–π–Ω—É—é –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö ¬±20%
      const durationVariation = 0.8 + (Math.random() * 0.4); // –æ—Ç 0.8 –¥–æ 1.2
      const adjustedDuration = Math.round(newWeather.duration * durationVariation);
      
      // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ 10 –º–∏–Ω—É—Ç
      const finalDuration = Math.max(30, Math.ceil(adjustedDuration / 10) * 10);
      
      // –£–õ–£–ß–®–ï–ù–û: –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤—Ç–æ—Ä–∞—è –∏ —Ç—Ä–µ—Ç—å—è –ø–æ–≥–æ–¥–∞ –≤ –ø—Ä–æ–≥–Ω–æ–∑–µ –∏–º–µ—é—Ç —Ä–∞–∑–Ω—ã–µ timeToOccur
      const baseTimeToOccur = totalDuration;
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è –¥–ª—è –≤—Ç–æ—Ä–æ–π –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
      let timeVariation = 0;
      if (i > 0) {
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –¥–æ 20 –º–∏–Ω—É—Ç (–∫—Ä–∞—Ç–Ω–æ 5 –º–∏–Ω—É—Ç–∞–º)
        timeVariation = Math.round(Math.random() * 4) * 5;
      }
      
      // –û–∫—Ä—É–≥–ª—è–µ–º –≤—Ä–µ–º—è –¥–æ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è –¥–æ –∫—Ä–∞—Ç–Ω—ã—Ö 10 –º–∏–Ω—É—Ç
      const roundedTimeToOccur = Math.ceil((baseTimeToOccur + timeVariation) / 10) * 10;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–≥–æ–¥—É –≤ –ø—Ä–æ–≥–Ω–æ–∑ —Å –≤–æ–∑–º–æ–∂–Ω–æ–π –≤–∞—Ä–∏–∞—Ü–∏–µ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏
      const intensityVariation = 0.9 + (Math.random() * 0.2); // –æ—Ç 0.9 –¥–æ 1.1
      
      forecast.push({
        type: newWeather.type,
        intensity: Math.min(1.5, Math.max(0.5, newWeather.intensity * intensityVariation)),
        timeToOccur: roundedTimeToOccur,
        duration: finalDuration
      });
      
      // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–∏–ø –ø–æ–≥–æ–¥—ã –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
      previousWeatherType = newWeather.type;
      
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      totalDuration += finalDuration;
    }
    
    console.log('üå§Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã:', forecast.map(item => 
      `${item.type} —á–µ—Ä–µ–∑ ${item.timeToOccur} –º–∏–Ω. (–ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ${item.duration} –º–∏–Ω.)`
    ));
    
    return forecast;
  }
  
  /**
   * –†–∞—Å—á–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–≥–æ–¥–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
   * @param {String} season - –¢–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω
   * @param {Object} location - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–∫–∞—Ü–∏–∏
   * @returns {Object} - –ù–æ–≤–æ–µ –ø–æ–≥–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
   */
  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω—è–µ—Ç –ø–æ–≥–æ–¥—É –Ω–∞ –Ω–æ–≤—É—é
   * @param {Object} currentWeather - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã
   * @param {Object} location - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–∫–∞—Ü–∏–∏
   * @returns {Object} - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã
   */
  forceWeatherChange(currentWeather, location, eventName = null) {
    if (!currentWeather) {
      console.error('‚ùå forceWeatherChange: –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω currentWeather');
      return {};
    }
    
    console.log('üå§Ô∏è –í—ã–∑–≤–∞–Ω forceWeatherChange, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—è–µ–º –ø–æ–≥–æ–¥—É', { 
      currentSeason: currentWeather.currentSeason,
      dayCount: currentWeather.dayCount,
      seasonDay: currentWeather.seasonDay,
      —Å–æ–±—ã—Ç–∏–µ: eventName || '–Ω–µ—Ç'
    });
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const season = currentWeather.currentSeason || 'spring';
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –∏–º—è —Å–æ–±—ã—Ç–∏—è, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ–≥–æ 
    if (eventName && this.specialEvents[eventName]) {
      const event = this.specialEvents[eventName];
      console.log(`–ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Å–æ–±–æ–≥–æ —Å–æ–±—ã—Ç–∏—è: ${event.name}`);
      
      // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—É—é –ø–æ–≥–æ–¥—É
      let newWeather = this._calculateWeather(season, location);
      
      // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Å–æ–±—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ –ø–æ–≥–æ–¥–µ, –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
      let attempts = 0;
      while (newWeather.type === currentWeather.currentWeather && attempts < 5) {
        newWeather = this._calculateWeather(season, location);
        attempts++;
      }
      
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ —Å–æ–±—ã—Ç–∏—è - –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
      const processedEffects = event.effects.map(effect => {
        if (effect.modifier !== undefined) {
          // –û–∫—Ä—É–≥–ª—è–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è, –∫—Ä–∞—Ç–Ω–æ–≥–æ 5
          return {
            ...effect,
            modifier: this._roundToMultipleOf5(effect.modifier)
          };
        }
        return effect;
      });
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –∞–∫—Ç–∏–≤–Ω—ã–º —Å–æ–±—ã—Ç–∏–µ–º
      return {
        ...currentWeather,
        currentWeather: newWeather.type,
        weatherIntensity: newWeather.intensity,
        activeEvent: eventName,
        eventRemainingTime: event.duration,
        weatherEffects: processedEffects,
      };
    }
    
    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –±–µ–∑ —Å–æ–±—ã—Ç–∏—è
    let newWeather = this._calculateWeather(season, location);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
    let attempts = 0;
    while (newWeather.type === currentWeather.currentWeather && attempts < 5) {
      newWeather = this._calculateWeather(season, location);
      attempts++;
    }
    
    // –¢–µ–∫—É—â–∏–π —á–∞—Å –∏ –º–∏–Ω—É—Ç–∞ –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const hour = typeof currentWeather.hour === 'number' ? currentWeather.hour : 12;
    const minute = typeof currentWeather.minute === 'number' ? currentWeather.minute : 0;
    
    // –†–∞—Å—á–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö —Å –Ω–∞—á–∞–ª–∞ –¥–Ω—è
    const currentGameMinutes = hour * 60 + minute;
    
    // –ê–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
    const weatherChangeAt = currentGameMinutes + newWeather.duration;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
    const forecast = this._generateForecast(newWeather.type, season, location, 3);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ —Å—É—Ç–æ–∫
    const daytimePeriod = this._getDaytimePeriod(hour);
    
    // –°–æ–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –ø–æ–≥–æ–¥—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
    const weatherEffects = this._collectWeatherEffects(newWeather.type, season, daytimePeriod);
    
    console.log('‚úÖ forceWeatherChange: —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–æ–≤–∞—è –ø–æ–≥–æ–¥–∞', {
      —Ç–∏–ø: newWeather.type,
      –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: newWeather.intensity,
      –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: newWeather.duration,
      –≤—Ä–µ–º—è_—Å–ª–µ–¥—É—é—â–µ–π_—Å–º–µ–Ω—ã: weatherChangeAt
    });
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã
    return {
      ...currentWeather,
      currentWeather: newWeather.type,
      weatherIntensity: newWeather.intensity,
      weatherChangeAt: weatherChangeAt,
      nextWeatherChange: newWeather.duration,
      weatherEffects,
      forecast
    };
  }
  
  _calculateWeather(season, location) {
    // –ö–æ–ø–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
    const probabilities = {};
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    for (const [type, info] of Object.entries(this.weatherTypes)) {
      probabilities[type] = info.baseChance;
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–µ–∑–æ–Ω–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
    const seasonData = this.seasons[season];
    if (seasonData) {
      for (const [type, modifier] of Object.entries(seasonData.weatherModifiers)) {
        probabilities[type] *= modifier;
      }
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ª–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (location?.weatherModifiers) {
      for (const [type, modifier] of Object.entries(location.weatherModifiers)) {
        probabilities[type] *= modifier;
      }
    }
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏, —á—Ç–æ–±—ã —Å—É–º–º–∞ –±—ã–ª–∞ —Ä–∞–≤–Ω–∞ 1
    const totalProbability = Object.values(probabilities).reduce((sum, p) => sum + p, 0);
    for (const type in probabilities) {
      probabilities[type] /= totalProbability;
    }
    
    // –í—ã–±–∏—Ä–∞–µ–º –ø–æ–≥–æ–¥—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π
    const random = Math.random();
    let cumulative = 0;
    
    for (const [type, probability] of Object.entries(probabilities)) {
      cumulative += probability;
      
      if (random <= cumulative) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å (–æ—Ç 0.5 –¥–æ 1.5)
        const intensity = 0.5 + Math.random();
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–æ—Ç 300 –¥–æ 600 –º–∏–Ω—É—Ç –∏–≥—Ä–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
        const baseDuration = 300 + Math.floor(Math.random() * 300);
        
        // –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–æ–≥–æ–¥—ã
        const durationModifiers = {
          clear: 1.5, // –Ø—Å–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª–∏—Ç—Å—è –¥–æ–ª—å—à–µ
          cloudy: 1.2,
          rain: 0.8,
          thunderstorm: 0.7, // –ì—Ä–æ–∑—ã –æ–±—ã—á–Ω–æ –∫–æ—Ä–æ—á–µ
          fog: 1.0,
          snow: 1.1
        };
        
        // –û–∫—Ä—É–≥–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–æ –±–ª–∏–∂–∞–π—à–∏—Ö 10 –º–∏–Ω—É—Ç
        let duration = Math.floor(baseDuration * (durationModifiers[type] || 1.0));
        
        // –í–ê–ñ–ù–û: –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –º–∏–Ω–∏–º—É–º 300 –º–∏–Ω—É—Ç –∏–≥—Ä–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        duration = Math.max(300, Math.ceil(duration / 10) * 10);
        
        return {
          type,
          intensity,
          duration
        };
      }
    }
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —è—Å–Ω—É—é –ø–æ–≥–æ–¥—É
    return {
      type: 'clear',
      intensity: 1.0,
      duration: 120
    };
  }
  
  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Ä–µ–º—è –∏ –ø–æ–≥–æ–¥—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—à–µ–¥—à–∏—Ö –º–∏–Ω—É—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
   * @param {Object} currentWeather - –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã
   * @param {Object} location - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ–∫–∞—Ü–∏–∏
   * @param {Object} worldTime - –û–±—ä–µ–∫—Ç —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –∏–∑ state.world.time
   * @param {Number} realMinutesPassed - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—à–µ–¥—à–∏—Ö –º–∏–Ω—É—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
   * @returns {Object} - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã
   */
  updateTime(currentWeather, location, worldTime, realMinutesPassed = 1) {
    if (!currentWeather) {
      console.error('‚ùå updateTime: –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω currentWeather');
      return {};
    }
    
    console.log('üïí –í—ã–∑–≤–∞–Ω updateTime:', { 
      worldTime,
      realMinutesPassed,
      –º–Ω–æ–∂–∏—Ç–µ–ª—å: WeatherService.TIME_MULTIPLIER
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ worldTime (–∫–∞–∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã)
    let hour, minute, dayCount, currentSeason;
    
    if (worldTime && typeof worldTime === 'object') {
      hour = typeof worldTime.hour === 'number' ? worldTime.hour : currentWeather.hour || 0;
      minute = typeof worldTime.minute === 'number' ? worldTime.minute : currentWeather.minute || 0;
      dayCount = typeof worldTime.day === 'number' ? worldTime.day : currentWeather.dayCount || 1;
      currentSeason = worldTime.season || currentWeather.currentSeason || 'spring';
      
      console.log('üïí –ò—Å–ø–æ–ª—å–∑—É—é worldTime –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã:', {
        hour, minute, dayCount, currentSeason
      });
    } else {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ worldTime –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
      hour = currentWeather.hour || 0;
      minute = currentWeather.minute || 0;
      dayCount = currentWeather.dayCount || 1;
      currentSeason = currentWeather.currentSeason || 'spring';
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö
    const absoluteMinutes = hour * 60 + minute;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    // weatherChangeAt —Å–æ–¥–µ—Ä–∂–∏—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö (—Å –Ω–∞—á–∞–ª–∞ –¥–Ω—è), –∫–æ–≥–¥–∞ –¥–æ–ª–∂–Ω–∞ —Å–º–µ–Ω–∏—Ç—å—Å—è –ø–æ–≥–æ–¥–∞
    const weatherChangeAt = currentWeather.weatherChangeAt || (absoluteMinutes + 60); // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —á–µ—Ä–µ–∑ —á–∞—Å
    
    console.log('‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:', {
      —Ç–µ–∫—É—â–µ–µ_–∞–±—Å–æ–ª—é—Ç–Ω–æ–µ_–≤—Ä–µ–º—è: absoluteMinutes,
      —Å–º–µ–Ω–∞_–ø–æ–≥–æ–¥—ã_–≤: weatherChangeAt,
      —Ä–∞–∑–Ω–∏—Ü–∞: weatherChangeAt - absoluteMinutes,
      —Ç–µ–∫—É—â–∞—è_–ø–æ–≥–æ–¥–∞: currentWeather.currentWeather
    });
    
    // –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –∏–∑–º–µ–Ω—è—Ç—å –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é
    let updatedState = { ...currentWeather };
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ worldTime (–∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã)
    updatedState.hour = hour;
    updatedState.minute = minute;
    updatedState.dayCount = dayCount;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã —Å–µ–∑–æ–Ω–∞ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –¥–Ω—è —Å–µ–∑–æ–Ω–∞ 
    const previousSeasonDay = currentWeather.seasonDay || 1;
    
    // –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º, —á—Ç–æ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É —Å–µ–∑–æ–Ω–∞
    if (dayCount > this.SEASON_LENGTH) {
      // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–º–µ—Ä –¥–Ω—è –≤ –Ω–æ–≤–æ–º —Å–µ–∑–æ–Ω–µ
      const newSeasonDay = ((dayCount - 1) % this.SEASON_LENGTH) + 1;
      
      // –í—ã—á–∏—Å–ª—è–µ–º, –∫–∞–∫–æ–π —Å–µ–∑–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–µ–π—á–∞—Å, —É—á–∏—Ç—ã–≤–∞—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä —Å–µ–∑–æ–Ω–æ–≤
      const seasonIndex = Math.floor((dayCount - 1) / this.SEASON_LENGTH) % this.SEASON_ORDER.length;
      const calculatedSeason = this.SEASON_ORDER[seasonIndex];
      
      console.log('üåà –°–ú–ï–ù–ê –°–ï–ó–û–ù–ê:', {
        –ø—Ä–æ—à–ª—ã–π_–¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: previousSeasonDay,
        –Ω–æ–≤—ã–π_–¥–µ–Ω—å_—Å–µ–∑–æ–Ω–∞: newSeasonDay,
        —Ç–µ–∫—É—â–∏–π_–º–∏—Ä–æ–≤–æ–π_–¥–µ–Ω—å: dayCount,
        –ø—Ä–æ—à–ª—ã–π_—Å–µ–∑–æ–Ω: currentSeason,
        –Ω–æ–≤—ã–π_—Å–µ–∑–æ–Ω: calculatedSeason,
        –¥–ª–∏–Ω–∞_—Å–µ–∑–æ–Ω–∞: this.SEASON_LENGTH
      });
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–∑–æ–Ω –∏ –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
      updatedState.currentSeason = calculatedSeason;
      updatedState.seasonDay = newSeasonDay;
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ø–æ–≥–æ–¥—É –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞
      let newSeasonWeather = this._calculateWeather(calculatedSeason, location);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞
      updatedState.currentWeather = newSeasonWeather.type;
      updatedState.weatherIntensity = newSeasonWeather.intensity;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤–æ–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
      updatedState.weatherChangeAt = absoluteMinutes + newSeasonWeather.duration;
      updatedState.nextWeatherChange = newSeasonWeather.duration;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞
      updatedState.forecast = this._generateForecast(newSeasonWeather.type, calculatedSeason, location, 3);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –ø–æ–≥–æ–¥—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞
      const daytimePeriod = this._getDaytimePeriod(hour);
      updatedState.weatherEffects = this._collectWeatherEffects(newSeasonWeather.type, calculatedSeason, daytimePeriod);
    } else {
      // –ï—Å–ª–∏ –¥–µ–Ω—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–ª–∏–Ω—ã —Å–µ–∑–æ–Ω–∞, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–µ–Ω—å —Å–µ–∑–æ–Ω–∞
      updatedState.seasonDay = dayCount;
      updatedState.currentSeason = currentSeason;
    }
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–≤–Ω–æ –ª–∏ nextWeatherChange –Ω—É–ª—é –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    if (currentWeather.nextWeatherChange === 0 || absoluteMinutes >= weatherChangeAt) {
      console.log('üå¶Ô∏è –í—Ä–µ–º—è —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã –Ω–∞—Å—Ç—É–ø–∏–ª–æ!', {
        —Ç–µ–∫—É—â–µ–µ_–≤—Ä–µ–º—è: absoluteMinutes,
        –≤—Ä–µ–º—è_—Å–º–µ–Ω—ã: weatherChangeAt,
        —Å—Ç–∞—Ä–∞—è_–ø–æ–≥–æ–¥–∞: updatedState.currentWeather,
        —Å—á–µ—Ç—á–∏–∫_next_weather_change: currentWeather.nextWeatherChange,
        –ø—Ä–∏—á–∏–Ω–∞: currentWeather.nextWeatherChange === 0 ? "nextWeatherChange = 0" : "absoluteMinutes >= weatherChangeAt"
      });
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ø–æ–≥–æ–¥—É, –æ—Ç–ª–∏—á–Ω—É—é –æ—Ç —Ç–µ–∫—É—â–µ–π
      let newWeather = this._calculateWeather(currentSeason, location);
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
      let attempts = 0;
      while (newWeather.type === updatedState.currentWeather && attempts < 5) {
        newWeather = this._calculateWeather(currentSeason, location);
        attempts++;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–≥–æ–¥—É
      updatedState.currentWeather = newWeather.type;
      updatedState.weatherIntensity = newWeather.intensity;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤–æ–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
      updatedState.weatherChangeAt = absoluteMinutes + newWeather.duration;
      
      // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      updatedState.nextWeatherChange = newWeather.duration;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑
      updatedState.forecast = this._generateForecast(newWeather.type, currentSeason, location, 3);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –ø–æ–≥–æ–¥—ã
      const daytimePeriod = this._getDaytimePeriod(hour);
      updatedState.weatherEffects = this._collectWeatherEffects(newWeather.type, currentSeason, daytimePeriod);
      
      console.log('üå§Ô∏è –ü–æ–≥–æ–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∞:', {
        –Ω–æ–≤–∞—è_–ø–æ–≥–æ–¥–∞: updatedState.currentWeather,
        –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: updatedState.weatherIntensity,
        —Å–ª–µ–¥—É—é—â–∞—è_—Å–º–µ–Ω–∞_—á–µ—Ä–µ–∑: newWeather.duration,
        –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ_–≤—Ä–µ–º—è_—Å–º–µ–Ω—ã: updatedState.weatherChangeAt
      });
    } else {
      // –ü—Ä–æ—Å—Ç–æ —É–º–µ–Ω—å—à–∞–µ–º –≤—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
      const remainingMinutes = weatherChangeAt - absoluteMinutes;
      
      // –í–ê–ñ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ nextWeatherChange –≤—Å–µ–≥–¥–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
      // –∏–ª–∏ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 0, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
      updatedState.nextWeatherChange = Math.max(0, remainingMinutes);
      
      console.log('‚è≥ –î–æ —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã –æ—Å—Ç–∞–ª–æ—Å—å:', updatedState.nextWeatherChange, '–º–∏–Ω.', {
        weatherChangeAt,
        absoluteMinutes,
        —Ä–∞–∑–Ω–∏—Ü–∞: weatherChangeAt - absoluteMinutes
      });
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ï—Å–ª–∏ –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è —Ä–∞–≤–Ω–æ 0, –ù–ï–ú–ï–î–õ–ï–ù–ù–û –º–µ–Ω—è–µ–º –ø–æ–≥–æ–¥—É, –Ω–µ –∂–¥–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ü–∏–∫–ª–∞
      if (updatedState.nextWeatherChange === 0) {
        console.log('‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω —Å—á–µ—Ç—á–∏–∫ —Å 0 –º–∏–Ω—É—Ç! –í—ã–ø–æ–ª–Ω—è–µ–º –ù–ï–ú–ï–î–õ–ï–ù–ù–£–Æ —Å–º–µ–Ω—É –ø–æ–≥–æ–¥—ã!');
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ø–æ–≥–æ–¥—É, –æ—Ç–ª–∏—á–Ω—É—é –æ—Ç —Ç–µ–∫—É—â–µ–π
        let newWeather = this._calculateWeather(currentSeason, location);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã
        let attempts = 0;
        while (newWeather.type === updatedState.currentWeather && attempts < 5) {
          newWeather = this._calculateWeather(currentSeason, location);
          attempts++;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–≥–æ–¥—É
        updatedState.currentWeather = newWeather.type;
        updatedState.weatherIntensity = newWeather.intensity;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤–æ–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
        updatedState.weatherChangeAt = absoluteMinutes + newWeather.duration;
        
        // –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        updatedState.nextWeatherChange = newWeather.duration;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑
        updatedState.forecast = this._generateForecast(newWeather.type, currentSeason, location, 3);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –ø–æ–≥–æ–¥—ã
        const daytimePeriod = this._getDaytimePeriod(hour);
        updatedState.weatherEffects = this._collectWeatherEffects(newWeather.type, currentSeason, daytimePeriod);
        
        console.log('üå§Ô∏è –ü–æ–≥–æ–¥–∞ –ù–ï–ú–ï–î–õ–ï–ù–ù–û –∏–∑–º–µ–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –Ω—É–ª–µ–≤–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞:', {
          –Ω–æ–≤–∞—è_–ø–æ–≥–æ–¥–∞: updatedState.currentWeather,
          –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: updatedState.weatherIntensity,
          —Å–ª–µ–¥—É—é—â–∞—è_—Å–º–µ–Ω–∞_—á–µ—Ä–µ–∑: newWeather.duration,
          –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ_–≤—Ä–µ–º—è_—Å–º–µ–Ω—ã: updatedState.weatherChangeAt
        });
      }
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º isDayTime –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Å–∞
    updatedState.isDayTime = hour >= 6 && hour < 20;
    
    return updatedState;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –ø–æ–≥–æ–¥—ã
module.exports = WeatherService;


// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
module.exports.updateMultiplier = WeatherService.updateMultiplier;