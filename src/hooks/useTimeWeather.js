import { useState, useEffect, useRef } from 'react';
import { useGame } from '../context/GameContext';

/**
 * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ö—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–æ–≥–æ–¥–µ
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–æ–≥–æ–¥–µ
 */
function useTimeWeather() {
  const { state } = useGame();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
  const [updating, setUpdating] = useState(false);
  const [lastTime, setLastTime] = useState(null);
  const [lastWeather, setLastWeather] = useState(null);
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const weather = state.weather || {};
  const worldTime = state.world?.time || {};
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û –¥–∞–Ω–Ω—ã–µ –∏–∑ worldTime –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–Ω—è
  // –í–∞–∂–Ω–æ: –µ—Å–ª–∏ –≤—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ –≤ worldTime, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const hour = worldTime.hour !== undefined ? worldTime.hour : 12; // –î–µ—Ñ–æ–ª—Ç - –ø–æ–ª–¥–µ–Ω—å
  const minute = worldTime.minute !== undefined ? worldTime.minute : 0; // –î–µ—Ñ–æ–ª—Ç - 0 –º–∏–Ω—É—Ç
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
  const formattedTime = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  const isDayTime = hour >= 6 && hour < 20;
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Å—É—Ç–æ–∫, –≤—ã—á–∏—Å–ª—è–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ hour (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º weather.daytimePeriod)
  const daytimePeriod = 
    (hour >= 5 && hour < 7) ? 'dawn' :
    (hour >= 7 && hour < 11) ? 'morning' :
    (hour >= 11 && hour < 14) ? 'noon' :
    (hour >= 14 && hour < 17) ? 'afternoon' :
    (hour >= 17 && hour < 20) ? 'evening' :
    (hour >= 20 && hour < 23) ? 'night' : 'deepNight';
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É (—Ç—É—Ç –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å weather, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ, –∞ –Ω–µ –≤—Ä–µ–º–µ–Ω–∏)
  const currentWeather = weather.currentWeather || weather.weatherType || 'clear';
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –ø–æ–≥–æ–¥—ã
  const weatherIntensity = weather.weatherIntensity || 1.0;
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
  const weatherEffects = weather.weatherEffects || null;
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π —Å–º–µ–Ω—ã –ø–æ–≥–æ–¥—ã
  const nextWeatherChange = weather.nextWeatherChange || 60;
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–∑–æ–Ω–µ
  const seasonDay = weather.seasonDay || worldTime.seasonDay || 1;
  const seasonLength = weather.seasonLength || worldTime.seasonLength || 30;
  
  // –î–∞–Ω–Ω—ã–µ –æ —Å–æ–±—ã—Ç–∏—è—Ö
  const activeEvent = weather.activeEvent || null;
  const eventRemainingTime = weather.eventRemainingTime || 0;
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å –¢–û–õ–¨–ö–û –∏–∑ worldTime - —ç—Ç–æ –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã –æ –¥–Ω–µ
  const dayCount = worldTime.day !== undefined ? worldTime.day : 1;
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–µ–∑–æ–Ω –¢–û–õ–¨–ö–û –∏–∑ worldTime
  const season = worldTime.season || 'spring';
  
  // –û–¢–ö–õ–Æ–ß–ê–ï–ú –ü–†–û–í–ï–†–ö–£: state.world.time - —ç—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã
  // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ worldTime - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–∞–∂–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ 
  /*
  useEffect(() => {
    if (weather.hour !== undefined && worldTime.hour !== undefined && weather.hour !== worldTime.hour) {
      console.warn('‚ö†Ô∏è –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—Ä–µ–º–µ–Ω–∏:', {
        worldTime: `${worldTime.hour}:${worldTime.minute}`,
        weather: `${weather.hour}:${weather.minute}`,
        dayWorld: worldTime.day,
        dayWeather: weather.dayCount
      });
    }
  }, [weather.hour, worldTime.hour, weather.minute, worldTime.minute, weather.dayCount, worldTime.day]);
  */
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useRef –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
  const prevStateRef = useRef({ hour, minute, worldTime });
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  const [forceUpdateCounter, setForceUpdateCounter] = useState(0);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä—É—á–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–∏
  useEffect(() => {
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
    const handleManualTimeUpdate = () => {
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      setForceUpdateCounter(prev => prev + 1);
      console.log('üîÑ useTimeWeather: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ manual_time_update, –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã');
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
    window.addEventListener('manual_time_update', handleManualTimeUpdate);
    
    // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      window.removeEventListener('manual_time_update', handleManualTimeUpdate);
    };
  }, []);
  
  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–æ–≥–æ–¥—ã
  useEffect(() => {
    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏
    const prevState = prevStateRef.current;
    const hasTimeChanged = prevState.hour !== hour || prevState.minute !== minute;
    
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–Ω—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –ø–æ–ª–Ω–æ—á—å
    // –∏ –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å—á—ë—Ç—á–∏–∫–∞ –¥–Ω–µ–π
    const prevDay = prevState.worldTime?.day !== undefined ? Number(prevState.worldTime.day) : 1;
    const currentDay = worldTime.day !== undefined ? Number(worldTime.day) : 1;
    const hasDayChanged = currentDay !== prevDay;
    
    // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ª–æ–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–Ω—è
    if (hasDayChanged) {
      console.log('üìÖüìÖ useTimeWeather: –û–ë–ù–ê–†–£–ñ–ï–ù–û –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–ù–Ø:', {
        prevDay,
        currentDay,
        diff: currentDay - prevDay,
        worldTime,
        prevWorldTime: prevState.worldTime
      });
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É
    const currentWeatherValue = weather.currentWeather || weather.weatherType || 'clear';
    
    // –ï—Å–ª–∏ –≤—Ä–µ–º—è –∏–ª–∏ –¥–µ–Ω—å –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (hasTimeChanged || hasDayChanged) {
      setForceUpdateCounter(prev => prev + 1);
      
      // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('‚è∞ useTimeWeather: –ò–ó–ú–ï–ù–ï–ù–ò–ï –í–†–ï–ú–ï–ù–ò –∏–ª–∏ –î–ù–Ø!', {
        oldHour: prevState.hour,
        newHour: hour,
        oldMinute: prevState.minute,
        newMinute: minute,
        oldDay: prevState.worldTime?.day,
        newDay: worldTime.day,
        forceUpdateCounter: forceUpdateCounter + 1
      });
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –æ–Ω–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (lastTime !== null && (lastTime !== formattedTime || lastWeather !== currentWeatherValue)) {
      setUpdating(true);
      setTimeout(() => setUpdating(false), 500);
      
      // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
      console.log('üîÑ useTimeWeather –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è:', {
        oldTime: lastTime,
        newTime: formattedTime,
        oldWeather: lastWeather,
        newWeather: currentWeatherValue,
        day: dayCount,
        worldTime,
        forceUpdateCounter
      });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    prevStateRef.current = { hour, minute, worldTime };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    setLastTime(formattedTime);
    setLastWeather(currentWeatherValue);
  }, [hour, minute, formattedTime, weather, worldTime, dayCount, lastTime, lastWeather, forceUpdateCounter]);
  
  // –í–∫–ª—é—á–∞–µ–º forceUpdateCounter –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç, —á—Ç–æ–±—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª–∏ –Ω–∞ –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
  return {
    hour,
    minute,
    formattedTime,
    isDayTime,
    daytimePeriod,
    currentWeather,
    weatherIntensity,
    weatherEffects,
    dayCount,
    season,
    seasonDay,
    seasonLength,
    activeEvent,
    eventRemainingTime,
    nextWeatherChange,
    updating,
    worldTime,
    weather,
    forceUpdateCounter // –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  };
}

export default useTimeWeather;
