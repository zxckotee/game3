import React from 'react';
import styles from './ActivityList.module.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 * @param {Object[]} activities - –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
 * @param {Object} selectedActivity - –í—ã–±—Ä–∞–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
 * @param {Function} onSelectActivity - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
const ActivityList = ({ activities = [], selectedActivity, onSelectActivity }) => {
  // Ensure activities is always an array
  const safeActivities = Array.isArray(activities) ? activities : [];
  // –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  const getActivityTypeIcon = (type) => {
    switch (type) {
      case 'raid':
        return 'üè∞'; // –†–µ–π–¥
      case 'hunt':
        return 'üèπ'; // –û—Ö–æ—Ç–∞
      case 'expedition':
        return 'üß≠'; // –≠–∫—Å–ø–µ–¥–∏—Ü–∏—è
      case 'tournament':
        return 'üèÜ'; // –¢—É—Ä–Ω–∏—Ä
      case 'caravan':
        return 'üê™'; // –ö–∞—Ä–∞–≤–∞–Ω
      case 'tribulation':
        return '‚ö°'; // –ò—Å–ø—ã—Ç–∞–Ω–∏–µ —Å—Ç–∏—Ö–∏–∏
      case 'craft':
        return '‚öíÔ∏è'; // –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
      default:
        return 'üìú'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    }
  };
  
  // –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  const getActivityTypeName = (type) => {
    switch (type) {
      case 'raid':
        return '–†–µ–π–¥';
      case 'hunt':
        return '–û—Ö–æ—Ç–∞';
      case 'expedition':
        return '–≠–∫—Å–ø–µ–¥–∏—Ü–∏—è';
      case 'tournament':
        return '–¢—É—Ä–Ω–∏—Ä';
      case 'caravan':
        return '–ö–∞—Ä–∞–≤–∞–Ω';
      case 'tribulation':
        return '–ò—Å–ø—ã—Ç–∞–Ω–∏–µ —Å—Ç–∏—Ö–∏–∏';
      case 'craft':
        return '–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞';
      default:
        return '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å';
    }
  };
  
  // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const getDifficultyText = (difficulty) => {
    switch (difficulty) {
      case 'easy':
        return '–õ–µ–≥–∫–∞—è';
      case 'medium':
        return '–°—Ä–µ–¥–Ω—è—è';
      case 'hard':
        return '–¢—è–∂–µ–ª–∞—è';
      case 'extreme':
        return '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è';
      case 'legendary':
        return '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è';
      default:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å';
    }
  };
  
  // –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞—Å—Å –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const getDifficultyClass = (difficulty) => {
    switch (difficulty) {
      case 'easy':
        return styles.difficultyEasy;
      case 'medium':
        return styles.difficultyMedium;
      case 'hard':
        return styles.difficultyHard;
      case 'extreme':
        return styles.difficultyExtreme;
      case 'legendary':
        return styles.difficultyLegendary;
      default:
        return '';
    }
  };
  
  return (
    <div className={styles.activityList}>
      <h3 className={styles.title}>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</h3>
      
      {safeActivities.length === 0 ? (
        <div className={styles.emptyMessage}>
          –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –¥–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã.
        </div>
      ) : (
        <ul className={styles.list}>
          {safeActivities.map(activity => (
            <li 
              key={activity.id} 
              className={`${styles.activityItem} ${selectedActivity?.id === activity.id ? styles.selected : ''}`}
              onClick={() => onSelectActivity(activity)}
            >
              <div className={styles.header}>
                <div className={styles.nameContainer}>
                  <span className={styles.typeIcon}>
                    {getActivityTypeIcon(activity.type)}
                  </span>
                  <h4 className={styles.name}>{activity.name}</h4>
                </div>
                <span className={`${styles.difficulty} ${getDifficultyClass(activity.difficulty)}`}>
                  {getDifficultyText(activity.difficulty)}
                </span>
              </div>
              
              <div className={styles.typeName}>
                {getActivityTypeName(activity.type)}
              </div>
              
              <div className={styles.infoRow}>
                <span className={styles.label}>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</span>
                <span className={styles.value}>
                  {activity.minParticipants || 1}-{activity.maxParticipants || 5}
                </span>
              </div>
              
              <div className={styles.infoRow}>
                <span className={styles.label}>–£—Ä–æ–≤–µ–Ω—å:</span>
                <span className={styles.value}>
                  {activity.minCultivationLevel || 1}+ (—Ä–µ–∫. {activity.recommendedCultivationLevel || activity.minCultivationLevel || 1}+)
                </span>
              </div>
              
              <div className={styles.infoRow}>
                <span className={styles.label}>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</span>
                <span className={styles.value}>
                  {activity.duration || 30} –º–∏–Ω.
                </span>
              </div>
              
              {activity.location && (
                <div className={styles.location}>
                  <span className={styles.locationIcon}>üìç</span>
                  <span className={styles.locationName}>{activity.location}</span>
                </div>
              )}
            </li>
          ))}
        </ul>
      )}
    </div>
  );
};

export default ActivityList;
