import React from 'react';
import styles from './GroupListItem.module.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø
 * @param {Object} group - –î–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã
 * @param {boolean} isSelected - –í—ã–±—Ä–∞–Ω–∞ –ª–∏ –≥—Ä—É–ø–ø–∞
 * @param {Function} onClick - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
 */
const GroupListItem = ({ group, isSelected, onClick }) => {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ
  const getUserRole = (memberId) => {
    const member = group.members.find(m => m.userId === memberId);
    return member ? member.role : null;
  };
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const getRoleIcon = (role) => {
    switch (role) {
      case 'leader':
        return 'üëë'; // –õ–∏–¥–µ—Ä
      case 'officer':
        return '‚öîÔ∏è'; // –û—Ñ–∏—Ü–µ—Ä
      default:
        return 'üë§'; // –û–±—ã—á–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
    }
  };
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
  const memberCount = group.members ? group.members.length : 0;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –≥—Ä—É–ø–ø—ã —Ç–µ–∫—É—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
  const hasActiveActivity = group.activityInstances && 
    group.activityInstances.some(instance => 
      instance.status === 'preparing' || instance.status === 'in_progress');
  
  return (
    <li 
      className={`${styles.groupItem} ${isSelected ? styles.selected : ''}`}
      onClick={onClick}
    >
      <div className={styles.header}>
        <h4 className={styles.groupName}>{group.name}</h4>
        {hasActiveActivity && (
          <div className={styles.activityBadge}>
            –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          </div>
        )}
      </div>
      
      <div className={styles.infoRow}>
        <span className={styles.label}>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</span>
        <span className={styles.value}>{memberCount}/{group.maxMembers}</span>
      </div>
      
      <div className={styles.infoRow}>
        <span className={styles.label}>–¢–∏–ø:</span>
        <span className={styles.value}>
          {group.isPrivate ? '–ó–∞–∫—Ä—ã—Ç–∞—è' : '–û—Ç–∫—Ä—ã—Ç–∞—è'}
        </span>
      </div>
      
      <div className={styles.infoRow}>
        <span className={styles.label}>–õ–∏–¥–µ—Ä:</span>
        <span className={styles.value}>
          {group.leader ? group.leader.username : '–ù–µ —É–∫–∞–∑–∞–Ω'}
        </span>
      </div>
      
      {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å */}
      {group.activityInstances && group.activityInstances.length > 0 && (
        <div className={styles.activityInfo}>
          <div className={styles.activityName}>
            {group.activityInstances[0].activityType?.name || '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'}
          </div>
          <div className={styles.activityStatus}>
            {group.activityInstances[0].status === 'in_progress' ? '–í –ø—Ä–æ—Ü–µ—Å—Å–µ' : 
             group.activityInstances[0].status === 'preparing' ? '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞' :
             group.activityInstances[0].status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω–∞' :
             group.activityInstances[0].status === 'failed' ? '–ü—Ä–æ–≤–∞–ª–µ–Ω–∞' : '–û—Ç–º–µ–Ω–µ–Ω–∞'}
          </div>
        </div>
      )}
    </li>
  );
};

export default GroupListItem;
