import React, { useState, useEffect, useContext } from 'react';
import styled from 'styled-components';
import TimeDebugPanel from './TimeDebugPanel';
import { GameContext } from '../../context/GameContext';
import { getCharacterProfile, updateCurrency as updateCurrencyAPI } from '../../services/character-profile-service-api';
import '../../utils/directConsoleCommands'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –∫–æ–Ω—Å–æ–ª–∏

// –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏
const DebugButtonContainer = styled.div`
  position: fixed;
  bottom: 10px;
  right: 10px;
  z-index: 9999;
`;

// –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏
const DebugButton = styled.button`
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: #333;
  color: #ddd;
  border: 1px solid #555;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0,0,0,0.3);
  transition: all 0.2s;
  opacity: 0.7;
  
  &:hover {
    opacity: 1;
    transform: scale(1.05);
  }
`;

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –æ—Ç–ª–∞–¥–∫–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–≥—Ä—ã
 * @param {Object} props - –°–≤–æ–π—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 * @param {boolean} props.enabled - –§–ª–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏
 */
function DebugTools({ enabled = false }) {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  const [showTools, setShowTools] = useState(false);
  // –§–ª–∞–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ª–∞–¥–∫–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  const [keyActivated, setKeyActivated] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∏–≥—Ä—ã
  const gameContext = useContext(GameContext);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
  const toggleTools = () => {
    setShowTools(prev => !prev);
    
    // –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö –æ—Ç–ª–∞–¥–∫–∏
    if (!showTools) {
      console.info('üõ†Ô∏è –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã:');
      console.info('‚Ä¢ getGameTime() - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–≤–æ–º –≤—Ä–µ–º–µ–Ω–∏');
      console.info('‚Ä¢ showTimeHelp() - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –æ—Ç–ª–∞–¥–∫–∏ –≤—Ä–µ–º–µ–Ω–∏');
      console.info('‚Ä¢ add1000Currency() - –¥–æ–±–∞–≤–∏—Ç—å 1000 –µ–¥–∏–Ω–∏—Ü –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç—ã');
      console.info('‚Ä¢ –¥–∞—Ç—å1000–†–µ—Å—É—Ä—Å–æ–≤() - —Ç–æ –∂–µ —Å–∞–º–æ–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º');
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–≥—Ä—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ
    if (typeof window !== 'undefined' && gameContext) {
      window.__GAME_CONTEXT__ = gameContext;
      window.__GAME_STATE__ = gameContext.state;
      window.__GAME_DISPATCH__ = gameContext.actions.dispatch;
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è 1000 –µ–¥–∏–Ω–∏—Ü –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç—ã
  const addCurrency = async () => {
    if (!gameContext || !gameContext.state || !gameContext.state.player || !gameContext.state.player.id) {
      console.error('[DebugTools] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ ID –∏–≥—Ä–æ–∫–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.');
      gameContext.actions.addNotification({ message: '–û—à–∏–±–∫–∞: ID –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.', type: 'error' });
      return;
    }
    const userId = gameContext.state.player.id;

    try {
      console.log(`[DebugTools] –ó–∞–ø—Ä–æ—Å —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è userId: ${userId}`);
      const profile = await getCharacterProfile(userId);
      
      if (!profile || !profile.currency) {
        console.error('[DebugTools] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –≤–∞–ª—é—Ç—É.');
        gameContext.actions.addNotification({ message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã.', type: 'error' });
        return;
      }
      
      const currentCurrency = profile.currency;
      console.log('[DebugTools] –¢–µ–∫—É—â–∞—è –≤–∞–ª—é—Ç–∞:', currentCurrency);

      const newCurrencyData = {
        copper: (currentCurrency.copper || 0) + 1000,
        silver: (currentCurrency.silver || 0) + 1000,
        gold: (currentCurrency.gold || 0) + 1000,
        spiritStones: (currentCurrency.spiritStones || 0) + 1000
      };
      
      console.log(`[DebugTools] –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –≤–∞–ª—é—Ç—É –¥–ª—è userId: ${userId} –Ω–∞`, newCurrencyData);
      await updateCurrencyAPI(userId, newCurrencyData);
      console.log('[DebugTools] –í–∞–ª—é—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ API.');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è (–≤–∫–ª—é—á–∞—è –≤–∞–ª—é—Ç—É) –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
      if (gameContext.actions.loadInventoryData) {
        await gameContext.actions.loadInventoryData(userId);
        console.log('[DebugTools] –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ.');
      } else {
        console.warn('[DebugTools] gameContext.actions.loadInventoryData –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.');
      }
      
      gameContext.actions.addNotification({ message: '–î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ 1000 –µ–¥–∏–Ω–∏—Ü –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç—ã.', type: 'success' });
      console.log('[DebugTools] –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ 1000 –µ–¥–∏–Ω–∏—Ü –∫–∞–∂–¥–æ–π –≤–∞–ª—é—Ç—ã! –ù–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ API):', newCurrencyData);

    } catch (error) {
      console.error('[DebugTools] –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–∞–ª—é—Ç—ã:', error);
      gameContext.actions.addNotification({ message: `–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã: ${error.message}`, type: 'error' });
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏
  useEffect(() => {
    if (!enabled) return;
    
    const handleKeyDown = (e) => {
      // –ö–æ–º–±–∏–Ω–∞—Ü–∏—è Ctrl+Shift+D –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ—Ç–ª–∞–¥–∫–∏
      if (e.ctrlKey && e.shiftKey && e.key === 'D') {
        e.preventDefault();
        setKeyActivated(true);
        toggleTools();
      }
    };
    
    window.addEventListener('keydown', handleKeyDown);
    return () => window.removeEventListener('keydown', handleKeyDown);
  }, [enabled, toggleTools]);
  
  // –ï—Å–ª–∏ –æ—Ç–ª–∞–¥–∫–∞ –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞, –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∏—á–µ–≥–æ
  if (!enabled && !keyActivated) return null;
  
  return (
    <>
      {/* –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
      <DebugButtonContainer>
        <DebugButton onClick={toggleTools} title="–û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (Ctrl+Shift+D)">
          üõ†Ô∏è
        </DebugButton>
      </DebugButtonContainer>
      
      {/* –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ (–æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏) */}
      {showTools && (
        <div style={{ position: 'fixed', top: '10px', right: '10px', zIndex: 9998, maxWidth: '350px' }}>
          <TimeDebugPanel onClose={() => setShowTools(false)} />
          
          {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã */}
          <div style={{ 
            marginTop: '10px', 
            padding: '10px', 
            backgroundColor: '#333', 
            borderRadius: '5px',
            boxShadow: '0 2px 5px rgba(0,0,0,0.3)',
            color: '#fff' 
          }}>
            <h3 style={{ margin: '0 0 8px 0', fontSize: '14px' }}>–í–∞–ª—é—Ç–∞</h3>
            <button 
              onClick={addCurrency}
              style={{
                padding: '5px 10px',
                backgroundColor: '#d4af37',
                color: '#000',
                border: 'none',
                borderRadius: '3px',
                cursor: 'pointer',
                fontWeight: 'bold',
                fontSize: '12px'
              }}
            >
              –î–æ–±–∞–≤–∏—Ç—å 1000 –≤—Å–µ—Ö –≤–∞–ª—é—Ç
            </button>
          </div>
        </div>
      )}
    </>
  );
}

export default DebugTools;
