services:
  # PostgreSQL 16 база данных
  postgres:
    image: postgres:16
    container_name: immortal-path-postgres
    environment:
      POSTGRES_DB: game
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"  # Доступ с хоста для psql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d game"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # Приложение (React + Express)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: immortal-path-app
    ports:
      - "80:80"      # React dev server
      - "3001:3001"  # Express API server
    volumes:
      # Монтируем исходный код для hot reload
      - .:/app
      # Исключаем node_modules для производительности
      - /app/node_modules
      # Монтируем конфигурационные файлы
      - ./package.json:/app/package.json:ro
      - ./craco.config.js:/app/craco.config.js:ro
      - ./.env:/app/.env:ro
    environment:
      # Переменные для разработки
      - NODE_ENV=development
      - PORT=3001
      - REACT_APP_PORT=80
      - REACT_APP_API_URL=http://localhost:3001
      # Hot reload настройки
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - GENERATE_SOURCEMAP=false
      - SKIP_PREFLIGHT_CHECK=true
      - FAST_REFRESH=true
      - CI=false
      # Безопасность (для разработки)
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - SESSION_SECRET=dev_session_secret_change_in_production
      # Database - подключение к PostgreSQL контейнеру
      - USE_DATABASE=true
      - USE_MERCHANT_FILES=true
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=game
      - DB_USER=postgres
      - DB_PASSWORD=root
    depends_on:
      - postgres
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
