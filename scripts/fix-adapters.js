#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∞–¥–∞–ø—Ç–µ—Ä–æ–≤ - —É–±–∏—Ä–∞–µ—Ç –∏–º–ø–æ—Ä—Ç—ã —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É crypto-browserify
 */

const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∞–¥–∞–ø—Ç–µ—Ä–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const adaptersToFix = [
  'group-activity-service-adapter.js',
  'group-service-adapter.js', 
  'market-service-adapter.js',
  'merchant-adapter.js',
  'reputation-service-adapter.js',
  'weather-service-adapter.js'
];

const servicesDir = path.join(__dirname, '..', 'src', 'services');

function fixAdapter(adapterName) {
  const filePath = path.join(servicesDir, adapterName);
  
  if (!fs.existsSync(filePath)) {
    console.log(`‚ö†Ô∏è  –§–∞–π–ª ${adapterName} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return false;
  }

  const content = fs.readFileSync(filePath, 'utf8');
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è API-—Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ –∞–¥–∞–ø—Ç–µ—Ä–∞
  let apiServiceName;
  if (adapterName.includes('group-activity')) {
    apiServiceName = 'group-activity-service-api';
  } else if (adapterName.includes('group-service')) {
    apiServiceName = 'group-service-api';
  } else if (adapterName.includes('market-service')) {
    apiServiceName = 'market-service-api';
  } else if (adapterName.includes('merchant')) {
    apiServiceName = 'merchant-api';
  } else if (adapterName.includes('reputation')) {
    apiServiceName = 'reputation-service-api';
  } else if (adapterName.includes('weather')) {
    apiServiceName = 'weather-service-api';
  }

  const serviceName = apiServiceName.replace('-api', '').split('-').map(word => 
    word.charAt(0).toUpperCase() + word.slice(1)
  ).join('') + 'API';

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  const newContent = `/**
 * –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å ${adapterName.replace('-adapter.js', '').replace(/-/g, ' ')}
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ API –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –±—Ä–∞—É–∑–µ—Ä–æ–º
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —É–±—Ä–∞–Ω –∏–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ crypto-browserify
 */

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ API-–≤–µ—Ä—Å–∏—é –¥–ª—è –≤—Å–µ—Ö —Å—Ä–µ–¥
const ${serviceName} = require('./${apiServiceName}');

// –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º API-–≤–µ—Ä—Å–∏—é –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å crypto-browserify
const Service = ${serviceName};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
module.exports = Service;
`;

  fs.writeFileSync(filePath, newContent, 'utf8');
  console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω ${adapterName}`);
  return true;
}

console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–∞–ø—Ç–µ—Ä–æ–≤...\n');

let fixedCount = 0;
for (const adapter of adaptersToFix) {
  if (fixAdapter(adapter)) {
    fixedCount++;
  }
}

console.log(`\nüéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixedCount} –∏–∑ ${adaptersToFix.length} –∞–¥–∞–ø—Ç–µ—Ä–æ–≤`);
console.log('‚úÖ –í—Å–µ –∞–¥–∞–ø—Ç–µ—Ä—ã —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ç–æ–ª—å–∫–æ API!');