{"version":3,"file":"static/js/main.6197578b.js","mappings":"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AAY/4D,GAAA,EAGnEy5D,EAAiB8V,MAAQ,SAAAvvE,GAAA,OACvB5U,EAAqBqE,EAAsB6mC,EAAAC,GAAA,GACtCwiC,EAAA,CACHwW,MAAOx6E,MAAM9L,UAAU6B,OAAOiuE,EAAQwW,MAAOvvE,GAAO9O,OAAOk7E,WAAA,EAGxD3S,CAAA,CDzBO,CAAqCpsC,GAAiBjiC,EAAA,EDJvD,CACb,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,MAGA,SACA,WACA,OACA,UACA,gBACA,IACA,QACA,OACA,iBACA,SACA,OACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,MACA,OACA,WACA,SCnIUyE,SAAQ,SAAAzE,GAClBs9B,GAAOt9B,GAAcs9B,GAAOt9B,EAAA,KELT,oBAAAA,EAOPA,EAAgBqE,GAAA,KACrBm+E,MAAQxiF,EAAA,KACRsjF,YAAcj/E,EAAA,KACdo2E,SAAWv9C,GAAcl9B,GAI9Bw8C,GAAWsmC,WAAWh8E,KAAKw8E,YAAc,OAAAj/E,EAAArE,EAAAnC,UAAAwG,EAG3CwgF,aAAA,SACE7kF,EACAqE,EACAuQ,EACAs2B,GAAA,IAGMyiC,EAAMziC,EADIw4C,GAAQ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","sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","data/techniques.js","models/cultivation-progress.js","services/web-crypto-hash.js","../node_modules/react-is/cjs/react-is.production.js","../node_modules/react/jsx-runtime.js","utils/sectUtils.js","utils/effectsUtils.js","data/merchants.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","services/cultivation-service.js","../node_modules/process/browser.js","services/database.js","services/character-stats-service.js","../node_modules/react-dom/cjs/react-dom.production.min.js","data/resources.js","services/inventory-service.js","models/user.js","data/equipment-items.js","utils/sectRelationshipSyncer.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/client.js","services/weather-service.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","services/resource-service.js","../node_modules/react/index.js","models/index.js","utils/techniqueUtils.js","models|sync","utils/effectsNormalizer.js","models/technique-effect.js","models/technique.js","models/inventory-item.js","services/quest-service.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/shallowequal/index.js","models/character-stats.js","models/resource.js","../node_modules/react-dom/index.js","services/database-connection-manager.js","utils/equipmentBonusHelper.js","services/technique-service.js","models/quest.js","sequelize-config.js","services/bonus-service.js","models/quest-progress.js","../node_modules/scheduler/index.js","models/learned-technique.js","data/spirit-pets.js","../external var \"pg\"","data/quests.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/runtime/nonce","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/deprecations.ts","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/@emotion/stylis/dist/stylis.browser.esm.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","../node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","../node_modules/styled-components/src/utils/interleave.js","../node_modules/styled-components/src/utils/isPlainObject.js","../node_modules/styled-components/src/utils/empties.js","../node_modules/styled-components/src/utils/isFunction.js","../node_modules/styled-components/src/utils/getComponentName.js","../node_modules/styled-components/src/utils/isStyledComponent.js","../node_modules/styled-components/src/constants.js","../node_modules/styled-components/src/utils/error.js","../node_modules/styled-components/src/sheet/GroupedTag.js","../node_modules/styled-components/src/sheet/GroupIDAllocator.js","../node_modules/styled-components/src/sheet/Rehydration.js","../node_modules/styled-components/src/utils/nonce.js","../node_modules/styled-components/src/sheet/dom.js","../node_modules/styled-components/src/sheet/Tag.js","../node_modules/styled-components/src/sheet/Sheet.js","../node_modules/styled-components/src/utils/generateAlphabeticName.js","../node_modules/styled-components/src/utils/hash.js","../node_modules/styled-components/src/utils/isStaticRules.js","../node_modules/styled-components/src/models/ComponentStyle.js","../node_modules/styled-components/src/utils/stylis.js","../node_modules/styled-components/src/utils/stylisPluginInsertRule.js","../node_modules/styled-components/src/models/StyleSheetManager.js","../node_modules/styled-components/src/models/Keyframes.js","../node_modules/styled-components/src/utils/hyphenateStyleName.js","../node_modules/styled-components/src/utils/flatten.js","../node_modules/styled-components/src/utils/isStatelessFunction.js","../node_modules/styled-components/src/utils/addUnitIfNeeded.js","../node_modules/styled-components/src/constructors/css.js","../node_modules/styled-components/src/utils/checkDynamicCreation.js","../node_modules/styled-components/src/utils/determineTheme.js","../node_modules/styled-components/src/utils/escape.js","../node_modules/styled-components/src/utils/generateComponentId.js","../node_modules/styled-components/src/utils/isTag.js","../node_modules/styled-components/src/utils/mixinDeep.js","../node_modules/styled-components/src/models/ThemeProvider.js","../node_modules/styled-components/src/models/StyledComponent.js","../node_modules/styled-components/src/utils/generateDisplayName.js","../node_modules/styled-components/src/utils/joinStrings.js","../node_modules/styled-components/src/utils/domElements.js","../node_modules/styled-components/src/constructors/styled.js","../node_modules/styled-components/src/constructors/constructWithOptions.js","../node_modules/styled-components/src/models/GlobalStyle.js","../node_modules/styled-components/src/constructors/keyframes.js","../node_modules/styled-components/src/models/ServerStyleSheet.js","../node_modules/styled-components/src/base.js","utils/directConsoleCommands.js","utils/debugTools.js","services/auth-api.js","services/auth-adapter.js","services/cultivation-api.js","services/cultivation-adapter.js","models/character-profile.js","services/character-profile-service.js","utils/initialRelationships.js","services/api.js","context/state/initialState.js","context/actions/actionTypes.js","context/reducers/playerReducer.js","context/actions/weather-actions.js","context/reducers/worldReducer.js","context/reducers/gameStateReducer.js","context/reducers/marketReducer.js","context/reducers/sectReducer.js","context/reducers/reputationReducer.js","context/actions/reputationActionTypes.js","context/reducers/groupReducer.js","context/reducers/rootReducer.js","context/reducers/uiReducer.js","context/reducers/combatReducer.js","context/reducers/questsReducer.js","context/reducers/achievementsReducer.js","context/reducers/spiritPetsReducer.js","context/middleware/weatherMiddleware.js","context/GameContextProvider.js","services/sect-service.js","context/GameContext.js","components/debug/TimeDebugPanel.js","components/debug/DebugTools.js","components/pages/LoginPage.js","components/pages/CharacterCreationPage.js","hooks/useTimeWeather.js","components/ui/WorldTimeWidget.js","components/world/ForecastWidget.js","components/ui/ActiveEffectsPanel.js","components/effects/VisualEffectsLayer.js","components/screens/WeatherDetailScreen.js","components/tabs/CultivationTabStyles.js","components/tabs/CultivationTab.js","components/tabs/InventoryTab.js","utils/equipmentDebug.js","components/tabs/EquipmentTab.js","components/tabs/CharacterTab.js","components/combat/ResourceBar.js","components/combat/Portrait.js","components/combat/ActionBar.js","components/combat/StatusEffects.js","components/combat/CombatLog.js","components/combat/CombatInterface.js","components/combat/CombatResults.js","data/combat.js","components/combat/CombatManager.js","data/enemies.js","components/world/CombatArea.js","components/tabs/MapTab.js","components/tabs/QuestsTab.js","components/tabs/SectTab.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","services/group-service.js","services/group-activity-service.js","context/actions/groupActions.js","webpack://immortal-path/./src/components/group/GroupListItem.module.css?86ef","components/group/GroupListItem.js","webpack://immortal-path/./src/components/group/GroupList.module.css?0944","components/group/GroupList.js","components/ui/Button.js","webpack://immortal-path/./src/components/group/MemberList.module.css?9d18","components/group/MemberList.js","webpack://immortal-path/./src/components/group/ActivityList.module.css?c384","components/group/ActivityList.js","webpack://immortal-path/./src/components/group/ActivityDetails.module.css?faf5","components/group/ActivityDetails.js","components/ui/ProgressBar.js","webpack://immortal-path/./src/components/group/ActivityInstance.module.css?1dbc","components/group/ActivityInstance.js","webpack://immortal-path/./src/components/group/GroupDetails.module.css?6f51","components/group/GroupDetails.js","webpack://immortal-path/./src/components/group/CreateGroupForm.module.css?7f60","components/group/CreateGroupForm.js","webpack://immortal-path/./src/components/tabs/GroupsTab.module.css?8d07","components/tabs/GroupsTab.js","components/tabs/SkillsTab.js","components/tabs/SocialTab.js","data/achievements.js","components/tabs/AchievementsTab.js","components/tabs/AlchemyTab.js","components/tabs/SpiritPetsTab.js","components/tabs/MarketTab.js","components/pages/GamePage.js","components/common/GameTimeUpdater.js","App.js","index.js"],"sourcesContent":["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/**\r\n * Модуль для работы с техниками\r\n * Обеспечивает загрузку техник из базы данных и операции с ними\r\n */\r\n\r\n// Импортируем модуль для работы с базой данных\r\nconst { unifiedDatabase, initializeDatabaseConnection } = require('../services/database-connection-manager');\r\nconst { Sequelize } = require('sequelize');\r\nlet sequelize;\r\n\r\n// Переменная для хранения экземпляра Sequelize\r\nlet sequelizeInstance = null;\r\n\r\n// Асинхронная функция для получения экземпляра Sequelize\r\nasync function getSequelizeInstance() {\r\n  if (!sequelize) {\r\n    const { db } = await initializeDatabaseConnection();\r\n    sequelize = db;\r\n  }\r\n  return sequelize;\r\n}\r\n\r\n// Константы\r\nconst techniqueTypes = {\r\n  ATTACK: 'attack',\r\n  DEFENSE: 'defense',\r\n  SUPPORT: 'support',\r\n  CULTIVATION: 'cultivation'\r\n};\r\n\r\nconst elementTypes = {\r\n  FIRE: 'fire',\r\n  WATER: 'water',\r\n  EARTH: 'earth',\r\n  WIND: 'wind',\r\n  LIGHTNING: 'lightning',\r\n  DARKNESS: 'darkness',\r\n  LIGHT: 'light',\r\n  VOID: 'void'\r\n};\r\n\r\nconst elementColors = {\r\n  [elementTypes.FIRE]: '#ff4d4d',\r\n  [elementTypes.WATER]: '#4d94ff',\r\n  [elementTypes.EARTH]: '#a67c00',\r\n  [elementTypes.WIND]: '#80ff80',\r\n  [elementTypes.LIGHTNING]: '#ffff4d',\r\n  [elementTypes.DARKNESS]: '#660066',\r\n  [elementTypes.LIGHT]: '#ffff99',\r\n  [elementTypes.VOID]: '#1a1a1a'\r\n};\r\n\r\nconst techniqueCategories = [\r\n  { id: 'all', name: 'все' },\r\n  { id: 'attack', name: 'атакующие' },\r\n  { id: 'defense', name: 'защитные' },\r\n  { id: 'support', name: 'поддержка' },\r\n  { id: 'cultivation', name: 'культивация' }\r\n];\r\n\r\n// Для обратной совместимости сохраняем массив техник\r\nlet techniques = [];\r\nlet techniquesByLevel = {};\r\n\r\n// Функция для расчета стоимости улучшения техники\r\nconst calculateUpgradeCost = (baseLevel, targetLevel) => {\r\n  const experienceCost = Math.floor(baseLevel * 50 * Math.pow(1.5, targetLevel - 1));\r\n  const totalCost = Math.floor(baseLevel * 20 * Math.pow(1.3, targetLevel - 1));\r\n  \r\n  // Определяем тип валюты в зависимости от уровня техники и целевого уровня\r\n  const currencyCost = {};\r\n  \r\n  if (baseLevel >= 5 || targetLevel >= 5) {\r\n    // Высокоуровневые техники используют золото\r\n    currencyCost.gold = Math.max(1, Math.floor(totalCost / 100));\r\n  } else if (baseLevel >= 3 || targetLevel >= 3) {\r\n    // Среднеуровневые техники используют серебро\r\n    currencyCost.silver = Math.max(1, Math.floor(totalCost / 3));\r\n  } else {\r\n    // Низкоуровневые техники используют медь\r\n    currencyCost.copper = totalCost;\r\n  }\r\n  \r\n  return {\r\n    experience: experienceCost,\r\n    currency: currencyCost\r\n  };\r\n};\r\n\r\n/**\r\n * Преобразует технику из формата БД в формат для клиента\r\n * @param {Object} technique - Техника из БД\r\n * @param {Array} effects - Эффекты техники из БД\r\n * @returns {Object} - Техника в формате для клиента\r\n */\r\nfunction convertTechniqueFromDB(technique, effects = []) {\r\n  // Преобразуем эффекты в нужный формат\r\n  const formattedEffects = effects.map(effect => {\r\n    const effectObj = {\r\n      type: effect.type,\r\n      name: effect.name,\r\n      duration: effect.duration\r\n    };\r\n    \r\n    if (effect.damage > 0) {\r\n      effectObj.damage = effect.damage;\r\n      effectObj.damageType = effect.damage_type;\r\n    }\r\n    \r\n    if (effect.healing > 0) {\r\n      effectObj.healing = effect.healing;\r\n    }\r\n    \r\n    if (effect.stats) {\r\n      effectObj.stats = effect.stats;\r\n    }\r\n    \r\n    return effectObj;\r\n  });\r\n  \r\n  // Создаем технику в требуемом формате\r\n  return {\r\n    id: technique.technique_id,\r\n    name: technique.name,\r\n    description: technique.description,\r\n    icon: technique.icon,\r\n    level: technique.level,\r\n    damage: technique.damage,\r\n    damageType: technique.damage_type,\r\n    energyCost: technique.energy_cost,\r\n    cooldown: technique.cooldown,\r\n    effects: formattedEffects,\r\n    maxLevel: technique.max_level,\r\n    type: technique.type,\r\n    requiredLevel: technique.required_level,\r\n    healing: technique.healing,\r\n    upgradeCost: (targetLevel) => calculateUpgradeCost(technique.level, targetLevel)\r\n  };\r\n}\r\n\r\n/**\r\n * Асинхронно загружает все техники из базы данных\r\n * @returns {Promise<Array>} Массив техник\r\n */\r\nasync function loadTechniques() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем все техники из базы данных\r\n    const techniquesData = await unifiedDatabase.query(\r\n      'SELECT * FROM techniques',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Получаем все эффекты для этих техник\r\n    const techniqueIds = techniquesData.map(t => t.id);\r\n    const effectsQuery = `\r\n      SELECT * FROM technique_effects \r\n      WHERE technique_id IN (${techniqueIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const effectsData = await unifiedDatabase.query(\r\n      effectsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Группируем эффекты по ID техники\r\n    const effectsByTechniqueId = {};\r\n    effectsData.forEach(effect => {\r\n      if (!effectsByTechniqueId[effect.technique_id]) {\r\n        effectsByTechniqueId[effect.technique_id] = [];\r\n      }\r\n      effectsByTechniqueId[effect.technique_id].push(effect);\r\n    });\r\n    \r\n    // Преобразуем каждую технику в нужный формат\r\n    const loadedTechniques = techniquesData.map(technique => \r\n      convertTechniqueFromDB(\r\n        technique, \r\n        effectsByTechniqueId[technique.id] || []\r\n      )\r\n    );\r\n    \r\n    // Группируем техники по уровню\r\n    const byLevel = loadedTechniques.reduce((acc, technique) => {\r\n      if (!acc[technique.level]) {\r\n        acc[technique.level] = [];\r\n      }\r\n      acc[technique.level].push(technique);\r\n      return acc;\r\n    }, {});\r\n    \r\n    // Обновляем глобальные переменные для обратной совместимости\r\n    techniques = loadedTechniques;\r\n    techniquesByLevel = byLevel;\r\n    \r\n    return loadedTechniques;\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке техник из базы данных:', error);\r\n    // В случае ошибки возвращаем кэшированные данные\r\n    return techniques;\r\n  }\r\n}\r\n\r\n/**\r\n * Асинхронно получает технику по ID\r\n * @param {string} id - ID техники\r\n * @returns {Promise<Object|null>} Техника или null, если не найдена\r\n */\r\nasync function getTechniqueByIdAsync(id) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем технику из базы данных\r\n    const techniqueData = await unifiedDatabase.query(\r\n      'SELECT * FROM techniques WHERE technique_id = :id',\r\n      { \r\n        replacements: { id },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    if (techniqueData.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Получаем эффекты для техники\r\n    const effectsData = await unifiedDatabase.query(\r\n      'SELECT * FROM technique_effects WHERE technique_id = :id',\r\n      { \r\n        replacements: { id },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    // Преобразуем и возвращаем технику\r\n    return convertTechniqueFromDB(techniqueData[0], effectsData);\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении техники с ID ${id}:`, error);\r\n    // В случае ошибки ищем в кэше\r\n    return techniques.find(t => t.id === id) || null;\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения техники по ID (для обратной совместимости)\r\n * @param {string} id - ID техники\r\n * @returns {Object|null} Техника или null, если не найдена\r\n */\r\nfunction getTechniqueById(id) {\r\n  return techniques.find(t => t.id === id) || null;\r\n}\r\n\r\n/**\r\n * Асинхронно получает все техники определенного типа\r\n * @param {string} type - Тип техники\r\n * @returns {Promise<Array>} Массив техник указанного типа\r\n */\r\nasync function getTechniquesByType(type) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем техники из базы данных\r\n    const techniquesData = await unifiedDatabase.query(\r\n      'SELECT * FROM techniques WHERE type = :type',\r\n      {\r\n        replacements: { type },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (techniquesData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID техник\r\n    const techniqueIds = techniquesData.map(t => t.id);\r\n    \r\n    // Получаем эффекты для этих техник\r\n    const effectsQuery = `\r\n      SELECT * FROM technique_effects \r\n      WHERE technique_id IN (${techniqueIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const effectsData = await unifiedDatabase.query(\r\n      effectsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Группируем эффекты по ID техники\r\n    const effectsByTechniqueId = {};\r\n    effectsData.forEach(effect => {\r\n      if (!effectsByTechniqueId[effect.technique_id]) {\r\n        effectsByTechniqueId[effect.technique_id] = [];\r\n      }\r\n      effectsByTechniqueId[effect.technique_id].push(effect);\r\n    });\r\n    \r\n    // Преобразуем и возвращаем техники\r\n    return techniquesData.map(technique => \r\n      convertTechniqueFromDB(\r\n        technique, \r\n        effectsByTechniqueId[technique.id] || []\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении техник типа ${type}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return techniques.filter(t => t.type === type);\r\n  }\r\n}\r\n\r\n/**\r\n * Асинхронно получает все техники определенного уровня\r\n * @param {number} level - Уровень техники\r\n * @returns {Promise<Array>} Массив техник указанного уровня\r\n */\r\nasync function getTechniquesByLevel(level) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем техники из базы данных\r\n    const techniquesData = await unifiedDatabase.query(\r\n      'SELECT * FROM techniques WHERE level = :level',\r\n      {\r\n        replacements: { level },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (techniquesData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID техник\r\n    const techniqueIds = techniquesData.map(t => t.id);\r\n    \r\n    // Получаем эффекты для этих техник\r\n    const effectsQuery = `\r\n      SELECT * FROM technique_effects \r\n      WHERE technique_id IN (${techniqueIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const effectsData = await unifiedDatabase.query(\r\n      effectsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Группируем эффекты по ID техники\r\n    const effectsByTechniqueId = {};\r\n    effectsData.forEach(effect => {\r\n      if (!effectsByTechniqueId[effect.technique_id]) {\r\n        effectsByTechniqueId[effect.technique_id] = [];\r\n      }\r\n      effectsByTechniqueId[effect.technique_id].push(effect);\r\n    });\r\n    \r\n    // Преобразуем и возвращаем техники\r\n    return techniquesData.map(technique => \r\n      convertTechniqueFromDB(\r\n        technique, \r\n        effectsByTechniqueId[technique.id] || []\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении техник уровня ${level}:`, error);\r\n    // В случае ошибки используем кэш\r\n    return techniquesByLevel[level] || [];\r\n  }\r\n}\r\n\r\n// Инициализация: загружаем техники при импорте модуля\r\nloadTechniques().catch(error => {\r\n  console.error('Ошибка при инициализации модуля техник:', error);\r\n});\r\n\r\n// Экспортируем функции\r\nmodule.exports = {\r\n  techniqueTypes,\r\n  elementTypes,\r\n  elementColors,\r\n  techniqueCategories,\r\n  techniques,\r\n  techniquesByLevel,\r\n  calculateUpgradeCost,\r\n  loadTechniques,\r\n  getTechniqueByIdAsync,\r\n  getTechniqueById,\r\n  getTechniquesByType,\r\n  getTechniquesByLevel\r\n};\r\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass CultivationProgress extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    CultivationProgress.belongsTo(models.User, {\r\n      foreignKey: 'userId',\r\n      as: 'user'\r\n    });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nCultivationProgress.init = async function() {\r\n  const sequelize = await getSequelize();\r\n\r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n  userId: {\r\n    type: DataTypes.INTEGER,\r\n    references: {\r\n      model: 'Users',\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE',\r\n    unique: true\r\n  },\r\n  stage: {\r\n    type: DataTypes.ENUM('Закалка тела', 'Очищение Ци', 'Золотое ядро', 'Формирование души'),\r\n    defaultValue: 'Закалка тела'\r\n  },\r\n  level: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 1\r\n  },\r\n  experience: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  experienceToNextLevel: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 100\r\n  },\r\n  breakthroughProgress: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  dailyCultivationLimit: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 1000\r\n  },\r\n  dailyCultivationUsed: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  lastCultivationReset: {\r\n    type: DataTypes.DATE,\r\n    defaultValue: DataTypes.NOW\r\n  },\r\n  energy: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 100\r\n  },\r\n  maxEnergy: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 100\r\n  },\r\n  // Новые поля для расширенной системы культивации\r\n  tribulationCompleted: {\r\n    type: DataTypes.BOOLEAN,\r\n    defaultValue: false\r\n  },\r\n  insightPoints: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  bottleneckProgress: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  requiredBottleneckProgress: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 100\r\n  },\r\n  lastInsightTime: {\r\n    type: DataTypes.DATE,\r\n    defaultValue: DataTypes.NOW\r\n  },\r\n  cultivationEfficiency: {\r\n    type: DataTypes.FLOAT,\r\n    defaultValue: 1.0\r\n  },\r\n  requiredResources: {\r\n    type: DataTypes.JSON,\r\n    defaultValue: {}\r\n  }\r\n  }, {\r\n    sequelize,\r\n    modelName: 'CultivationProgress',\r\n    tableName: 'CultivationProgress'\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await CultivationProgress.init();\r\n    console.log('CultivationProgress модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели CultivationProgress:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = CultivationProgress;\r\n","/**\r\n * Сервис для хеширования паролей с использованием Web Crypto API\r\n * Заменяет bcryptjs для избежания проблем совместимости модулей\r\n */\r\n\r\n/**\r\n * Хеширует пароль с использованием SHA-256\r\n * @param {string} password - Пароль для хеширования\r\n * @returns {Promise<string>} - Хеш пароля в hex-формате\r\n */\r\nexport async function hashPassword(password) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(password);\r\n  \r\n  // Добавляем соль к паролю для большей безопасности\r\n  // В реальном приложении стоит использовать случайную соль для каждого пользователя\r\n  const salt = \"cultivationPathToImmortality\";\r\n  const saltedPassword = password + salt;\r\n  const saltedData = encoder.encode(saltedPassword);\r\n  \r\n  // Используем SHA-256, доступный во всех современных браузерах\r\n  const hashBuffer = await crypto.subtle.digest('SHA-256', saltedData);\r\n  \r\n  // Конвертируем хеш из ArrayBuffer в hex-строку\r\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n  \r\n  return hashHex;\r\n}\r\n\r\n/**\r\n * Сравнивает пароль с его хешем\r\n * @param {string} password - Оригинальный пароль\r\n * @param {string} hash - Хеш для сравнения\r\n * @returns {Promise<boolean>} - true, если пароль соответствует хешу\r\n */\r\nexport async function comparePassword(password, hash) {\r\n  const newHash = await hashPassword(password);\r\n  return newHash === hash;\r\n}","/**\n * @license React\n * react-is.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\nSymbol.for(\"react.provider\");\nvar REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n  REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\"),\n  REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\nfunction typeOf(object) {\n  if (\"object\" === typeof object && null !== object) {\n    var $$typeof = object.$$typeof;\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        switch (((object = object.type), object)) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return object;\n          default:\n            switch (((object = object && object.$$typeof), object)) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n                return object;\n              case REACT_CONSUMER_TYPE:\n                return object;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n}\nexports.ContextConsumer = REACT_CONSUMER_TYPE;\nexports.ContextProvider = REACT_CONTEXT_TYPE;\nexports.Element = REACT_ELEMENT_TYPE;\nexports.ForwardRef = REACT_FORWARD_REF_TYPE;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Lazy = REACT_LAZY_TYPE;\nexports.Memo = REACT_MEMO_TYPE;\nexports.Portal = REACT_PORTAL_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;\nexports.isContextConsumer = function (object) {\n  return typeOf(object) === REACT_CONSUMER_TYPE;\n};\nexports.isContextProvider = function (object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n};\nexports.isElement = function (object) {\n  return (\n    \"object\" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n};\nexports.isForwardRef = function (object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n};\nexports.isFragment = function (object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n};\nexports.isLazy = function (object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n};\nexports.isMemo = function (object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n};\nexports.isPortal = function (object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n};\nexports.isProfiler = function (object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n};\nexports.isStrictMode = function (object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n};\nexports.isSuspense = function (object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n};\nexports.isSuspenseList = function (object) {\n  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n};\nexports.isValidElementType = function (type) {\n  return \"string\" === typeof type ||\n    \"function\" === typeof type ||\n    type === REACT_FRAGMENT_TYPE ||\n    type === REACT_PROFILER_TYPE ||\n    type === REACT_STRICT_MODE_TYPE ||\n    type === REACT_SUSPENSE_TYPE ||\n    type === REACT_SUSPENSE_LIST_TYPE ||\n    type === REACT_OFFSCREEN_TYPE ||\n    (\"object\" === typeof type &&\n      null !== type &&\n      (type.$$typeof === REACT_LAZY_TYPE ||\n        type.$$typeof === REACT_MEMO_TYPE ||\n        type.$$typeof === REACT_CONTEXT_TYPE ||\n        type.$$typeof === REACT_CONSUMER_TYPE ||\n        type.$$typeof === REACT_FORWARD_REF_TYPE ||\n        type.$$typeof === REACT_CLIENT_REFERENCE ||\n        void 0 !== type.getModuleId))\n    ? !0\n    : !1;\n};\nexports.typeOf = typeOf;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\r\n * Утилиты для работы с сектами и их бонусами\r\n * Централизует логику взаимодействия с секционными бонусами\r\n */\r\n\r\nimport { standardizeEffect } from './effectsUtils';\r\n\r\n/**\r\n * Создает чистый эффект без информации о источнике\r\n * @param {string} type - Тип эффекта\r\n * @param {number} modifier - Значение модификатора\r\n * @param {Object} [options] - Дополнительные опции для эффекта\r\n * @returns {Object} Чистый эффект без полей id и source\r\n */\r\nexport const createCleanEffect = (type, modifier, options = {}) => {\r\n  let displayType = 'neutral';\r\n  let icon = '⚪';\r\n  \r\n  if (modifier > 0) {\r\n    displayType = 'positive';\r\n    icon = '🔼';\r\n  } else if (modifier < 0) {\r\n    displayType = 'negative';\r\n    icon = '🔽';\r\n  }\r\n  \r\n  // Получаем чистое название из типа, заменяя подчеркивания на пробелы и с заглавной буквы\r\n  let cleanName = type\r\n    .split('_')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n  \r\n  // Если есть имя в опциях, используем его, но удаляем информацию о источнике\r\n  if (options.name) {\r\n    // Удаляем информацию о источнике в скобках, например: \"Название (Источник)\"\r\n    cleanName = options.name.replace(/\\s*\\([^)]*\\)\\s*$/, '');\r\n  }\r\n  \r\n  // Объект эффекта без полей id и source\r\n  return {\r\n    type: type,\r\n    modifier: modifier,\r\n    displayType: displayType,\r\n    displayValue: `${modifier > 0 ? '+' : ''}${modifier}%`,\r\n    icon: icon,\r\n    name: cleanName\r\n  };\r\n};\r\n\r\n/**\r\n * Преобразует бонусы секты в формат эффектов\r\n * @param {Array} sectBenefits - Бонусы секты в формате массива {type, modifier}\r\n * @returns {Array} Эффекты в стандартном формате без привязки к источнику\r\n */\r\nexport const sectBenefitsToEffects = (sectBenefits) => {\r\n  if (!sectBenefits || !Array.isArray(sectBenefits)) return [];\r\n  \r\n  return sectBenefits.map(benefit => {\r\n    let effectType;\r\n    \r\n    // Сопоставляем типы бонусов секты с типами эффектов\r\n    switch (benefit.type) {\r\n      case 'cultivation_speed':\r\n        effectType = 'cultivation_bonus';\r\n        break;\r\n      case 'resource_gathering':\r\n        effectType = 'resource_bonus';\r\n        break;\r\n      case 'energy_regen':\r\n        effectType = 'energy_regen';\r\n        break;\r\n      case 'technique_discount':\r\n        effectType = 'technique_discount';\r\n        break;\r\n      case 'max_energy':\r\n        effectType = 'max_energy';\r\n        break;\r\n      default:\r\n        effectType = benefit.type;\r\n    }\r\n    \r\n    // Передаем оригинальное имя, если оно есть, для очистки от информации об источнике\r\n    const options = {\r\n      name: benefit.name || ''\r\n    };\r\n    \r\n    // Используем createCleanEffect для создания чистого эффекта\r\n    return createCleanEffect(effectType, benefit.modifier, options);\r\n  });\r\n};\r\n\r\n/**\r\n * Очищает эффекты от ID, источника и другой технической информации\r\n * @param {Array|Object} effects - Массив или объект эффектов для очистки\r\n * @returns {Array} Очищенные эффекты\r\n */\r\nexport const cleanEffects = (effects) => {\r\n  if (!effects) return [];\r\n  \r\n  // Преобразуем в массив, если передан объект\r\n  const effectsArray = Array.isArray(effects) ? effects : Object.values(effects);\r\n  \r\n  return effectsArray.map(effect => {\r\n    // Если это не объект, создаем базовый эффект\r\n    if (typeof effect !== 'object' || effect === null) {\r\n      return createCleanEffect('unknown', 0);\r\n    }\r\n    \r\n    // Создаем чистый эффект из существующего\r\n    return createCleanEffect(\r\n      effect.type || 'unknown',\r\n      effect.modifier || 0,\r\n      {\r\n        name: effect.name || ''\r\n      }\r\n    );\r\n  });\r\n};\r\n\r\n/**\r\n * Нормализует бонусы секты из разных возможных форматов в стандартный массив бонусов\r\n * @param {Object|Array} rawBenefits - Необработанные бонусы секты в любом формате\r\n * @returns {Array} Массив нормализованных бонусов секты в виде {type, modifier}\r\n */\r\nexport const normalizeSectBenefits = (rawBenefits) => {\r\n  // Если бонусы уже в формате массива\r\n  if (Array.isArray(rawBenefits)) {\r\n    return rawBenefits.map(benefit => ({\r\n      type: benefit.type,\r\n      modifier: typeof benefit.modifier === 'number' ? benefit.modifier : 0\r\n    }));\r\n  }\r\n  \r\n  // Если бонусы не определены, возвращаем пустой массив\r\n  if (!rawBenefits) {\r\n    return [];\r\n  }\r\n  \r\n  // Если бонусы в формате объекта с полями\r\n  if (typeof rawBenefits === 'object') {\r\n    return [\r\n      { type: 'cultivation_speed', modifier: Math.round((rawBenefits.cultivationSpeedBonus || 0) * 100) },\r\n      { type: 'resource_gathering', modifier: Math.round((rawBenefits.resourceGatheringBonus || 0) * 100) },\r\n      { type: 'energy_regen', modifier: rawBenefits.energyRegenBonus || 0 },\r\n      { type: 'technique_discount', modifier: Math.round((rawBenefits.techniqueDiscountPercent || 0) * 100) },\r\n      { type: 'max_energy', modifier: rawBenefits.maxEnergyBonus || 0 }\r\n    ];\r\n  }\r\n  \r\n  // В крайнем случае возвращаем пустой массив\r\n  return [];\r\n};\r\n\r\n/**\r\n * Собирает все бонусы секты из разных источников в состоянии игры\r\n * @param {Object} sectState - Состояние секты из Redux\r\n * @param {Object} sectData - Данные о секте (если они отличаются от sectState)\r\n * @returns {Array} Объединенный массив нормализованных бонусов\r\n */\r\nexport const collectAllSectBenefits = (sectState, sectData = null) => {\r\n  const benefits = [];\r\n  \r\n  // 1. Если есть бонусы в состоянии секты\r\n  if (sectState && sectState.benefits) {\r\n    benefits.push(...normalizeSectBenefits(sectState.benefits));\r\n  }\r\n  \r\n  // 2. Если есть дополнительные данные секты и в них есть бонусы\r\n  if (sectData && sectData.benefits && sectData !== sectState) {\r\n    benefits.push(...normalizeSectBenefits(sectData.benefits));\r\n  }\r\n  \r\n  // Удаляем дубликаты бонусов одного типа, сохраняя бонус с наибольшим модификатором\r\n  const uniqueBenefits = {};\r\n  \r\n  benefits.forEach(benefit => {\r\n    const type = benefit.type;\r\n    \r\n    if (!uniqueBenefits[type] || Math.abs(benefit.modifier) > Math.abs(uniqueBenefits[type].modifier)) {\r\n      uniqueBenefits[type] = benefit;\r\n    }\r\n  });\r\n  \r\n  return Object.values(uniqueBenefits);\r\n};\r\n\r\n/**\r\n * Получает значение бонуса секты по типу\r\n * @param {Array} benefits - Массив бонусов секты\r\n * @param {string} type - Тип бонуса для поиска\r\n * @param {number} defaultValue - Значение по умолчанию, если бонус не найден\r\n * @returns {number} Значение модификатора бонуса\r\n */\r\nexport const getBenefitValueByType = (benefits, type, defaultValue = 0) => {\r\n  if (!Array.isArray(benefits) || benefits.length === 0) {\r\n    return defaultValue;\r\n  }\r\n  \r\n  const benefit = benefits.find(b => b.type === type);\r\n  return benefit ? benefit.modifier : defaultValue;\r\n};\r\n\r\n/**\r\n * Преобразует бонусы секты в формат эффектов и возвращает их в виде объекта \r\n * для более удобного доступа по ключу\r\n * @param {Array} benefits - Массив бонусов секты\r\n * @returns {Object} Объект, где ключи - типы бонусов, а значения - эффекты\r\n */\r\nexport const getSectEffectsObject = (benefits) => {\r\n  const effects = sectBenefitsToEffects(benefits);\r\n  \r\n  // Преобразуем массив эффектов в объект для удобного доступа по типу\r\n  const effectsObject = {};\r\n  effects.forEach(effect => {\r\n    effectsObject[effect.type] = effect;\r\n  });\r\n  \r\n  return effectsObject;\r\n};\r\n\r\n/**\r\n * Создает полный объект данных о секте с нормализованными бонусами\r\n * @param {Object} sectState - Состояние секты\r\n * @param {Object} sectData - Дополнительные данные секты (если есть)\r\n * @returns {Object} Объект с данными секты и нормализованными бонусами\r\n */\r\nexport const createNormalizedSectData = (sectState, sectData = null) => {\r\n  const benefitsArray = collectAllSectBenefits(sectState, sectData);\r\n  const normalizedEffects = sectBenefitsToEffects(benefitsArray);\r\n  \r\n  // Определяем основной источник данных о секте\r\n  const baseData = sectData || sectState?.sect || {};\r\n  \r\n  return {\r\n    ...baseData,\r\n    normalizedBenefits: benefitsArray,\r\n    effectsArray: normalizedEffects,\r\n    // Добавляем удобную функцию для получения значения бонуса по типу\r\n    getBenefitValue: (type, defaultValue = 0) => getBenefitValueByType(benefitsArray, type, defaultValue)\r\n  };\r\n};\r\n\r\n/**\r\n * Проверяет и нормализует данные секты\r\n * @param {Object} gameState - Общее состояние игры из Redux\r\n * @returns {Object} Исходное состояние, если проблем не обнаружено, или нормализованное состояние, если были проблемы\r\n */\r\nexport const checkAndNormalizeSectData = (gameState) => {\r\n  // Получаем данные о секте из состояния игры\r\n  const sectState = gameState?.sect || {};\r\n  \r\n  // Проверяем наличие данных о секте\r\n  if (!sectState.sect) {\r\n    console.log('❓ Данные о секте отсутствуют или некорректны, пропускаем проверку');\r\n    return gameState;\r\n  }\r\n  \r\n  // Флаг, указывающий, были ли обнаружены проблемы\r\n  let hasProblems = false;\r\n  \r\n  // Клонируем объект состояния секты для безопасной модификации\r\n  const normalizedSectState = { ...sectState };\r\n  \r\n  // 1. Проверяем формат бонусов\r\n  if (sectState.benefits) {\r\n    if (!Array.isArray(sectState.benefits)) {\r\n      console.log('⚠️ Бонусы секты не в формате массива, нормализуем');\r\n      normalizedSectState.benefits = normalizeSectBenefits(sectState.benefits);\r\n      hasProblems = true;\r\n    } else if (sectState.benefits.some(b => typeof b !== 'object' || typeof b.type !== 'string' || typeof b.modifier !== 'number')) {\r\n      console.log('⚠️ Некоторые бонусы секты имеют некорректный формат, нормализуем');\r\n      normalizedSectState.benefits = normalizeSectBenefits(sectState.benefits);\r\n      hasProblems = true;\r\n    }\r\n  }\r\n  \r\n  // 2. Проверяем формат данных секты\r\n  if (normalizedSectState.sect) {\r\n    const sect = { ...normalizedSectState.sect };\r\n    \r\n    // Проверяем формат бонусов внутри секты\r\n    if (sect.benefits) {\r\n      if (!Array.isArray(sect.benefits)) {\r\n        console.log('⚠️ Бонусы внутри секты не в формате массива, нормализуем');\r\n        sect.benefits = normalizeSectBenefits(sect.benefits);\r\n        hasProblems = true;\r\n      } else if (sect.benefits.some(b => typeof b !== 'object' || typeof b.type !== 'string' || typeof b.modifier !== 'number')) {\r\n        console.log('⚠️ Некоторые бонусы внутри секты имеют некорректный формат, нормализуем');\r\n        sect.benefits = normalizeSectBenefits(sect.benefits);\r\n        hasProblems = true;\r\n      }\r\n    }\r\n    \r\n    // Проверяем наличие необходимых полей в объекте секты\r\n    if (!sect.id || !sect.name) {\r\n      console.log('⚠️ В объекте секты отсутствуют обязательные поля (id или name)');\r\n      // Не можем исправить отсутствующие id/name, но отмечаем проблему\r\n      hasProblems = true;\r\n    }\r\n    \r\n    // Обновляем объект секты в нормализованном состоянии\r\n    normalizedSectState.sect = sect;\r\n  }\r\n  \r\n  // Если проблем не обнаружено, возвращаем исходное состояние\r\n  if (!hasProblems) {\r\n    return gameState;\r\n  }\r\n  \r\n  // Если обнаружены проблемы, создаем новое состояние с нормализованными данными секты\r\n  console.log('🔧 Обнаружены проблемы в данных секты, возвращаем нормализованное состояние');\r\n  return {\r\n    ...gameState,\r\n    sect: normalizedSectState\r\n  };\r\n};\r\n\r\n/**\r\n * Функция для нормализации формата данных секты\r\n * @param {Object} state - Состояние секты из Redux\r\n * @returns {Object} Нормализованное состояние секты\r\n */\r\nexport const normalizeSectData = (state) => {\r\n  // Если состояние пустое или нет секты, возвращаем исходное состояние\r\n  if (!state || !state.sect) return state;\r\n  \r\n  // Нормализуем бонусы\r\n  const benefits = normalizeSectBenefits(state.benefits || []);\r\n  \r\n  // Нормализуем бонусы в секте\r\n  let sect = { ...state.sect };\r\n  if (sect.benefits) {\r\n    sect.benefits = normalizeSectBenefits(sect.benefits);\r\n  }\r\n  \r\n  // Создаем эффекты из бонусов\r\n  const effectsArray = sectBenefitsToEffects(benefits);\r\n  \r\n  // Формируем новое состояние\r\n  return {\r\n    ...state,\r\n    benefits: benefits,\r\n    sect: sect,\r\n    // Добавляем дополнительные данные для удобного доступа\r\n    effectsArray: effectsArray,\r\n    // Функция для получения значения бонуса по типу\r\n    getBenefitValue: (type, defaultValue = 0) => getBenefitValueByType(benefits, type, defaultValue)\r\n  };\r\n};\r\n","/**\r\n * Утилиты для работы с эффектами персонажа\r\n * Содержит функции для сбора, форматирования и обработки эффектов\r\n */\r\n\r\n/**\r\n * Словарь русских названий для типов эффектов\r\n * Используется для отображения правильных названий в интерфейсе\r\n */\r\nconst effectTypeNames = {\r\n  // Общие эффекты\r\n  'resource_bonus': 'Бонус ресурсов',\r\n  'cultivation_bonus': 'Культивация',\r\n  'movement_speed': 'Скорость передвижения',\r\n  'movement_penalty': 'Скорость передвижения',\r\n  'perception': 'Восприятие',\r\n  'combat_damage': 'Урон в бою',\r\n  'energy_regen': 'Восстановление энергии',\r\n  'stealth': 'Скрытность',\r\n  'cultivation_insight': 'Шанс получить прозрение',\r\n  'special_resources': 'Особые ресурсы',\r\n  'special_encounters': 'Особые встречи',\r\n  'market_discount': 'Скидка на рынке',\r\n  'double_loot': 'Шанс двойной добычи',\r\n  'reduced_encounter': 'Снижение шанса случайных встреч',\r\n  'resistance_required': 'Требуется сопротивление',\r\n  'energy_drain': 'Расход энергии',\r\n  'max_energy': 'Максимальная энергия',\r\n  \r\n  // Стихийные культивации\r\n  'fire_cultivation': 'Огненная культивация',\r\n  'water_cultivation': 'Водная культивация',\r\n  'earth_cultivation': 'Земляная культивация',\r\n  'wind_cultivation': 'Культивация ветра',\r\n  'lightning_cultivation': 'Культивация молнии',\r\n  'dark_cultivation': 'Тёмная культивация',\r\n  'light_cultivation': 'Светлая культивация',\r\n  \r\n  // Бонусы сбора ресурсов\r\n  'gathering_speed': 'Скорость сбора',\r\n  'mineral_bonus': 'Бонус минералов',\r\n  'herbs': 'Сбор трав',\r\n  'ores': 'Сбор руд',\r\n  'crystals': 'Сбор кристаллов',\r\n  'food': 'Сбор пищи',\r\n  \r\n  // Погодные эффекты грозы\r\n  'combat_damage (thunderstorm)': 'Урон в бою (гроза)',\r\n  'gathering_speed (thunderstorm)': 'Скорость сбора (гроза)',\r\n  'lightning_cultivation (thunderstorm)': 'Культивация молнии (гроза)',\r\n  'movement_speed (thunderstorm)': 'Скорость передвижения (гроза)',\r\n  'perception (thunderstorm)': 'Восприятие (гроза)',\r\n  'resource_bonus (thunderstorm)': 'Бонус ресурсов (гроза)'\r\n};\r\n\r\n/**\r\n * Создает \"чистый\" эффект грозы с особым типом\r\n * @param {string} type - Базовый тип эффекта\r\n * @param {number} modifier - Значение модификатора\r\n * @returns {Object} Эффект грозы\r\n */\r\nconst createThunderstormEffect = (type, modifier) => {\r\n  // Создаем базовый чистый эффект\r\n  const effect = {\r\n    id: `${type}_thunderstorm`,\r\n    type: `${type}_thunderstorm`, // Добавляем суффикс для особой обработки\r\n    modifier: modifier,\r\n    icon: '⚡', // Специальная иконка для эффектов грозы\r\n    displayValue: `${modifier > 0 ? '+' : ''}${modifier}%`,\r\n  };\r\n  \r\n  // Определяем тип отображения\r\n  if (modifier > 0) {\r\n    effect.displayType = 'positive';\r\n  } else if (modifier < 0) {\r\n    effect.displayType = 'negative';\r\n  } else {\r\n    effect.displayType = 'neutral';\r\n  }\r\n  \r\n  // Задаем название с указанием, что это эффект грозы\r\n  if (effectTypeNames[`${type} (thunderstorm)`]) {\r\n    effect.name = effectTypeNames[`${type} (thunderstorm)`];\r\n  } else {\r\n    effect.name = `${type.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')} (гроза)`;\r\n  }\r\n  \r\n  return effect;\r\n};\r\n\r\n/**\r\n * Собирает все активные эффекты персонажа из разных источников\r\n * @param {Object} state - Текущее состояние игры\r\n * @returns {Array} Массив всех активных эффектов\r\n */\r\nexport const collectAllEffects = (state) => {\r\n  // Массивы для хранения обычных эффектов и эффектов грозы отдельно\r\n  const standardEffects = [];\r\n  const thunderstormEffects = [];\r\n  \r\n  // 1. Добавляем эффекты статуса игрока (если есть)\r\n  if (Array.isArray(state.player.statusEffects)) {\r\n    standardEffects.push(...state.player.statusEffects);\r\n  }\r\n  \r\n  // 2. Добавляем эффекты от секты (если игрок состоит в секте)\r\n  if (state.player.sect && Array.isArray(state.player.sect.benefits)) {\r\n    standardEffects.push(...state.player.sect.benefits);\r\n  }\r\n  \r\n  // 3. Добавляем эффекты от экипировки\r\n  if (state.player.inventory && state.player.inventory.equipment) {\r\n    const equipment = state.player.inventory.equipment;\r\n    \r\n    // Перебираем все слоты экипировки\r\n    Object.values(equipment).forEach(item => {\r\n      if (item && Array.isArray(item.effects)) {\r\n        standardEffects.push(...item.effects);\r\n      }\r\n    });\r\n  }\r\n  \r\n  // 4. Добавляем эффекты от активного духовного питомца\r\n  if (state.player.spiritPets && \r\n      state.player.spiritPets.activePetId && \r\n      state.player.spiritPets.pets) {\r\n    \r\n    const activePet = state.player.spiritPets.pets.find(\r\n      pet => pet.id === state.player.spiritPets.activePetId\r\n    );\r\n    \r\n    if (activePet && Array.isArray(activePet.effects)) {\r\n      standardEffects.push(...activePet.effects);\r\n    }\r\n  }\r\n  \r\n  // 5. Добавляем эффекты от погоды и окружения\r\n  if (state.world && state.world.weather) {\r\n    // Проверка разных путей к эффектам погоды\r\n    const weatherEffectsArray = Array.isArray(state.world.weather.effects) ? state.world.weather.effects :\r\n                            Array.isArray(state.world.weather.weatherEffects) ? state.world.weather.weatherEffects : [];\r\n    \r\n    //console.log('🌤️ collectAllEffects: Найдены эффекты погоды:', weatherEffectsArray);\r\n    \r\n    if (weatherEffectsArray.length > 0) {\r\n      if (state.world.weather.currentWeather === 'thunderstorm') {\r\n        // Для грозы создаем специальные эффекты с отдельным типом\r\n        weatherEffectsArray.forEach(effect => {\r\n          thunderstormEffects.push(\r\n            createThunderstormEffect(effect.type, effect.modifier || effect.value || 0)\r\n          );\r\n        });\r\n      } else {\r\n        // Обычные погодные эффекты\r\n        standardEffects.push(...weatherEffectsArray);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // 6. Добавляем эффекты от локации\r\n  if (state.world && state.world.currentLocation && Array.isArray(state.world.currentLocation.effects)) {\r\n    standardEffects.push(...state.world.currentLocation.effects);\r\n  }\r\n  \r\n  // 7. Временные боевые эффекты (если в бою)\r\n  if (state.gameState && \r\n      state.gameState.combat && \r\n      state.gameState.combat.active && \r\n      Array.isArray(state.gameState.combat.temporaryEffects)) {\r\n    \r\n    standardEffects.push(...state.gameState.combat.temporaryEffects);\r\n  }\r\n  \r\n  // Фильтруем недействительные эффекты\r\n  const validStandardEffects = standardEffects.filter(effect => effect !== null && effect !== undefined);\r\n  \r\n  // Импортируем функцию mergeEffects из effectsNormalizer.js\r\n  const { mergeEffects } = require('./effectsNormalizer');\r\n  \r\n  // Нормализуем и объединяем стандартные эффекты\r\n  const mergedStandardEffects = mergeEffects(validStandardEffects);\r\n  \r\n  // Объединяем оба массива эффектов (стандартные и грозы)\r\n  return [...mergedStandardEffects, ...thunderstormEffects];\r\n};\r\n\r\n/**\r\n * Стандартизирует формат эффекта для обеспечения совместимости,\r\n * очищая его от лишней информации\r\n * @param {Object} effect - Эффект для стандартизации\r\n * @returns {Object} Стандартизированный эффект\r\n */\r\nexport const standardizeEffect = (effect) => {\r\n  // Создаем новый объект (не меняем оригинальный)\r\n  const standardized = {};\r\n  \r\n  // Устанавливаем тип (самое важное поле)\r\n  standardized.type = effect.type || 'unknown';\r\n  \r\n  // Преобразование модификатора - основная функциональная часть эффекта\r\n  if (typeof effect.modifier === 'number') {\r\n    standardized.modifier = effect.modifier;\r\n  } else if (typeof effect.value === 'string') {\r\n    // Если модификатор указан в виде строки (например, \"+5%\")\r\n    const match = effect.value.match(/([+-]?\\d+(?:\\.\\d+)?)%?/);\r\n    if (match) {\r\n      const value = parseFloat(match[1]);\r\n      standardized.modifier = match[0].includes('%') ? value / 100 : value;\r\n    } else {\r\n      standardized.modifier = 0;\r\n    }\r\n  } else if (typeof effect.value === 'number') {\r\n    standardized.modifier = effect.value;\r\n  } else {\r\n    standardized.modifier = 0;\r\n  }\r\n  \r\n  // Получаем тип эффекта для дальнейшей русификации (без учета источника)\r\n  let effectKey = standardized.type;\r\n  \r\n  // Находим русское название без привязки к источнику\r\n  if (effectTypeNames[effectKey]) {\r\n    standardized.name = effectTypeNames[effectKey];\r\n  } else {\r\n    // Если нет русификации, создаем понятное имя из типа\r\n    standardized.name = standardized.type\r\n      .split('_')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  }\r\n  \r\n  // Определение типа отображения только на основе модификатора\r\n  if (standardized.modifier > 0) {\r\n    standardized.displayType = 'positive';\r\n  } else if (standardized.modifier < 0) {\r\n    standardized.displayType = 'negative';\r\n  } else {\r\n    standardized.displayType = 'neutral';\r\n  }\r\n  \r\n  // Форматирование значения для отображения\r\n  const absModifier = Math.abs(standardized.modifier);\r\n  let formattedValue;\r\n  \r\n  if (absModifier < 1 && absModifier > 0) {\r\n    // Дробное число (меньше 1) - умножаем на 100 для процентов\r\n    formattedValue = `${standardized.modifier > 0 ? '+' : '-'}${(absModifier * 100).toFixed(0)}%`;\r\n  } else {\r\n    // Целое или большое дробное число\r\n    formattedValue = `${standardized.modifier > 0 ? '+' : '-'}${absModifier}%`;\r\n  }\r\n  \r\n  standardized.displayValue = formattedValue;\r\n  \r\n  // Установка стандартного значка на основе типа\r\n  standardized.icon = standardized.displayType === 'positive' \r\n    ? '✨' \r\n    : standardized.displayType === 'negative' \r\n      ? '🔻' \r\n      : '⚪';\r\n  \r\n  // Используем тип в качестве ID для группировки одинаковых эффектов\r\n  standardized.id = standardized.type;\r\n  \r\n  return standardized;\r\n};\r\n\r\n/**\r\n * Применяет эффекты к базовым характеристикам\r\n * @param {Object} baseStats - Базовые характеристики\r\n * @param {Array} effects - Массив эффектов для применения\r\n * @returns {Object} Характеристики с примененными эффектами\r\n */\r\nexport const applyEffectsToStats = (baseStats, effects) => {\r\n  if (!Array.isArray(effects) || effects.length === 0) {\r\n    return baseStats;\r\n  }\r\n  \r\n  const result = { ...baseStats };\r\n  \r\n  // Группируем эффекты по типу статистики, к которой они применяются\r\n  const effectsByType = {};\r\n  \r\n  effects.forEach(effect => {\r\n    if (!effect.type) return;\r\n    \r\n    if (!effectsByType[effect.type]) {\r\n      effectsByType[effect.type] = [];\r\n    }\r\n    effectsByType[effect.type].push(effect);\r\n  });\r\n  \r\n  // Применяем эффекты к соответствующим характеристикам\r\n  const statMapping = {\r\n    'strength_bonus': 'strength',\r\n    'agility_bonus': 'agility',\r\n    'constitution_bonus': 'constitution',\r\n    'intelligence_bonus': 'intelligence',\r\n    'perception_bonus': 'perception',\r\n    'willpower_bonus': 'willpower',\r\n    'cultivation_bonus': 'cultivationSpeed',\r\n    'resource_bonus': 'resourceGatheringSpeed',\r\n    'stealth_bonus': 'stealth',\r\n    'perception_bonus': 'perception',\r\n    'cultivation_regen': 'energyRegen',\r\n    'movement_bonus': 'movementSpeed',\r\n    'equipment_discount': 'equipmentDiscount'\r\n  };\r\n  \r\n  // Применяем эффекты с процентными модификаторами\r\n  Object.entries(effectsByType).forEach(([type, typeEffects]) => {\r\n    const statName = statMapping[type];\r\n    \r\n    if (statName && result[statName] !== undefined) {\r\n      // Получаем базовое значение характеристики\r\n      const baseValue = result[statName];\r\n      \r\n      // Применяем процентные модификаторы\r\n      const percentModifier = typeEffects.reduce((total, effect) => {\r\n        if (typeof effect.modifier === 'number') {\r\n          return total + effect.modifier;\r\n        }\r\n        return total;\r\n      }, 0);\r\n      \r\n      // Применяем абсолютные модификаторы (если есть)\r\n      const absoluteModifier = typeEffects.reduce((total, effect) => {\r\n        if (effect.absoluteValue && typeof effect.absoluteValue === 'number') {\r\n          return total + effect.absoluteValue;\r\n        }\r\n        return total;\r\n      }, 0);\r\n      \r\n      // Вычисляем новое значение с учетом процентного и абсолютного модификаторов\r\n      result[statName] = baseValue * (1 + percentModifier) + absoluteModifier;\r\n    }\r\n  });\r\n  \r\n  return result;\r\n};\r\n","/**\r\n * Данные о NPC-торговцах в игре\r\n * Модуль для получения данных о торговцев из базы данных\r\n */\r\n\r\n// Импортируем необходимые зависимости\r\nconst { calculateMerchantDiscount, applyLoyaltyDiscount } = require('../utils/sectRelationshipSyncer');\r\nconst { unifiedDatabase, initializeDatabaseConnection } = require('../services/database-connection-manager');\r\nconst { Sequelize } = require('sequelize');\r\nlet sequelize;\r\n\r\n// Переменная для хранения экземпляра Sequelize\r\nlet sequelizeInstance = null;\r\n\r\n// Асинхронная функция для получения экземпляра Sequelize\r\nasync function getSequelizeInstance() {\r\n  if (!sequelize) {\r\n    const { db } = await initializeDatabaseConnection();\r\n    sequelize = db;\r\n  }\r\n  return sequelize;\r\n}\r\n\r\n/**\r\n * Преобразование данных из формата БД\r\n * @param {Object} merchantDB - Объект торговца из БД\r\n * @returns {Promise<Object>} - Преобразованный объект торговца\r\n */\r\nasync function convertMerchantFromDB(merchantDB) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n\r\n    // Получаем инвентарь торговца\r\n    const inventoryItems = await unifiedDatabase.query(\r\n      'SELECT * FROM merchant_inventories WHERE \"merchantId\" = :merchantId',\r\n      {\r\n        replacements: { merchantId: merchantDB.id },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    // Преобразуем предметы инвентаря\r\n    const items = await Promise.all(inventoryItems.map(async item => {\r\n      // Получаем экземпляр Sequelize\r\n      const seq = await getSequelizeInstance();\r\n      \r\n      // Получаем эффекты предмета из БД\r\n      const effects = await unifiedDatabase.query(\r\n        'SELECT * FROM item_effects WHERE item_id = :itemId',\r\n        {\r\n          replacements: { itemId: item.id },\r\n          type: seq.QueryTypes.SELECT\r\n        }\r\n      );\r\n      \r\n      // Получаем требования предмета из БД\r\n      const requirements = await unifiedDatabase.query(\r\n        'SELECT * FROM item_requirements WHERE item_id = :itemId',\r\n        {\r\n          replacements: { itemId: item.id },\r\n          type: seq.QueryTypes.SELECT\r\n        }\r\n      );\r\n      \r\n      // Формируем свойства предмета\r\n      const properties = {};\r\n      \r\n      if (effects.length > 0) {\r\n        properties.effects = effects.map(effect => ({\r\n          type: effect.type,\r\n          target: effect.target,\r\n          value: parseFloat(effect.value),\r\n          operation: effect.operation,\r\n          duration: effect.duration ? parseInt(effect.duration) : undefined\r\n        }));\r\n      }\r\n      \r\n      if (requirements.length > 0) {\r\n        properties.requirements = {};\r\n        requirements.forEach(req => {\r\n          properties.requirements[req.type] = req.value;\r\n        });\r\n      }\r\n      \r\n      // Заполняем дополнительные поля для определенных типов предметов\r\n      if (item.itemType === 'pet_food') {\r\n        properties.nutritionValue = item.nutritionValue || 0;\r\n        properties.loyaltyBonus = item.loyaltyBonus || 0;\r\n      }\r\n      \r\n      // Возвращаем объект предмета в формате для клиента\r\n      return {\r\n        itemId: item.itemId,\r\n        itemType: item.itemType,\r\n        name: item.name,\r\n        description: item.description,\r\n        basePrice: item.price,\r\n        quantity: item.quantity,\r\n        maxQuantity: item.maxQuantity || item.quantity,\r\n        restockRate: parseFloat(item.restockRate || 0),\r\n        lastRestockTime: item.lastRestockTime || 0,\r\n        rarity: item.rarity,\r\n        ...(Object.keys(properties).length > 0 ? { properties } : {})\r\n      };\r\n    }));\r\n    \r\n    // Возвращаем объект торговца\r\n    return {\r\n      id: merchantDB.id,\r\n      name: merchantDB.name,\r\n      description: merchantDB.description,\r\n      location: merchantDB.location,\r\n      specialization: merchantDB.specialization,\r\n      reputation: merchantDB.reputation || 75,\r\n      items\r\n    };\r\n  } catch (error) {\r\n    console.error(`Ошибка при преобразовании данных торговца:`, error);\r\n    return {\r\n      id: merchantDB.id,\r\n      name: merchantDB.name,\r\n      description: merchantDB.description,\r\n      location: merchantDB.location,\r\n      specialization: merchantDB.specialization,\r\n      reputation: merchantDB.reputation || 75,\r\n      items: []\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для получения всех торговцев из БД\r\n * @returns {Promise<Array>} Массив всех торговцев\r\n */\r\nasync function getAllMerchants() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n\r\n    const merchantsFromDB = await unifiedDatabase.query(\r\n      'SELECT * FROM merchants',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    return Promise.all(merchantsFromDB.map(convertMerchantFromDB));\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке торговцев из БД:', error);\r\n    return merchants; // В случае ошибки возвращаем кэшированные данные\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для получения торговца по ID из БД\r\n * @param {number} id ID торговца\r\n * @returns {Promise<Object|null>} Объект торговца или null, если торговец не найден\r\n */\r\nasync function getMerchantById(id) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n\r\n    const [merchant] = await unifiedDatabase.query(\r\n      'SELECT * FROM merchants WHERE id = :id',\r\n      {\r\n        replacements: { id },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    if (!merchant) return null;\r\n    \r\n    return convertMerchantFromDB(merchant);\r\n  } catch (error) {\r\n    console.error(`Ошибка при загрузке торговца с ID ${id} из БД:`, error);\r\n    // Возвращаем торговца из кэша, если он есть\r\n    return merchants.find(m => m.id === id) || null;\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для получения торговцев по локации из БД\r\n * @param {string} location Название локации\r\n * @returns {Promise<Array>} Массив торговцев в указанной локации\r\n */\r\nasync function getMerchantsByLocation(location) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n\r\n    const merchantsFromDB = await unifiedDatabase.query(\r\n      'SELECT * FROM merchants WHERE location = :location',\r\n      {\r\n        replacements: { location },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    return Promise.all(merchantsFromDB.map(convertMerchantFromDB));\r\n  } catch (error) {\r\n    console.error(`Ошибка при загрузке торговцев из локации ${location}:`, error);\r\n    // В случае ошибки возвращаем из кэша\r\n    return merchants.filter(m => m.location === location);\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для получения торговцев по специализации из БД\r\n * @param {string} specialization Специализация торговца\r\n * @returns {Promise<Array>} Массив торговцев с указанной специализацией\r\n */\r\nasync function getMerchantsBySpecialization(specialization) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n\r\n    const merchantsFromDB = await unifiedDatabase.query(\r\n      'SELECT * FROM merchants WHERE specialization = :specialization',\r\n      {\r\n        replacements: { specialization },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    return Promise.all(merchantsFromDB.map(convertMerchantFromDB));\r\n  } catch (error) {\r\n    console.error(`Ошибка при загрузке торговцев специализации ${specialization}:`, error);\r\n    // В случае ошибки возвращаем из кэша\r\n    return merchants.filter(m => m.specialization === specialization);\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для расчета цены предмета с учетом репутации игрока у торговца\r\n * @param {number} basePrice Базовая цена предмета\r\n * @param {number} merchantReputation Репутация торговца\r\n * @param {number} playerReputation Репутация игрока у торговца\r\n * @returns {number} Итоговая цена предмета\r\n */\r\nfunction calculatePrice(basePrice, merchantReputation, playerReputation) {  \r\n  // Базовый множитель цены зависит от репутации торговца\r\n  const basePriceMultiplier = 1 + (100 - merchantReputation) / 100;\r\n  const adjustedBasePrice = Math.round(basePrice * basePriceMultiplier);\r\n  \r\n  // Используем нашу систему скидок/наценок на основе лояльности\r\n  const { finalPrice } = applyLoyaltyDiscount(adjustedBasePrice, playerReputation);\r\n  \r\n  // Итоговая цена\r\n  return Math.round(finalPrice);\r\n}\r\n\r\n/**\r\n * Функция для восстановления количества товаров у торговцев с течением игрового времени\r\n * @param {number} currentGameTime Текущее игровое время (в часах)\r\n * @returns {Promise<boolean>} Возвращает true, если были восстановлены товары\r\n */\r\nasync function restockMerchantItems(currentGameTime) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n\r\n    let restockHappened = false;\r\n    \r\n    // Получаем все предметы из инвентаря торговцев\r\n    const allItems = await unifiedDatabase.query(\r\n      'SELECT * FROM merchant_inventories',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Обрабатываем каждый предмет\r\n    for (const item of allItems) {\r\n      // Пропускаем бесконечные предметы\r\n      if (item.quantity === -1) continue;\r\n      \r\n      // Пропускаем предметы, у которых нет максимального количества или скорости восстановления\r\n      if (item.maxQuantity === undefined || item.restockRate === undefined || item.lastRestockTime === undefined) continue;\r\n      \r\n      // Если количество уже максимальное, пропускаем\r\n      if (item.quantity >= item.maxQuantity) continue;\r\n      \r\n      // Вычисляем, сколько времени прошло с последнего восстановления (в днях)\r\n      const daysSinceLastRestock = (currentGameTime - item.lastRestockTime) / 24;\r\n      \r\n      // Если прошло меньше чем 0.1 дня, пропускаем\r\n      if (daysSinceLastRestock < 0.1) continue;\r\n      \r\n      // Вычисляем, сколько единиц нужно восстановить\r\n      const unitsToRestock = Math.floor(daysSinceLastRestock * item.restockRate);\r\n      \r\n      if (unitsToRestock > 0) {\r\n        // Восстанавливаем товар, но не больше максимального количества\r\n        const oldQuantity = item.quantity;\r\n        item.quantity = Math.min(item.maxQuantity, item.quantity + unitsToRestock);\r\n        \r\n        // Обновляем время последнего восстановления\r\n        item.lastRestockTime = currentGameTime;\r\n        \r\n        // Сохраняем изменения\r\n        await unifiedDatabase.query(\r\n          'UPDATE merchant_inventories SET quantity = :quantity, \"lastRestockTime\" = :lastRestockTime WHERE id = :id',\r\n          {\r\n            replacements: { quantity: item.quantity, lastRestockTime: item.lastRestockTime, id: item.id },\r\n            type: seq.QueryTypes.UPDATE\r\n          }\r\n        );\r\n        \r\n        // Отмечаем, что произошло восстановление\r\n        if (oldQuantity !== item.quantity) {\r\n          restockHappened = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Также обновляем кэш, если он используется\r\n    if (merchants && merchants.length > 0 && restockHappened) {\r\n      merchants = await getAllMerchants();\r\n    }\r\n    \r\n    return restockHappened;\r\n  } catch (error) {\r\n    console.error('Ошибка при восстановлении товаров:', error);\r\n    \r\n    // В случае ошибки выполняем восстановление в кэше\r\n    let cacheRestockHappened = false;\r\n    \r\n    merchants.forEach(merchant => {\r\n      if (merchant.items && merchant.items.length > 0) {\r\n        merchant.items.forEach(item => {\r\n          if (item.maxQuantity !== undefined && \r\n              item.restockRate !== undefined && \r\n              item.lastRestockTime !== undefined &&\r\n              item.quantity < item.maxQuantity) {\r\n            \r\n            const daysSinceLastRestock = (currentGameTime - item.lastRestockTime) / 24;\r\n            \r\n            if (daysSinceLastRestock >= 0.1) {\r\n              const unitsToRestock = Math.floor(daysSinceLastRestock * item.restockRate);\r\n              \r\n              if (unitsToRestock > 0) {\r\n                const oldQuantity = item.quantity;\r\n                item.quantity = Math.min(item.maxQuantity, item.quantity + unitsToRestock);\r\n                item.lastRestockTime = currentGameTime;\r\n                \r\n                if (oldQuantity !== item.quantity) {\r\n                  cacheRestockHappened = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    \r\n    return cacheRestockHappened;\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для добавления предметов экипировки в инвентарь торговца\r\n * @param {Object} merchant Торговец, которому нужно добавить предметы\r\n * @returns {Promise<Object>} Обновленный объект торговца\r\n */\r\nasync function addEquipmentToMerchant(merchant) {\r\n  console.log(`Вызвана функция addEquipmentToMerchant для торговца: ${merchant?.name || 'неизвестен'}`);\r\n  \r\n  if (!merchant) {\r\n    console.warn('Передан пустой объект торговца, возвращаем без изменений');\r\n    return merchant;\r\n  }\r\n  \r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n\r\n    // Получаем торговца из БД\r\n    const [merchantFromDB] = await unifiedDatabase.query(\r\n      'SELECT * FROM merchants WHERE id = :id',\r\n      {\r\n        replacements: { id: merchant.id },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (!merchantFromDB) {\r\n      console.warn(`Торговец с ID ${merchant.id} не найден в БД, возвращаем без изменений`);\r\n      return merchant;\r\n    }\r\n    \r\n    // Преобразуем обновленного торговца\r\n    return convertMerchantFromDB(merchantFromDB);\r\n  } catch (error) {\r\n    console.error(`Ошибка при добавлении предметов экипировки торговцу ${merchant.name}:`, error);\r\n    return merchant;\r\n  }\r\n}\r\n\r\n/**\r\n * Функция для добавления алхимических ингредиентов к торговцам в игре\r\n * @param {Array} merchantsArray Массив торговцев\r\n * @returns {Promise<Array>} Обновленный массив торговцев с добавленными алхимическими ингредиентами\r\n */\r\nasync function addAlchemyItemsToMerchants(merchantsArray) {\r\n  try {\r\n    // Обновляем список торговцев из БД\r\n    return await getAllMerchants();\r\n  } catch (error) {\r\n    console.error('Ошибка при добавлении алхимических ингредиентов:', error);\r\n    return merchantsArray;\r\n  }\r\n}\r\n\r\n// Инициализация данных\r\nasync function initMerchantData() {\r\n  try {\r\n    merchants = await getAllMerchants();\r\n    return merchants;\r\n  } catch (error) {\r\n    console.error('Ошибка при инициализации данных торговцев:', error);\r\n    return merchants;\r\n  }\r\n}\r\n\r\n// Инициализируем данные при импорте модуля\r\ninitMerchantData().catch(error => {\r\n  console.error('Ошибка при инициализации данных торговцев:', error);\r\n});\r\n\r\n// Для обратной совместимости с существующим кодом\r\nlet merchants = [];\r\n\r\nmodule.exports = {\r\n  merchants,\r\n  getAllMerchants,\r\n  getMerchantById,\r\n  getMerchantsByLocation,\r\n  getMerchantsBySpecialization,\r\n  calculatePrice,\r\n  restockMerchantItems,\r\n  addEquipmentToMerchant,\r\n  addAlchemyItemsToMerchants\r\n};\r\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","const CultivationProgress = require('../models/cultivation-progress');\r\nconst User = require('../models/user');\r\nconst ResourceService = require('./resource-service');\r\n\r\n// Проверяем, находимся ли мы в браузере\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\n// Храним данные о культивации в памяти для браузера\r\nlet browserCultivationData = {};\r\n\r\n/**\r\n * Сервис для работы с данными о культивации\r\n */\r\nclass CultivationService {\r\n  /**\r\n   * Получение данных о культивации пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Данные о культивации\r\n   */\r\n  static async getCultivationProgress(userId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserCultivationData[userId]) {\r\n          // Если данных нет, создаем исходные данные\r\n          browserCultivationData[userId] = {\r\n            userId,\r\n            stage: 'Закалка тела',\r\n            level: 1,\r\n            experience: 0,\r\n            experienceToNextLevel: 100,\r\n            breakthroughProgress: 0,\r\n            dailyCultivationLimit: 1000,\r\n            dailyCultivationUsed: 0,\r\n            lastCultivationReset: new Date(),\r\n            energy: 100,\r\n            maxEnergy: 100,\r\n            tribulationCompleted: false,\r\n            insightPoints: 0,\r\n            bottleneckProgress: 0,\r\n            requiredBottleneckProgress: 100,\r\n            lastInsightTime: new Date(),\r\n            cultivationEfficiency: 1.0,\r\n            requiredResources: {}\r\n          };\r\n        }\r\n        \r\n        // Возвращаем данные из памяти\r\n        const cultivation = browserCultivationData[userId];\r\n        \r\n        return {\r\n          stage: cultivation.stage,\r\n          level: cultivation.level,\r\n          experience: cultivation.experience,\r\n          experienceToNextLevel: cultivation.experienceToNextLevel,\r\n          energy: cultivation.energy,\r\n          maxEnergy: cultivation.maxEnergy,\r\n          tribulationCompleted: cultivation.tribulationCompleted,\r\n          insightPoints: cultivation.insightPoints,\r\n          bottleneckProgress: cultivation.bottleneckProgress,\r\n          requiredBottleneckProgress: cultivation.requiredBottleneckProgress,\r\n          cultivationEfficiency: cultivation.cultivationEfficiency,\r\n          requiredResources: cultivation.requiredResources\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Проверяем, есть ли запись о культивации для пользователя\r\n        let cultivation = await CultivationProgress.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Если записи нет, создаем новую с начальными значениями\r\n        if (!cultivation) {\r\n          cultivation = await CultivationProgress.create({\r\n            userId,\r\n            stage: 'Закалка тела',\r\n            level: 1,\r\n            experience: 0,\r\n            experienceToNextLevel: 100,\r\n            breakthroughProgress: 0,\r\n            dailyCultivationLimit: 1000,\r\n            dailyCultivationUsed: 0,\r\n            lastCultivationReset: new Date(),\r\n            energy: 100,\r\n            maxEnergy: 100,\r\n            tribulationCompleted: false,\r\n            insightPoints: 0,\r\n            bottleneckProgress: 0,\r\n            requiredBottleneckProgress: 100,\r\n            lastInsightTime: new Date(),\r\n            cultivationEfficiency: 1.0,\r\n            requiredResources: {}\r\n          });\r\n        }\r\n        \r\n        // Преобразуем данные для клиента\r\n        return {\r\n          stage: cultivation.stage,\r\n          level: cultivation.level,\r\n          experience: cultivation.experience,\r\n          experienceToNextLevel: cultivation.experienceToNextLevel,\r\n          energy: cultivation.energy,\r\n          maxEnergy: cultivation.maxEnergy,\r\n          tribulationCompleted: cultivation.tribulationCompleted,\r\n          insightPoints: cultivation.insightPoints,\r\n          bottleneckProgress: cultivation.bottleneckProgress,\r\n          requiredBottleneckProgress: cultivation.requiredBottleneckProgress,\r\n          cultivationEfficiency: cultivation.cultivationEfficiency,\r\n          requiredResources: cultivation.requiredResources\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при получении данных о культивации:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление данных о культивации пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} data - Новые данные о культивации\r\n   * @returns {Promise<Object>} - Обновленные данные о культивации\r\n   */\r\n  static async updateCultivationProgress(userId, data) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserCultivationData[userId]) {\r\n          // Если данных нет, создаем исходные данные\r\n          browserCultivationData[userId] = {\r\n            userId,\r\n            stage: 'Закалка тела',\r\n            level: 1,\r\n            experience: 0,\r\n            experienceToNextLevel: 100,\r\n            breakthroughProgress: 0,\r\n            dailyCultivationLimit: 1000,\r\n            dailyCultivationUsed: 0,\r\n            lastCultivationReset: new Date(),\r\n            energy: 100,\r\n            maxEnergy: 100,\r\n            tribulationCompleted: false,\r\n            insightPoints: 0,\r\n            bottleneckProgress: 0,\r\n            requiredBottleneckProgress: 100,\r\n            lastInsightTime: new Date(),\r\n            cultivationEfficiency: 1.0,\r\n            requiredResources: {}\r\n          };\r\n        }\r\n        \r\n        // Обновляем данные в памяти\r\n        if (data.stage !== undefined && data.stage !== null) {\r\n          browserCultivationData[userId].stage = typeof data.stage === 'string' ? data.stage : 'Закалка тела';\r\n        }\r\n        \r\n        if (data.level !== undefined) {\r\n          browserCultivationData[userId].level = data.level;\r\n        }\r\n        \r\n        if (data.experience !== undefined) {\r\n          browserCultivationData[userId].experience = data.experience;\r\n        }\r\n        \r\n        if (data.experienceToNextLevel !== undefined) {\r\n          browserCultivationData[userId].experienceToNextLevel = data.experienceToNextLevel;\r\n        }\r\n        \r\n        if (data.energy !== undefined) {\r\n          browserCultivationData[userId].energy = data.energy;\r\n        }\r\n        \r\n        if (data.maxEnergy !== undefined) {\r\n          browserCultivationData[userId].maxEnergy = data.maxEnergy;\r\n        }\r\n        \r\n        if (data.tribulationCompleted !== undefined) {\r\n          browserCultivationData[userId].tribulationCompleted = data.tribulationCompleted;\r\n        }\r\n        \r\n        if (data.insightPoints !== undefined) {\r\n          browserCultivationData[userId].insightPoints = data.insightPoints;\r\n        }\r\n        \r\n        if (data.bottleneckProgress !== undefined) {\r\n          browserCultivationData[userId].bottleneckProgress = data.bottleneckProgress;\r\n        }\r\n        \r\n        if (data.requiredBottleneckProgress !== undefined) {\r\n          browserCultivationData[userId].requiredBottleneckProgress = data.requiredBottleneckProgress;\r\n        }\r\n        \r\n        if (data.cultivationEfficiency !== undefined) {\r\n          browserCultivationData[userId].cultivationEfficiency = data.cultivationEfficiency;\r\n        }\r\n        \r\n        if (data.requiredResources !== undefined) {\r\n          browserCultivationData[userId].requiredResources = data.requiredResources;\r\n        }\r\n        \r\n        // Возвращаем обновленные данные\r\n        const cultivation = browserCultivationData[userId];\r\n        \r\n        return {\r\n          stage: cultivation.stage,\r\n          level: cultivation.level,\r\n          experience: cultivation.experience,\r\n          experienceToNextLevel: cultivation.experienceToNextLevel,\r\n          energy: cultivation.energy,\r\n          maxEnergy: cultivation.maxEnergy,\r\n          tribulationCompleted: cultivation.tribulationCompleted,\r\n          insightPoints: cultivation.insightPoints,\r\n          bottleneckProgress: cultivation.bottleneckProgress,\r\n          requiredBottleneckProgress: cultivation.requiredBottleneckProgress,\r\n          cultivationEfficiency: cultivation.cultivationEfficiency,\r\n          requiredResources: cultivation.requiredResources\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем текущие данные о культивации\r\n        let cultivation = await CultivationProgress.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Если записи нет, создаем новую\r\n        if (!cultivation) {\r\n          cultivation = await CultivationProgress.create({\r\n            userId,\r\n            stage: 'Закалка тела',\r\n            level: 1,\r\n            experience: 0,\r\n            experienceToNextLevel: 100,\r\n            breakthroughProgress: 0,\r\n            dailyCultivationLimit: 1000,\r\n            dailyCultivationUsed: 0,\r\n            lastCultivationReset: new Date(),\r\n            energy: 100,\r\n            maxEnergy: 100,\r\n            tribulationCompleted: false,\r\n            insightPoints: 0,\r\n            bottleneckProgress: 0,\r\n            requiredBottleneckProgress: 100,\r\n            lastInsightTime: new Date(),\r\n            cultivationEfficiency: 1.0,\r\n            requiredResources: {}\r\n          });\r\n        }\r\n        \r\n        // Преобразуем данные из клиента в формат базы данных\r\n        const updateData = {};\r\n        \r\n        if (data.stage !== undefined && data.stage !== null) {\r\n          updateData.stage = typeof data.stage === 'string' ? data.stage : 'Закалка тела';\r\n        }\r\n        \r\n        if (data.level !== undefined) {\r\n          updateData.level = data.level;\r\n        }\r\n        \r\n        if (data.experience !== undefined) {\r\n          updateData.experience = data.experience;\r\n        }\r\n        \r\n        if (data.experienceToNextLevel !== undefined) {\r\n          updateData.experienceToNextLevel = data.experienceToNextLevel;\r\n        }\r\n        \r\n        if (data.energy !== undefined) {\r\n          updateData.energy = data.energy;\r\n        }\r\n        \r\n        if (data.maxEnergy !== undefined) {\r\n          updateData.maxEnergy = data.maxEnergy;\r\n        }\r\n        \r\n        if (data.tribulationCompleted !== undefined) {\r\n          updateData.tribulationCompleted = data.tribulationCompleted;\r\n        }\r\n        \r\n        if (data.insightPoints !== undefined) {\r\n          updateData.insightPoints = data.insightPoints;\r\n        }\r\n        \r\n        if (data.bottleneckProgress !== undefined) {\r\n          updateData.bottleneckProgress = data.bottleneckProgress;\r\n        }\r\n        \r\n        if (data.requiredBottleneckProgress !== undefined) {\r\n          updateData.requiredBottleneckProgress = data.requiredBottleneckProgress;\r\n        }\r\n        \r\n        if (data.cultivationEfficiency !== undefined) {\r\n          updateData.cultivationEfficiency = data.cultivationEfficiency;\r\n        }\r\n        \r\n        if (data.requiredResources !== undefined) {\r\n          updateData.requiredResources = data.requiredResources;\r\n        }\r\n        \r\n        // Обновляем данные\r\n        await cultivation.update(updateData);\r\n        \r\n        // Получаем обновленные данные\r\n        cultivation = await CultivationProgress.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Преобразуем данные для клиента\r\n        return {\r\n          stage: cultivation.stage,\r\n          level: cultivation.level,\r\n          experience: cultivation.experience,\r\n          experienceToNextLevel: cultivation.experienceToNextLevel,\r\n          energy: cultivation.energy,\r\n          maxEnergy: cultivation.maxEnergy,\r\n          tribulationCompleted: cultivation.tribulationCompleted,\r\n          insightPoints: cultivation.insightPoints,\r\n          bottleneckProgress: cultivation.bottleneckProgress,\r\n          requiredBottleneckProgress: cultivation.requiredBottleneckProgress,\r\n          cultivationEfficiency: cultivation.cultivationEfficiency,\r\n          requiredResources: cultivation.requiredResources\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении данных о культивации:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Генерация требований для прорыва на следующий уровень\r\n   * @param {string} stage - Текущая ступень культивации\r\n   * @param {number} level - Текущий уровень в ступени\r\n   * @returns {Object} - Требования для прорыва\r\n   */\r\n  static generateBreakthroughRequirements(stage, level) {\r\n    const requirements = {\r\n      resources: {},\r\n      tribulation: null,\r\n      bottleneckProgress: 0\r\n    };\r\n    \r\n    // Получаем требуемые ресурсы из сервиса ресурсов\r\n    requirements.resources = ResourceService.getBreakthroughResources(stage, level);\r\n    \r\n    // Определяем требуемый прогресс \"бутылочного горлышка\" в зависимости от ступени и уровня\r\n    switch(stage.toLowerCase()) {\r\n      case 'закалка тела':\r\n        requirements.bottleneckProgress = level * 10;\r\n        break;\r\n      case 'очищение ци':\r\n        requirements.bottleneckProgress = level * 15;\r\n        break;\r\n      case 'золотое ядро':\r\n        requirements.bottleneckProgress = level * 20;\r\n        break;\r\n      case 'формирование души':\r\n        requirements.bottleneckProgress = level * 25;\r\n        break;\r\n      default:\r\n        requirements.bottleneckProgress = level * 10;\r\n    }\r\n    \r\n    // Определяем тип трибуляции в зависимости от ступени и уровня\r\n    if (level === 3 || level === 6 || level === 9) {\r\n      switch(stage.toLowerCase()) {\r\n        case 'закалка тела':\r\n          requirements.tribulation = {\r\n            type: 'физическая',\r\n            difficulty: level * 10,\r\n            description: 'Испытание на выносливость и силу тела'\r\n          };\r\n          break;\r\n          \r\n        case 'очищение ци':\r\n          requirements.tribulation = {\r\n            type: 'энергетическая',\r\n            difficulty: level * 15,\r\n            description: 'Испытание на контроль энергии и меридианов'\r\n          };\r\n          break;\r\n          \r\n        case 'золотое ядро':\r\n          requirements.tribulation = {\r\n            type: 'грозовая',\r\n            difficulty: level * 20,\r\n            description: 'Испытание на стойкость перед стихийными силами'\r\n          };\r\n          break;\r\n          \r\n        case 'формирование души':\r\n          requirements.tribulation = {\r\n            type: 'духовная',\r\n            difficulty: level * 25,\r\n            description: 'Испытание на силу духа и ментальную стойкость'\r\n          };\r\n          break;\r\n          \r\n        default:\r\n          requirements.tribulation = {\r\n            type: 'базовая',\r\n            difficulty: level * 10,\r\n            description: 'Базовое испытание культивации'\r\n          };\r\n      }\r\n    }\r\n    \r\n    return requirements;\r\n  }\r\n  \r\n  /**\r\n   * Проверка возможности прорыва на следующий уровень\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Результат проверки\r\n   */\r\n  static async checkBreakthroughPossibility(userId) {\r\n    try {\r\n      let cultivation;\r\n      \r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        cultivation = browserCultivationData[userId];\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            canBreakthrough: false,\r\n            requirements: null,\r\n            missingRequirements: null,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n      } else {\r\n        // На сервере используем базу данных\r\n        cultivation = await CultivationProgress.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            canBreakthrough: false,\r\n            requirements: null,\r\n            missingRequirements: null,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n      }\r\n      \r\n      // Проверяем базовые требования (опыт и энергия)\r\n      const hasEnoughExperience = cultivation.experience >= cultivation.experienceToNextLevel;\r\n      const hasEnoughEnergy = cultivation.energy >= cultivation.maxEnergy * 0.8;\r\n      \r\n      // Проверяем прохождение трибуляции, если она требуется\r\n      const needsTribulation = (cultivation.level === 3 || cultivation.level === 6 || cultivation.level === 9);\r\n      const passedTribulation = !needsTribulation || cultivation.tribulationCompleted;\r\n      \r\n      // Проверяем прогресс \"бутылочного горлышка\"\r\n      const passedBottleneck = cultivation.bottleneckProgress >= cultivation.requiredBottleneckProgress;\r\n      \r\n      // Получаем требования для прорыва\r\n      const requirements = this.generateBreakthroughRequirements(cultivation.stage, cultivation.level);\r\n      \r\n      // Проверяем наличие требуемых ресурсов\r\n      // Здесь должна быть логика проверки инвентаря пользователя\r\n      // Для примера предположим, что у пользователя есть все ресурсы\r\n      const hasRequiredResources = true;\r\n      \r\n      // Формируем результат проверки\r\n      const canBreakthrough = hasEnoughExperience && hasEnoughEnergy && passedTribulation && passedBottleneck && hasRequiredResources;\r\n      \r\n      // Формируем список недостающих требований\r\n      const missingRequirements = [];\r\n      \r\n      if (!hasEnoughExperience) {\r\n        missingRequirements.push(`Недостаточно опыта (${cultivation.experience}/${cultivation.experienceToNextLevel})`);\r\n      }\r\n      \r\n      if (!hasEnoughEnergy) {\r\n        missingRequirements.push(`Недостаточно энергии (требуется 80% от максимума)`);\r\n      }\r\n      \r\n      if (needsTribulation && !passedTribulation) {\r\n        missingRequirements.push(`Не пройдена трибуляция (${requirements.tribulation.type})`);\r\n      }\r\n      \r\n      if (!passedBottleneck) {\r\n        missingRequirements.push(`Не преодолено \"бутылочное горлышко\" (${cultivation.bottleneckProgress}/${cultivation.requiredBottleneckProgress})`);\r\n      }\r\n      \r\n      if (!hasRequiredResources) {\r\n        missingRequirements.push('Недостаточно ресурсов для прорыва');\r\n      }\r\n      \r\n      return {\r\n        canBreakthrough,\r\n        requirements,\r\n        missingRequirements,\r\n        message: canBreakthrough \r\n          ? 'Вы готовы к прорыву!' \r\n          : 'Для прорыва необходимо выполнить дополнительные требования'\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при проверке возможности прорыва:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Выполнение трибуляции\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} tribulationResult - Результат прохождения трибуляции\r\n   */\r\n  static async completeTribulation(userId, tribulationResult) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        const cultivation = browserCultivationData[userId];\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            success: false,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n        \r\n        // Проверяем успешность прохождения трибуляции\r\n        if (tribulationResult.success) {\r\n          // Обновляем статус трибуляции\r\n          cultivation.tribulationCompleted = true;\r\n          \r\n          // Возвращаем результат\r\n          return {\r\n            success: true,\r\n            message: 'Трибуляция успешно пройдена!',\r\n            rewards: tribulationResult.rewards || {}\r\n          };\r\n        } else {\r\n          // Если трибуляция не пройдена, возвращаем сообщение об ошибке\r\n          return {\r\n            success: false,\r\n            message: tribulationResult.message || 'Трибуляция не пройдена',\r\n            penalties: tribulationResult.penalties || {}\r\n          };\r\n        }\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const cultivation = await CultivationProgress.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            success: false,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n        \r\n        // Проверяем успешность прохождения трибуляции\r\n        if (tribulationResult.success) {\r\n          // Обновляем статус трибуляции\r\n          await cultivation.update({\r\n            tribulationCompleted: true\r\n          });\r\n          \r\n          // Возвращаем результат\r\n          return {\r\n            success: true,\r\n            message: 'Трибуляция успешно пройдена!',\r\n            rewards: tribulationResult.rewards || {}\r\n          };\r\n        } else {\r\n          // Если трибуляция не пройдена, возвращаем сообщение об ошибке\r\n          return {\r\n            success: false,\r\n            message: tribulationResult.message || 'Трибуляция не пройдена',\r\n            penalties: tribulationResult.penalties || {}\r\n          };\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при выполнении трибуляции:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Увеличение прогресса \"бутылочного горлышка\"\r\n   * @param {number} userId - ID пользователя\r\n   * @param {number} amount - Количество прогресса для добавления\r\n   * @returns {Promise<Object>} - Обновленные данные о культивации\r\n   */\r\n  static async increaseBottleneckProgress(userId, amount) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        const cultivation = browserCultivationData[userId];\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            success: false,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n        \r\n        // Увеличиваем прогресс \"бутылочного горлышка\"\r\n        const newProgress = Math.min(\r\n          cultivation.bottleneckProgress + amount,\r\n          cultivation.requiredBottleneckProgress\r\n        );\r\n        \r\n        // Обновляем данные в памяти\r\n        cultivation.bottleneckProgress = newProgress;\r\n        \r\n        // Проверяем, достигнут ли максимальный прогресс\r\n        const isCompleted = newProgress >= cultivation.requiredBottleneckProgress;\r\n        \r\n        // Возвращаем результат\r\n        return {\r\n          success: true,\r\n          bottleneckProgress: newProgress,\r\n          requiredBottleneckProgress: cultivation.requiredBottleneckProgress,\r\n          isCompleted,\r\n          message: isCompleted \r\n            ? 'Вы преодолели \"бутылочное горлышко\"!' \r\n            : `Прогресс увеличен (${newProgress}/${cultivation.requiredBottleneckProgress})`\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const cultivation = await CultivationProgress.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            success: false,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n        \r\n        // Увеличиваем прогресс \"бутылочного горлышка\"\r\n        const newProgress = Math.min(\r\n          cultivation.bottleneckProgress + amount,\r\n          cultivation.requiredBottleneckProgress\r\n        );\r\n        \r\n        // Обновляем данные\r\n        await cultivation.update({\r\n          bottleneckProgress: newProgress\r\n        });\r\n        \r\n        // Проверяем, достигнут ли максимальный прогресс\r\n        const isCompleted = newProgress >= cultivation.requiredBottleneckProgress;\r\n        \r\n        // Возвращаем результат\r\n        return {\r\n          success: true,\r\n          bottleneckProgress: newProgress,\r\n          requiredBottleneckProgress: cultivation.requiredBottleneckProgress,\r\n          isCompleted,\r\n          message: isCompleted \r\n            ? 'Вы преодолели \"бутылочное горлышко\"!' \r\n            : `Прогресс увеличен (${newProgress}/${cultivation.requiredBottleneckProgress})`\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при увеличении прогресса \"бутылочного горлышка\":', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение прозрения\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Результат получения прозрения\r\n   */\r\n  static async gainInsight(userId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        const cultivation = browserCultivationData[userId];\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            success: false,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n        \r\n        // Проверяем, прошло ли достаточно времени с последнего прозрения\r\n        const now = new Date();\r\n        const lastInsightTime = new Date(cultivation.lastInsightTime);\r\n        const hoursSinceLastInsight = (now - lastInsightTime) / (1000 * 60 * 60);\r\n        \r\n        if (hoursSinceLastInsight < 24) {\r\n          return {\r\n            success: false,\r\n            message: 'Вы недавно получили прозрение. Попробуйте позже.',\r\n            hoursRemaining: 24 - hoursSinceLastInsight\r\n          };\r\n        }\r\n        \r\n        // Генерируем случайное прозрение\r\n        const insightType = Math.floor(Math.random() * 4);\r\n        let insightEffect = {};\r\n        let insightMessage = '';\r\n        \r\n        switch (insightType) {\r\n          case 0: // Увеличение эффективности культивации\r\n            const efficiencyBonus = 0.1 + Math.random() * 0.2; // 10-30% бонус\r\n            insightEffect = {\r\n              cultivationEfficiency: Math.min(cultivation.cultivationEfficiency + efficiencyBonus, 2.0)\r\n            };\r\n            insightMessage = `Вы получили прозрение! Эффективность культивации увеличена на ${Math.floor(efficiencyBonus * 100)}%.`;\r\n            break;\r\n            \r\n          case 1: // Увеличение прогресса \"бутылочного горлышка\"\r\n            const bottleneckBonus = Math.floor(cultivation.requiredBottleneckProgress * (0.1 + Math.random() * 0.2)); // 10-30% прогресса\r\n            insightEffect = {\r\n              bottleneckProgress: Math.min(cultivation.bottleneckProgress + bottleneckBonus, cultivation.requiredBottleneckProgress)\r\n            };\r\n            insightMessage = `Вы получили прозрение! Прогресс \"бутылочного горлышка\" увеличен на ${bottleneckBonus} единиц.`;\r\n            break;\r\n            \r\n          case 2: // Увеличение опыта культивации\r\n            const experienceBonus = Math.floor(cultivation.experienceToNextLevel * (0.1 + Math.random() * 0.2)); // 10-30% опыта\r\n            insightEffect = {\r\n              experience: cultivation.experience + experienceBonus\r\n            };\r\n            insightMessage = `Вы получили прозрение! Получено ${experienceBonus} единиц опыта культивации.`;\r\n            break;\r\n            \r\n          case 3: // Увеличение максимальной энергии\r\n            const energyBonus = Math.floor(cultivation.maxEnergy * (0.05 + Math.random() * 0.1)); // 5-15% энергии\r\n            insightEffect = {\r\n              maxEnergy: cultivation.maxEnergy + energyBonus,\r\n              energy: cultivation.energy + energyBonus\r\n            };\r\n            insightMessage = `Вы получили прозрение! Максимальная энергия увеличена на ${energyBonus} единиц.`;\r\n            break;\r\n        }\r\n        \r\n        // Обновляем данные в памяти\r\n        if (insightEffect.cultivationEfficiency !== undefined) {\r\n          cultivation.cultivationEfficiency = insightEffect.cultivationEfficiency;\r\n        }\r\n        \r\n        if (insightEffect.bottleneckProgress !== undefined) {\r\n          cultivation.bottleneckProgress = insightEffect.bottleneckProgress;\r\n        }\r\n        \r\n        if (insightEffect.experience !== undefined) {\r\n          cultivation.experience = insightEffect.experience;\r\n        }\r\n        \r\n        if (insightEffect.maxEnergy !== undefined) {\r\n          cultivation.maxEnergy = insightEffect.maxEnergy;\r\n          cultivation.energy = insightEffect.energy;\r\n        }\r\n        \r\n        cultivation.insightPoints = (cultivation.insightPoints || 0) + 1;\r\n        cultivation.lastInsightTime = now;\r\n        \r\n        // Возвращаем результат\r\n        return {\r\n          success: true,\r\n          message: insightMessage,\r\n          effect: insightEffect\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const cultivation = await CultivationProgress.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        if (!cultivation) {\r\n          return {\r\n            success: false,\r\n            message: 'Данные о культивации не найдены'\r\n          };\r\n        }\r\n        \r\n        // Проверяем, прошло ли достаточно времени с последнего прозрения\r\n        const now = new Date();\r\n        const lastInsightTime = new Date(cultivation.lastInsightTime);\r\n        const hoursSinceLastInsight = (now - lastInsightTime) / (1000 * 60 * 60);\r\n        \r\n        if (hoursSinceLastInsight < 24) {\r\n          return {\r\n            success: false,\r\n            message: 'Вы недавно получили прозрение. Попробуйте позже.',\r\n            hoursRemaining: 24 - hoursSinceLastInsight\r\n          };\r\n        }\r\n        \r\n        // Генерируем случайное прозрение\r\n        const insightType = Math.floor(Math.random() * 4);\r\n        let insightEffect = {};\r\n        let insightMessage = '';\r\n        \r\n        switch (insightType) {\r\n          case 0: // Увеличение эффективности культивации\r\n            const efficiencyBonus = 0.1 + Math.random() * 0.2; // 10-30% бонус\r\n            insightEffect = {\r\n              cultivationEfficiency: Math.min(cultivation.cultivationEfficiency + efficiencyBonus, 2.0)\r\n            };\r\n            insightMessage = `Вы получили прозрение! Эффективность культивации увеличена на ${Math.floor(efficiencyBonus * 100)}%.`;\r\n            break;\r\n            \r\n          case 1: // Увеличение прогресса \"бутылочного горлышка\"\r\n            const bottleneckBonus = Math.floor(cultivation.requiredBottleneckProgress * (0.1 + Math.random() * 0.2)); // 10-30% прогресса\r\n            insightEffect = {\r\n              bottleneckProgress: Math.min(cultivation.bottleneckProgress + bottleneckBonus, cultivation.requiredBottleneckProgress)\r\n            };\r\n            insightMessage = `Вы получили прозрение! Прогресс \"бутылочного горлышка\" увеличен на ${bottleneckBonus} единиц.`;\r\n            break;\r\n            \r\n          case 2: // Увеличение опыта культивации\r\n            const experienceBonus = Math.floor(cultivation.experienceToNextLevel * (0.1 + Math.random() * 0.2)); // 10-30% опыта\r\n            insightEffect = {\r\n              experience: cultivation.experience + experienceBonus\r\n            };\r\n            insightMessage = `Вы получили прозрение! Получено ${experienceBonus} единиц опыта культивации.`;\r\n            break;\r\n            \r\n          case 3: // Увеличение максимальной энергии\r\n            const energyBonus = Math.floor(cultivation.maxEnergy * (0.05 + Math.random() * 0.1)); // 5-15% энергии\r\n            insightEffect = {\r\n              maxEnergy: cultivation.maxEnergy + energyBonus,\r\n              energy: cultivation.energy + energyBonus\r\n            };\r\n            insightMessage = `Вы получили прозрение! Максимальная энергия увеличена на ${energyBonus} единиц.`;\r\n            break;\r\n        }\r\n        \r\n        // Обновляем данные о культивации\r\n        await cultivation.update({\r\n          ...insightEffect,\r\n          insightPoints: cultivation.insightPoints + 1,\r\n          lastInsightTime: now\r\n        });\r\n        \r\n        // Возвращаем результат\r\n        return {\r\n          success: true,\r\n          message: insightMessage,\r\n          effect: insightEffect\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при получении прозрения:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = CultivationService;\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// src/services/database.js\r\nconst Sequelize = require('sequelize');\r\nconst { initializeDatabaseConnection, unifiedDatabase } = require('./database-connection-manager');\r\n\r\n// Кэш для экземпляра sequelize\r\nlet sequelize = null;\r\n\r\n// Функция для добавления таймаута к промису\r\nfunction withTimeout(promise, timeoutMs, errorMessage) {\r\n  let timeoutId;\r\n  const timeoutPromise = new Promise((_, reject) => {\r\n    timeoutId = setTimeout(() => {\r\n      reject(new Error(errorMessage || 'Операция превысила время ожидания'));\r\n    }, timeoutMs);\r\n  });\r\n  \r\n  return Promise.race([\r\n    promise,\r\n    timeoutPromise\r\n  ]).finally(() => clearTimeout(timeoutId));\r\n}\r\n\r\n// Функция-одиночка для получения экземпляра sequelize\r\nasync function getSequelizeInstance() {\r\n  try {\r\n    if (!sequelize) {\r\n      console.log('Получение экземпляра Sequelize через database.js...');\r\n      // Используем унифицированный интерфейс вместо прямого вызова initializeDatabaseConnection\r\n      const result = await withTimeout(\r\n        unifiedDatabase.getSequelizeInstance(),\r\n        15000,\r\n        'Получение экземпляра Sequelize в database.js превысило время ожидания'\r\n      );\r\n      \r\n      if (!result || !result.db) {\r\n        throw new Error(\"КРИТИЧЕСКАЯ ОШИБКА: Инициализация БД вернула пустой результат\");\r\n      }\r\n      \r\n      sequelize = result.db;\r\n      console.log('Экземпляр Sequelize успешно получен в database.js');\r\n    }\r\n    return sequelize;\r\n  } catch (error) {\r\n    console.error(\"КРИТИЧЕСКАЯ ОШИБКА при получении экземпляра Sequelize:\", error.message);\r\n    // Выбрасываем ошибку вместо создания заглушки\r\n    throw new Error(`Не удалось подключиться к PostgreSQL: ${error.message}`);\r\n  }\r\n}\r\n\r\n// Создаем прокси со встроенными фейковыми свойствами и методами\r\nconst proxyBase = {\r\n  modelManager: {\r\n    getModel: function(name) {\r\n      console.warn(`[PROXY] Запрос модели ${name} через прокси`);\r\n      return null;\r\n    }\r\n  },\r\n  model: function(name) {\r\n    console.warn(`[PROXY] Запрос модели ${name} через прокси`);\r\n    return null;\r\n  },\r\n  define: function() {\r\n    console.warn(\"[PROXY] Попытка определения модели через прокси\");\r\n    return {};\r\n  },\r\n  authenticate: async function() {\r\n    console.warn(\"[PROXY] Попытка аутентификации через прокси\");\r\n    // Пытаемся аутентифицироваться с реальной БД\r\n    const seq = await getSequelizeInstance();\r\n    return seq.authenticate();\r\n  }\r\n};\r\n\r\n// Для обратной совместимости с существующими моделями\r\nconst sequelizeProxy = new Proxy(proxyBase, {\r\n  get: function(target, prop) {\r\n    // Если свойство уже есть в базовом объекте, возвращаем его\r\n    if (prop in target) {\r\n      if (typeof target[prop] === 'function') {\r\n        return (...args) => {\r\n          console.log(`[PROXY] Вызов метода ${prop} через прокси`);\r\n          return target[prop](...args);\r\n        };\r\n      }\r\n      return target[prop];\r\n    }\r\n    \r\n    // Специальная обработка для modelManager\r\n    if (prop === 'modelManager') {\r\n      return new Proxy(target.modelManager || {}, {\r\n        get: function(targetManager, managerProp) {\r\n          if (managerProp in targetManager) {\r\n            if (typeof targetManager[managerProp] === 'function') {\r\n              return function(...args) {\r\n                console.log(`[PROXY] Вызов modelManager.${managerProp}`);\r\n                return targetManager[managerProp](...args);\r\n              };\r\n            }\r\n            return targetManager[managerProp];\r\n          }\r\n          \r\n          return function(...args) {\r\n            console.log(`[PROXY] Перенаправление modelManager.${managerProp} на реальный Sequelize`);\r\n            return getSequelizeInstance()\r\n              .then(seq => {\r\n                if (!seq || !seq.modelManager || typeof seq.modelManager[managerProp] !== 'function') {\r\n                  console.error(`[PROXY] Метод modelManager.${managerProp} недоступен`);\r\n                  throw new Error(`Метод modelManager.${managerProp} недоступен в Sequelize`);\r\n                }\r\n                return seq.modelManager[managerProp](...args);\r\n              })\r\n              .catch(err => {\r\n                console.error(`[PROXY] КРИТИЧЕСКАЯ ОШИБКА при вызове modelManager.${managerProp}:`, err);\r\n                throw err; // Пробрасываем ошибку дальше\r\n              });\r\n          };\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Для остальных свойств делегируем к реальному экземпляру\r\n    return function(...args) {\r\n      console.log(`[PROXY] Перенаправление метода ${prop} на реальный Sequelize`);\r\n      return getSequelizeInstance()\r\n        .then(seq => {\r\n          if (!seq || typeof seq[prop] !== 'function') {\r\n            console.error(`[PROXY] Метод ${prop} недоступен в реальном Sequelize`);\r\n            throw new Error(`Метод ${prop} недоступен в Sequelize`);\r\n          }\r\n          return seq[prop](...args);\r\n        })\r\n        .catch(err => {\r\n          console.error(`[PROXY] КРИТИЧЕСКАЯ ОШИБКА при вызове ${prop}:`, err);\r\n          throw err; // Пробрасываем ошибку дальше\r\n        });\r\n    };\r\n  }\r\n});\r\n\r\n// Экспортируем компоненты Sequelize, необходимые для моделей\r\nmodule.exports = {\r\n  Model: Sequelize.Model,\r\n  DataTypes: Sequelize.DataTypes,\r\n  sequelize: sequelizeProxy,\r\n  getSequelizeInstance // Экспортируем функцию для прямого получения экземпляра\r\n};\r\n","const CharacterStats = require('../models/character-stats');\r\nconst User = require('../models/user');\r\n\r\n// Проверяем, находимся ли мы в браузере\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\n// Храним данные о характеристиках в памяти для браузера\r\nlet browserCharacterStatsData = {};\r\n\r\n/**\r\n * Сервис для работы с характеристиками персонажа\r\n */\r\nclass CharacterStatsService {\r\n  /**\r\n   * Получение характеристик персонажа\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Характеристики персонажа\r\n   */\r\n  static async getCharacterStats(userId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserCharacterStatsData[userId]) {\r\n          // Если данных нет, создаем исходные данные\r\n          browserCharacterStatsData[userId] = {\r\n            userId,\r\n            strength: 10,\r\n            intellect: 10,\r\n            spirit: 10,\r\n            agility: 10,\r\n            health: 10,\r\n            physicalDefense: 0,\r\n            spiritualDefense: 0,\r\n            attackSpeed: 0,\r\n            criticalChance: 0,\r\n            movementSpeed: 0,\r\n            luck: 0\r\n          };\r\n        }\r\n        \r\n        // Возвращаем данные из памяти\r\n        const stats = browserCharacterStatsData[userId];\r\n        \r\n        return {\r\n          strength: stats.strength,\r\n          intellect: stats.intellect,\r\n          spirit: stats.spirit,\r\n          agility: stats.agility,\r\n          health: stats.health,\r\n          physicalDefense: stats.physicalDefense,\r\n          spiritualDefense: stats.spiritualDefense,\r\n          attackSpeed: stats.attackSpeed,\r\n          criticalChance: stats.criticalChance,\r\n          movementSpeed: stats.movementSpeed,\r\n          luck: stats.luck\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Проверяем, есть ли запись о характеристиках для пользователя\r\n        let stats = await CharacterStats.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Если записи нет, создаем новую с начальными значениями\r\n        if (!stats) {\r\n          stats = await CharacterStats.create({\r\n            userId,\r\n            strength: 10,\r\n            intellect: 10,\r\n            spirit: 10,\r\n            agility: 10,\r\n            health: 10,\r\n            physicalDefense: 0,\r\n            spiritualDefense: 0,\r\n            attackSpeed: 0,\r\n            criticalChance: 0,\r\n            movementSpeed: 0,\r\n            luck: 0\r\n          });\r\n        }\r\n        \r\n        // Преобразуем данные для клиента\r\n        return {\r\n          strength: stats.strength,\r\n          intellect: stats.intellect,\r\n          spirit: stats.spirit,\r\n          agility: stats.agility,\r\n          health: stats.health,\r\n          physicalDefense: stats.physicalDefense,\r\n          spiritualDefense: stats.spiritualDefense,\r\n          attackSpeed: stats.attackSpeed,\r\n          criticalChance: stats.criticalChance,\r\n          movementSpeed: stats.movementSpeed,\r\n          luck: stats.luck\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при получении характеристик персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление характеристик персонажа\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} data - Новые характеристики персонажа\r\n   * @returns {Promise<Object>} - Обновленные характеристики персонажа\r\n   */\r\n  static async updateCharacterStats(userId, data) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserCharacterStatsData[userId]) {\r\n          // Если данных нет, создаем исходные данные\r\n          browserCharacterStatsData[userId] = {\r\n            userId,\r\n            strength: 10,\r\n            intellect: 10,\r\n            spirit: 10,\r\n            agility: 10,\r\n            health: 10,\r\n            physicalDefense: 0,\r\n            spiritualDefense: 0,\r\n            attackSpeed: 0,\r\n            criticalChance: 0,\r\n            movementSpeed: 0,\r\n            luck: 0\r\n          };\r\n        }\r\n        \r\n        // Обновляем данные в памяти\r\n        const stats = browserCharacterStatsData[userId];\r\n        \r\n        browserCharacterStatsData[userId] = {\r\n          ...stats,\r\n          strength: data.strength !== undefined ? data.strength : stats.strength,\r\n          intellect: data.intellect !== undefined ? data.intellect : stats.intellect,\r\n          spirit: data.spirit !== undefined ? data.spirit : stats.spirit,\r\n          agility: data.agility !== undefined ? data.agility : stats.agility,\r\n          health: data.health !== undefined ? data.health : stats.health,\r\n          physicalDefense: data.physicalDefense !== undefined ? data.physicalDefense : stats.physicalDefense,\r\n          spiritualDefense: data.spiritualDefense !== undefined ? data.spiritualDefense : stats.spiritualDefense,\r\n          attackSpeed: data.attackSpeed !== undefined ? data.attackSpeed : stats.attackSpeed,\r\n          criticalChance: data.criticalChance !== undefined ? data.criticalChance : stats.criticalChance,\r\n          movementSpeed: data.movementSpeed !== undefined ? data.movementSpeed : stats.movementSpeed,\r\n          luck: data.luck !== undefined ? data.luck : stats.luck\r\n        };\r\n        \r\n        // Возвращаем обновленные данные\r\n        return {\r\n          strength: browserCharacterStatsData[userId].strength,\r\n          intellect: browserCharacterStatsData[userId].intellect,\r\n          spirit: browserCharacterStatsData[userId].spirit,\r\n          agility: browserCharacterStatsData[userId].agility,\r\n          health: browserCharacterStatsData[userId].health,\r\n          physicalDefense: browserCharacterStatsData[userId].physicalDefense,\r\n          spiritualDefense: browserCharacterStatsData[userId].spiritualDefense,\r\n          attackSpeed: browserCharacterStatsData[userId].attackSpeed,\r\n          criticalChance: browserCharacterStatsData[userId].criticalChance,\r\n          movementSpeed: browserCharacterStatsData[userId].movementSpeed,\r\n          luck: browserCharacterStatsData[userId].luck\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем текущие характеристики персонажа\r\n        let stats = await CharacterStats.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Если записи нет, создаем новую\r\n        if (!stats) {\r\n          stats = await CharacterStats.create({\r\n            userId,\r\n            strength: 10,\r\n            intellect: 10,\r\n            spirit: 10,\r\n            agility: 10,\r\n            health: 10,\r\n            physicalDefense: 0,\r\n            spiritualDefense: 0,\r\n            attackSpeed: 0,\r\n            criticalChance: 0,\r\n            movementSpeed: 0,\r\n            luck: 0\r\n          });\r\n        }\r\n        \r\n        // Обновляем характеристики\r\n        await stats.update({\r\n          strength: data.strength !== undefined ? data.strength : stats.strength,\r\n          intellect: data.intellect !== undefined ? data.intellect : stats.intellect,\r\n          spirit: data.spirit !== undefined ? data.spirit : stats.spirit,\r\n          agility: data.agility !== undefined ? data.agility : stats.agility,\r\n          health: data.health !== undefined ? data.health : stats.health,\r\n          physicalDefense: data.physicalDefense !== undefined ? data.physicalDefense : stats.physicalDefense,\r\n          spiritualDefense: data.spiritualDefense !== undefined ? data.spiritualDefense : stats.spiritualDefense,\r\n          attackSpeed: data.attackSpeed !== undefined ? data.attackSpeed : stats.attackSpeed,\r\n          criticalChance: data.criticalChance !== undefined ? data.criticalChance : stats.criticalChance,\r\n          movementSpeed: data.movementSpeed !== undefined ? data.movementSpeed : stats.movementSpeed,\r\n          luck: data.luck !== undefined ? data.luck : stats.luck\r\n        });\r\n        \r\n        // Получаем обновленные характеристики\r\n        stats = await CharacterStats.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Преобразуем данные для клиента\r\n        return {\r\n          strength: stats.strength,\r\n          intellect: stats.intellect,\r\n          spirit: stats.spirit,\r\n          agility: stats.agility,\r\n          health: stats.health,\r\n          physicalDefense: stats.physicalDefense,\r\n          spiritualDefense: stats.spiritualDefense,\r\n          attackSpeed: stats.attackSpeed,\r\n          criticalChance: stats.criticalChance,\r\n          movementSpeed: stats.movementSpeed,\r\n          luck: stats.luck\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении характеристик персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Расчет вторичных характеристик персонажа\r\n   * @param {Object} stats - Основные характеристики персонажа\r\n   * @param {Object} cultivation - Данные о культивации\r\n   * @returns {Promise<Object>} - Вторичные характеристики персонажа\r\n   */\r\n  static calculateSecondaryStats(stats, cultivation) {\r\n    try {\r\n      if (!stats || !cultivation) {\r\n        return {\r\n          physicalDefense: 0,\r\n          spiritualDefense: 0,\r\n          attackSpeed: 0,\r\n          criticalChance: 0,\r\n          movementSpeed: 0,\r\n          luck: 0\r\n        };\r\n      }\r\n      \r\n      // Расчет общего уровня культивации\r\n      const stageValues = {\r\n        'закалка тела': 0,\r\n        'очищение ци': 100,\r\n        'золотое ядро': 300,\r\n        'формирование души': 500\r\n      };\r\n      \r\n      // Проверяем наличие stage и level в объекте cultivation\r\n      const stage = cultivation.stage ? cultivation.stage.toLowerCase() : '';\r\n      const level = cultivation.level || 1;\r\n      \r\n      const totalLevel = (stageValues[stage] || 0) + (level - 1);\r\n      \r\n      // Расчет вторичных характеристик\r\n      return {\r\n        physicalAttack: Math.floor(stats.strength), // Физическая атака равна параметру силы\r\n        physicalDefense: Math.floor(stats.strength * 0.5 + stats.health * 0.3 + totalLevel * 0.2),\r\n        spiritualDefense: Math.floor(stats.spirit * 0.5 + stats.intellect * 0.3 + totalLevel * 0.2),\r\n        attackSpeed: Math.floor(stats.agility * 0.6 + totalLevel * 0.1),\r\n        criticalChance: Math.floor(stats.agility * 0.3 + stats.intellect * 0.2),\r\n        movementSpeed: Math.floor(stats.agility * 0.4 + totalLevel * 0.1),\r\n        luck: Math.floor((stats.spirit + stats.intellect) * 0.2)\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при расчете вторичных характеристик персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = CharacterStatsService;\r\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","/**\r\n * Файл с данными о ресурсах игры\r\n * Содержит информацию о всех ресурсах, их свойствах и эффектах\r\n * Получает данные из базы данных\r\n */\r\n\r\n// Импортируем модуль для работы с базой данных\r\nconst { unifiedDatabase, initializeDatabaseConnection } = require('../services/database-connection-manager');\r\nconst { Sequelize } = require('sequelize');\r\nlet sequelize;\r\n\r\n// Переменная для хранения экземпляра Sequelize\r\nlet sequelizeInstance = null;\r\n\r\n// Асинхронная функция для получения экземпляра Sequelize\r\nasync function getSequelizeInstance() {\r\n  if (!sequelize) {\r\n    const { db } = await initializeDatabaseConnection();\r\n    sequelize = db;\r\n  }\r\n  return sequelize;\r\n}\r\n// Типы ресурсов\r\nconst RESOURCE_TYPES = {\r\n  HERB: 'herb', // Травы\r\n  PILL: 'pill', // Пилюли\r\n  MINERAL: 'mineral', // Минералы\r\n  ESSENCE: 'essence', // Эссенции\r\n  MATERIAL: 'material', // Материалы\r\n  ARTIFACT: 'artifact', // Артефакты\r\n  SOUL: 'soul', // Души существ\r\n  CURRENCY: 'currency' // Валюта\r\n};\r\n\r\n// Редкость ресурсов\r\nconst RARITY = {\r\n  COMMON: 'common', // Обычный\r\n  UNCOMMON: 'uncommon', // Необычный\r\n  RARE: 'rare', // Редкий\r\n  EPIC: 'epic', // Эпический\r\n  LEGENDARY: 'legendary', // Легендарный\r\n  MYTHIC: 'mythic' // Мифический\r\n};\r\n\r\n// Кэш ресурсов для обратной совместимости\r\nlet resources = [];\r\n\r\n/**\r\n * Асинхронно загружает все ресурсы из базы данных\r\n * @returns {Promise<Array>} Массив ресурсов\r\n */\r\nasync function loadResources() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Выполняем SQL-запрос к базе данных для получения ресурсов\r\n    const resourcesData = await unifiedDatabase.query(\r\n      'SELECT * FROM resources',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Преобразуем данные из БД в нужный формат\r\n    const formattedResources = resourcesData.map(resource => ({\r\n      id: resource.id,\r\n      name: resource.name,\r\n      type: resource.type,\r\n      rarity: resource.rarity,\r\n      description: resource.description || '',\r\n      effects: resource.effects || {},\r\n      value: resource.value || 0,\r\n      stackable: resource.stackable || true,\r\n      maxStack: resource.max_stack || 99\r\n    }));\r\n    \r\n    // Обновляем кэш для обратной совместимости\r\n    resources = formattedResources;\r\n    \r\n    return formattedResources;\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке ресурсов из базы данных:', error);\r\n    // В случае ошибки возвращаем кэшированные данные\r\n    return resources;\r\n  }\r\n}\r\n\r\n/**\r\n * Асинхронно получает ресурс по ID\r\n * @param {string} id - ID ресурса\r\n * @returns {Promise<Object|null>} Ресурс или null, если не найден\r\n */\r\nasync function getResourceByIdAsync(id) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Выполняем SQL-запрос к базе данных для получения ресурса по ID\r\n    const resourceData = await unifiedDatabase.query(\r\n      'SELECT * FROM resources WHERE id = :id',\r\n      { \r\n        replacements: { id },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    // Если ресурс не найден, возвращаем null\r\n    if (resourceData.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    const resource = resourceData[0];\r\n    \r\n    // Преобразуем данные из БД в нужный формат\r\n    return {\r\n      id: resource.id,\r\n      name: resource.name,\r\n      type: resource.type,\r\n      rarity: resource.rarity,\r\n      description: resource.description || '',\r\n      effects: resource.effects || {},\r\n      value: resource.value || 0,\r\n      stackable: resource.stackable || true,\r\n      maxStack: resource.max_stack || 99\r\n    };\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении ресурса с ID ${id}:`, error);\r\n    // В случае ошибки ищем в кэше\r\n    return resources.find(resource => resource.id === id) || null;\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения ресурса по ID (для обратной совместимости)\r\n * @param {string} id - ID ресурса\r\n * @returns {Object|null} Ресурс или null, если не найден\r\n */\r\nfunction getResourceById(id) {\r\n  return resources.find(resource => resource.id === id) || null;\r\n}\r\n\r\n/**\r\n * Асинхронно получает ресурсы по типу\r\n * @param {string} type - Тип ресурса\r\n * @returns {Promise<Array>} Массив ресурсов указанного типа\r\n */\r\nasync function getResourcesByTypeAsync(type) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Выполняем SQL-запрос к базе данных для получения ресурсов по типу\r\n    const resourcesData = await unifiedDatabase.query(\r\n      'SELECT * FROM resources WHERE type = :type',\r\n      { \r\n        replacements: { type },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    // Преобразуем данные из БД в нужный формат\r\n    return resourcesData.map(resource => ({\r\n      id: resource.id,\r\n      name: resource.name,\r\n      type: resource.type,\r\n      rarity: resource.rarity,\r\n      description: resource.description || '',\r\n      effects: resource.effects || {},\r\n      value: resource.value || 0,\r\n      stackable: resource.stackable || true,\r\n      maxStack: resource.max_stack || 99\r\n    }));\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении ресурсов типа ${type}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return resources.filter(resource => resource.type === type);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения ресурсов по типу (для обратной совместимости)\r\n * @param {string} type - Тип ресурса\r\n * @returns {Array} Массив ресурсов указанного типа\r\n */\r\nfunction getResourcesByType(type) {\r\n  return resources.filter(resource => resource.type === type);\r\n}\r\n\r\n/**\r\n * Асинхронно получает ресурсы по редкости\r\n * @param {string} rarity - Редкость ресурса\r\n * @returns {Promise<Array>} Массив ресурсов указанной редкости\r\n */\r\nasync function getResourcesByRarityAsync(rarity) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Выполняем SQL-запрос к базе данных для получения ресурсов по редкости\r\n    const resourcesData = await unifiedDatabase.query(\r\n      'SELECT * FROM resources WHERE rarity = :rarity',\r\n      { \r\n        replacements: { rarity },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    // Преобразуем данные из БД в нужный формат\r\n    return resourcesData.map(resource => ({\r\n      id: resource.id,\r\n      name: resource.name,\r\n      type: resource.type,\r\n      rarity: resource.rarity,\r\n      description: resource.description || '',\r\n      effects: resource.effects || {},\r\n      value: resource.value || 0,\r\n      stackable: resource.stackable || true,\r\n      maxStack: resource.max_stack || 99\r\n    }));\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении ресурсов редкости ${rarity}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return resources.filter(resource => resource.rarity === rarity);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения ресурсов по редкости (для обратной совместимости)\r\n * @param {string} rarity - Редкость ресурса\r\n * @returns {Array} Массив ресурсов указанной редкости\r\n */\r\nfunction getResourcesByRarity(rarity) {\r\n  return resources.filter(resource => resource.rarity === rarity);\r\n}\r\n\r\n/**\r\n * Функция для получения ресурсов, необходимых для прорыва на определенной ступени и уровне\r\n * @param {string} stage - Название ступени\r\n * @param {number} level - Уровень\r\n * @returns {Object} Объект с ресурсами и их количеством\r\n */\r\nfunction getBreakthroughResources(stage, level) {\r\n  // Преобразуем название ступени к нижнему регистру для унификации\r\n  const stageLower = stage.toLowerCase();\r\n  \r\n  // Определяем требуемые ресурсы в зависимости от ступени и уровня\r\n  switch(stageLower) {\r\n    case 'закалка тела':\r\n      const resources = {\r\n        'low_grade_herb': Math.floor(level * 5 + Math.random() * 5),\r\n        'basic_pill': Math.floor(level * 2 + Math.random() * 3)\r\n      };\r\n      \r\n      if (level >= 7) {\r\n        resources['spirit_stone'] = Math.floor((level - 6) * 2);\r\n      }\r\n      \r\n      return resources;\r\n      \r\n    case 'очищение ци':\r\n      const qiResources = {\r\n        'medium_grade_herb': Math.floor(level * 4 + Math.random() * 6),\r\n        'qi_pill': Math.floor(level * 3 + Math.random() * 3),\r\n        'spirit_stone': Math.floor(level * 3 + Math.random() * 5)\r\n      };\r\n      \r\n      if (level >= 5) {\r\n        qiResources['spirit_mineral'] = Math.floor((level - 4) * 2);\r\n      }\r\n      \r\n      return qiResources;\r\n      \r\n    case 'золотое ядро':\r\n      return {\r\n        'rare_herb': Math.floor(level * 3 + Math.random() * 7),\r\n        'high_quality_pill': Math.floor(level * 2 + Math.random() * 4),\r\n        'spirit_mineral': Math.floor(level * 4 + Math.random() * 6),\r\n        'spirit_stone': Math.floor(level * 10 + Math.random() * 10)\r\n      };\r\n      \r\n    case 'формирование души':\r\n      return {\r\n        'exotic_herb': Math.floor(level * 2 + Math.random() * 8),\r\n        'spirit_essence': Math.floor(level * 3 + Math.random() * 5),\r\n        'beast_soul': Math.floor(level * 1 + Math.random() * 3),\r\n        'spirit_mineral': Math.floor(level * 8 + Math.random() * 12),\r\n        'spirit_stone': Math.floor(level * 20 + Math.random() * 20)\r\n      };\r\n      \r\n    default:\r\n      return {\r\n        'low_grade_herb': Math.floor(level * 5 + Math.random() * 5),\r\n        'basic_pill': Math.floor(level * 2 + Math.random() * 3)\r\n      };\r\n  }\r\n}\r\n\r\n// Асинхронно загружаем ресурсы при импорте модуля\r\nloadResources().catch(error => {\r\n  console.error('Ошибка при инициализации модуля ресурсов:', error);\r\n});\r\n\r\n// RESOURCE_TYPES и RARITY уже экспортированы через 'const export'\r\n// Экспортируем остальные функции и переменные\r\nexport {\r\n  resources,\r\n  \r\n  // Синхронные функции для обратной совместимости\r\n  getResourceById,\r\n  getResourcesByType,\r\n  getResourcesByRarity,\r\n  getBreakthroughResources,\r\n  \r\n  // Асинхронные функции для работы с БД\r\n  loadResources,\r\n  getResourceByIdAsync,\r\n  getResourcesByTypeAsync,\r\n  getResourcesByRarityAsync\r\n};\r\n","const InventoryItem = require('../models/inventory-item');\r\nconst User = require('../models/user');\r\n\r\n// Проверяем, находимся ли мы в браузере\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\n// Храним данные об инвентаре в памяти для браузера\r\nlet browserInventoryData = {};\r\n\r\n/**\r\n * Сервис для работы с инвентарем\r\n */\r\nclass InventoryService {\r\n  /**\r\n   * Получение всех предметов инвентаря пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Array>} - Массив предметов инвентаря\r\n   */\r\n  static async getInventoryItems(userId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserInventoryData[userId]) {\r\n          browserInventoryData[userId] = [];\r\n        }\r\n        \r\n        // Возвращаем данные из памяти\r\n        return browserInventoryData[userId].map(item => ({\r\n          id: item.itemId,\r\n          name: item.name,\r\n          type: item.type,\r\n          rarity: item.rarity,\r\n          quantity: item.quantity,\r\n          equipped: item.equipped,\r\n          ...item.properties\r\n        }));\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем все предметы инвентаря пользователя\r\n        const items = await InventoryItem.findAll({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Преобразуем данные для клиента\r\n        return items.map(item => ({\r\n          id: item.itemId,\r\n          name: item.name,\r\n          type: item.type,\r\n          rarity: item.rarity,\r\n          quantity: item.quantity,\r\n          equipped: item.equipped,\r\n          ...item.properties\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при получении предметов инвентаря:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Добавление предмета в инвентарь\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} item - Данные о предмете\r\n   * @returns {Promise<Object>} - Добавленный предмет\r\n   */\r\n  static async addInventoryItem(userId, item) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserInventoryData[userId]) {\r\n          browserInventoryData[userId] = [];\r\n        }\r\n        \r\n        // Проверяем, есть ли уже такой предмет в инвентаре\r\n        const existingItemIndex = browserInventoryData[userId].findIndex(\r\n          existingItem => existingItem.itemId === item.id\r\n        );\r\n        \r\n        if (existingItemIndex >= 0 && item.stackable !== false) {\r\n          // Если предмет уже есть и он складируемый, увеличиваем количество\r\n          browserInventoryData[userId][existingItemIndex].quantity += item.quantity || 1;\r\n          \r\n          const existingItem = browserInventoryData[userId][existingItemIndex];\r\n          \r\n          return {\r\n            id: existingItem.itemId,\r\n            name: existingItem.name,\r\n            type: existingItem.type,\r\n            rarity: existingItem.rarity,\r\n            quantity: existingItem.quantity,\r\n            equipped: existingItem.equipped,\r\n            ...existingItem.properties\r\n          };\r\n        } else {\r\n          // Если предмета нет или он не складируемый, создаем новый\r\n          const newItem = {\r\n            userId,\r\n            itemId: item.id,\r\n            name: item.name,\r\n            type: item.type || 'misc',\r\n            rarity: item.rarity || 'common',\r\n            quantity: item.quantity || 1,\r\n            equipped: item.equipped || false,\r\n            properties: {\r\n              description: item.description,\r\n              effects: item.effects,\r\n              requirements: item.requirements,\r\n              value: item.value,\r\n              ...item\r\n            }\r\n          };\r\n          \r\n          browserInventoryData[userId].push(newItem);\r\n          \r\n          return {\r\n            id: newItem.itemId,\r\n            name: newItem.name,\r\n            type: newItem.type,\r\n            rarity: newItem.rarity,\r\n            quantity: newItem.quantity,\r\n            equipped: newItem.equipped,\r\n            ...newItem.properties\r\n          };\r\n        }\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Проверяем, есть ли уже такой предмет в инвентаре\r\n        const existingItem = await InventoryItem.findOne({\r\n          where: { \r\n            userId,\r\n            itemId: item.id\r\n          }\r\n        });\r\n        \r\n        if (existingItem && item.stackable !== false) {\r\n          // Если предмет уже есть и он складируемый, увеличиваем количество\r\n          existingItem.quantity += item.quantity || 1;\r\n          await existingItem.save();\r\n          \r\n          return {\r\n            id: existingItem.itemId,\r\n            name: existingItem.name,\r\n            type: existingItem.type,\r\n            rarity: existingItem.rarity,\r\n            quantity: existingItem.quantity,\r\n            equipped: existingItem.equipped,\r\n            ...existingItem.properties\r\n          };\r\n        } else {\r\n          // Если предмета нет или он не складируемый, создаем новый\r\n          const newItem = await InventoryItem.create({\r\n            userId,\r\n            itemId: item.id,\r\n            name: item.name,\r\n            type: item.type || 'misc',\r\n            rarity: item.rarity || 'common',\r\n            quantity: item.quantity || 1,\r\n            equipped: item.equipped || false,\r\n            properties: {\r\n              description: item.description,\r\n              effects: item.effects,\r\n              requirements: item.requirements,\r\n              value: item.value,\r\n              ...item\r\n            }\r\n          });\r\n          \r\n          return {\r\n            id: newItem.itemId,\r\n            name: newItem.name,\r\n            type: newItem.type,\r\n            rarity: newItem.rarity,\r\n            quantity: newItem.quantity,\r\n            equipped: newItem.equipped,\r\n            ...newItem.properties\r\n          };\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при добавлении предмета в инвентарь:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Удаление предмета из инвентаря\r\n   * @param {number} userId - ID пользователя\r\n   * @param {string} itemId - ID предмета\r\n   * @param {number} quantity - Количество предметов для удаления (по умолчанию 1)\r\n   * @returns {Promise<boolean>} - Результат удаления\r\n   */\r\n  static async removeInventoryItem(userId, itemId, quantity = 1) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserInventoryData[userId]) {\r\n          browserInventoryData[userId] = [];\r\n        }\r\n        \r\n        // Получаем предмет из инвентаря\r\n        const itemIndex = browserInventoryData[userId].findIndex(\r\n          item => item.itemId === itemId\r\n        );\r\n        \r\n        if (itemIndex === -1) {\r\n          throw new Error('Предмет не найден в инвентаре');\r\n        }\r\n        \r\n        const item = browserInventoryData[userId][itemIndex];\r\n        \r\n        if (item.quantity > quantity) {\r\n          // Если предметов больше, чем нужно удалить, уменьшаем количество\r\n          item.quantity -= quantity;\r\n        } else {\r\n          // Если предметов меньше или равно, удаляем полностью\r\n          browserInventoryData[userId].splice(itemIndex, 1);\r\n        }\r\n        \r\n        return true;\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем предмет из инвентаря\r\n        const item = await InventoryItem.findOne({\r\n          where: { \r\n            userId,\r\n            itemId\r\n          }\r\n        });\r\n        \r\n        if (!item) {\r\n          throw new Error('Предмет не найден в инвентаре');\r\n        }\r\n        \r\n        if (item.quantity > quantity) {\r\n          // Если предметов больше, чем нужно удалить, уменьшаем количество\r\n          item.quantity -= quantity;\r\n          await item.save();\r\n        } else {\r\n          // Если предметов меньше или равно, удаляем полностью\r\n          await item.destroy();\r\n        }\r\n        \r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении предмета из инвентаря:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Экипировка/снятие предмета\r\n   * @param {number} userId - ID пользователя\r\n   * @param {string} itemId - ID предмета\r\n   * @param {boolean} equipped - Флаг экипировки\r\n   * @returns {Promise<Object>} - Обновленный предмет\r\n   */\r\n  static async toggleEquipItem(userId, itemId, equipped) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserInventoryData[userId]) {\r\n          browserInventoryData[userId] = [];\r\n        }\r\n        \r\n        // Получаем предмет из инвентаря\r\n        const itemIndex = browserInventoryData[userId].findIndex(\r\n          item => item.itemId === itemId\r\n        );\r\n        \r\n        if (itemIndex === -1) {\r\n          throw new Error('Предмет не найден в инвентаре');\r\n        }\r\n        \r\n        // Обновляем статус экипировки\r\n        browserInventoryData[userId][itemIndex].equipped = equipped;\r\n        \r\n        const item = browserInventoryData[userId][itemIndex];\r\n        \r\n        return {\r\n          id: item.itemId,\r\n          name: item.name,\r\n          type: item.type,\r\n          rarity: item.rarity,\r\n          quantity: item.quantity,\r\n          equipped: item.equipped,\r\n          ...item.properties\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем предмет из инвентаря\r\n        const item = await InventoryItem.findOne({\r\n          where: { \r\n            userId,\r\n            itemId\r\n          }\r\n        });\r\n        \r\n        if (!item) {\r\n          throw new Error('Предмет не найден в инвентаре');\r\n        }\r\n        \r\n        // Обновляем статус экипировки\r\n        item.equipped = equipped;\r\n        await item.save();\r\n        \r\n        return {\r\n          id: item.itemId,\r\n          name: item.name,\r\n          type: item.type,\r\n          rarity: item.rarity,\r\n          quantity: item.quantity,\r\n          equipped: item.equipped,\r\n          ...item.properties\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при экипировке/снятии предмета:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = InventoryService;\r\n","import { Model, DataTypes } from '../services/database';\r\nimport { unifiedDatabase } from '../services/database-connection-manager';\r\n\r\nclass User extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    User.hasOne(models.CultivationProgress, {\r\n      foreignKey: 'userId',\r\n      as: 'cultivationProgress'\r\n    });\r\n  }\r\n}\r\n\r\n// Переменные для хранения инициализированной модели и промиса инициализации\r\nlet initializedUserModel = null;\r\nlet initializationPromise = null;\r\n\r\n/**\r\n * Функция для получения инициализированной модели User\r\n * Гарантирует, что модель будет инициализирована перед использованием\r\n * @returns {Promise<Model>} Промис, который резолвится инициализированной моделью\r\n */\r\nexport async function getInitializedUserModel() {\r\n  // Если модель уже инициализирована, возвращаем её\r\n  if (initializedUserModel) {\r\n    return initializedUserModel;\r\n  }\r\n  \r\n  // Если инициализация уже началась, ждем её завершения\r\n  if (initializationPromise) {\r\n    return initializationPromise;\r\n  }\r\n  \r\n  // Начинаем инициализацию\r\n  initializationPromise = initializeUserModel();\r\n  return initializationPromise;\r\n}\r\n\r\n/**\r\n * Функция для инициализации модели User\r\n * @private\r\n * @returns {Promise<Model>} Промис, который резолвится инициализированной моделью\r\n */\r\nasync function initializeUserModel() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    const sequelize = result.db;\r\n    \r\n    // Инициализируем модель\r\n    Model.init.call(User, {\r\n      // Явно определяем ID для соответствия SQL\r\n      id: {\r\n        type: DataTypes.INTEGER,\r\n        autoIncrement: true,\r\n        primaryKey: true\r\n      },\r\n      username: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        unique: true\r\n      },\r\n      email: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        unique: true\r\n      },\r\n      passwordHash: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        field: 'password_hash' // Маппинг на поле password_hash в базе данных\r\n      },\r\n      cultivationLevel: { // Соответствует cultivation_level в SQL\r\n        type: DataTypes.INTEGER,\r\n        defaultValue: 1\r\n      },\r\n      experience: {\r\n        type: DataTypes.INTEGER,\r\n        defaultValue: 0\r\n      },\r\n      lastLogin: { // Соответствует last_login в SQL\r\n        type: DataTypes.DATE\r\n      }\r\n      // Sequelize автоматически добавит createdAt и updatedAt\r\n    }, {\r\n      sequelize,\r\n      modelName: 'User',\r\n      tableName: 'users', // Исправлено: имя таблицы в lowercase\r\n      timestamps: true,   // Явно указываем использование временных меток\r\n      underscored: true   // Используем snake_case для createdAt и updatedAt (created_at, updated_at)\r\n    });\r\n    \r\n    console.log('User модель инициализирована');\r\n    initializedUserModel = User;\r\n    return User;\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели User:', error);\r\n    console.error(error.stack);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Инициализируем модель при импорте модуля\r\ngetInitializedUserModel().catch(error => {\r\n  console.error('Ошибка при начальной инициализации модели User:', error);\r\n});\r\n\r\n// Для обратной совместимости экспортируем User по умолчанию\r\n// Но теперь все методы должны использовать getInitializedUserModel()\r\nexport default User;\r\n","/**\r\n * Файл с данными о предметах экипировки\r\n * Содержит информацию о всех предметах экипировки, их свойствах и эффектах\r\n * Получает данные из базы данных\r\n */\r\n\r\n// Импортируем модуль для работы с базой данных\r\n\r\nconst { unifiedDatabase, initializeDatabaseConnection } = require('../services/database-connection-manager');\r\nconst { Sequelize } = require('sequelize');\r\nlet sequelize;\r\n\r\n// Переменная для хранения экземпляра Sequelize\r\nlet sequelizeInstance = null;\r\n\r\n// Асинхронная функция для получения экземпляра Sequelize\r\nasync function getSequelizeInstance() {\r\n  if (!sequelize) {\r\n    const { db } = await initializeDatabaseConnection();\r\n    sequelize = db;\r\n  }\r\n  return sequelize;\r\n}\r\n\r\n// Типы предметов экипировки\r\nconst EQUIPMENT_TYPES = {\r\n  WEAPON: 'weapon',        // Оружие\r\n  ARMOR: 'armor',          // Броня\r\n  ACCESSORY: 'accessory',  // Аксессуары\r\n  SET: 'set'               // Комплекты\r\n};\r\n\r\n// Подтипы для каждого типа экипировки\r\nconst EQUIPMENT_SUBTYPES = {\r\n  WEAPON: {\r\n    SWORD: 'sword',          // Мечи\r\n    SPEAR: 'spear',          // Копья\r\n    STAFF: 'staff',          // Посохи\r\n    DAGGER: 'dagger',        // Кинжалы\r\n    BOW: 'bow',              // Луки\r\n    ARTIFACT: 'artifact'     // Артефактное оружие\r\n  },\r\n  ARMOR: {\r\n    ROBE: 'robe',            // Одеяния\r\n    LIGHT: 'light',          // Легкая броня\r\n    MEDIUM: 'medium',        // Средняя броня\r\n    HEAVY: 'heavy'           // Тяжелая броня\r\n  },\r\n  ACCESSORY: {\r\n    RING: 'ring',            // Кольца\r\n    AMULET: 'amulet',        // Амулеты\r\n    BELT: 'belt',            // Пояса\r\n    BRACELET: 'bracelet'     // Браслеты\r\n  }\r\n};\r\n\r\n// Редкость предметов\r\nconst EQUIPMENT_RARITY = {\r\n  COMMON: 'common',        // Обычный\r\n  UNCOMMON: 'uncommon',    // Необычный\r\n  RARE: 'rare',            // Редкий\r\n  EPIC: 'epic',            // Эпический\r\n  LEGENDARY: 'legendary',  // Легендарный\r\n  MYTHIC: 'mythic'         // Мифический\r\n};\r\n\r\n// Кэш предметов экипировки для обратной совместимости\r\nlet equipmentItems = [];\r\n\r\n/**\r\n * Преобразует предмет экипировки из БД в формат для клиента\r\n * @param {Object} item - Предмет из БД\r\n * @param {Array} effects - Эффекты предмета\r\n * @param {Array} requirements - Требования предмета\r\n * @param {Array} specialEffects - Специальные эффекты предмета\r\n * @returns {Object} - Предмет в формате для клиента\r\n */\r\nfunction convertEquipmentItemFromDB(item, effects = [], requirements = [], specialEffects = []) {\r\n  const result = {\r\n    id: item.id,\r\n    name: item.name,\r\n    description: item.description || '',\r\n    type: item.type,\r\n    subType: item.sub_type,\r\n    rarity: item.rarity,\r\n    level: item.level || 1,\r\n    value: item.value || 0,\r\n    icon: item.icon\r\n  };\r\n  \r\n  // Добавляем эффекты\r\n  if (effects.length > 0) {\r\n    result.effects = {};\r\n    \r\n    effects.forEach(effect => {\r\n      const statName = effect.stat_name;\r\n      const value = effect.value;\r\n      const isPercentage = effect.is_percentage;\r\n      \r\n      result.effects[statName] = {\r\n        value: value,\r\n        isPercentage: isPercentage\r\n      };\r\n    });\r\n  }\r\n  \r\n  // Добавляем требования\r\n  if (requirements.length > 0) {\r\n    result.requirements = {};\r\n    \r\n    requirements.forEach(req => {\r\n      const reqType = req.requirement_type;\r\n      const value = req.value;\r\n      \r\n      result.requirements[reqType] = value;\r\n    });\r\n  }\r\n  \r\n  // Добавляем специальные эффекты\r\n  if (specialEffects.length > 0) {\r\n    result.specialEffects = [];\r\n    \r\n    specialEffects.forEach(effect => {\r\n      result.specialEffects.push({\r\n        name: effect.name,\r\n        description: effect.description,\r\n        triggerCondition: effect.trigger_condition,\r\n        effects: JSON.parse(effect.effects || '{}')\r\n      });\r\n    });\r\n  }\r\n  \r\n  // Добавляем вычисляемые бонусы (если есть)\r\n  if (item.calculated_bonuses) {\r\n    try {\r\n      result.calculatedBonuses = JSON.parse(item.calculated_bonuses);\r\n    } catch (e) {\r\n      console.error('Ошибка при парсинге вычисляемых бонусов:', e);\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\n/**\r\n * Асинхронно загружает все предметы экипировки из базы данных\r\n * @returns {Promise<Array>} - Массив предметов экипировки\r\n */\r\nasync function loadEquipmentItems() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем все предметы из базы данных\r\n    const itemsData = await unifiedDatabase.query(\r\n      'SELECT * FROM equipment_items',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    if (itemsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID предметов\r\n    const itemIds = itemsData.map(item => item.id);\r\n    \r\n    // Получаем эффекты для предметов\r\n    const effectsQuery = `\r\n      SELECT * FROM equipment_item_effects \r\n      WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const effectsData = await unifiedDatabase.query(\r\n      effectsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Получаем требования для предметов\r\n    const requirementsQuery = `\r\n      SELECT * FROM equipment_item_requirements \r\n      WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const requirementsData = await unifiedDatabase.query(\r\n      requirementsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Получаем специальные эффекты для предметов\r\n    const specialEffectsQuery = `\r\n      SELECT * FROM equipment_item_special_effects \r\n      WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const specialEffectsData = await unifiedDatabase.query(\r\n      specialEffectsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Группируем эффекты, требования и специальные эффекты по ID предмета\r\n    const effectsByItemId = {};\r\n    effectsData.forEach(effect => {\r\n      if (!effectsByItemId[effect.item_id]) {\r\n        effectsByItemId[effect.item_id] = [];\r\n      }\r\n      effectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    const requirementsByItemId = {};\r\n    requirementsData.forEach(req => {\r\n      if (!requirementsByItemId[req.item_id]) {\r\n        requirementsByItemId[req.item_id] = [];\r\n      }\r\n      requirementsByItemId[req.item_id].push(req);\r\n    });\r\n    \r\n    const specialEffectsByItemId = {};\r\n    specialEffectsData.forEach(effect => {\r\n      if (!specialEffectsByItemId[effect.item_id]) {\r\n        specialEffectsByItemId[effect.item_id] = [];\r\n      }\r\n      specialEffectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    // Преобразуем предметы в нужный формат\r\n    const formattedItems = itemsData.map(item => \r\n      convertEquipmentItemFromDB(\r\n        item,\r\n        effectsByItemId[item.id] || [],\r\n        requirementsByItemId[item.id] || [],\r\n        specialEffectsByItemId[item.id] || []\r\n      )\r\n    );\r\n    \r\n    // Обновляем кэш для обратной совместимости\r\n    equipmentItems = formattedItems;\r\n    \r\n    return formattedItems;\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке предметов экипировки из базы данных:', error);\r\n    // В случае ошибки возвращаем кэшированные данные\r\n    return equipmentItems;\r\n  }\r\n}\r\n\r\n/**\r\n * Асинхронно получает предмет экипировки по ID\r\n * @param {string} id - ID предмета\r\n * @returns {Promise<Object|null>} - Предмет или null, если не найден\r\n */\r\nasync function getEquipmentItemByIdAsync(id) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем предмет из базы данных\r\n    const itemData = await unifiedDatabase.query(\r\n      'SELECT * FROM equipment_items WHERE id = :id',\r\n      { \r\n        replacements: { id },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    if (itemData.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Получаем эффекты, требования и специальные эффекты для предмета\r\n    const [effectsData, requirementsData, specialEffectsData] = await Promise.all([\r\n      unifiedDatabase.query(\r\n        'SELECT * FROM equipment_item_effects WHERE item_id = :id',\r\n        { \r\n          replacements: { id },\r\n          type: seq.QueryTypes.SELECT \r\n        }\r\n      ),\r\n      unifiedDatabase.query(\r\n        'SELECT * FROM equipment_item_requirements WHERE item_id = :id',\r\n        { \r\n          replacements: { id },\r\n          type: seq.QueryTypes.SELECT \r\n        }\r\n      ),\r\n      unifiedDatabase.query(\r\n        'SELECT * FROM equipment_item_special_effects WHERE item_id = :id',\r\n        { \r\n          replacements: { id },\r\n          type: seq.QueryTypes.SELECT \r\n        }\r\n      )\r\n    ]);\r\n    \r\n    // Преобразуем и возвращаем предмет\r\n    return convertEquipmentItemFromDB(\r\n      itemData[0], \r\n      effectsData, \r\n      requirementsData, \r\n      specialEffectsData\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении предмета экипировки с ID ${id}:`, error);\r\n    // В случае ошибки ищем в кэше\r\n    return getEquipmentItemById(id);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения предмета экипировки по ID (для обратной совместимости)\r\n * @param {string} id - ID предмета\r\n * @returns {Object|null} - Предмет или null, если не найден\r\n */\r\nfunction getEquipmentItemById(id) {\r\n  return equipmentItems.find(item => item.id === id) || null;\r\n}\r\n\r\n/**\r\n * Асинхронно получает предметы экипировки по типу\r\n * @param {string} type - Тип предмета\r\n * @returns {Promise<Array>} - Массив предметов указанного типа\r\n */\r\nasync function getEquipmentItemsByTypeAsync(type) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем предметы из базы данных\r\n    const itemsData = await unifiedDatabase.query(\r\n      'SELECT * FROM equipment_items WHERE type = :type',\r\n      {\r\n        replacements: { type },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (itemsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID предметов\r\n    const itemIds = itemsData.map(item => item.id);\r\n    \r\n    // Получаем эффекты, требования и специальные эффекты для предметов\r\n    const [effectsData, requirementsData, specialEffectsData] = await Promise.all([\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_effects WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_requirements WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_special_effects WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      )\r\n    ]);\r\n    \r\n    // Группируем эффекты, требования и специальные эффекты по ID предмета\r\n    const effectsByItemId = {};\r\n    effectsData.forEach(effect => {\r\n      if (!effectsByItemId[effect.item_id]) {\r\n        effectsByItemId[effect.item_id] = [];\r\n      }\r\n      effectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    const requirementsByItemId = {};\r\n    requirementsData.forEach(req => {\r\n      if (!requirementsByItemId[req.item_id]) {\r\n        requirementsByItemId[req.item_id] = [];\r\n      }\r\n      requirementsByItemId[req.item_id].push(req);\r\n    });\r\n    \r\n    const specialEffectsByItemId = {};\r\n    specialEffectsData.forEach(effect => {\r\n      if (!specialEffectsByItemId[effect.item_id]) {\r\n        specialEffectsByItemId[effect.item_id] = [];\r\n      }\r\n      specialEffectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    // Преобразуем предметы в нужный формат\r\n    return itemsData.map(item => \r\n      convertEquipmentItemFromDB(\r\n        item,\r\n        effectsByItemId[item.id] || [],\r\n        requirementsByItemId[item.id] || [],\r\n        specialEffectsByItemId[item.id] || []\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении предметов экипировки типа ${type}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return getEquipmentItemsByType(type);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения предметов экипировки по типу (для обратной совместимости)\r\n * @param {string} type - Тип предмета\r\n * @returns {Array} - Массив предметов указанного типа\r\n */\r\nfunction getEquipmentItemsByType(type) {\r\n  return equipmentItems.filter(item => item.type === type);\r\n}\r\n\r\n/**\r\n * Асинхронно получает предметы экипировки по уровню\r\n * @param {number} level - Уровень предмета\r\n * @returns {Promise<Array>} - Массив предметов указанного уровня\r\n */\r\n async function getEquipmentItemsByLevelAsync(level) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем предметы из базы данных\r\n    const itemsData = await unifiedDatabase.query(\r\n      'SELECT * FROM equipment_items WHERE level = :level',\r\n      {\r\n        replacements: { level },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (itemsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID предметов\r\n    const itemIds = itemsData.map(item => item.id);\r\n    \r\n    // Получаем эффекты, требования и специальные эффекты для предметов\r\n    const [effectsData, requirementsData, specialEffectsData] = await Promise.all([\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_effects WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_requirements WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_special_effects WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      )\r\n    ]);\r\n    \r\n    // Группируем эффекты, требования и специальные эффекты по ID предмета\r\n    const effectsByItemId = {};\r\n    effectsData.forEach(effect => {\r\n      if (!effectsByItemId[effect.item_id]) {\r\n        effectsByItemId[effect.item_id] = [];\r\n      }\r\n      effectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    const requirementsByItemId = {};\r\n    requirementsData.forEach(req => {\r\n      if (!requirementsByItemId[req.item_id]) {\r\n        requirementsByItemId[req.item_id] = [];\r\n      }\r\n      requirementsByItemId[req.item_id].push(req);\r\n    });\r\n    \r\n    const specialEffectsByItemId = {};\r\n    specialEffectsData.forEach(effect => {\r\n      if (!specialEffectsByItemId[effect.item_id]) {\r\n        specialEffectsByItemId[effect.item_id] = [];\r\n      }\r\n      specialEffectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    // Преобразуем предметы в нужный формат\r\n    return itemsData.map(item => \r\n      convertEquipmentItemFromDB(\r\n        item,\r\n        effectsByItemId[item.id] || [],\r\n        requirementsByItemId[item.id] || [],\r\n        specialEffectsByItemId[item.id] || []\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении предметов экипировки уровня ${level}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return getEquipmentItemsByLevel(level);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения предметов экипировки по уровню (для обратной совместимости)\r\n * @param {number} level - Уровень предмета\r\n * @returns {Array} - Массив предметов указанного уровня\r\n */\r\n function getEquipmentItemsByLevel(level) {\r\n  return equipmentItems.filter(item => item.level === level);\r\n}\r\n\r\n/**\r\n * Асинхронно получает предметы экипировки по редкости\r\n * @param {string} rarity - Редкость предмета\r\n * @returns {Promise<Array>} - Массив предметов указанной редкости\r\n */\r\n async function getEquipmentItemsByRarityAsync(rarity) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем предметы из базы данных\r\n    const itemsData = await unifiedDatabase.query(\r\n      'SELECT * FROM equipment_items WHERE rarity = :rarity',\r\n      {\r\n        replacements: { rarity },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (itemsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID предметов\r\n    const itemIds = itemsData.map(item => item.id);\r\n    \r\n    // Получаем эффекты, требования и специальные эффекты для предметов\r\n    const [effectsData, requirementsData, specialEffectsData] = await Promise.all([\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_effects WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_requirements WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM equipment_item_special_effects WHERE item_id IN (${itemIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      )\r\n    ]);\r\n    \r\n    // Группируем эффекты, требования и специальные эффекты по ID предмета\r\n    const effectsByItemId = {};\r\n    effectsData.forEach(effect => {\r\n      if (!effectsByItemId[effect.item_id]) {\r\n        effectsByItemId[effect.item_id] = [];\r\n      }\r\n      effectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    const requirementsByItemId = {};\r\n    requirementsData.forEach(req => {\r\n      if (!requirementsByItemId[req.item_id]) {\r\n        requirementsByItemId[req.item_id] = [];\r\n      }\r\n      requirementsByItemId[req.item_id].push(req);\r\n    });\r\n    \r\n    const specialEffectsByItemId = {};\r\n    specialEffectsData.forEach(effect => {\r\n      if (!specialEffectsByItemId[effect.item_id]) {\r\n        specialEffectsByItemId[effect.item_id] = [];\r\n      }\r\n      specialEffectsByItemId[effect.item_id].push(effect);\r\n    });\r\n    \r\n    // Преобразуем предметы в нужный формат\r\n    return itemsData.map(item => \r\n      convertEquipmentItemFromDB(\r\n        item,\r\n        effectsByItemId[item.id] || [],\r\n        requirementsByItemId[item.id] || [],\r\n        specialEffectsByItemId[item.id] || []\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении предметов экипировки редкости ${rarity}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return getEquipmentItemsByRarity(rarity);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения предметов экипировки по редкости (для обратной совместимости)\r\n * @param {string} rarity - Редкость предмета\r\n * @returns {Array} - Массив предметов указанной редкости\r\n */\r\nfunction getEquipmentItemsByRarity(rarity) {\r\n  return equipmentItems.filter(item => item.rarity === rarity);\r\n}\r\n\r\n// Инициализация: загружаем предметы при импорте модуля\r\nloadEquipmentItems().catch(error => {\r\n  console.error('Ошибка при инициализации модуля предметов экипировки:', error);\r\n});\r\n\r\n// EQUIPMENT_TYPES, EQUIPMENT_SUBTYPES и EQUIPMENT_RARITY уже экспортированы через 'const export'\r\n// Экспортируем остальные функции и переменные\r\nexport {\r\n  equipmentItems,\r\n  \r\n  // Синхронные функции для обратной совместимости\r\n  getEquipmentItemById,\r\n  getEquipmentItemsByType,\r\n  getEquipmentItemsByLevel,\r\n  getEquipmentItemsByRarity,\r\n  \r\n  // Асинхронные функции для работы с БД\r\n  loadEquipmentItems,\r\n  getEquipmentItemByIdAsync,\r\n  getEquipmentItemsByTypeAsync,\r\n  getEquipmentItemsByLevelAsync,\r\n  getEquipmentItemsByRarityAsync\r\n};\r\n","// Импортируем React для использования hooks в integrateRelationshipSyncer\r\nconst React = require('react');\r\n\r\n/**\r\n * Модуль для синхронизации отношений между игроком и сектами, членами секты и для расчета скидок у торговцев\r\n * на основе лояльности (уровня отношений) с игроком.\r\n */\r\n\r\n/**\r\n * Рассчитывает процент скидки на основе уровня лояльности/отношений\r\n * @param {number} loyaltyLevel - Уровень лояльности (отношений)\r\n * @returns {number} - Процент скидки (положительное значение) или наценки (отрицательное значение)\r\n */\r\nconst calculateMerchantDiscount = (loyaltyLevel) => {\r\n  // Проверка входных данных\r\n  if (typeof loyaltyLevel !== 'number' || loyaltyLevel < 0) {\r\n    return 0;\r\n  }\r\n  \r\n  // Новая система скидок:\r\n  // - При уровне лояльности >= 50: скидка по формуле loyaltyLevel/10\r\n  // - При уровне лояльности <= 20: наценка 10%\r\n  // - При уровне лояльности 21-49: нейтральная цена (ни скидки, ни наценки)\r\n  \r\n  if (loyaltyLevel >= 50) {\r\n    // Скидка по формуле: лояльность/10\r\n    // Например, при лояльности 70 скидка составит 7%\r\n    const discount = Math.floor(loyaltyLevel / 10);\r\n    \r\n    // Ограничиваем скидку в пределах до 50%\r\n    return Math.min(50, discount);\r\n  } else if (loyaltyLevel <= 20) {\r\n    // Наценка 10% при низкой лояльности\r\n    return -10;\r\n  } else {\r\n    // Нейтральная цена (ни скидки, ни наценки) при средней лояльности\r\n    return 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Применяет скидку или наценку к базовой цене на основе уровня лояльности\r\n * @param {number} basePrice - Базовая цена товара\r\n * @param {number} loyaltyLevel - Уровень лояльности (отношений)\r\n * @returns {object} - Объект с окончательной ценой и процентом скидки/наценки\r\n */\r\nconst applyLoyaltyDiscount = (basePrice, loyaltyLevel) => {\r\n  // Получаем процент скидки/наценки\r\n  const discount = calculateMerchantDiscount(loyaltyLevel);\r\n  \r\n  // Если скидки/наценки нет, возвращаем исходную цену\r\n  if (discount === 0) {\r\n    return { finalPrice: basePrice, discount: 0 };\r\n  }\r\n  \r\n  let finalPrice;\r\n  \r\n  if (discount < 0) {\r\n    // Если значение отрицательное - это наценка (штраф)\r\n    // Формула: basePrice * (1 + |discount|/100)\r\n    const surcharge = Math.abs(discount);\r\n    finalPrice = Math.floor(basePrice * (1 + surcharge / 100));\r\n  } else {\r\n    // Если значение положительное - это скидка\r\n    // Формула: basePrice * (1 - discount/100)\r\n    finalPrice = Math.floor(basePrice * (1 - discount / 100));\r\n  }\r\n  \r\n  // Убеждаемся, что цена не становится отрицательной или ниже 1\r\n  finalPrice = Math.max(1, finalPrice);\r\n  \r\n  return {\r\n    finalPrice,\r\n    discount   // Сохраняем оригинальный знак, чтобы UI мог отобразить скидку/наценку\r\n  };\r\n};\r\n\r\n/**\r\n * Синхронизирует лояльность секты с социальными отношениями\r\n * @param {Array} relationships - массив социальных отношений игрока\r\n * @param {Object} sect - объект секты\r\n * @param {Number} sectLoyalty - уровень лояльности секты\r\n * @returns {Array} обновленный массив социальных отношений\r\n */\r\nconst syncSectRelationshipToSocial = (relationships = [], sect, sectLoyalty) => {\r\n  // Если нет секты или лояльности, возвращаем отношения без изменений\r\n  if (!sect || sectLoyalty === undefined || sectLoyalty === null) {\r\n    console.warn('⚠️ Невозможно синхронизировать отношения с сектой: неполные данные о секте');\r\n    return relationships;\r\n  }\r\n\r\n  // Проверяем, что relationships - массив\r\n  if (!Array.isArray(relationships)) {\r\n    console.warn('⚠️ Объект отношений не является массивом, создаем новый массив');\r\n    relationships = [];\r\n  }\r\n\r\n  // Находим существующую запись об отношениях с сектой\r\n  const sectRelationIndex = relationships.findIndex(rel => rel.name === sect.name);\r\n  \r\n  // Если нашли существующую запись, обновляем ее\r\n  if (sectRelationIndex >= 0) {\r\n    const updatedRelationships = [...relationships];\r\n    updatedRelationships[sectRelationIndex] = {\r\n      ...updatedRelationships[sectRelationIndex],\r\n      level: sectLoyalty\r\n    };\r\n    \r\n    console.log(`✅ Обновлены отношения с сектой \"${sect.name}\" до уровня ${sectLoyalty}`);\r\n    return updatedRelationships;\r\n  } \r\n  // Если не нашли запись, создаем новую\r\n  else {\r\n    const newRelationship = {\r\n      id: Date.now(), // Генерируем новый ID (временная метка)\r\n      name: sect.name,\r\n      role: 'Секта',\r\n      level: sectLoyalty,\r\n      events: [`Вы присоединились к секте \"${sect.name}\"`]\r\n    };\r\n    \r\n    console.log(`✅ Создана новая запись отношений с сектой \"${sect.name}\" с уровнем ${sectLoyalty}`);\r\n    return [...relationships, newRelationship];\r\n  }\r\n};\r\n\r\n/**\r\n * Синхронизирует социальные отношения с лояльностью секты\r\n * @param {Array} relationships - массив социальных отношений игрока \r\n * @param {Object} sect - объект секты\r\n * @returns {Number|null} новое значение лояльности секты или null, если синхронизация невозможна\r\n */\r\nconst syncSocialToSectRelationship = (relationships = [], sect) => {\r\n  // Если нет секты, синхронизация невозможна\r\n  if (!sect) {\r\n    console.warn('⚠️ Невозможно синхронизировать лояльность: секта не найдена');\r\n    return null;\r\n  }\r\n  \r\n  // Проверяем, что relationships - массив\r\n  if (!Array.isArray(relationships)) {\r\n    console.warn('⚠️ Объект отношений не является массивом');\r\n    return null;\r\n  }\r\n  \r\n  // Находим запись об отношениях с сектой\r\n  const sectRelation = relationships.find(rel => rel.name === sect.name);\r\n  \r\n  // Если найдена запись, используем ее уровень отношений\r\n  if (sectRelation && sectRelation.level !== undefined) {\r\n    console.log(`✅ Найдена запись отношений с сектой \"${sect.name}\" с уровнем ${sectRelation.level}`);\r\n    return sectRelation.level;\r\n  } else {\r\n    console.log(`⚠️ Запись отношений с сектой \"${sect.name}\" не найдена`);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Синхронизирует отношения из лояльности членов секты в социальные отношения игрока\r\n * @param {Object} state - Текущее состояние игры\r\n * @returns {Object} - Обновленное состояние игры с синхронизированными отношениями\r\n */\r\nconst syncRelationshipsFromLoyalty = (state) => {\r\n  // Убеждаемся, что у нас есть все необходимые данные\r\n  if (!state.player || !state.player.social || !state.sect || !state.sect.sect) {\r\n    console.warn(\"Невозможно синхронизировать отношения сект: недостаточно данных\");\r\n    return state;\r\n  }\r\n  \r\n  const { player, sect } = state;\r\n  const { relationships = [] } = player.social;\r\n  const { members = [] } = sect.sect;\r\n  \r\n  // Сначала синхронизируем отношения с самой сектой, если есть loyalty у секты\r\n  let updatedRelationships = [...relationships];\r\n  if (sect.sect.loyalty !== undefined) {\r\n    updatedRelationships = syncSectRelationshipToSocial(\r\n      updatedRelationships, \r\n      sect.sect, \r\n      sect.sect.loyalty\r\n    );\r\n  }\r\n  \r\n  // Затем для каждого члена секты находим соответствующее отношение\r\n  // или создаем новое, если оно отсутствует\r\n  members.forEach(member => {\r\n    if (!member.name) return; // Пропускаем членов секты без имени\r\n    \r\n    // Ищем существующее отношение\r\n    const existingRelationIndex = updatedRelationships.findIndex(\r\n      rel => rel.name === member.name\r\n    );\r\n    \r\n    // Если отношение существует, обновляем его, синхронизируя с лояльностью члена секты\r\n    if (existingRelationIndex !== -1) {\r\n      updatedRelationships[existingRelationIndex] = {\r\n        ...updatedRelationships[existingRelationIndex],\r\n        level: member.loyalty || 0,\r\n        lastUpdated: Date.now()\r\n      };\r\n    } \r\n    // Если отношение не существует, создаем новое\r\n    else {\r\n      updatedRelationships.push({\r\n        id: `sect_member_${member.id || Date.now()}`,\r\n        name: member.name,\r\n        type: 'sect_member',\r\n        level: member.loyalty || 0,\r\n        lastUpdated: Date.now()\r\n      });\r\n    }\r\n  });\r\n  \r\n  // Обновляем состояние игрока\r\n  return {\r\n    ...state,\r\n    player: {\r\n      ...player,\r\n      social: {\r\n        ...player.social,\r\n        relationships: updatedRelationships\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Синхронизирует лояльность членов секты из социальных отношений игрока\r\n * @param {Object} state - Текущее состояние игры\r\n * @returns {Object} - Обновленное состояние игры с синхронизированной лояльностью\r\n */\r\nconst syncLoyaltyFromRelationships = (state) => {\r\n  // Убеждаемся, что у нас есть все необходимые данные\r\n  if (!state.player || !state.player.social || !state.sect || !state.sect.sect) {\r\n    console.warn(\"Невозможно синхронизировать лояльность членов секты: недостаточно данных\");\r\n    return state;\r\n  }\r\n  \r\n  const { player, sect } = state;\r\n  const { relationships = [] } = player.social;\r\n  let { members = [] } = sect.sect;\r\n  \r\n  // Создаем копию членов секты для модификации\r\n  const updatedMembers = [...members];\r\n  \r\n  // Сначала обновляем лояльность самой секты, если найдем соответствующее отношение\r\n  const sectRelation = relationships.find(rel => rel.name === sect.sect.name);\r\n  if (sectRelation && sectRelation.level !== undefined) {\r\n    // Создаем обновленную копию объекта секты с новой лояльностью\r\n    const updatedSect = {\r\n      ...sect.sect,\r\n      loyalty: sectRelation.level\r\n    };\r\n    \r\n    console.log(`Обновлена лояльность секты ${sect.sect.name}: ${sectRelation.level}`);\r\n    \r\n    // Для каждого отношения ищем соответствующего члена секты и обновляем его лояльность\r\n    relationships.forEach(relation => {\r\n      // Пропускаем отношения без имени или не относящиеся к членам секты\r\n      if (!relation.name) return;\r\n      \r\n      // Ищем соответствующего члена секты\r\n      const memberIndex = updatedMembers.findIndex(\r\n        member => member.name === relation.name\r\n      );\r\n      \r\n      // Если нашли, обновляем его лояльность\r\n      if (memberIndex !== -1) {\r\n        updatedMembers[memberIndex] = {\r\n          ...updatedMembers[memberIndex],\r\n          loyalty: relation.level || 0\r\n        };\r\n      }\r\n    });\r\n    \r\n    // Обновляем состояние секты\r\n    return {\r\n      ...state,\r\n      sect: {\r\n        ...sect,\r\n        sect: updatedSect,\r\n        members: updatedMembers\r\n      }\r\n    };\r\n  }\r\n  \r\n  // Если не нашли отношение к самой секте, только обновляем членов секты\r\n  // Для каждого отношения ищем соответствующего члена секты и обновляем его лояльность\r\n  relationships.forEach(relation => {\r\n    // Пропускаем отношения без имени или не относящиеся к членам секты\r\n    if (!relation.name) return;\r\n    \r\n    // Ищем соответствующего члена секты\r\n    const memberIndex = updatedMembers.findIndex(\r\n      member => member.name === relation.name\r\n    );\r\n    \r\n    // Если нашли, обновляем его лояльность\r\n    if (memberIndex !== -1) {\r\n      updatedMembers[memberIndex] = {\r\n        ...updatedMembers[memberIndex],\r\n        loyalty: relation.level || 0\r\n      };\r\n    }\r\n  });\r\n  \r\n  // Обновляем состояние секты\r\n  return {\r\n    ...state,\r\n    sect: {\r\n      ...sect,\r\n      sect: {\r\n        ...sect.sect,\r\n        members: updatedMembers\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Находит связанного торговца на основе имени секты и возвращает его ID\r\n * @param {String} sectName - название секты\r\n * @param {Array} merchants - массив торговцев\r\n * @returns {Number|null} ID торговца, связанного с сектой, или null\r\n */\r\nconst findRelatedMerchantId = (sectName, merchants) => {\r\n  if (!sectName || !Array.isArray(merchants)) {\r\n    return null;\r\n  }\r\n  \r\n  // Простое соответствие по ключевым словам в названии\r\n  const merchant = merchants.find(m => \r\n    m.name.includes(sectName) || \r\n    (m.affiliation && m.affiliation.includes(sectName))\r\n  );\r\n  \r\n  return merchant ? merchant.id : null;\r\n};\r\n\r\n/**\r\n * Выполняет полную двустороннюю синхронизацию между лояльностью секты/членов секты и социальными отношениями игрока\r\n * @param {Object} state - Текущее состояние игры\r\n * @returns {Object} - Обновленное состояние игры\r\n */\r\nconst syncSectRelationships = (state) => {\r\n  // Используем прямые обновления через updateRelationshipAndLoyalty\r\n  // вместо двойной синхронизации\r\n  \r\n  console.log(`🔄 Синхронизация отношений отключена. Используйте updateRelationshipAndLoyalty для прямого обновления`);\r\n  \r\n  // Просто возвращаем состояние без изменений, так как вся синхронизация \r\n  // должна происходить через непосредственное обновление значений\r\n  return state;\r\n};\r\n\r\n/**\r\n * Синхронизирует отдельный член секты с социальными отношениями или наоборот\r\n * @param {Object} member - член секты\r\n * @param {Array} relationships - массив социальных отношений\r\n * @param {boolean} updateLoyalty - если true, обновляем лояльность члена, иначе обновляем отношения\r\n * @returns {Object} объект с обновленным членом секты и/или отношениями\r\n */\r\nconst syncSingleMember = (member, relationships, updateLoyalty = true) => {\r\n  if (!member || !member.name || !Array.isArray(relationships)) {\r\n    return { member, relationships };\r\n  }\r\n  \r\n  // Находим соответствующее отношение\r\n  const relationIndex = relationships.findIndex(rel => rel.name === member.name);\r\n  \r\n  // Если updateLoyalty = true, обновляем лояльность члена секты на основе отношений\r\n  // Если updateLoyalty = false, обновляем отношения на основе лояльности члена секты\r\n  if (updateLoyalty) {\r\n    // Обновляем лояльность на основе отношений\r\n    if (relationIndex >= 0 && relationships[relationIndex].level !== undefined) {\r\n      return {\r\n        member: { ...member, loyalty: relationships[relationIndex].level },\r\n        relationships\r\n      };\r\n    }\r\n  } else {\r\n    // Обновляем отношения на основе лояльности\r\n    const updatedRelationships = [...relationships];\r\n    \r\n    if (relationIndex >= 0) {\r\n      // Обновляем существующее отношение\r\n      updatedRelationships[relationIndex] = {\r\n        ...updatedRelationships[relationIndex],\r\n        level: member.loyalty || 0,\r\n        lastUpdated: Date.now()\r\n      };\r\n    } else {\r\n      // Создаем новое отношение\r\n      updatedRelationships.push({\r\n        id: `sect_member_${member.id || Date.now()}`,\r\n        name: member.name,\r\n        type: 'sect_member',\r\n        role: member.role || 'Член секты',\r\n        level: member.loyalty || 0,\r\n        lastUpdated: Date.now()\r\n      });\r\n    }\r\n    \r\n    return { member, relationships: updatedRelationships };\r\n  }\r\n  \r\n  // Если ничего не изменилось\r\n  return { member, relationships };\r\n};\r\n\r\n/**\r\n * Обновляет значение лояльности/уровня отношений одновременно в обоих местах:\r\n * в данных секты и в социальных отношениях\r\n * @param {Object} state - Текущее состояние игры\r\n * @param {String} name - Имя персонажа (члена секты или самой секты)\r\n * @param {Number} newValue - Новое значение лояльности/уровня отношений\r\n * @returns {Object} - Обновленное состояние игры\r\n */\r\nconst updateRelationshipAndLoyalty = (state, name, newValue) => {\r\n  // Проверка входных данных\r\n  if (!state || !name || newValue === undefined || newValue === null) {\r\n    console.warn('⚠️ Невозможно обновить отношения/лояльность: неполные данные');\r\n    return state;\r\n  }\r\n  \r\n  console.log(`🔄 Прямое обновление отношений для \"${name}\" до уровня ${newValue}`);\r\n  \r\n  // Создаем новый state\r\n  let newState = {...state};\r\n  \r\n  // Обновляем значение в секте (если такой член секты существует)\r\n  if (newState.sect && newState.sect.sect) {\r\n    // Если это имя самой секты, обновляем лояльность секты\r\n    if (newState.sect.sect.name === name) {\r\n      console.log(`✅ Обновлена лояльность секты \"${name}\" до ${newValue}`);\r\n      newState = {\r\n        ...newState,\r\n        sect: {\r\n          ...newState.sect,\r\n          sect: {\r\n            ...newState.sect.sect,\r\n            loyalty: newValue\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    // Если есть члены секты, проверяем, есть ли среди них персонаж с таким именем\r\n    if (newState.sect.sect.members && Array.isArray(newState.sect.sect.members)) {\r\n      const memberIndex = newState.sect.sect.members.findIndex(m => m.name === name);\r\n      if (memberIndex !== -1) {\r\n        // Обновляем лояльность члена секты\r\n        console.log(`✅ Обновлена лояльность члена секты \"${name}\" до ${newValue}`);\r\n        const updatedMembers = [...newState.sect.sect.members];\r\n        updatedMembers[memberIndex] = {\r\n          ...updatedMembers[memberIndex],\r\n          loyalty: newValue\r\n        };\r\n        \r\n        newState = {\r\n          ...newState,\r\n          sect: {\r\n            ...newState.sect,\r\n            sect: {\r\n              ...newState.sect.sect,\r\n              members: updatedMembers\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Обновляем значение в социальных отношениях\r\n  if (newState.player && newState.player.social) {\r\n    // Обрабатываем случай, когда relationships - это массив (новый формат)\r\n    if (Array.isArray(newState.player.social.relationships)) {\r\n      const relationIndex = newState.player.social.relationships.findIndex(r => r.name === name);\r\n      if (relationIndex !== -1) {\r\n        // Обновляем уровень отношений\r\n        console.log(`✅ Обновлены социальные отношения с \"${name}\" до уровня ${newValue}`);\r\n        const updatedRelationships = [...newState.player.social.relationships];\r\n        updatedRelationships[relationIndex] = {\r\n          ...updatedRelationships[relationIndex],\r\n          level: newValue,\r\n          lastUpdated: Date.now()\r\n        };\r\n        \r\n        newState = {\r\n          ...newState,\r\n          player: {\r\n            ...newState.player,\r\n            social: {\r\n              ...newState.player.social,\r\n              relationships: updatedRelationships\r\n            }\r\n          }\r\n        };\r\n      } else {\r\n        // Если отношения не существуют, но это секта или член секты, создаем новую запись\r\n        if (\r\n          (newState.sect && newState.sect.sect && newState.sect.sect.name === name) ||\r\n          (newState.sect && newState.sect.sect && newState.sect.sect.members && \r\n           newState.sect.sect.members.some(m => m.name === name))\r\n        ) {\r\n          // Определяем, секта это или член секты\r\n          const isSect = newState.sect.sect.name === name;\r\n          const role = isSect ? 'Секта' : 'Член секты';\r\n          \r\n          // Создаем новую запись отношений\r\n          const newRelationship = {\r\n            id: `relation_${Date.now()}`,\r\n            name: name,\r\n            role: role,\r\n            level: newValue,\r\n            lastUpdated: Date.now(),\r\n            events: isSect ? [`Вы присоединились к секте \"${name}\"`] : []\r\n          };\r\n          \r\n          console.log(`✅ Создана новая запись социальных отношений с \"${name}\" с уровнем ${newValue}`);\r\n          \r\n          // Добавляем новое отношение\r\n          newState = {\r\n            ...newState,\r\n            player: {\r\n              ...newState.player,\r\n              social: {\r\n                ...newState.player.social,\r\n                relationships: [...newState.player.social.relationships, newRelationship]\r\n              }\r\n            }\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // Также обновляем relationships в player (для обратной совместимости)\r\n  if (newState.player && Array.isArray(newState.player.relationships)) {\r\n    const relationIndex = newState.player.relationships.findIndex(r => r.name === name);\r\n    if (relationIndex !== -1) {\r\n      const updatedRelationships = [...newState.player.relationships];\r\n      updatedRelationships[relationIndex] = {\r\n        ...updatedRelationships[relationIndex],\r\n        level: newValue,\r\n        lastUpdated: Date.now()\r\n      };\r\n      \r\n      newState = {\r\n        ...newState,\r\n        player: {\r\n          ...newState.player,\r\n          relationships: updatedRelationships\r\n        }\r\n      };\r\n    }\r\n  }\r\n  \r\n  return newState;\r\n};\r\n\r\n/**\r\n * Инициализирует систему прямого обновления отношений между сектой и социальными отношениями\r\n * @param {Object} context - Объект контекста с методами getState и dispatch\r\n */\r\nconst initRelationshipSync = (context) => {\r\n  // Проверяем, что контекст предоставляет необходимые методы\r\n  if (!context || typeof context.getState !== 'function' || typeof context.dispatch !== 'function') {\r\n    console.error('❌ Ошибка: initRelationshipSync вызван с некорректным контекстом');\r\n    return;\r\n  }\r\n  \r\n  console.log('✅ Система прямого обновления отношений готова. Автоматическая синхронизация отключена.');\r\n};\r\n\r\n/**\r\n * Функция-обертка для интеграции системы прямого обновления отношений с GameContextProvider\r\n * @param {Function} GameContextProvider - Оригинальный компонент-провайдер контекста\r\n * @returns {Function} - Обернутый компонент-провайдер с прямым обновлением отношений\r\n */\r\nconst integrateRelationshipSyncer = (GameContextProvider) => {\r\n  // Возвращаем функциональный компонент-обертку\r\n  return function EnhancedGameContextProvider(props) {\r\n    // Упрощенная интеграция без автоматической синхронизации\r\n    console.log('✅ Система прямого обновления отношений подключена');\r\n    \r\n    // Рендерим оригинальный GameContextProvider с полученными свойствами\r\n    return React.createElement(GameContextProvider, props);\r\n  };\r\n};\r\n\r\n// Экспортируем функции\r\nmodule.exports = {\r\n  calculateMerchantDiscount,\r\n  applyLoyaltyDiscount,\r\n  syncSectRelationships,\r\n  syncRelationshipsFromLoyalty,\r\n  syncLoyaltyFromRelationships,\r\n  syncSectRelationshipToSocial,\r\n  syncSocialToSectRelationship,\r\n  findRelatedMerchantId,\r\n  syncSingleMember,\r\n  initRelationshipSync,\r\n  updateRelationshipAndLoyalty,\r\n  integrateRelationshipSyncer\r\n};\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\r\n * Сервис погоды и времени суток\r\n * Отвечает за управление погодой, временем суток и сезонами в игре\r\n */\r\nclass WeatherService {\r\n  // Множитель времени: 1 минута реального времени = x минут игрового времени\r\n  // Внимание: изменение этого множителя влияет на скорость течения игрового времени!\r\n  static TIME_MULTIPLIER = 120;\r\n  \r\n  // Добавляем метод для безопасного обновления множителя\r\n  static updateMultiplier(newValue) {\r\n    console.log(`🔄 WeatherService - обновление множителя с ${WeatherService.TIME_MULTIPLIER} на ${newValue}`);\r\n    if (typeof newValue === 'number' && !isNaN(newValue) && newValue > 0) {\r\n      WeatherService.TIME_MULTIPLIER = newValue;\r\n      return true;\r\n    }\r\n    console.warn('⚠️ Некорректное значение множителя:', newValue);\r\n    return false;\r\n  }\r\n  \r\n  constructor() {\r\n    // Длина сезона в днях (стандартное значение)\r\n    this.SEASON_LENGTH = 30;\r\n    \r\n    // Порядок сезонов для корректной смены\r\n    this.SEASON_ORDER = ['spring', 'summer', 'autumn', 'winter'];\r\n    \r\n    // Типы погоды с их базовой вероятностью\r\n    this.weatherTypes = {\r\n      clear: { name: 'Ясно', baseChance: 0.4 },\r\n      cloudy: { name: 'Облачно', baseChance: 0.2 },\r\n      rain: { name: 'Дождь', baseChance: 0.2 },\r\n      thunderstorm: { name: 'Гроза', baseChance: 0.1 },\r\n      fog: { name: 'Туман', baseChance: 0.05 },\r\n      snow: { name: 'Снег', baseChance: 0.05 }\r\n    };\r\n    \r\n    // Сезоны и их особенности\r\n    this.seasons = {\r\n      spring: {\r\n        name: 'Весна',\r\n        weatherModifiers: {\r\n          clear: 1.2,\r\n          cloudy: 1.1,\r\n          rain: 1.5,\r\n          thunderstorm: 1.2,\r\n          fog: 0.8,\r\n          snow: 0.3\r\n        },\r\n        resourceModifiers: {\r\n          herbs: 1.5, // Бонус к сбору трав\r\n          cultivation: 1.2 // Бонус к культивации\r\n        },\r\n        specialEvents: ['bloom', 'spirit_tide'] // Возможные особые события\r\n      },\r\n      summer: {\r\n        name: 'Лето',\r\n        weatherModifiers: {\r\n          clear: 1.7,\r\n          cloudy: 1.0,\r\n          rain: 0.8,\r\n          thunderstorm: 1.5,\r\n          fog: 0.5,\r\n          snow: 0\r\n        },\r\n        resourceModifiers: {\r\n          minerals: 1.3, // Бонус к сбору минералов\r\n          cultivation: 1.3 // Бонус к культивации\r\n        },\r\n        specialEvents: ['solstice', 'meteor_shower'] // Возможные особые события\r\n      },\r\n      autumn: {\r\n        name: 'Осень',\r\n        weatherModifiers: {\r\n          clear: 1.0,\r\n          cloudy: 1.3,\r\n          rain: 1.2,\r\n          thunderstorm: 0.8,\r\n          fog: 1.7,\r\n          snow: 0.4\r\n        },\r\n        resourceModifiers: {\r\n          herbs: 1.4, // Бонус к сбору трав\r\n          food: 1.5 // Бонус к сбору пищи\r\n        },\r\n        specialEvents: ['harvest', 'spirit_wind'] // Возможные особые события\r\n      },\r\n      winter: {\r\n        name: 'Зима',\r\n        weatherModifiers: {\r\n          clear: 0.7,\r\n          cloudy: 1.0,\r\n          rain: 0.4,\r\n          thunderstorm: 0.2,\r\n          fog: 1.0,\r\n          snow: 2.0\r\n        },\r\n        resourceModifiers: {\r\n          minerals: 1.2, // Бонус к сбору минералов\r\n          cultivation: 0.8 // Штраф к культивации\r\n        },\r\n        specialEvents: ['ice_tribulation', 'blizzard'] // Возможные особые события\r\n      }\r\n    };\r\n    \r\n  // Особые погодные и сезонные события\r\n    this.specialEvents = {\r\n      // Весенние события\r\n      bloom: {\r\n        name: 'Цветение духовных трав',\r\n        duration: 180, // минут\r\n        effects: [\r\n          { type: 'resource_bonus', target: 'herbs', modifier: 50 }, // +50% к травам (уже кратно 5)\r\n          { type: 'special_resources', resources: ['divine_petal', 'spirit_bud'] } // Особые ресурсы\r\n        ],\r\n        visualEffects: { filter: 'saturate(1.2) brightness(1.1)' } // Визуальные эффекты\r\n      },\r\n      spirit_tide: {\r\n        name: 'Прилив духовной энергии',\r\n        duration: 120, // минут\r\n        effects: [\r\n          { type: 'cultivation_bonus', modifier: 30 }, // +30% к культивации (уже кратно 5)\r\n          { type: 'energy_regen', modifier: 20 } // +20% к восстановлению энергии (уже кратно 5)\r\n        ],\r\n        visualEffects: { filter: 'brightness(1.15) contrast(1.1)' }\r\n      },\r\n      \r\n      // Летние события\r\n      solstice: {\r\n        name: 'Солнцестояние',\r\n        duration: 60, // минут\r\n        effects: [\r\n          { type: 'fire_cultivation', modifier: 50 }, // +50% к огненной культивации\r\n          { type: 'special_encounters', encounters: ['phoenix_sighting', 'sun_elemental'] }\r\n        ],\r\n        visualEffects: { filter: 'brightness(1.3) sepia(0.3)' }\r\n      },\r\n      meteor_shower: {\r\n        name: 'Метеоритный дождь',\r\n        duration: 90, // минут\r\n        effects: [\r\n          { type: 'mineral_bonus', modifier: 40 }, // +40% к минералам\r\n          { type: 'special_resources', resources: ['star_fragment', 'cosmic_dust'] }\r\n        ],\r\n        visualEffects: { filter: 'brightness(0.7) contrast(1.2)' }\r\n      },\r\n      \r\n      // Осенние события\r\n      harvest: {\r\n        name: 'Сбор урожая',\r\n        duration: 240, // минут\r\n        effects: [\r\n          { type: 'market_discount', modifier: 20 }, // Скидка 20% на рынке\r\n          { type: 'double_loot', chance: 0.2 } // 20% шанс двойной добычи\r\n        ],\r\n        visualEffects: { filter: 'sepia(0.2) contrast(1.1)' }\r\n      },\r\n      spirit_wind: {\r\n        name: 'Духовный ветер',\r\n        duration: 120, // минут\r\n        effects: [\r\n          { type: 'movement_speed', modifier: 30 }, // +30% к скорости передвижения\r\n          { type: 'reduced_encounter', modifier: -30 } // -30% к шансу случайных встреч\r\n        ],\r\n        visualEffects: { filter: 'hue-rotate(10deg) blur(0.5px)' }\r\n      },\r\n      \r\n      // Зимние события\r\n      ice_tribulation: {\r\n        name: 'Ледяная трибуляция',\r\n        duration: 120, // минут\r\n        effects: [\r\n          { type: 'water_cultivation', modifier: 50 }, // +50% к водной культивации\r\n          { type: 'resistance_required', element: 'ice', value: 20 } // Необходима сопротивляемость льду\r\n        ],\r\n        visualEffects: { filter: 'brightness(1.2) contrast(1.3) saturate(0.8)' }\r\n      },\r\n      blizzard: {\r\n        name: 'Метель',\r\n        duration: 180, // минут\r\n        effects: [\r\n          { type: 'movement_penalty', modifier: -50 }, // -50% к скорости передвижения\r\n          { type: 'energy_drain', value: 1 } // Постоянный расход энергии\r\n        ],\r\n        visualEffects: { filter: 'brightness(0.8) contrast(0.9) blur(1px)' }\r\n      }\r\n    };\r\n    \r\n    // Эффекты времени суток\r\n    this.daytimeEffects = {\r\n      dawn: { // 5:00-7:00\r\n        name: 'Рассвет',\r\n        effects: [\r\n          { type: 'perception', modifier: 10 }, // +10% к восприятию\r\n          { type: 'energy_regen', modifier: 5 } // +5% к восстановлению энергии\r\n        ],\r\n        visualEffects: { filter: 'brightness(0.9) sepia(0.2)' }\r\n      },\r\n      morning: { // 7:00-11:00\r\n        name: 'Утро',\r\n        effects: [\r\n          { type: 'cultivation_speed', modifier: 10 }, // +10% к скорости культивации\r\n          { type: 'gathering_speed', modifier: 15 } // +15% к скорости сбора ресурсов\r\n        ],\r\n        visualEffects: { filter: 'brightness(1.1) contrast(1.05)' }\r\n      },\r\n      noon: { // 11:00-14:00\r\n        name: 'Полдень',\r\n        effects: [\r\n          { type: 'fire_cultivation', modifier: 20 }, // +20% к огненной культивации\r\n          { type: 'water_cultivation', modifier: -10 } // -10% к водной культивации\r\n        ],\r\n        visualEffects: { filter: 'brightness(1.2) contrast(1.1)' }\r\n      },\r\n      afternoon: { // 14:00-17:00\r\n        name: 'День',\r\n        effects: [\r\n          { type: 'combat_damage', modifier: 5 }, // +5% к урону в бою\r\n          { type: 'gathering_speed', modifier: 10 } // +10% к скорости сбора ресурсов\r\n        ],\r\n        visualEffects: { filter: 'brightness(1.15) contrast(1.05)' }\r\n      },\r\n      evening: { // 17:00-20:00\r\n        name: 'Вечер',\r\n        effects: [\r\n          { type: 'stealth', modifier: 10 }, // +10% к скрытности\r\n          { type: 'perception', modifier: -5 } // -5% к восприятию\r\n        ],\r\n        visualEffects: { filter: 'brightness(0.9) sepia(0.15)' }\r\n      },\r\n      night: { // 20:00-23:00\r\n        name: 'Ночь',\r\n        effects: [\r\n          { type: 'dark_cultivation', modifier: 20 }, // +20% к тёмной культивации\r\n          { type: 'light_cultivation', modifier: -10 }, // -10% к светлой культивации\r\n          { type: 'stealth', modifier: 20 } // +20% к скрытности\r\n        ],\r\n        visualEffects: { filter: 'brightness(0.7) contrast(1.2) saturate(0.8)' }\r\n      },\r\n      deepNight: { // 23:00-5:00\r\n        name: 'Глубокая ночь',\r\n        effects: [\r\n          { type: 'cultivation_insight', chance: 0.05 }, // 5% шанс получить прозрение при культивации\r\n          { type: 'perception', modifier: -15 }, // -15% к восприятию\r\n          { type: 'stealth', modifier: 30 } // +30% к скрытности\r\n        ],\r\n        visualEffects: { filter: 'brightness(0.6) contrast(1.3) saturate(0.7)' }\r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Инициализация погодных условий для локации\r\n   * @param {Object} location - Информация о локации\r\n   * @param {Object} worldTime - Объект с временем из state.world.time (опционально)\r\n   * @returns {Object} - Начальные погодные условия\r\n   */\r\n  initWeather(location, worldTime = null) {\r\n    let hour, minute, currentSeason, dayCount;\r\n    \r\n    // Если переданы значения времени из worldTime, используем их\r\n    if (worldTime && typeof worldTime === 'object') {\r\n      hour = typeof worldTime.hour === 'number' ? worldTime.hour : new Date().getHours();\r\n      minute = typeof worldTime.minute === 'number' ? worldTime.minute : new Date().getMinutes();\r\n      dayCount = typeof worldTime.day === 'number' ? worldTime.day : 1;\r\n      \r\n      // Используем сезон из worldTime или определяем по умолчанию\r\n      if (worldTime.season && this.seasons[worldTime.season]) {\r\n        currentSeason = worldTime.season;\r\n      } else {\r\n        const seasons = Object.keys(this.seasons);\r\n        currentSeason = seasons[Math.floor(new Date().getMonth() / 3) % 4];\r\n      }\r\n      \r\n      console.log('🌤️ Инициализация погоды с использованием worldTime:', { \r\n        hour, minute, dayCount, currentSeason \r\n      });\r\n    } else {\r\n      // Определяем базовые параметры времени от текущей даты\r\n      const now = new Date();\r\n      hour = now.getHours();\r\n      minute = now.getMinutes();\r\n      dayCount = 1;\r\n      \r\n      // Определяем сезон (привязка к реальному сезону)\r\n      const seasons = Object.keys(this.seasons);\r\n      currentSeason = seasons[Math.floor(now.getMonth() / 3) % 4];\r\n      \r\n      console.log('🌤️ Инициализация погоды без worldTime, используем текущее время:', { \r\n        hour, minute, dayCount, currentSeason \r\n      });\r\n    }\r\n    \r\n    // Определяем начальную погоду с учетом сезона и локации\r\n    const initialWeather = this._calculateWeather(currentSeason, location);\r\n    \r\n    // Генерируем прогноз погоды\r\n    const forecast = this._generateForecast(initialWeather.type, currentSeason, location, 3); // Передаем текущую погоду\r\n    \r\n    // Вычисляем правильный день сезона на основе мирового дня\r\n    let seasonDay, calculatedSeason;\r\n    \r\n    // Если день превышает длину сезона, вычисляем текущий сезон правильно\r\n    if (dayCount > this.SEASON_LENGTH) {\r\n      // Вычисляем номер дня в текущем сезоне\r\n      seasonDay = ((dayCount - 1) % this.SEASON_LENGTH) + 1;\r\n      \r\n      // Вычисляем, какой сезон должен быть сейчас, учитывая циклический характер сезонов\r\n      const seasonIndex = Math.floor((dayCount - 1) / this.SEASON_LENGTH) % this.SEASON_ORDER.length;\r\n      calculatedSeason = this.SEASON_ORDER[seasonIndex];\r\n      \r\n      console.log('📅 Инициализация погоды с корректировкой сезона:', {\r\n        мировой_день: dayCount,\r\n        день_сезона: seasonDay,\r\n        вычисленный_сезон: calculatedSeason,\r\n        исходный_сезон: currentSeason\r\n      });\r\n      \r\n      // Используем вычисленный сезон вместо переданного\r\n      currentSeason = calculatedSeason;\r\n    } else {\r\n      // Если день в пределах длины сезона, просто используем его\r\n      seasonDay = dayCount;\r\n    }\r\n    \r\n    // Определяем, день сейчас или ночь\r\n    const isDayTime = hour >= 6 && hour < 20;\r\n    \r\n    // Определяем текущий период дня\r\n    const daytimePeriod = this._getDaytimePeriod(hour);\r\n    \r\n    // Сбор эффектов погоды и времени суток\r\n    const weatherEffects = this._collectWeatherEffects(initialWeather.type, currentSeason, daytimePeriod);\r\n    \r\n    // Вычисляем абсолютное время следующей смены погоды\r\n    const currentGameMinutes = hour * 60 + minute;\r\n    const weatherChangeAt = currentGameMinutes + initialWeather.duration;\r\n    \r\n    return {\r\n      hour,\r\n      minute,\r\n      dayCount: dayCount,\r\n      isDayTime,\r\n      currentWeather: initialWeather.type,\r\n      weatherIntensity: initialWeather.intensity,\r\n      weatherChangeAt: weatherChangeAt, // Абсолютное время в минутах (с начала дня)\r\n      nextWeatherChange: initialWeather.duration, // Сохраняем для обратной совместимости\r\n      currentSeason,\r\n      seasonDay, // Используем вычисленный день сезона\r\n      seasonLength: this.SEASON_LENGTH, // Используем константу из сервиса\r\n      activeEvent: null, // Нет активного события в начале\r\n      eventRemainingTime: null,\r\n      weatherEffects,\r\n      forecast\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Получение текущего периода суток на основе часа\r\n   * @param {Number} hour - Текущий час (0-23)\r\n   * @returns {String} - Период суток\r\n   */\r\n  _getDaytimePeriod(hour) {\r\n    if (hour >= 5 && hour < 7) return 'dawn';\r\n    if (hour >= 7 && hour < 11) return 'morning';\r\n    if (hour >= 11 && hour < 14) return 'noon';\r\n    if (hour >= 14 && hour < 17) return 'afternoon';\r\n    if (hour >= 17 && hour < 20) return 'evening';\r\n    if (hour >= 20 && hour < 23) return 'night';\r\n    return 'deepNight'; // 23:00-5:00\r\n  }\r\n\r\n  /**\r\n   * Округляет значение до ближайшего целого числа\r\n   * @param {Number} value - Значение для округления\r\n   * @returns {Number} - Округленное значение\r\n   */\r\n  _roundToMultipleOf5(value) {\r\n    // Просто округляем до ближайшего целого\r\n    return Math.round(value);\r\n  }\r\n\r\n  /**\r\n   * Сбор эффектов погоды и времени суток\r\n   * @param {String} weatherType - Тип погоды\r\n   * @param {String} season - Текущий сезон\r\n   * @param {String} daytimePeriod - Период суток\r\n   * @returns {Array} - Массив эффектов\r\n   */\r\n  _collectWeatherEffects(weatherType, season, daytimePeriod) {\r\n    const effects = [];\r\n    \r\n    // Добавляем эффекты погоды\r\n    const weatherEffects = {\r\n      clear: [\r\n        { type: 'perception', modifier: 10 }, // +10% к восприятию\r\n        { type: 'fire_cultivation', modifier: 15 } // +15% к огненной культивации\r\n      ],\r\n      cloudy: [\r\n        { type: 'perception', modifier: -5 }, // -5% к восприятию\r\n        { type: 'energy_regen', modifier: -5 } // -5% к восстановлению энергии\r\n      ],\r\n      rain: [\r\n        { type: 'water_cultivation', modifier: 20 }, // +20% к водной культивации\r\n        { type: 'fire_cultivation', modifier: -10 }, // -10% к огненной культивации\r\n        { type: 'movement_speed', modifier: -10 }, // -10% к скорости передвижения\r\n        { type: 'resource_bonus', target: 'herbs', modifier: 20 } // +20% к сбору трав\r\n      ],\r\n      thunderstorm: [\r\n        { type: 'lightning_cultivation', modifier: 30 }, // +30% к молниевой культивации\r\n        { type: 'perception', modifier: -15 }, // -15% к восприятию\r\n        { type: 'movement_speed', modifier: -20 }, // -20% к скорости передвижения\r\n        { type: 'resource_bonus', target: 'crystals', modifier: 30 } // +30% к сбору кристаллов\r\n      ],\r\n      fog: [\r\n        { type: 'perception', modifier: -30 }, // -30% к восприятию\r\n        { type: 'stealth', modifier: 20 }, // +20% к скрытности\r\n        { type: 'water_cultivation', modifier: 15 } // +15% к водной культивации\r\n      ],\r\n      snow: [\r\n        { type: 'water_cultivation', modifier: 25 }, // +25% к водной культивации\r\n        { type: 'movement_speed', modifier: -30 }, // -30% к скорости передвижения\r\n        { type: 'fire_cultivation', modifier: -15 }, // -15% к огненной культивации\r\n        { type: 'resource_bonus', target: 'ores', modifier: 15 } // +15% к сбору руд\r\n      ]\r\n    };\r\n    \r\n    // Добавляем базовые эффекты погоды и округляем все модификаторы\r\n    if (weatherEffects[weatherType]) {\r\n      // Создаем копию эффектов с округленными модификаторами\r\n      const roundedEffects = weatherEffects[weatherType].map(effect => ({\r\n        ...effect,\r\n        modifier: this._roundToMultipleOf5(effect.modifier)\r\n      }));\r\n      effects.push(...roundedEffects);\r\n    }\r\n    \r\n    // Добавляем эффекты времени суток и округляем\r\n    if (this.daytimeEffects[daytimePeriod]) {\r\n      const roundedTimeEffects = this.daytimeEffects[daytimePeriod].effects.map(effect => ({\r\n        ...effect,\r\n        modifier: this._roundToMultipleOf5(effect.modifier)\r\n      }));\r\n      effects.push(...roundedTimeEffects);\r\n    }\r\n    \r\n    // Добавляем сезонные модификаторы к эффектам и округляем\r\n    const seasonData = this.seasons[season];\r\n    if (seasonData && seasonData.resourceModifiers) {\r\n      for (const [resource, modifier] of Object.entries(seasonData.resourceModifiers)) {\r\n        // Преобразуем множитель в процентный бонус и округляем\r\n        const percentBonus = (modifier - 1) * 100;\r\n        effects.push({\r\n          type: 'resource_bonus',\r\n          target: resource,\r\n          modifier: this._roundToMultipleOf5(percentBonus)\r\n        });\r\n      }\r\n    }\r\n    \r\n    return effects;\r\n  }\r\n\r\n  /**\r\n   * Генерация прогноза погоды с учетом уникальности погоды\r\n   * @param {String} currentWeatherType - Текущий тип погоды (для избежания повторов)\r\n   * @param {String} season - Текущий сезон\r\n   * @param {Object} location - Информация о локации\r\n   * @param {Number} periods - Количество периодов для прогноза\r\n   * @returns {Array} - Массив прогнозируемых погодных условий\r\n   */\r\n  _generateForecast(currentWeatherType, season, location, periods) {\r\n    const forecast = [];\r\n    let totalDuration = 0;\r\n    let previousWeatherType = currentWeatherType; // Начинаем с текущей погоды\r\n    \r\n    // Собираем все типы погоды для учета разнообразия\r\n    const allWeatherTypes = Object.keys(this.weatherTypes);\r\n    \r\n    // Отслеживаем уже использованные типы погоды для разнообразия\r\n    const usedTypesInForecast = new Set([currentWeatherType]);\r\n    \r\n    for (let i = 0; i < periods; i++) {\r\n      // Генерируем новую погоду со строгим учетом уникальности\r\n      let newWeather = this._calculateWeather(season, location);\r\n      \r\n      // УЛУЧШЕНО: Более строгий алгоритм предотвращения повторения погоды\r\n      let attempts = 0;\r\n      const maxAttempts = 10; // Увеличиваем количество попыток\r\n      \r\n      // Пытаемся избежать повторения уже использованных типов погоды\r\n      while ((newWeather.type === previousWeatherType || usedTypesInForecast.has(newWeather.type)) && \r\n             attempts < maxAttempts && \r\n             usedTypesInForecast.size < allWeatherTypes.length) {\r\n        \r\n        // УЛУЧШЕНО: Принудительно выбираем из неиспользованных типов, если много попыток\r\n        if (attempts > 5) {\r\n          const unusedTypes = allWeatherTypes.filter(type => !usedTypesInForecast.has(type));\r\n          if (unusedTypes.length > 0) {\r\n            // Выбираем случайный тип из неиспользованных\r\n            const randomUnusedType = unusedTypes[Math.floor(Math.random() * unusedTypes.length)];\r\n            \r\n            // Создаем новую погоду с этим типом\r\n            const baseWeather = this._calculateWeather(season, location);\r\n            newWeather = {\r\n              type: randomUnusedType,\r\n              intensity: baseWeather.intensity,\r\n              duration: baseWeather.duration\r\n            };\r\n            \r\n            console.log(`🌦️ Принудительное разнообразие прогноза: выбран новый тип ${randomUnusedType}`);\r\n            break;\r\n          }\r\n        } else {\r\n          // Стандартная логика генерации новой погоды\r\n          newWeather = this._calculateWeather(season, location);\r\n        }\r\n        \r\n        attempts++;\r\n      }\r\n      \r\n      // Добавляем тип в уже использованные\r\n      usedTypesInForecast.add(newWeather.type);\r\n      \r\n      // УЛУЧШЕНО: Варьируем продолжительность для разнообразия прогноза\r\n      // Делаем небольшую случайную корректировку в пределах ±20%\r\n      const durationVariation = 0.8 + (Math.random() * 0.4); // от 0.8 до 1.2\r\n      const adjustedDuration = Math.round(newWeather.duration * durationVariation);\r\n      \r\n      // Гарантируем минимальную длительность и округляем до 10 минут\r\n      const finalDuration = Math.max(30, Math.ceil(adjustedDuration / 10) * 10);\r\n      \r\n      // УЛУЧШЕНО: Гарантируем, что вторая и третья погода в прогнозе имеют разные timeToOccur\r\n      const baseTimeToOccur = totalDuration;\r\n      \r\n      // Добавляем случайность к времени наступления для второй и последующих прогнозов\r\n      let timeVariation = 0;\r\n      if (i > 0) {\r\n        // Добавляем случайное смещение до 20 минут (кратно 5 минутам)\r\n        timeVariation = Math.round(Math.random() * 4) * 5;\r\n      }\r\n      \r\n      // Округляем время до наступления до кратных 10 минут\r\n      const roundedTimeToOccur = Math.ceil((baseTimeToOccur + timeVariation) / 10) * 10;\r\n      \r\n      // Добавляем погоду в прогноз с возможной вариацией интенсивности\r\n      const intensityVariation = 0.9 + (Math.random() * 0.2); // от 0.9 до 1.1\r\n      \r\n      forecast.push({\r\n        type: newWeather.type,\r\n        intensity: Math.min(1.5, Math.max(0.5, newWeather.intensity * intensityVariation)),\r\n        timeToOccur: roundedTimeToOccur,\r\n        duration: finalDuration\r\n      });\r\n      \r\n      // Запоминаем тип погоды для следующей итерации\r\n      previousWeatherType = newWeather.type;\r\n      \r\n      // Увеличиваем общую длительность\r\n      totalDuration += finalDuration;\r\n    }\r\n    \r\n    console.log('🌤️ Сгенерирован улучшенный прогноз погоды:', forecast.map(item => \r\n      `${item.type} через ${item.timeToOccur} мин. (продолжительность ${item.duration} мин.)`\r\n    ));\r\n    \r\n    return forecast;\r\n  }\r\n  \r\n  /**\r\n   * Расчет следующего погодного состояния\r\n   * @param {String} season - Текущий сезон\r\n   * @param {Object} location - Информация о локации\r\n   * @returns {Object} - Новое погодное состояние\r\n   */\r\n  /**\r\n   * Принудительно изменяет погоду на новую\r\n   * @param {Object} currentWeather - Текущее состояние погоды\r\n   * @param {Object} location - Информация о локации\r\n   * @returns {Object} - Обновленное состояние погоды\r\n   */\r\n  forceWeatherChange(currentWeather, location, eventName = null) {\r\n    if (!currentWeather) {\r\n      console.error('❌ forceWeatherChange: не передан currentWeather');\r\n      return {};\r\n    }\r\n    \r\n    console.log('🌤️ Вызван forceWeatherChange, принудительно меняем погоду', { \r\n      currentSeason: currentWeather.currentSeason,\r\n      dayCount: currentWeather.dayCount,\r\n      seasonDay: currentWeather.seasonDay,\r\n      событие: eventName || 'нет'\r\n    });\r\n    \r\n    // Получаем текущий сезон из переданного состояния\r\n    const season = currentWeather.currentSeason || 'spring';\r\n    \r\n    // Если передано имя события, активируем его \r\n    if (eventName && this.specialEvents[eventName]) {\r\n      const event = this.specialEvents[eventName];\r\n      console.log(`Активация особого события: ${event.name}`);\r\n      \r\n      // Получаем новую погоду\r\n      let newWeather = this._calculateWeather(season, location);\r\n      \r\n      // Если нет особых требований к погоде, пытаемся избежать повторения текущей погоды\r\n      let attempts = 0;\r\n      while (newWeather.type === currentWeather.currentWeather && attempts < 5) {\r\n        newWeather = this._calculateWeather(season, location);\r\n        attempts++;\r\n      }\r\n      \r\n      // Подготовка эффектов события - обеспечиваем округление модификаторов\r\n      const processedEffects = event.effects.map(effect => {\r\n        if (effect.modifier !== undefined) {\r\n          // Округляем модификатор до значения, кратного 5\r\n          return {\r\n            ...effect,\r\n            modifier: this._roundToMultipleOf5(effect.modifier)\r\n          };\r\n        }\r\n        return effect;\r\n      });\r\n      \r\n      // Формируем обновленное состояние с активным событием\r\n      return {\r\n        ...currentWeather,\r\n        currentWeather: newWeather.type,\r\n        weatherIntensity: newWeather.intensity,\r\n        activeEvent: eventName,\r\n        eventRemainingTime: event.duration,\r\n        weatherEffects: processedEffects,\r\n      };\r\n    }\r\n    \r\n    // Стандартная логика изменения погоды без события\r\n    let newWeather = this._calculateWeather(season, location);\r\n    \r\n    // Пытаемся избежать повторения текущей погоды\r\n    let attempts = 0;\r\n    while (newWeather.type === currentWeather.currentWeather && attempts < 5) {\r\n      newWeather = this._calculateWeather(season, location);\r\n      attempts++;\r\n    }\r\n    \r\n    // Текущий час и минута из переданного состояния\r\n    const hour = typeof currentWeather.hour === 'number' ? currentWeather.hour : 12;\r\n    const minute = typeof currentWeather.minute === 'number' ? currentWeather.minute : 0;\r\n    \r\n    // Расчет абсолютного времени в минутах с начала дня\r\n    const currentGameMinutes = hour * 60 + minute;\r\n    \r\n    // Абсолютное время следующей смены погоды\r\n    const weatherChangeAt = currentGameMinutes + newWeather.duration;\r\n    \r\n    // Генерируем новый прогноз погоды\r\n    const forecast = this._generateForecast(newWeather.type, season, location, 3);\r\n    \r\n    // Определяем период суток\r\n    const daytimePeriod = this._getDaytimePeriod(hour);\r\n    \r\n    // Собираем эффекты погоды и времени суток\r\n    const weatherEffects = this._collectWeatherEffects(newWeather.type, season, daytimePeriod);\r\n    \r\n    console.log('✅ forceWeatherChange: успешно сгенерирована новая погода', {\r\n      тип: newWeather.type,\r\n      интенсивность: newWeather.intensity,\r\n      продолжительность: newWeather.duration,\r\n      время_следующей_смены: weatherChangeAt\r\n    });\r\n    \r\n    // Возвращаем обновленное состояние погоды\r\n    return {\r\n      ...currentWeather,\r\n      currentWeather: newWeather.type,\r\n      weatherIntensity: newWeather.intensity,\r\n      weatherChangeAt: weatherChangeAt,\r\n      nextWeatherChange: newWeather.duration,\r\n      weatherEffects,\r\n      forecast\r\n    };\r\n  }\r\n  \r\n  _calculateWeather(season, location) {\r\n    // Копируем базовые вероятности\r\n    const probabilities = {};\r\n    \r\n    // Заполняем вероятностями по умолчанию\r\n    for (const [type, info] of Object.entries(this.weatherTypes)) {\r\n      probabilities[type] = info.baseChance;\r\n    }\r\n    \r\n    // Применяем сезонные модификаторы\r\n    const seasonData = this.seasons[season];\r\n    if (seasonData) {\r\n      for (const [type, modifier] of Object.entries(seasonData.weatherModifiers)) {\r\n        probabilities[type] *= modifier;\r\n      }\r\n    }\r\n    \r\n    // Применяем локационные модификаторы, если они есть\r\n    if (location?.weatherModifiers) {\r\n      for (const [type, modifier] of Object.entries(location.weatherModifiers)) {\r\n        probabilities[type] *= modifier;\r\n      }\r\n    }\r\n    \r\n    // Нормализуем вероятности, чтобы сумма была равна 1\r\n    const totalProbability = Object.values(probabilities).reduce((sum, p) => sum + p, 0);\r\n    for (const type in probabilities) {\r\n      probabilities[type] /= totalProbability;\r\n    }\r\n    \r\n    // Выбираем погоду на основе вероятностей\r\n    const random = Math.random();\r\n    let cumulative = 0;\r\n    \r\n    for (const [type, probability] of Object.entries(probabilities)) {\r\n      cumulative += probability;\r\n      \r\n      if (random <= cumulative) {\r\n        // Определяем интенсивность (от 0.5 до 1.5)\r\n        const intensity = 0.5 + Math.random();\r\n        \r\n        // Определяем длительность (от 300 до 600 минут игрового времени)\r\n        const baseDuration = 300 + Math.floor(Math.random() * 300);\r\n        \r\n        // Модифицируем длительность в зависимости от типа погоды\r\n        const durationModifiers = {\r\n          clear: 1.5, // Ясная погода длится дольше\r\n          cloudy: 1.2,\r\n          rain: 0.8,\r\n          thunderstorm: 0.7, // Грозы обычно короче\r\n          fog: 1.0,\r\n          snow: 1.1\r\n        };\r\n        \r\n        // Округляем длительность до ближайших 10 минут\r\n        let duration = Math.floor(baseDuration * (durationModifiers[type] || 1.0));\r\n        \r\n        // ВАЖНО: Гарантируем минимум 300 минут игрового времени\r\n        duration = Math.max(300, Math.ceil(duration / 10) * 10);\r\n        \r\n        return {\r\n          type,\r\n          intensity,\r\n          duration\r\n        };\r\n      }\r\n    }\r\n    \r\n    // По умолчанию возвращаем ясную погоду\r\n    return {\r\n      type: 'clear',\r\n      intensity: 1.0,\r\n      duration: 120\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Обновляет время и погоду в зависимости от прошедших минут реального времени\r\n   * @param {Object} currentWeather - Текущее состояние погоды\r\n   * @param {Object} location - Информация о локации\r\n   * @param {Object} worldTime - Объект с актуальным временем из state.world.time\r\n   * @param {Number} realMinutesPassed - Количество прошедших минут реального времени\r\n   * @returns {Object} - Обновленное состояние погоды\r\n   */\r\n  updateTime(currentWeather, location, worldTime, realMinutesPassed = 1) {\r\n    if (!currentWeather) {\r\n      console.error('❌ updateTime: не передан currentWeather');\r\n      return {};\r\n    }\r\n    \r\n    console.log('🕒 Вызван updateTime:', { \r\n      worldTime,\r\n      realMinutesPassed,\r\n      множитель: WeatherService.TIME_MULTIPLIER\r\n    });\r\n    \r\n    // Проверяем, есть ли новые данные времени в worldTime (как единственный источник истины)\r\n    let hour, minute, dayCount, currentSeason;\r\n    \r\n    if (worldTime && typeof worldTime === 'object') {\r\n      hour = typeof worldTime.hour === 'number' ? worldTime.hour : currentWeather.hour || 0;\r\n      minute = typeof worldTime.minute === 'number' ? worldTime.minute : currentWeather.minute || 0;\r\n      dayCount = typeof worldTime.day === 'number' ? worldTime.day : currentWeather.dayCount || 1;\r\n      currentSeason = worldTime.season || currentWeather.currentSeason || 'spring';\r\n      \r\n      console.log('🕒 Использую worldTime как источник истины:', {\r\n        hour, minute, dayCount, currentSeason\r\n      });\r\n    } else {\r\n      // Используем текущее состояние, если worldTime не предоставлен\r\n      hour = currentWeather.hour || 0;\r\n      minute = currentWeather.minute || 0;\r\n      dayCount = currentWeather.dayCount || 1;\r\n      currentSeason = currentWeather.currentSeason || 'spring';\r\n    }\r\n    \r\n    // Рассчитываем абсолютное время в минутах\r\n    const absoluteMinutes = hour * 60 + minute;\r\n    \r\n    // Проверяем, нужно ли обновить погоду на основе абсолютного времени\r\n    // weatherChangeAt содержит абсолютное время в минутах (с начала дня), когда должна смениться погода\r\n    const weatherChangeAt = currentWeather.weatherChangeAt || (absoluteMinutes + 60); // По умолчанию через час\r\n    \r\n    console.log('⏱️ Проверка необходимости обновления погоды:', {\r\n      текущее_абсолютное_время: absoluteMinutes,\r\n      смена_погоды_в: weatherChangeAt,\r\n      разница: weatherChangeAt - absoluteMinutes,\r\n      текущая_погода: currentWeather.currentWeather\r\n    });\r\n    \r\n    // Копируем текущее состояние, чтобы не изменять его напрямую\r\n    let updatedState = { ...currentWeather };\r\n    \r\n    // Синхронизируем значения из worldTime (источник истины)\r\n    updatedState.hour = hour;\r\n    updatedState.minute = minute;\r\n    updatedState.dayCount = dayCount;\r\n    \r\n    // Обработка смены сезона при превышении дня сезона \r\n    const previousSeasonDay = currentWeather.seasonDay || 1;\r\n    \r\n    // Обнаруживаем, что текущий день сезона превышает максимальную длину сезона\r\n    if (dayCount > this.SEASON_LENGTH) {\r\n      // Вычисляем номер дня в новом сезоне\r\n      const newSeasonDay = ((dayCount - 1) % this.SEASON_LENGTH) + 1;\r\n      \r\n      // Вычисляем, какой сезон должен быть сейчас, учитывая циклический характер сезонов\r\n      const seasonIndex = Math.floor((dayCount - 1) / this.SEASON_LENGTH) % this.SEASON_ORDER.length;\r\n      const calculatedSeason = this.SEASON_ORDER[seasonIndex];\r\n      \r\n      console.log('🌈 СМЕНА СЕЗОНА:', {\r\n        прошлый_день_сезона: previousSeasonDay,\r\n        новый_день_сезона: newSeasonDay,\r\n        текущий_мировой_день: dayCount,\r\n        прошлый_сезон: currentSeason,\r\n        новый_сезон: calculatedSeason,\r\n        длина_сезона: this.SEASON_LENGTH\r\n      });\r\n      \r\n      // Обновляем сезон и день сезона\r\n      updatedState.currentSeason = calculatedSeason;\r\n      updatedState.seasonDay = newSeasonDay;\r\n      \r\n      // Генерируем новую погоду для нового сезона\r\n      let newSeasonWeather = this._calculateWeather(calculatedSeason, location);\r\n      \r\n      // Обновляем погоду для нового сезона\r\n      updatedState.currentWeather = newSeasonWeather.type;\r\n      updatedState.weatherIntensity = newSeasonWeather.intensity;\r\n      \r\n      // Определяем новое абсолютное время следующей смены погоды\r\n      updatedState.weatherChangeAt = absoluteMinutes + newSeasonWeather.duration;\r\n      updatedState.nextWeatherChange = newSeasonWeather.duration;\r\n      \r\n      // Обновляем прогноз для нового сезона\r\n      updatedState.forecast = this._generateForecast(newSeasonWeather.type, calculatedSeason, location, 3);\r\n      \r\n      // Обновляем эффекты погоды для нового сезона\r\n      const daytimePeriod = this._getDaytimePeriod(hour);\r\n      updatedState.weatherEffects = this._collectWeatherEffects(newSeasonWeather.type, calculatedSeason, daytimePeriod);\r\n    } else {\r\n      // Если день в пределах длины сезона, просто обновляем день сезона\r\n      updatedState.seasonDay = dayCount;\r\n      updatedState.currentSeason = currentSeason;\r\n    }\r\n    \r\n    // ИСПРАВЛЕНИЕ: Сначала проверяем, равно ли nextWeatherChange нулю от предыдущих обновлений\r\n    if (currentWeather.nextWeatherChange === 0 || absoluteMinutes >= weatherChangeAt) {\r\n      console.log('🌦️ Время смены погоды наступило!', {\r\n        текущее_время: absoluteMinutes,\r\n        время_смены: weatherChangeAt,\r\n        старая_погода: updatedState.currentWeather,\r\n        счетчик_next_weather_change: currentWeather.nextWeatherChange,\r\n        причина: currentWeather.nextWeatherChange === 0 ? \"nextWeatherChange = 0\" : \"absoluteMinutes >= weatherChangeAt\"\r\n      });\r\n      \r\n      // Генерируем новую погоду, отличную от текущей\r\n      let newWeather = this._calculateWeather(currentSeason, location);\r\n      \r\n      // Пытаемся избежать повторения текущей погоды\r\n      let attempts = 0;\r\n      while (newWeather.type === updatedState.currentWeather && attempts < 5) {\r\n        newWeather = this._calculateWeather(currentSeason, location);\r\n        attempts++;\r\n      }\r\n      \r\n      // Обновляем погоду\r\n      updatedState.currentWeather = newWeather.type;\r\n      updatedState.weatherIntensity = newWeather.intensity;\r\n      \r\n      // Определяем новое абсолютное время следующей смены погоды\r\n      updatedState.weatherChangeAt = absoluteMinutes + newWeather.duration;\r\n      \r\n      // Для обратной совместимости сохраняем длительность\r\n      updatedState.nextWeatherChange = newWeather.duration;\r\n      \r\n      // Обновляем прогноз\r\n      updatedState.forecast = this._generateForecast(newWeather.type, currentSeason, location, 3);\r\n      \r\n      // Обновляем эффекты погоды\r\n      const daytimePeriod = this._getDaytimePeriod(hour);\r\n      updatedState.weatherEffects = this._collectWeatherEffects(newWeather.type, currentSeason, daytimePeriod);\r\n      \r\n      console.log('🌤️ Погода изменена:', {\r\n        новая_погода: updatedState.currentWeather,\r\n        интенсивность: updatedState.weatherIntensity,\r\n        следующая_смена_через: newWeather.duration,\r\n        абсолютное_время_смены: updatedState.weatherChangeAt\r\n      });\r\n    } else {\r\n      // Просто уменьшаем время до следующей смены погоды\r\n      const remainingMinutes = weatherChangeAt - absoluteMinutes;\r\n      \r\n      // ВАЖНОЕ ИСПРАВЛЕНИЕ: Гарантируем, что nextWeatherChange всегда положительное число\r\n      // или как минимум 0, чтобы избежать застревания отрицательных значений\r\n      updatedState.nextWeatherChange = Math.max(0, remainingMinutes);\r\n      \r\n      console.log('⏳ До смены погоды осталось:', updatedState.nextWeatherChange, 'мин.', {\r\n        weatherChangeAt,\r\n        absoluteMinutes,\r\n        разница: weatherChangeAt - absoluteMinutes\r\n      });\r\n      \r\n      // ИСПРАВЛЕНИЕ: Если оставшееся время равно 0, НЕМЕДЛЕННО меняем погоду, не ждем следующего цикла\r\n      if (updatedState.nextWeatherChange === 0) {\r\n        console.log('⚠️ Обнаружен счетчик с 0 минут! Выполняем НЕМЕДЛЕННУЮ смену погоды!');\r\n        \r\n        // Генерируем новую погоду, отличную от текущей\r\n        let newWeather = this._calculateWeather(currentSeason, location);\r\n        \r\n        // Пытаемся избежать повторения текущей погоды\r\n        let attempts = 0;\r\n        while (newWeather.type === updatedState.currentWeather && attempts < 5) {\r\n          newWeather = this._calculateWeather(currentSeason, location);\r\n          attempts++;\r\n        }\r\n        \r\n        // Обновляем погоду\r\n        updatedState.currentWeather = newWeather.type;\r\n        updatedState.weatherIntensity = newWeather.intensity;\r\n        \r\n        // Определяем новое абсолютное время следующей смены погоды\r\n        updatedState.weatherChangeAt = absoluteMinutes + newWeather.duration;\r\n        \r\n        // Для обратной совместимости сохраняем длительность\r\n        updatedState.nextWeatherChange = newWeather.duration;\r\n        \r\n        // Обновляем прогноз\r\n        updatedState.forecast = this._generateForecast(newWeather.type, currentSeason, location, 3);\r\n        \r\n        // Обновляем эффекты погоды\r\n        const daytimePeriod = this._getDaytimePeriod(hour);\r\n        updatedState.weatherEffects = this._collectWeatherEffects(newWeather.type, currentSeason, daytimePeriod);\r\n        \r\n        console.log('🌤️ Погода НЕМЕДЛЕННО изменена из-за нулевого счетчика:', {\r\n          новая_погода: updatedState.currentWeather,\r\n          интенсивность: updatedState.weatherIntensity,\r\n          следующая_смена_через: newWeather.duration,\r\n          абсолютное_время_смены: updatedState.weatherChangeAt\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Обновляем isDayTime на основе текущего часа\r\n    updatedState.isDayTime = hour >= 6 && hour < 20;\r\n    \r\n    return updatedState;\r\n  }\r\n}\r\n\r\n// Экспортируем сервис погоды\r\nexport default WeatherService;\r\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","const Resource = require('../models/resource');\r\nconst { resources, RESOURCE_TYPES, RARITY, getResourceById: getResourceByIdFromData } = require('../data/resources');\r\n\r\n// Проверяем, находимся ли мы в браузере\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\n/**\r\n * Сервис для работы с ресурсами\r\n */\r\nclass ResourceService {\r\n  /**\r\n   * Инициализация базы данных ресурсами из файла resources.js\r\n   * @returns {Promise<void>}\r\n   */\r\n  static async initializeResources() {\r\n    // В браузере ничего не делаем, так как используем данные напрямую из resources.js\r\n    if (isBrowser) {\r\n      console.log('Использование мок-данных ресурсов для браузера');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Проверяем, есть ли уже ресурсы в базе данных\r\n      const count = await Resource.count();\r\n      \r\n      // Если ресурсов нет, добавляем их из файла resources.js\r\n      if (count === 0) {\r\n        console.log('Инициализация ресурсов в базе данных...');\r\n        \r\n        // Создаем ресурсы в базе данных\r\n        for (const resource of resources) {\r\n          await Resource.create(resource);\r\n        }\r\n        \r\n        console.log(`Добавлено ${resources.length} ресурсов в базу данных.`);\r\n      } else {\r\n        console.log(`В базе данных уже есть ${count} ресурсов.`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при инициализации ресурсов:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение всех ресурсов\r\n   * @returns {Promise<Array>} - Массив ресурсов\r\n   */\r\n  static async getAllResources() {\r\n    try {\r\n      // В браузере возвращаем данные из файла resources.js\r\n      if (isBrowser) {\r\n        return resources;\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const resourceData = await Resource.findAll();\r\n        return resourceData;\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при получении ресурсов:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение ресурса по ID\r\n   * @param {string} id - ID ресурса\r\n   * @returns {Promise<Object|null>} - Ресурс или null, если ресурс не найден\r\n   */\r\n  static async getResourceById(id) {\r\n    try {\r\n      // В браузере используем данные из файла resources.js\r\n      if (isBrowser) {\r\n        return getResourceByIdFromData(id);\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const resource = await Resource.findByPk(id);\r\n        return resource;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Ошибка при получении ресурса с ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение ресурсов по типу\r\n   * @param {string} type - Тип ресурса\r\n   * @returns {Promise<Array>} - Массив ресурсов указанного типа\r\n   */\r\n  static async getResourcesByType(type) {\r\n    try {\r\n      // В браузере фильтруем данные из файла resources.js\r\n      if (isBrowser) {\r\n        return resources.filter(resource => resource.type === type);\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const resourceData = await Resource.findAll({\r\n          where: { type }\r\n        });\r\n        return resourceData;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Ошибка при получении ресурсов типа ${type}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение ресурсов по редкости\r\n   * @param {string} rarity - Редкость ресурса\r\n   * @returns {Promise<Array>} - Массив ресурсов указанной редкости\r\n   */\r\n  static async getResourcesByRarity(rarity) {\r\n    try {\r\n      // В браузере фильтруем данные из файла resources.js\r\n      if (isBrowser) {\r\n        return resources.filter(resource => resource.rarity === rarity);\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const resourceData = await Resource.findAll({\r\n          where: { rarity }\r\n        });\r\n        return resourceData;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Ошибка при получении ресурсов редкости ${rarity}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение ресурсов, необходимых для прорыва на определенной ступени и уровне\r\n   * @param {string} stage - Ступень культивации\r\n   * @param {number} level - Уровень культивации\r\n   * @returns {Object} - Объект с ID ресурсов и их количеством\r\n   */\r\n  static getBreakthroughResources(stage, level) {\r\n    // Преобразуем название ступени к нижнему регистру для унификации\r\n    const stageLower = stage.toLowerCase();\r\n    \r\n    // Определяем требуемые ресурсы в зависимости от ступени и уровня\r\n    switch(stageLower) {\r\n      case 'закалка тела':\r\n        const resources = {\r\n          'low_grade_herb': Math.floor(level * 5 + Math.random() * 5),\r\n          'basic_pill': Math.floor(level * 2 + Math.random() * 3)\r\n        };\r\n        \r\n        if (level >= 7) {\r\n          resources['spirit_stone'] = Math.floor((level - 6) * 2);\r\n        }\r\n        \r\n        return resources;\r\n        \r\n      case 'очищение ци':\r\n        const qiResources = {\r\n          'medium_grade_herb': Math.floor(level * 4 + Math.random() * 6),\r\n          'qi_pill': Math.floor(level * 3 + Math.random() * 3),\r\n          'spirit_stone': Math.floor(level * 3 + Math.random() * 5)\r\n        };\r\n        \r\n        if (level >= 5) {\r\n          qiResources['spirit_mineral'] = Math.floor((level - 4) * 2);\r\n        }\r\n        \r\n        return qiResources;\r\n        \r\n      case 'золотое ядро':\r\n        return {\r\n          'rare_herb': Math.floor(level * 3 + Math.random() * 7),\r\n          'high_quality_pill': Math.floor(level * 2 + Math.random() * 4),\r\n          'spirit_mineral': Math.floor(level * 4 + Math.random() * 6),\r\n          'spirit_stone': Math.floor(level * 10 + Math.random() * 10)\r\n        };\r\n        \r\n      case 'формирование души':\r\n        return {\r\n          'exotic_herb': Math.floor(level * 2 + Math.random() * 8),\r\n          'spirit_essence': Math.floor(level * 3 + Math.random() * 5),\r\n          'beast_soul': Math.floor(level * 1 + Math.random() * 3),\r\n          'spirit_mineral': Math.floor(level * 8 + Math.random() * 12),\r\n          'spirit_stone': Math.floor(level * 20 + Math.random() * 20)\r\n        };\r\n        \r\n      default:\r\n        return {\r\n          'low_grade_herb': Math.floor(level * 5 + Math.random() * 5),\r\n          'basic_pill': Math.floor(level * 2 + Math.random() * 3)\r\n        };\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение типов ресурсов\r\n   * @returns {Object} - Объект с типами ресурсов\r\n   */\r\n  static getResourceTypes() {\r\n    return RESOURCE_TYPES;\r\n  }\r\n  \r\n  /**\r\n   * Получение редкостей ресурсов\r\n   * @returns {Object} - Объект с редкостями ресурсов\r\n   */\r\n  static getRarityTypes() {\r\n    return RARITY;\r\n  }\r\n}\r\n\r\nmodule.exports = ResourceService;\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","const fs = require('fs');\r\nconst path = require('path');\r\nconst { getSequelizeInstance } = require('../services/database');\r\nconst Sequelize = require('sequelize');\r\n\r\nconst basename = path.basename(__filename);\r\nconst db = {\r\n  Sequelize: Sequelize,\r\n  sequelize: null,\r\n};\r\n\r\nasync function initializeModels() {\r\n  try {\r\n    const sequelize = await getSequelizeInstance();\r\n    if (!sequelize) {\r\n      throw new Error(\"Не удалось получить экземпляр Sequelize\");\r\n    }\r\n    db.sequelize = sequelize;\r\n\r\n    const modelFiles = fs\r\n      .readdirSync(__dirname)\r\n      .filter(file => {\r\n        return (\r\n          file.indexOf('.') !== 0 &&\r\n          file !== basename &&\r\n          file !== 'fix-models.js' &&\r\n          file.slice(-3) === '.js' &&\r\n          file.indexOf('.test.js') === -1\r\n        );\r\n      });\r\n\r\n    // 1. Загружаем и инициализируем модели\r\n    for (const file of modelFiles) {\r\n      try {\r\n        const modelDefinition = require(path.join(__dirname, file));\r\n        // Проверяем, экспортирует ли файл класс модели Sequelize\r\n        if (modelDefinition && typeof modelDefinition === 'function' && modelDefinition.prototype instanceof Sequelize.Model) {\r\n          const modelName = modelDefinition.modelName || modelDefinition.name;\r\n          if (modelName) {\r\n            // Инициализируем модель, если у нее есть наш асинхронный init\r\n            if (typeof modelDefinition.init === 'function' && modelDefinition.init.constructor.name === 'AsyncFunction') {\r\n               console.log(`Асинхронная инициализация модели ${modelName}...`);\r\n               await modelDefinition.init(); // Дожидаемся завершения\r\n               // После init модель должна быть в sequelize.models\r\n               if (sequelize.models[modelName]) {\r\n                  db[modelName] = sequelize.models[modelName];\r\n                  console.log(`Модель ${modelName} инициализирована.`);\r\n               } else {\r\n                  console.error(`Модель ${modelName} не найдена в sequelize.models после асинхронного init.`);\r\n                  db[modelName] = modelDefinition; // Сохраняем класс как fallback\r\n               }\r\n            } else if (typeof modelDefinition.init === 'function') {\r\n               // Для моделей со старым статическим init (если такие остались)\r\n               console.warn(`Модель ${modelName} использует статический init. Инициализация...`);\r\n               modelDefinition.init(sequelize); // Передаем sequelize\r\n               db[modelName] = modelDefinition;\r\n               console.log(`Модель ${modelName} инициализирована (статически).`);\r\n            } else {\r\n               console.warn(`Модель ${modelName} не имеет метода init.`);\r\n               db[modelName] = modelDefinition; // Сохраняем класс как есть\r\n            }\r\n          } else {\r\n            console.warn(`Модель в ${file} не имеет modelName или name.`);\r\n          }\r\n        } else {\r\n          console.warn(`Файл ${file} не экспортирует класс модели Sequelize.`);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Ошибка при загрузке/инициализации модели из ${file}:`, error);\r\n      }\r\n    }\r\n    console.log(\"Все модели загружены и инициализированы.\");\r\n\r\n    // 2. Настраиваем ассоциации\r\n    Object.keys(db).forEach(modelName => {\r\n      // Пропускаем Sequelize и sequelize\r\n      if (modelName === 'Sequelize' || modelName === 'sequelize' || modelName === 'initializePromise') return;\r\n\r\n      if (db[modelName] && db[modelName].associate) {\r\n        console.log(`Настройка ассоциаций для модели ${modelName}...`);\r\n        try {\r\n          db[modelName].associate(db); // Передаем объект db с инициализированными моделями\r\n        } catch (assocError) {\r\n          console.error(`Ошибка ассоциации для ${modelName}:`, assocError);\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log(\"Инициализация и ассоциация моделей завершены.\");\r\n\r\n  } catch (error) {\r\n    console.error(\"Критическая ошибка при инициализации моделей:\", error);\r\n    db.sequelize = null;\r\n  }\r\n}\r\n\r\n// Запускаем асинхронную инициализацию\r\ndb.initializePromise = initializeModels();\r\n\r\nmodule.exports = db;\r\n","/**\r\n * Утилиты для работы с техниками\r\n */\r\nconst { techniques } = require('../data/techniques');\r\n\r\n/**\r\n * Нормализует ID техники (заменяет подчеркивания на дефисы)\r\n * @param {string} id - ID техники\r\n * @returns {string} - Нормализованный ID техники\r\n */\r\nconst normalizeId = (id) => {\r\n  if (!id) return id;\r\n  return id.replace(/_/g, '-');\r\n};\r\n\r\n/**\r\n * Проверяет совместимость ID (поддержка обоих форматов)\r\n * @param {string} id1 - Первый ID\r\n * @param {string} id2 - Второй ID\r\n * @returns {boolean} - true, если ID совместимы\r\n */\r\nconst isSameId = (id1, id2) => {\r\n  if (!id1 || !id2) return false;\r\n  return normalizeId(id1) === normalizeId(id2);\r\n};\r\n\r\n/**\r\n * Патч для объекта техник, заменяющий подчеркивания на дефисы в ID\r\n * @param {Array|Object} techniques - Массив или объект техник\r\n * @returns {Array|Object} - Обновленный массив или объект техник\r\n */\r\nconst normalizeTechniquesIds = (techniques) => {\r\n  if (!techniques) return techniques;\r\n  \r\n  if (Array.isArray(techniques)) {\r\n    return techniques.map(technique => {\r\n      if (technique && technique.id && typeof technique.id === 'string') {\r\n        if (technique.id.includes('_')) {\r\n          const newId = normalizeId(technique.id);\r\n          console.log(`Нормализован ID техники: ${technique.id} -> ${newId}`);\r\n          return {\r\n            ...technique,\r\n            id: newId\r\n          };\r\n        }\r\n      }\r\n      return technique;\r\n    });\r\n  } else if (typeof techniques === 'object') {\r\n    const result = {};\r\n    Object.keys(techniques).forEach(key => {\r\n      if (key.includes('_')) {\r\n        const newKey = normalizeId(key);\r\n        console.log(`Нормализован ключ техники: ${key} -> ${newKey}`);\r\n        result[newKey] = techniques[key];\r\n      } else {\r\n        result[key] = techniques[key];\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  \r\n  return techniques;\r\n};\r\n\r\n/**\r\n * Находит базовую технику по ID\r\n * @param {string} id - ID техники\r\n * @returns {Object|null} - Базовое определение техники или null, если не найдено\r\n */\r\nconst findBaseTechniqueById = (id) => {\r\n  if (!id) return null;\r\n  const normalizedId = normalizeId(id);\r\n  return techniques.find(t => normalizeId(t.id) === normalizedId) || null;\r\n};\r\n\r\n/**\r\n * Рассчитывает параметры техники на основе уровня\r\n * @param {Object} baseTechnique - Базовое определение техники\r\n * @param {number} level - Текущий уровень техники\r\n * @returns {Object} - Параметры техники с учетом уровня\r\n */\r\nconst calculateTechniqueStats = (baseTechnique, level = 1) => {\r\n  if (!baseTechnique) return {};\r\n  \r\n  // Множитель на основе уровня (увеличение на 20% за каждый уровень)\r\n  const levelMultiplier = 1 + (level - 1) * 0.2;\r\n  \r\n  // Рассчитываем новые параметры с учетом уровня\r\n  const calculatedStats = {\r\n    damage: baseTechnique.damage ? Math.floor(baseTechnique.damage * levelMultiplier) : 0,\r\n    healing: baseTechnique.healing ? Math.floor(baseTechnique.healing * levelMultiplier) : 0,\r\n    energyCost: baseTechnique.energyCost ? Math.floor(baseTechnique.energyCost * (1 + (level - 1) * 0.1)) : 10\r\n  };\r\n  \r\n  // Обрабатываем эффекты\r\n  if (Array.isArray(baseTechnique.effects)) {\r\n    calculatedStats.effects = baseTechnique.effects.map(effect => {\r\n      const updatedEffect = { ...effect };\r\n      \r\n      // Увеличиваем урон эффекта\r\n      if (updatedEffect.damage) {\r\n        updatedEffect.damage = Math.floor(updatedEffect.damage * levelMultiplier);\r\n      }\r\n      \r\n      // Увеличиваем исцеление эффекта\r\n      if (updatedEffect.healing) {\r\n        updatedEffect.healing = Math.floor(updatedEffect.healing * levelMultiplier);\r\n      }\r\n      \r\n      return updatedEffect;\r\n    });\r\n  }\r\n  \r\n  return calculatedStats;\r\n};\r\n\r\n/**\r\n * Проверяет технику на наличие всех необходимых полей\r\n * @param {Object} technique - Техника для проверки\r\n * @returns {boolean} - true, если техника имеет все необходимые поля\r\n */\r\nconst isTechniqueValid = (technique) => {\r\n  if (!technique || !technique.id) return false;\r\n  \r\n  // Список необходимых полей\r\n  const requiredFields = [\r\n    'name', 'description', 'type', 'icon', \r\n    'damage', 'damageType', 'energyCost', 'cooldown',\r\n    'level', 'maxLevel'\r\n  ];\r\n  \r\n  // Проверяем наличие всех полей\r\n  for (const field of requiredFields) {\r\n    if (technique[field] === undefined) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  // Проверяем наличие массива эффектов\r\n  if (!Array.isArray(technique.effects)) {\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\n/**\r\n * Восстанавливает техники на основе их ID и level\r\n * @param {Array} techniques - Массив техник для восстановления\r\n * @returns {Array} - Массив восстановленных техник\r\n */\r\nconst repairTechniques = (playerTechniques) => {\r\n  if (!Array.isArray(playerTechniques) || playerTechniques.length === 0) {\r\n    console.log('Нет техник для восстановления');\r\n    return [];\r\n  }\r\n  \r\n  console.log(`🛠️ Запущено восстановление ${playerTechniques.length} техник...`);\r\n  \r\n  const repairedTechniques = playerTechniques.map(technique => {\r\n    // Всегда восстанавливаем технику, даже если она кажется валидной\r\n    console.log(`🔄 Восстановление техники с ID: ${technique.id}...`);\r\n    \r\n    // Получаем базовое определение техники\r\n    const baseTechnique = findBaseTechniqueById(technique.id);\r\n    \r\n    if (!baseTechnique) {\r\n      console.warn(`⚠️ Не найдено базовое определение для техники с ID: ${technique.id}. Возвращаем оригинал.`);\r\n      return technique; // Возвращаем как есть, если не нашли базовое определение\r\n    }\r\n    \r\n    // Сохраняем важные пользовательские данные\r\n    const level = typeof technique.level === 'number' ? technique.level : 1;\r\n    const experience = typeof technique.experience === 'number' ? technique.experience : 0;\r\n    const masteryLevel = typeof technique.masteryLevel === 'number' ? technique.masteryLevel : 0;\r\n    const lastUsed = technique.lastUsed || null;\r\n    const requiredLevel = technique.requiredLevel || baseTechnique.requiredLevel || 1;\r\n    \r\n    // Рассчитываем параметры с учетом уровня\r\n    const calculatedStats = calculateTechniqueStats(baseTechnique, level);\r\n    \r\n    // ВАЖНО: Создаем восстановленную технику, начиная с базового определения,\r\n    // затем добавляем рассчитанные статы, и только потом пользовательские данные\r\n    const repairedTechnique = {\r\n      ...baseTechnique,           // Базовые свойства из techniques.js\r\n      ...calculatedStats,         // Рассчитанные статы с учетом уровня\r\n      id: technique.id,           // Сохраняем оригинальный ID\r\n      level,                      // Сохраняем уровень\r\n      experience,                 // Сохраняем опыт\r\n      lastUsed,                   // Сохраняем время последнего использования\r\n      masteryLevel,               // Сохраняем уровень мастерства\r\n      requiredLevel               // Сохраняем требуемый уровень\r\n    };\r\n    \r\n    console.log(`✅ Техника восстановлена: ${repairedTechnique.name} (Уровень: ${level}, Урон: ${repairedTechnique.damage}, Кулдаун: ${repairedTechnique.cooldown})`);\r\n    return repairedTechnique;\r\n  });\r\n  \r\n  return repairedTechniques;\r\n};\r\n\r\nmodule.exports = {\r\n  normalizeId,\r\n  isSameId,\r\n  normalizeTechniquesIds,\r\n  findBaseTechniqueById,\r\n  calculateTechniqueStats,\r\n  isTechniqueValid,\r\n  repairTechniques\r\n};\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 6142;\nmodule.exports = webpackEmptyContext;","/**\r\n * Утилиты для нормализации эффектов\r\n * Содержит функции для преобразования разных форматов эффектов в единый стандарт\r\n */\r\n\r\nimport { standardizeEffect } from './effectsUtils';\r\nimport { sectBenefitsToEffects, createCleanEffect, cleanEffects } from './sectUtils';\r\n\r\n/**\r\n * Преобразует объект эффектов в массив с числовыми индексами\r\n * @param {Object|Array} statusEffects - Эффекты в любом формате\r\n * @returns {Array} Массив эффектов с числовыми индексами\r\n */\r\nexport const normalizeStatusEffects = (statusEffects) => {\r\n  // Если statusEffects уже массив, возвращаем его\r\n  if (Array.isArray(statusEffects)) return statusEffects;\r\n  \r\n  // Если statusEffects null или undefined, возвращаем пустой массив\r\n  if (!statusEffects) return [];\r\n  \r\n  // Если statusEffects - объект с именованными ключами, преобразуем в массив\r\n  if (typeof statusEffects === 'object') {\r\n    return Object.values(statusEffects);\r\n  }\r\n  \r\n  // В крайнем случае возвращаем пустой массив\r\n  return [];\r\n};\r\n\r\n\r\n/**\r\n * Объединяет несколько массивов эффектов, суммируя модификаторы для эффектов одинакового типа\r\n * @param {...Array} effectArrays - Массивы эффектов для объединения\r\n * @returns {Array} Объединенный массив эффектов с \"чистыми\" данными\r\n */\r\nexport const mergeEffects = (...effectArrays) => {\r\n  // Предварительно очищаем все входные массивы эффектов\r\n  const cleanedArrays = effectArrays.map(array => {\r\n    if (!Array.isArray(array)) return [];\r\n    return cleanEffects(array);\r\n  });\r\n  \r\n  // Объединяем все массивы\r\n  const allEffects = [].concat(...cleanedArrays);\r\n  \r\n  // Группируем эффекты по типу и суммируем модификаторы\r\n  const effectModifiersByType = {};\r\n  const effectNamesByType = {}; // Сохраняем лучшие имена для каждого типа эффекта\r\n  \r\n  // Для каждого эффекта выполняем стандартизацию и суммируем модификаторы\r\n  allEffects.forEach(effect => {\r\n    // Стандартизируем эффект\r\n    const standardized = standardizeEffect(effect);\r\n    const effectType = standardized.type;\r\n    \r\n    if (!effectModifiersByType[effectType]) {\r\n      effectModifiersByType[effectType] = 0;\r\n      effectNamesByType[effectType] = effect.name || '';\r\n    }\r\n    \r\n    // Суммируем модификаторы\r\n    effectModifiersByType[effectType] += standardized.modifier;\r\n    \r\n    // Сохраняем наиболее информативное имя (предпочитаем более длинные имена)\r\n    if (effect.name && effect.name.length > effectNamesByType[effectType].length) {\r\n      effectNamesByType[effectType] = effect.name;\r\n    }\r\n  });\r\n  \r\n  // Создаем \"чистые\" эффекты только на основе типа и суммарного модификатора\r\n  const mergedEffects = Object.entries(effectModifiersByType).map(([type, totalModifier]) => {\r\n    return createCleanEffect(type, totalModifier, {\r\n      name: effectNamesByType[type] || ''\r\n    });\r\n  });\r\n  \r\n  return mergedEffects;\r\n};\r\n\r\n/**\r\n * Преобразует массив эффектов в массив с числовыми индексами (0, 1, 2, ...)\r\n * @param {Array} effects - Массив эффектов\r\n * @returns {Array} Массив эффектов с числовыми индексами\r\n */\r\nexport const reindexEffects = (effects) => {\r\n  if (!Array.isArray(effects)) return [];\r\n  \r\n  // Преобразуем в объект с числовыми ключами\r\n  const reindexed = {};\r\n  effects.forEach((effect, index) => {\r\n    reindexed[index] = effect;\r\n  });\r\n  \r\n  // И обратно в массив\r\n  return Object.values(reindexed);\r\n};\r\n\r\n/**\r\n * Комплексная нормализация всех эффектов игрока\r\n * @param {Object} playerState - Состояние игрока\r\n * @param {Object} sectState - Состояние секты\r\n * @returns {Object} Обновленное состояние игрока с нормализованными эффектами\r\n */\r\nexport const normalizePlayerEffects = (playerState, sectState) => {\r\n  if (!playerState) return playerState;\r\n  \r\n  // Получаем имеющиеся статус-эффекты и очищаем их от технических полей и информации об источнике\r\n  const rawStatusEffects = normalizeStatusEffects(playerState.statusEffects);\r\n  const statusEffects = cleanEffects(rawStatusEffects);\r\n  \r\n  // Получаем бонусы секты\r\n  let sectBenefits = [];\r\n  if (sectState && sectState.benefits) {\r\n    // Если benefits уже есть в состоянии секты\r\n    sectBenefits = Array.isArray(sectState.benefits) ? \r\n                  sectState.benefits : \r\n                  Object.values(sectState.benefits);\r\n  } else if (playerState.sect && playerState.sect.benefits) {\r\n    // Если benefits есть внутри player.sect\r\n    sectBenefits = Array.isArray(playerState.sect.benefits) ? \r\n                  playerState.sect.benefits : \r\n                  Object.values(playerState.sect.benefits);\r\n  }\r\n  \r\n  // Преобразуем бонусы секты в эффекты\r\n  const sectEffects = sectBenefitsToEffects(sectBenefits);\r\n  \r\n  // Объединяем все эффекты с суммацией и еще раз очищаем результат\r\n  const mergedEffects = mergeEffects(statusEffects, sectEffects);\r\n  \r\n  // Присваиваем числовые индексы\r\n  const indexedEffects = reindexEffects(mergedEffects);\r\n  \r\n  // Теперь гарантированно нет полей id и source в эффектах\r\n  // Возвращаем обновленное состояние игрока с очищенными эффектами\r\n  return {\r\n    ...playerState,\r\n    statusEffects: indexedEffects\r\n  };\r\n};\r\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass TechniqueEffect extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    TechniqueEffect.belongsTo(models.Technique, {\r\n      foreignKey: 'technique_id', // Используем snake_case\r\n      as: 'technique'\r\n    });\r\n    // Связь со статистиками эффекта (если есть модель TechniqueEffectStat)\r\n    // TechniqueEffect.hasMany(models.TechniqueEffectStat, { foreignKey: 'effect_id', as: 'stats' });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nTechniqueEffect.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n    id: { // Соответствует id в SQL\r\n      type: DataTypes.INTEGER,\r\n      autoIncrement: true,\r\n      primaryKey: true,\r\n      allowNull: false\r\n    },\r\n    techniqueId: { // Соответствует technique_id в SQL\r\n      type: DataTypes.STRING(30), // Исправлен тип\r\n      allowNull: false,\r\n      field: 'technique_id',\r\n      references: {\r\n        model: 'techniques', // Имя таблицы в lowercase\r\n        key: 'id'\r\n      },\r\n      onUpdate: 'CASCADE',\r\n      onDelete: 'CASCADE'\r\n    },\r\n    type: { // Соответствует type в SQL\r\n      type: DataTypes.STRING(30), // Исправлен тип\r\n      allowNull: false\r\n    },\r\n    name: { // Соответствует name в SQL\r\n      type: DataTypes.STRING(100), // Исправлен тип\r\n      allowNull: false\r\n    },\r\n    duration: { // Соответствует duration в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 0\r\n    },\r\n    damage: { // Соответствует damage в SQL\r\n      type: DataTypes.INTEGER\r\n      // defaultValue убрано\r\n    },\r\n    damageType: { // Соответствует damage_type в SQL\r\n      type: DataTypes.STRING(20),\r\n      field: 'damage_type'\r\n    },\r\n    healing: { // Соответствует healing в SQL\r\n      type: DataTypes.INTEGER\r\n      // defaultValue убрано\r\n    }\r\n    // Поле stats удалено\r\n  }, {\r\n    sequelize,\r\n    modelName: 'TechniqueEffect',\r\n    tableName: 'technique_effects', // Исправлено: имя таблицы в snake_case\r\n    timestamps: false               // В SQL нет полей created_at, updated_at\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await TechniqueEffect.init();\r\n    console.log('TechniqueEffect модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели TechniqueEffect:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = TechniqueEffect;\r\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass Technique extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    Technique.hasMany(models.TechniqueEffect, {\r\n      foreignKey: 'technique_id', // Используем snake_case\r\n      as: 'effects'\r\n    });\r\n    Technique.hasMany(models.LearnedTechnique, {\r\n      foreignKey: 'techniqueId', // Здесь оставляем camelCase, так как в LearnedTechnique используется userId и techniqueId\r\n      as: 'learnedBy'\r\n    });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nTechnique.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n    id: { // Соответствует id в SQL\r\n      type: DataTypes.STRING(30),\r\n      primaryKey: true,\r\n      allowNull: false\r\n    },\r\n    name: { // Соответствует name в SQL\r\n      type: DataTypes.STRING(100),\r\n      allowNull: false\r\n    },\r\n    description: { // Соответствует description в SQL\r\n      type: DataTypes.TEXT\r\n    },\r\n    icon: { // Соответствует icon в SQL\r\n      type: DataTypes.STRING(10)\r\n    },\r\n    level: { // Соответствует level в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 1\r\n    },\r\n    damage: { // Соответствует damage в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 0\r\n    },\r\n    damageType: { // Соответствует damage_type в SQL\r\n      type: DataTypes.STRING(20),\r\n      field: 'damage_type'\r\n    },\r\n    energyCost: { // Соответствует energy_cost в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 0,\r\n      field: 'energy_cost'\r\n    },\r\n    cooldown: { // Соответствует cooldown в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 0\r\n    },\r\n    maxLevel: { // Соответствует max_level в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 5,\r\n      field: 'max_level'\r\n    },\r\n    type: { // Соответствует type в SQL\r\n      type: DataTypes.STRING(20)\r\n    },\r\n    requiredLevel: { // Соответствует required_level в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 1,\r\n      field: 'required_level'\r\n    },\r\n    healing: { // Соответствует healing в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 0\r\n    }\r\n    // Поле element удалено\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Technique',\r\n    tableName: 'techniques', // Исправлено: имя таблицы в lowercase\r\n    timestamps: false       // В SQL нет полей created_at, updated_at\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await Technique.init();\r\n    console.log('Technique модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели Technique:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = Technique;\r\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass InventoryItem extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    InventoryItem.belongsTo(models.User, {\r\n      foreignKey: 'userId',\r\n      as: 'user'\r\n    });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nInventoryItem.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n  // Явно определяем ID для соответствия миграции\r\n  id: {\r\n    type: DataTypes.INTEGER,\r\n    autoIncrement: true,\r\n    primaryKey: true,\r\n    allowNull: false\r\n  },\r\n  userId: {\r\n    type: DataTypes.INTEGER,\r\n    references: {\r\n      model: 'users', // Имя таблицы в lowercase\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE'\r\n    // Поле userId не primaryKey и не unique, один пользователь может иметь много предметов\r\n  },\r\n  // Поле itemId удалено, так как его нет в миграции\r\n  name: { // Соответствует name в миграции\r\n    type: DataTypes.STRING,\r\n    allowNull: false\r\n  },\r\n  description: { // Добавлено поле description из миграции\r\n    type: DataTypes.TEXT\r\n  },\r\n  type: { // Соответствует type в миграции\r\n    type: DataTypes.ENUM('оружие', 'броня', 'артефакт', 'расходник', 'ресурс'),\r\n    allowNull: false\r\n  },\r\n  rarity: { // Соответствует rarity в миграции\r\n    type: DataTypes.ENUM('обычный', 'необычный', 'редкий', 'эпический', 'легендарный'),\r\n    defaultValue: 'обычный'\r\n  },\r\n  stats: { // Переименовано из properties, соответствует stats в миграции\r\n    type: DataTypes.JSONB, // Используем JSONB для PostgreSQL\r\n    defaultValue: {}\r\n  },\r\n  quantity: { // Соответствует quantity в миграции\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 1\r\n  },\r\n  equipped: { // Соответствует equipped в миграции\r\n    type: DataTypes.BOOLEAN,\r\n    defaultValue: false\r\n  }\r\n  // Поле calculatedBonuses удалено\r\n  // Sequelize автоматически добавит createdAt и updatedAt\r\n  }, {\r\n    sequelize,\r\n    modelName: 'InventoryItem',\r\n    tableName: 'inventory_items', // Исправлено: имя таблицы в snake_case\r\n    timestamps: true,           // Явно указываем использование временных меток\r\n    underscored: true           // Используем snake_case для createdAt и updatedAt (created_at, updated_at)\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await InventoryItem.init();\r\n    console.log('InventoryItem модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели InventoryItem:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = InventoryItem;\r\n","const QuestProgress = require('../models/quest-progress');\r\nconst Quest = require('../models/quest');\r\nconst User = require('../models/user');\r\n\r\n/**\r\n * Сервис для работы с заданиями\r\n */\r\nclass QuestService {\r\n  /**\r\n   * Получение всех заданий пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Объект с заданиями пользователя\r\n   */\r\n  static async getQuests(userId) {\r\n    try {\r\n      // Получаем все задания пользователя\r\n      const questProgress = await QuestProgress.findAll({\r\n        where: { userId },\r\n        include: [\r\n          {\r\n            model: Quest,\r\n            as: 'quest'\r\n          }\r\n        ]\r\n      });\r\n      \r\n      // Группируем задания по статусу\r\n      const quests = {\r\n        available: [],\r\n        active: [],\r\n        completed: []\r\n      };\r\n      \r\n      questProgress.forEach(progress => {\r\n        const quest = {\r\n          id: progress.quest.id,\r\n          title: progress.quest.title,\r\n          description: progress.quest.description,\r\n          type: progress.quest.type,\r\n          level: progress.quest.level,\r\n          rewards: progress.quest.rewards,\r\n          objectives: progress.quest.objectives,\r\n          status: progress.status,\r\n          progress: progress.progress,\r\n          startedAt: progress.startedAt,\r\n          completedAt: progress.completedAt\r\n        };\r\n        \r\n        if (progress.status === 'available') {\r\n          quests.available.push(quest);\r\n        } else if (progress.status === 'active') {\r\n          quests.active.push(quest);\r\n        } else if (progress.status === 'completed') {\r\n          quests.completed.push(quest);\r\n        }\r\n      });\r\n      \r\n      return quests;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении заданий:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Принятие задания\r\n   * @param {number} userId - ID пользователя\r\n   * @param {number} questId - ID задания\r\n   * @returns {Promise<Object>} - Принятое задание\r\n   */\r\n  static async acceptQuest(userId, questId) {\r\n    try {\r\n      // Проверяем, существует ли задание\r\n      const quest = await Quest.findByPk(questId);\r\n      \r\n      if (!quest) {\r\n        throw new Error('Задание не найдено');\r\n      }\r\n      \r\n      // Проверяем, не принято ли уже задание\r\n      const existingProgress = await QuestProgress.findOne({\r\n        where: {\r\n          userId,\r\n          questId\r\n        }\r\n      });\r\n      \r\n      if (existingProgress && existingProgress.status !== 'available') {\r\n        throw new Error('Задание уже принято или выполнено');\r\n      }\r\n      \r\n      // Создаем или обновляем запись о прогрессе задания\r\n      let questProgress;\r\n      \r\n      if (existingProgress) {\r\n        existingProgress.status = 'active';\r\n        existingProgress.startedAt = new Date();\r\n        await existingProgress.save();\r\n        questProgress = existingProgress;\r\n      } else {\r\n        questProgress = await QuestProgress.create({\r\n          userId,\r\n          questId,\r\n          status: 'active',\r\n          progress: {},\r\n          startedAt: new Date()\r\n        });\r\n      }\r\n      \r\n      return {\r\n        id: quest.id,\r\n        title: quest.title,\r\n        description: quest.description,\r\n        type: quest.type,\r\n        level: quest.level,\r\n        rewards: quest.rewards,\r\n        objectives: quest.objectives,\r\n        status: questProgress.status,\r\n        progress: questProgress.progress,\r\n        startedAt: questProgress.startedAt\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при принятии задания:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление прогресса задания\r\n   * @param {number} userId - ID пользователя\r\n   * @param {number} questId - ID задания\r\n   * @param {Object} progress - Прогресс задания\r\n   * @returns {Promise<Object>} - Обновленное задание\r\n   */\r\n  static async updateQuestProgress(userId, questId, progress) {\r\n    try {\r\n      // Получаем запись о прогрессе задания\r\n      const questProgress = await QuestProgress.findOne({\r\n        where: {\r\n          userId,\r\n          questId\r\n        },\r\n        include: [\r\n          {\r\n            model: Quest,\r\n            as: 'quest'\r\n          }\r\n        ]\r\n      });\r\n      \r\n      if (!questProgress) {\r\n        throw new Error('Задание не найдено или не принято');\r\n      }\r\n      \r\n      if (questProgress.status !== 'active') {\r\n        throw new Error('Задание не активно');\r\n      }\r\n      \r\n      // Обновляем прогресс задания\r\n      questProgress.progress = {\r\n        ...questProgress.progress,\r\n        ...progress\r\n      };\r\n      \r\n      await questProgress.save();\r\n      \r\n      return {\r\n        id: questProgress.quest.id,\r\n        title: questProgress.quest.title,\r\n        description: questProgress.quest.description,\r\n        type: questProgress.quest.type,\r\n        level: questProgress.quest.level,\r\n        rewards: questProgress.quest.rewards,\r\n        objectives: questProgress.quest.objectives,\r\n        status: questProgress.status,\r\n        progress: questProgress.progress,\r\n        startedAt: questProgress.startedAt\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении прогресса задания:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Завершение задания\r\n   * @param {number} userId - ID пользователя\r\n   * @param {number} questId - ID задания\r\n   * @returns {Promise<Object>} - Завершенное задание\r\n   */\r\n  static async completeQuest(userId, questId) {\r\n    try {\r\n      // Получаем запись о прогрессе задания\r\n      const questProgress = await QuestProgress.findOne({\r\n        where: {\r\n          userId,\r\n          questId\r\n        },\r\n        include: [\r\n          {\r\n            model: Quest,\r\n            as: 'quest'\r\n          }\r\n        ]\r\n      });\r\n      \r\n      if (!questProgress) {\r\n        throw new Error('Задание не найдено или не принято');\r\n      }\r\n      \r\n      if (questProgress.status !== 'active') {\r\n        throw new Error('Задание не активно');\r\n      }\r\n      \r\n      // Обновляем статус задания\r\n      questProgress.status = 'completed';\r\n      questProgress.completedAt = new Date();\r\n      await questProgress.save();\r\n      \r\n      return {\r\n        id: questProgress.quest.id,\r\n        title: questProgress.quest.title,\r\n        description: questProgress.quest.description,\r\n        type: questProgress.quest.type,\r\n        level: questProgress.quest.level,\r\n        rewards: questProgress.quest.rewards,\r\n        objectives: questProgress.quest.objectives,\r\n        status: questProgress.status,\r\n        progress: questProgress.progress,\r\n        startedAt: questProgress.startedAt,\r\n        completedAt: questProgress.completedAt\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при завершении задания:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = QuestService;\r\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass CharacterStats extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    CharacterStats.belongsTo(models.User, {\r\n      foreignKey: 'userId',\r\n      as: 'user'\r\n    });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nCharacterStats.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n  userId: {\r\n    type: DataTypes.INTEGER,\r\n    references: {\r\n      model: 'Users',\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE',\r\n    unique: true\r\n  },\r\n  strength: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 10\r\n  },\r\n  intellect: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 10\r\n  },\r\n  spirit: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 10\r\n  },\r\n  agility: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 10\r\n  },\r\n  health: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 10\r\n  },\r\n  physicalDefense: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  spiritualDefense: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  attackSpeed: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  criticalChance: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  movementSpeed: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  luck: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  }\r\n  }, {\r\n    sequelize,\r\n    modelName: 'CharacterStats',\r\n    tableName: 'CharacterStats'\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await CharacterStats.init();\r\n    console.log('CharacterStats модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели CharacterStats:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = CharacterStats;\r\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass Resource extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nResource.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n  id: {\r\n    type: DataTypes.STRING,\r\n    primaryKey: true,\r\n    allowNull: false\r\n  },\r\n  name: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false\r\n  },\r\n  type: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false\r\n  },\r\n  rarity: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false\r\n  },\r\n  description: { // Соответствует description в миграции\r\n    type: DataTypes.TEXT\r\n    // allowNull: true убрано для соответствия миграции\r\n  },\r\n  effects: { // Соответствует effects в миграции\r\n    type: DataTypes.JSON,\r\n    defaultValue: {}\r\n  },\r\n  value: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  stackable: {\r\n    type: DataTypes.BOOLEAN,\r\n    defaultValue: true\r\n  },\r\n  maxStack: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 99\r\n  }\r\n  // Sequelize автоматически добавит createdAt и updatedAt\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Resource',\r\n    tableName: 'resources', // Исправлено: имя таблицы в snake_case\r\n    timestamps: true,       // Явно указываем использование временных меток\r\n    underscored: true       // Используем snake_case для createdAt и updatedAt (created_at, updated_at)\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await Resource.init();\r\n    console.log('Resource модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели Resource:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = Resource;\r\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\r\n * Менеджер подключений к базе данных\r\n * Централизованный доступ к базе данных через Sequelize\r\n */\r\nconst Sequelize = require('sequelize');\r\nconst databaseConfig = require('../config/database.json');\r\n\r\n// Экспортируем классы Sequelize для использования в моделях\r\n//export { Sequelize, DataTypes, Model };\r\n\r\n// Настоящий экземпляр Sequelize для PostgreSQL\r\nlet sequelizeInstance = null;\r\n\r\n/**\r\n * Функция для добавления таймаута к промису\r\n * @param {Promise} promise - Промис, к которому добавляется таймаут\r\n * @param {number} timeoutMs - Время ожидания в миллисекундах\r\n * @param {string} errorMessage - Сообщение об ошибке при превышении времени ожидания\r\n * @returns {Promise} - Промис с таймаутом\r\n */\r\nfunction withTimeout(promise, timeoutMs, errorMessage) {\r\n  let timeoutId;\r\n  const timeoutPromise = new Promise((_, reject) => {\r\n    timeoutId = setTimeout(() => {\r\n      reject(new Error(errorMessage || 'Операция превысила время ожидания'));\r\n    }, timeoutMs);\r\n  });\r\n  \r\n  return Promise.race([\r\n    promise,\r\n    timeoutPromise\r\n  ]).finally(() => clearTimeout(timeoutId));\r\n}\r\n\r\n/**\r\n * Функция для проверки прямого подключения к PostgreSQL\r\n * Использует нативный драйвер pg для проверки соединения на низком уровне\r\n * @param {Object} config - Конфигурация подключения\r\n * @returns {Promise<boolean>} - true, если подключение успешно\r\n * @throws {Error} - Выбрасывает ошибку, если не удалось подключиться\r\n */\r\nasync function testDirectPostgresConnection(config) {\r\n  console.log('Проверка прямого подключения к PostgreSQL...');\r\n  \r\n  try {\r\n    // Проверяем наличие pg\r\n    try {\r\n      require('pg');\r\n    } catch (e) {\r\n      console.error('КРИТИЧЕСКАЯ ОШИБКА: Не найден драйвер PostgreSQL');\r\n      console.error('Установите драйвер выполнив команду: npm install pg');\r\n      throw new Error('Необходимо установить пакет pg для работы с PostgreSQL. Выполните: npm install pg');\r\n    }\r\n    \r\n    const { Client } = require('pg');\r\n    const client = new Client({\r\n      host: config.host,\r\n      port: config.port,\r\n      database: config.database,\r\n      user: config.username,\r\n      password: config.password,\r\n      connectionTimeoutMillis: 5000\r\n    });\r\n    \r\n    console.log('Настройки прямого подключения:', {\r\n      host: config.host,\r\n      port: config.port,\r\n      database: config.database,\r\n      user: config.username\r\n    });\r\n    \r\n    await withTimeout(\r\n      client.connect(),\r\n      5000,\r\n      'Прямое подключение к PostgreSQL превысило время ожидания'\r\n    );\r\n    console.log('Прямое подключение к PostgreSQL установлено');\r\n    \r\n    const result = await withTimeout(\r\n      client.query('SELECT NOW() as current_time'),\r\n      3000,\r\n      'Тестовый запрос к PostgreSQL превысил время ожидания'\r\n    );\r\n    console.log(`Текущее время на сервере PostgreSQL: ${result.rows[0].current_time}`);\r\n    \r\n    await client.end();\r\n    console.log('Прямое подключение к PostgreSQL закрыто');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Ошибка прямого подключения к PostgreSQL:', error.message);\r\n    \r\n    // Пытаемся закрыть соединение, если оно было открыто\r\n    try {\r\n      if (client) await client.end();\r\n    } catch (e) {\r\n      // Игнорируем ошибки при закрытии\r\n    }\r\n    \r\n    throw new Error(`Не удалось напрямую подключиться к PostgreSQL: ${error.message}`);\r\n  }\r\n}\r\n\r\n/**\r\n * Инициализация подключения к PostgreSQL\r\n * @returns {Promise<Object>} - Объект с экземпляром Sequelize\r\n * @throws {Error} - Выбрасывает ошибку, если не удалось подключиться к PostgreSQL\r\n */\r\nasync function initializeDatabaseConnection() {\r\n  try {\r\n    const env = process.env.NODE_ENV || 'development';\r\n    const config = databaseConfig[env];\r\n    console.log(`Попытка подключения к PostgreSQL (${config.host}:${config.port})...`);\r\n    \r\n    // Сначала проверим прямое подключение\r\n    try {\r\n      await testDirectPostgresConnection(config);\r\n    } catch (directError) {\r\n      console.error('Ошибка при проверке прямого подключения к PostgreSQL:', directError.message);\r\n      throw directError;\r\n    }\r\n    \r\n    sequelizeInstance = new Sequelize(\r\n      config.database,\r\n      config.username,\r\n      config.password,\r\n      {\r\n        host: config.host,\r\n        port: config.port,\r\n        dialect: config.dialect,\r\n        logging: false, // Для продакшена отключаем логирование\r\n        pool: {\r\n          max: 5,\r\n          min: 0,\r\n          acquire: 30000,\r\n          idle: 10000\r\n        },\r\n        // Улучшенные настройки для подключения\r\n        dialectOptions: {\r\n          connectTimeout: 5000, // 5 секунд на подключение\r\n          statement_timeout: 10000, // 10 секунд на выполнение запроса\r\n          idle_in_transaction_session_timeout: 10000 // 10 секунд на транзакцию\r\n        }\r\n      }\r\n    );\r\n\r\n    // Проверяем соединение с явным таймаутом и SQL-запросом\r\n    console.log('Проверка соединения с PostgreSQL через Sequelize...');\r\n    \r\n    // Сначала выполняем простой запрос\r\n    await withTimeout(\r\n      sequelizeInstance.query('SELECT 1+1 AS result'),\r\n      5000,\r\n      'Тестовый SQL-запрос превысил время ожидания'\r\n    );\r\n    \r\n    // Затем запускаем штатную аутентификацию\r\n    await withTimeout(\r\n      sequelizeInstance.authenticate(),\r\n      5000,\r\n      'Аутентификация Sequelize превысила время ожидания'\r\n    );\r\n    \r\n    console.log('Подключение к PostgreSQL успешно установлено и проверено');\r\n    \r\n    // Возвращаем PostgreSQL интерфейс\r\n    return {\r\n      db: sequelizeInstance\r\n    };\r\n  } catch (error) {\r\n    console.error('КРИТИЧЕСКАЯ ОШИБКА: Не удалось подключиться к PostgreSQL:', error.message);\r\n    console.error('Дополнительная информация:', error);\r\n    \r\n    // Выбрасываем ошибку вместо возврата строки\r\n    throw new Error(`Невозможно продолжить работу без PostgreSQL: ${error.message}`);\r\n  }\r\n}\r\n\r\n// Не вызываем initializeDatabaseConnection напрямую, это будет делаться через unifiedDatabase\r\n// Единый экземпляр промиса подключения к БД для повторного использования\r\nlet databasePromise = null;\r\n\r\n/**\r\n * Унифицированный интерфейс базы данных\r\n */\r\nconst unifiedDatabase = {\r\n  /**\r\n   * Получает коллекцию или модель\r\n   * @param {string} name - Имя коллекции/модели\r\n   * @returns {Object} - Интерфейс для работы с коллекцией/моделью\r\n   */\r\n  async getCollection(name) {\r\n    if (!databasePromise) {\r\n      databasePromise = initializeDatabaseConnection();\r\n    }\r\n    const { db } = await databasePromise;\r\n    \r\n      try {\r\n        const model = db.model(name);\r\n        return model;\r\n      } catch (error) {\r\n        console.error(`Модель ${name} не найдена:`, error);\r\n        throw new Error(`Модель ${name} не найдена`);\r\n      }\r\n    \r\n  },\r\n  \r\n  /**\r\n   * Выполняет транзакцию (только для PostgreSQL)\r\n   * @param {Function} callback - Функция, выполняемая в транзакции\r\n   * @returns {Promise<any>} - Результат транзакции\r\n   */\r\n  async transaction(callback) {\r\n    if (!databasePromise) {\r\n      databasePromise = initializeDatabaseConnection();\r\n    }\r\n    const { db } = await databasePromise;\r\n    \r\n    return db.transaction(callback);\r\n    \r\n  },\r\n  \r\n  /**\r\n   * Проверяет статус подключения\r\n   * @returns {Promise<{connected: boolean, using: string}>} - Информация о подключении\r\n   */\r\n  async checkStatus() {\r\n    return {\r\n      connected: true, // Мы всегда \"подключены\" к PostgreSQL\r\n      using: 'postgresql'\r\n    };\r\n  },\r\n  \r\n  /**\r\n   * Получение прямого доступа к экземпляру Sequelize\r\n   * @returns {Promise<Object>} - Экземпляр Sequelize\r\n   */\r\n  async getSequelizeInstance() {\r\n    try {\r\n      if (!databasePromise) {\r\n        console.log('Инициализация нового подключения к базе данных...');\r\n        databasePromise = withTimeout(\r\n          initializeDatabaseConnection(),\r\n          15000,\r\n          'Инициализация подключения к базе данных превысила время ожидания'\r\n        );\r\n      }\r\n      \r\n      let result;\r\n      try {\r\n        result = await withTimeout(\r\n          databasePromise,\r\n          10000,\r\n          'Получение экземпляра Sequelize превысило время ожидания'\r\n        );\r\n      } catch (timeoutError) {\r\n        console.error('Ошибка таймаута при получении экземпляра Sequelize:', timeoutError.message);\r\n        // Сбрасываем промис, чтобы следующий вызов попытался создать новое подключение\r\n        databasePromise = null;\r\n        throw timeoutError;\r\n      }\r\n      \r\n      if (!result || !result.db) {\r\n        console.error('КРИТИЧЕСКАЯ ОШИБКА: getSequelizeInstance: результат пуст');\r\n        // Сбрасываем промис для следующей попытки\r\n        databasePromise = null;\r\n        throw new Error('Не удалось получить экземпляр базы данных');\r\n      }\r\n      \r\n      return result;\r\n    } catch (error) {\r\n      console.error('КРИТИЧЕСКАЯ ОШИБКА при получении экземпляра Sequelize:', error.message);\r\n      // Пробрасываем ошибку дальше, не используя заглушки\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Выполняет SQL-запрос\r\n   * @param {string} sql - SQL-запрос\r\n   * @param {Object} options - Опции запроса\r\n   * @returns {Promise<Array>} - Результат запроса\r\n   */\r\n  async query(sql, options) {\r\n    if (!databasePromise) {\r\n      databasePromise = initializeDatabaseConnection();\r\n    }\r\n    const { db } = await databasePromise;\r\n    return db.query(sql, options);\r\n  }\r\n};\r\n//console.log(unifiedDatabase);\r\nmodule.exports = {unifiedDatabase, initializeDatabaseConnection};\r\n","/**\r\n * Утилиты для работы с бонусами экипировки\r\n * Обеспечивают корректное применение предрассчитанных бонусов из equipment-items.js\r\n */\r\n\r\nimport { getEquipmentItemById } from '../data/equipment-items';\r\n\r\n/**\r\n * Добавляет предрассчитанные бонусы к предмету инвентаря\r\n * @param {Object} item - Предмет инвентаря\r\n * @returns {Object} - Предмет с добавленными предрассчитанными бонусами\r\n */\r\nfunction ensureItemHasCalculatedBonuses(item) {\r\n  if (!item) return item;\r\n  \r\n  // Если у предмета уже есть предрассчитанные бонусы, возвращаем его как есть\r\n  if (item.calculatedBonuses) {\r\n    return item;\r\n  }\r\n  \r\n  // Пытаемся получить itemId предмета (может храниться в разных полях)\r\n  const itemId = item.itemId || item.id;\r\n  \r\n  if (!itemId) {\r\n    console.warn('Предмет не имеет идентификатора:', item);\r\n    return item;\r\n  }\r\n  \r\n  try {\r\n    // Получаем базовый предмет из equipment-items.js\r\n    const baseItem = getEquipmentItemById(parseInt(itemId));\r\n    \r\n    if (baseItem && baseItem.calculatedBonuses) {\r\n      // Создаем копию предмета с предрассчитанными бонусами\r\n      return {\r\n        ...item,\r\n        calculatedBonuses: baseItem.calculatedBonuses\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении предрассчитанных бонусов для предмета ID=${itemId}:`, error);\r\n  }\r\n  \r\n  return item;\r\n}\r\n\r\n/**\r\n * Добавляет предрассчитанные бонусы ко всем предметам в экипировке\r\n * @param {Object} equippedItems - Объект с экипированными предметами\r\n * @returns {Object} - Объект с экипированными предметами, каждый из которых имеет предрассчитанные бонусы\r\n */\r\nfunction ensureEquipmentHasCalculatedBonuses(equippedItems) {\r\n  if (!equippedItems) return {};\r\n  \r\n  // Создаем копию объекта экипировки\r\n  const result = { ...equippedItems };\r\n  \r\n  // Для каждого слота экипировки добавляем предрассчитанные бонусы\r\n  Object.keys(result).forEach(slot => {\r\n    if (result[slot]) {\r\n      result[slot] = ensureItemHasCalculatedBonuses(result[slot]);\r\n    }\r\n  });\r\n  \r\n  return result;\r\n}\r\n\r\n/**\r\n * Добавляет предрассчитанные бонусы ко всем предметам в массиве\r\n * @param {Array} items - Массив предметов\r\n * @returns {Array} - Массив предметов с добавленными предрассчитанными бонусами\r\n */\r\nfunction ensureItemsHaveCalculatedBonuses(items) {\r\n  if (!items || !Array.isArray(items)) return items;\r\n  \r\n  return items.map(item => ensureItemHasCalculatedBonuses(item));\r\n}\r\n\r\nexport {\r\n  ensureItemHasCalculatedBonuses,\r\n  ensureEquipmentHasCalculatedBonuses,\r\n  ensureItemsHaveCalculatedBonuses\r\n};\r\n","const LearnedTechnique = require('../models/learned-technique');\r\nconst Technique = require('../models/technique');\r\nconst TechniqueEffect = require('../models/technique-effect');\r\nconst User = require('../models/user');\r\n\r\n// Проверяем, находимся ли мы в браузере\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\n// Храним данные о техниках в памяти для браузера\r\nlet browserTechniquesData = [];\r\nlet browserLearnedTechniquesData = {};\r\n\r\n/**\r\n * Сервис для работы с техниками\r\n */\r\nclass TechniqueService {\r\n  /**\r\n   * Получение всех техник\r\n   * @returns {Promise<Array>} - Массив всех техник\r\n   */\r\n  static async getAllTechniques() {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере возвращаем данные из памяти\r\n        return browserTechniquesData;\r\n      } else {\r\n        // На сервере используем базу данных\r\n        const techniques = await Technique.findAll({\r\n          include: [\r\n            {\r\n              model: TechniqueEffect,\r\n              as: 'effects'\r\n            }\r\n          ]\r\n        });\r\n        \r\n        return techniques;\r\n      }\r\n    } catch (error) {\r\n      //console.error('Ошибка при получении техник:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение техники по ID\r\n   * @param {string} techniqueId - ID техники\r\n   * @returns {Promise<Object>} - Техника\r\n   */\r\n  static async getTechniqueById(techniqueId) {\r\n    try {\r\n      const technique = await Technique.findOne({\r\n        where: { techniqueId },\r\n        include: [\r\n          {\r\n            model: TechniqueEffect,\r\n            as: 'effects'\r\n          }\r\n        ]\r\n      });\r\n      \r\n      if (!technique) {\r\n        throw new Error(`Техника с ID ${techniqueId} не найдена`);\r\n      }\r\n      \r\n      return technique;\r\n    } catch (error) {\r\n      //console.error(`Ошибка при получении техники с ID ${techniqueId}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение всех изученных техник пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Array>} - Массив изученных техник\r\n   */\r\n  static async getLearnedTechniques(userId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserLearnedTechniquesData[userId]) {\r\n          browserLearnedTechniquesData[userId] = [];\r\n        }\r\n        \r\n        // Возвращаем данные из памяти\r\n        return browserLearnedTechniquesData[userId];\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем все изученные техники пользователя\r\n        const learnedTechniques = await LearnedTechnique.findAll({\r\n          where: { userId },\r\n          include: [\r\n            {\r\n              model: Technique,\r\n              as: 'technique',\r\n              include: [\r\n                {\r\n                  model: TechniqueEffect,\r\n                  as: 'effects'\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        });\r\n        \r\n        // Преобразуем данные для клиента\r\n        return learnedTechniques.map(learned => ({\r\n          id: learned.technique.techniqueId,\r\n          name: learned.technique.name,\r\n          description: learned.technique.description,\r\n          type: learned.technique.type,\r\n          element: learned.technique.element,\r\n          icon: learned.technique.icon,\r\n          level: learned.level,\r\n          experience: learned.experience,\r\n          masteryLevel: learned.masteryLevel,\r\n          energyCost: learned.technique.energyCost,\r\n          damage: learned.technique.damage,\r\n          damageType: learned.technique.damageType,\r\n          healing: learned.technique.healing,\r\n          cooldown: learned.technique.cooldown,\r\n          maxLevel: learned.technique.maxLevel,\r\n          lastUsed: learned.lastUsed,\r\n          effects: learned.technique.effects\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      //console.error('Ошибка при получении изученных техник:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Изучение новой техники\r\n   * @param {number} userId - ID пользователя\r\n   * @param {string} techniqueId - ID техники\r\n   * @returns {Promise<Object>} - Изученная техника\r\n   */\r\n  static async learnTechnique(userId, techniqueId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        if (!browserLearnedTechniquesData[userId]) {\r\n          browserLearnedTechniquesData[userId] = [];\r\n        }\r\n        \r\n        // Проверяем, существует ли техника\r\n        const technique = browserTechniquesData.find(tech => tech.techniqueId === techniqueId);\r\n        \r\n        if (!technique) {\r\n          // Если техника не найдена, создаем моковую технику для тестирования\r\n          const mockTechnique = {\r\n            techniqueId: techniqueId,\r\n            name: `Техника ${techniqueId}`,\r\n            description: 'Описание техники',\r\n            type: 'attack',\r\n            element: 'fire',\r\n            icon: 'fire_icon',\r\n            energyCost: 10,\r\n            damage: 50,\r\n            damageType: 'fire',\r\n            healing: 0,\r\n            cooldown: 5,\r\n            maxLevel: 10,\r\n            effects: []\r\n          };\r\n          \r\n          browserTechniquesData.push(mockTechnique);\r\n          \r\n          // Проверяем, не изучена ли уже техника\r\n          const existingTechnique = browserLearnedTechniquesData[userId].find(\r\n            tech => tech.id === techniqueId\r\n          );\r\n          \r\n          if (existingTechnique) {\r\n            throw new Error('Техника уже изучена');\r\n          }\r\n          \r\n          // Добавляем технику в список изученных\r\n          const learnedTechnique = {\r\n            id: mockTechnique.techniqueId,\r\n            name: mockTechnique.name,\r\n            description: mockTechnique.description,\r\n            type: mockTechnique.type,\r\n            element: mockTechnique.element,\r\n            icon: mockTechnique.icon,\r\n            level: 1,\r\n            experience: 0,\r\n            masteryLevel: 0,\r\n            energyCost: mockTechnique.energyCost,\r\n            damage: mockTechnique.damage,\r\n            damageType: mockTechnique.damageType,\r\n            healing: mockTechnique.healing,\r\n            cooldown: mockTechnique.cooldown,\r\n            maxLevel: mockTechnique.maxLevel,\r\n            lastUsed: null,\r\n            effects: mockTechnique.effects\r\n          };\r\n          \r\n          browserLearnedTechniquesData[userId].push(learnedTechnique);\r\n          \r\n          return learnedTechnique;\r\n        } else {\r\n          // Проверяем, не изучена ли уже техника\r\n          const existingTechnique = browserLearnedTechniquesData[userId].find(\r\n            tech => tech.id === techniqueId\r\n          );\r\n          \r\n          if (existingTechnique) {\r\n            throw new Error('Техника уже изучена');\r\n          }\r\n          \r\n          // Добавляем технику в список изученных\r\n          const learnedTechnique = {\r\n            id: technique.techniqueId,\r\n            name: technique.name,\r\n            description: technique.description,\r\n            type: technique.type,\r\n            element: technique.element,\r\n            icon: technique.icon,\r\n            level: 1,\r\n            experience: 0,\r\n            masteryLevel: 0,\r\n            energyCost: technique.energyCost,\r\n            damage: technique.damage,\r\n            damageType: technique.damageType,\r\n            healing: technique.healing,\r\n            cooldown: technique.cooldown,\r\n            maxLevel: technique.maxLevel,\r\n            lastUsed: null,\r\n            effects: technique.effects\r\n          };\r\n          \r\n          browserLearnedTechniquesData[userId].push(learnedTechnique);\r\n          \r\n          return learnedTechnique;\r\n        }\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Проверяем, существует ли техника\r\n        const technique = await Technique.findOne({\r\n          where: { techniqueId },\r\n          include: [\r\n            {\r\n              model: TechniqueEffect,\r\n              as: 'effects'\r\n            }\r\n          ]\r\n        });\r\n        \r\n        if (!technique) {\r\n          throw new Error(`Техника с ID ${techniqueId} не найдена`);\r\n        }\r\n        \r\n        // Проверяем, не изучена ли уже техника\r\n        const existingTechnique = await LearnedTechnique.findOne({\r\n          where: {\r\n            userId,\r\n            techniqueId: technique.id\r\n          }\r\n        });\r\n        \r\n        if (existingTechnique) {\r\n          throw new Error('Техника уже изучена');\r\n        }\r\n        \r\n        // Создаем запись об изученной технике\r\n        const learnedTechnique = await LearnedTechnique.create({\r\n          userId,\r\n          techniqueId: technique.id,\r\n          level: 1,\r\n          experience: 0,\r\n          masteryLevel: 0,\r\n          lastUsed: null\r\n        });\r\n        \r\n        return {\r\n          id: technique.techniqueId,\r\n          name: technique.name,\r\n          description: technique.description,\r\n          type: technique.type,\r\n          element: technique.element,\r\n          icon: technique.icon,\r\n          level: learnedTechnique.level,\r\n          experience: learnedTechnique.experience,\r\n          masteryLevel: learnedTechnique.masteryLevel,\r\n          energyCost: technique.energyCost,\r\n          damage: technique.damage,\r\n          damageType: technique.damageType,\r\n          healing: technique.healing,\r\n          cooldown: technique.cooldown,\r\n          maxLevel: technique.maxLevel,\r\n          effects: technique.effects\r\n        };\r\n      }\r\n    } catch (error) {\r\n      //console.error('Ошибка при изучении техники:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Повышение уровня техники\r\n   * @param {number} userId - ID пользователя\r\n   * @param {string} techniqueId - ID техники\r\n   * @returns {Promise<Object>} - Обновленная техника\r\n   */\r\n  static async upgradeTechnique(userId, techniqueId) {\r\n    try {\r\n      // Получаем технику\r\n      const technique = await Technique.findOne({\r\n        where: { techniqueId },\r\n        include: [\r\n          {\r\n            model: TechniqueEffect,\r\n            as: 'effects'\r\n          }\r\n        ]\r\n      });\r\n      \r\n      if (!technique) {\r\n        throw new Error(`Техника с ID ${techniqueId} не найдена`);\r\n      }\r\n      \r\n      // Получаем изученную технику\r\n      const learnedTechnique = await LearnedTechnique.findOne({\r\n        where: {\r\n          userId,\r\n          techniqueId: technique.id\r\n        }\r\n      });\r\n      \r\n      if (!learnedTechnique) {\r\n        throw new Error('Техника не изучена');\r\n      }\r\n      \r\n      // Проверяем, не достигнут ли максимальный уровень\r\n      if (learnedTechnique.level >= technique.maxLevel) {\r\n        throw new Error('Достигнут максимальный уровень техники');\r\n      }\r\n      \r\n      // Повышаем уровень техники\r\n      learnedTechnique.level += 1;\r\n      learnedTechnique.experience = 0;\r\n      await learnedTechnique.save();\r\n      \r\n      return {\r\n        id: technique.techniqueId,\r\n        name: technique.name,\r\n        description: technique.description,\r\n        type: technique.type,\r\n        element: technique.element,\r\n        icon: technique.icon,\r\n        level: learnedTechnique.level,\r\n        experience: learnedTechnique.experience,\r\n        masteryLevel: learnedTechnique.masteryLevel,\r\n        energyCost: technique.energyCost,\r\n        damage: technique.damage,\r\n        damageType: technique.damageType,\r\n        healing: technique.healing,\r\n        cooldown: technique.cooldown,\r\n        maxLevel: technique.maxLevel,\r\n        lastUsed: learnedTechnique.lastUsed,\r\n        effects: technique.effects\r\n      };\r\n    } catch (error) {\r\n      //console.error('Ошибка при повышении уровня техники:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Использование техники\r\n   * @param {number} userId - ID пользователя\r\n   * @param {string} techniqueId - ID техники\r\n   * @returns {Promise<Object>} - Результат использования техники\r\n   */\r\n  static async useTechnique(userId, techniqueId) {\r\n    try {\r\n      // Получаем технику\r\n      const technique = await Technique.findOne({\r\n        where: { techniqueId },\r\n        include: [\r\n          {\r\n            model: TechniqueEffect,\r\n            as: 'effects'\r\n          }\r\n        ]\r\n      });\r\n      \r\n      if (!technique) {\r\n        throw new Error(`Техника с ID ${techniqueId} не найдена`);\r\n      }\r\n      \r\n      // Получаем изученную технику\r\n      const learnedTechnique = await LearnedTechnique.findOne({\r\n        where: {\r\n          userId,\r\n          techniqueId: technique.id\r\n        }\r\n      });\r\n      \r\n      if (!learnedTechnique) {\r\n        throw new Error('Техника не изучена');\r\n      }\r\n      \r\n      // Обновляем время последнего использования\r\n      learnedTechnique.lastUsed = new Date();\r\n      \r\n      // Добавляем опыт использования техники\r\n      learnedTechnique.experience += 1;\r\n      \r\n      // Проверяем, не достигнут ли порог для повышения мастерства\r\n      const masteryThreshold = 100 * (learnedTechnique.masteryLevel + 1);\r\n      if (learnedTechnique.experience >= masteryThreshold) {\r\n        learnedTechnique.masteryLevel += 1;\r\n        learnedTechnique.experience -= masteryThreshold;\r\n      }\r\n      \r\n      await learnedTechnique.save();\r\n      \r\n      // Рассчитываем эффекты техники в зависимости от уровня и мастерства\r\n      const calculatedEffects = technique.effects.map(effect => {\r\n        const calculatedEffect = { ...effect.toJSON() };\r\n        \r\n        // Увеличиваем урон и исцеление в зависимости от уровня и мастерства\r\n        if (calculatedEffect.damage > 0) {\r\n          calculatedEffect.damage = Math.floor(\r\n            calculatedEffect.damage * (1 + 0.1 * learnedTechnique.level + 0.05 * learnedTechnique.masteryLevel)\r\n          );\r\n        }\r\n        \r\n        if (calculatedEffect.healing > 0) {\r\n          calculatedEffect.healing = Math.floor(\r\n            calculatedEffect.healing * (1 + 0.1 * learnedTechnique.level + 0.05 * learnedTechnique.masteryLevel)\r\n          );\r\n        }\r\n        \r\n        // Увеличиваем длительность эффекта в зависимости от мастерства\r\n        if (calculatedEffect.duration > 0) {\r\n          calculatedEffect.duration = Math.floor(\r\n            calculatedEffect.duration * (1 + 0.05 * learnedTechnique.masteryLevel)\r\n          );\r\n        }\r\n        \r\n        return calculatedEffect;\r\n      });\r\n      \r\n      // Рассчитываем базовый урон техники\r\n      const calculatedDamage = technique.damage > 0\r\n        ? Math.floor(technique.damage * (1 + 0.1 * learnedTechnique.level + 0.05 * learnedTechnique.masteryLevel))\r\n        : 0;\r\n      \r\n      // Рассчитываем базовое исцеление техники\r\n      const calculatedHealing = technique.healing > 0\r\n        ? Math.floor(technique.healing * (1 + 0.1 * learnedTechnique.level + 0.05 * learnedTechnique.masteryLevel))\r\n        : 0;\r\n      \r\n      return {\r\n        id: technique.techniqueId,\r\n        name: technique.name,\r\n        level: learnedTechnique.level,\r\n        experience: learnedTechnique.experience,\r\n        masteryLevel: learnedTechnique.masteryLevel,\r\n        lastUsed: learnedTechnique.lastUsed,\r\n        damage: calculatedDamage,\r\n        damageType: technique.damageType,\r\n        healing: calculatedHealing,\r\n        effects: calculatedEffects\r\n      };\r\n    } catch (error) {\r\n      //console.error('Ошибка при использовании техники:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение техники из награды за задание или достижение\r\n   * @param {string} techniqueName - Название техники\r\n   * @returns {Promise<Object>} - Техника\r\n   */\r\n  static async getTechniqueByName(techniqueName) {\r\n    try {\r\n      const technique = await Technique.findOne({\r\n        where: { name: techniqueName },\r\n        include: [\r\n          {\r\n            model: TechniqueEffect,\r\n            as: 'effects'\r\n          }\r\n        ]\r\n      });\r\n      \r\n      if (!technique) {\r\n        throw new Error(`Техника с названием \"${techniqueName}\" не найдена`);\r\n      }\r\n      \r\n      return technique;\r\n    } catch (error) {\r\n      //console.error(`Ошибка при получении техники с названием \"${techniqueName}\":`, error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = TechniqueService;\r\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass Quest extends Model {\r\n  static associate(models) {\r\n    // Связь с целями квеста\r\n    Quest.hasMany(models.QuestObjective, {\r\n      foreignKey: 'quest_id',\r\n      as: 'objectives'\r\n    });\r\n    // Связь с наградами за квест\r\n    Quest.hasMany(models.QuestReward, {\r\n      foreignKey: 'quest_id',\r\n      as: 'rewards'\r\n    });\r\n    // Связь с категориями квестов (если есть модель QuestCategory)\r\n    // Quest.belongsTo(models.QuestCategory, { foreignKey: 'category', as: 'questCategory' });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nQuest.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n    id: { // Соответствует id в SQL\r\n      type: DataTypes.STRING(20),\r\n      primaryKey: true\r\n    },\r\n    title: { // Соответствует title в SQL\r\n      type: DataTypes.STRING(100),\r\n      allowNull: false\r\n    },\r\n    category: { // Соответствует category в SQL\r\n      type: DataTypes.STRING(50),\r\n      // references: { model: 'quest_categories', key: 'id' } // Раскомментировать, если есть модель QuestCategory\r\n    },\r\n    difficulty: { // Соответствует difficulty в SQL\r\n      type: DataTypes.STRING(20)\r\n    },\r\n    description: { // Соответствует description в SQL\r\n      type: DataTypes.TEXT\r\n    },\r\n    status: { // Соответствует status в SQL\r\n      type: DataTypes.STRING(20)\r\n    },\r\n    requiredLevel: { // Соответствует required_level в SQL\r\n      type: DataTypes.INTEGER,\r\n      defaultValue: 0,\r\n      field: 'required_level'\r\n    },\r\n    repeatable: { // Соответствует repeatable в SQL\r\n      type: DataTypes.BOOLEAN,\r\n      defaultValue: false\r\n    }\r\n    // Поле rewards удалено, так как награды в отдельной таблице\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Quest',\r\n    tableName: 'quests', // Исправлено: имя таблицы в lowercase\r\n    timestamps: false   // В SQL нет полей created_at, updated_at\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await Quest.init();\r\n    console.log('Quest модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели Quest:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = Quest;\r\n","/**\r\n * Конфигурация Sequelize для браузерной и серверной среды\r\n *\r\n * Предоставляет:\r\n * 1. Заглушки для Sequelize, DataTypes и Model в браузерной среде\r\n * 2. Определение текущего окружения (браузер или сервер)\r\n * 3. Информацию о соединении с базой данных (только на сервере)\r\n */\r\n\r\n/**\r\n * Улучшенное определение серверной среды для более точного определения контекста\r\n */\r\nconst isServerEnvironment = (\r\n  typeof window === 'undefined' &&\r\n  typeof process !== 'undefined' &&\r\n  process.versions &&\r\n  process.versions.node\r\n);\r\nexport { isServerEnvironment };\r\n\r\n// ------------------------------------------------------------------------\r\n// ВАЖНО: Эта часть будет исполняться только на сервере\r\n// Полностью изолируем код для предотвращения включения в клиентскую сборку\r\n// ------------------------------------------------------------------------\r\n\r\n// Заглушки для браузерной среды с подробными предупреждениями\r\nconst BrowserSequelize = function() {\r\n  console.error(\r\n    'ОШИБКА: Попытка использовать Sequelize в браузере напрямую.\\n' +\r\n    'Используйте client-api.js вместо прямого доступа к базе данных.\\n' +\r\n    'Эта операция не будет выполнена в браузерной среде.'\r\n  );\r\n  return {};\r\n};\r\n\r\nconst BrowserDataTypes = {\r\n  STRING: 'STRING',\r\n  TEXT: 'TEXT',\r\n  INTEGER: 'INTEGER',\r\n  FLOAT: 'FLOAT',\r\n  BOOLEAN: 'BOOLEAN',\r\n  DATE: 'DATE',\r\n  JSON: 'JSON',\r\n  JSONB: 'JSONB',\r\n  // Объявляем все типы для совместимости\r\n  UUID: 'UUID',\r\n  ENUM: (...args) => 'ENUM',\r\n  ARRAY: (type) => `ARRAY(${type})`,\r\n  DECIMAL: 'DECIMAL',\r\n  VIRTUAL: 'VIRTUAL',\r\n  // Статические методы\r\n  ABSTRACT: function() { return 'ABSTRACT'; }\r\n};\r\n\r\nclass BrowserModel {\r\n  static init() {\r\n    console.error(\r\n      'ОШИБКА: Попытка использовать Model.init в браузере.\\n' +\r\n      'Используйте client-api.js вместо прямого доступа к базе данных.\\n'\r\n    );\r\n    return this;\r\n  }\r\n  \r\n  static findOne() {\r\n    console.error('ОШИБКА: Попытка обращения к базе данных в браузере (findOne)');\r\n    return Promise.reject(new Error('Недоступно в браузере'));\r\n  }\r\n  \r\n  static findAll() {\r\n    console.error('ОШИБКА: Попытка обращения к базе данных в браузере (findAll)');\r\n    return Promise.reject(new Error('Недоступно в браузере'));\r\n  }\r\n  \r\n  static findByPk() {\r\n    console.error('ОШИБКА: Попытка обращения к базе данных в браузере (findByPk)');\r\n    return Promise.reject(new Error('Недоступно в браузере'));\r\n  }\r\n  \r\n  static create() {\r\n    console.error('ОШИБКА: Попытка обращения к базе данных в браузере (create)');\r\n    return Promise.reject(new Error('Недоступно в браузере'));\r\n  }\r\n  \r\n  static update() {\r\n    console.error('ОШИБКА: Попытка обращения к базе данных в браузере (update)');\r\n    return Promise.reject(new Error('Недоступно в браузере'));\r\n  }\r\n  \r\n  static destroy() {\r\n    console.error('ОШИБКА: Попытка обращения к базе данных в браузере (destroy)');\r\n    return Promise.reject(new Error('Недоступно в браузере'));\r\n  }\r\n}\r\n\r\n// Инициализируем переменные моками по умолчанию\r\nlet Sequelize = BrowserSequelize;\r\nlet DataTypes = BrowserDataTypes;\r\nlet Model = BrowserModel;\r\n\r\n// Используем динамический импорт только в серверной среде\r\n// для предотвращения включения зависимостей в клиентскую сборку\r\nif (isServerEnvironment) {\r\n  // Оборачиваем в try-catch, чтобы предотвратить сбои при сборке\r\n  try {\r\n    // На сервере динамически импортируем sequelize\r\n    // Этот код не попадет в клиентскую сборку, так как webpack\r\n    // не сможет его разрешить во время сборки\r\n    const dynamicImport = Function('return import(\"sequelize\")')();\r\n\r\n    // Обрабатываем результат импорта\r\n    dynamicImport\r\n      .then((sequelizePackage) => {\r\n        Sequelize = sequelizePackage.Sequelize;\r\n        DataTypes = sequelizePackage.DataTypes;\r\n        Model = sequelizePackage.Model;\r\n        console.log('Sequelize успешно загружен в серверной среде');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Ошибка при динамическом импорте Sequelize:', error);\r\n        // В случае ошибки продолжаем использовать заглушки\r\n      });\r\n  } catch (error) {\r\n    console.error('Ошибка при попытке импортировать Sequelize:', error);\r\n    // Используем заглушки в случае ошибки\r\n  }\r\n}\r\n\r\nexport { Sequelize, DataTypes, Model };\r\n","/**\r\n * Сервис для работы с бонусами предметов экипировки\r\n * Централизованная точка доступа ко всем операциям с бонусами\r\n */\r\n\r\n/**\r\n * Получение предрассчитанных бонусов предмета\r\n * @param {Object} item - Предмет экипировки\r\n * @returns {Object|null} - Предрассчитанные бонусы или null\r\n */\r\nfunction getItemBonuses(item) {\r\n  if (!item) return null;\r\n  \r\n  // Возвращаем только предрассчитанные бонусы, никаких вычислений\r\n  return item.calculatedBonuses || null;\r\n}\r\n\r\n/**\r\n * Расчет суммарных бонусов от всех экипированных предметов\r\n * @param {Array|Object} equippedItems - Массив или объект с экипированными предметами\r\n * @returns {Object} - Суммарные бонусы экипировки\r\n */\r\nfunction getEquipmentTotalBonuses(equippedItems) {\r\n  // Создаем базовую структуру бонусов\r\n  const totalBonuses = {\r\n    stats: { strength: 0, dexterity: 0, vitality: 0, intelligence: 0, perception: 0, luck: 0 },\r\n    combat: { physicalDamage: 0, magicDamage: 0, physicalDefense: 0, magicDefense: 0, critChance: 0, critDamage: 0, dodgeChance: 0 },\r\n    cultivation: { energyMax: 0, energyRegen: 0, comprehensionRate: 0, breakthroughChance: 0 },\r\n    elemental: { fire: 0, water: 0, earth: 0, air: 0, light: 0, dark: 0 },\r\n    special: []\r\n  };\r\n  \r\n  // Подготавливаем массив предметов, независимо от того, что передано - массив или объект\r\n  const itemsArray = Array.isArray(equippedItems) \r\n    ? equippedItems \r\n    : Object.values(equippedItems).filter(item => item !== null);\r\n  \r\n  // Получаем массив предрассчитанных бонусов для всех предметов\r\n  const bonusesArray = itemsArray\r\n    .map(item => item.calculatedBonuses)\r\n    .filter(bonuses => bonuses !== null && bonuses !== undefined);\r\n  \r\n  // Суммируем все бонусы\r\n  return aggregateBonuses(bonusesArray, totalBonuses);\r\n}\r\n\r\n/**\r\n * Суммирование массива бонусов в единую структуру\r\n * @param {Array} bonusesArray - Массив объектов бонусов\r\n * @param {Object} baseBonuses - Базовая структура для суммирования\r\n * @returns {Object} - Суммарные бонусы\r\n */\r\nfunction aggregateBonuses(bonusesArray, baseBonuses = null) {\r\n  // Используем переданную базовую структуру или создаем новую\r\n  const result = baseBonuses || {\r\n    stats: { strength: 0, dexterity: 0, vitality: 0, intelligence: 0, perception: 0, luck: 0 },\r\n    combat: { physicalDamage: 0, magicDamage: 0, physicalDefense: 0, magicDefense: 0, critChance: 0, critDamage: 0, dodgeChance: 0 },\r\n    cultivation: { energyMax: 0, energyRegen: 0, comprehensionRate: 0, breakthroughChance: 0 },\r\n    elemental: { fire: 0, water: 0, earth: 0, air: 0, light: 0, dark: 0 },\r\n    special: []\r\n  };\r\n  \r\n  // Проходим по всем объектам бонусов\r\n  bonusesArray.forEach(bonuses => {\r\n    if (!bonuses) return;\r\n    \r\n    // Суммируем базовые характеристики\r\n    Object.keys(result.stats).forEach(stat => {\r\n      if (bonuses.stats && bonuses.stats[stat] !== undefined) {\r\n        result.stats[stat] += bonuses.stats[stat];\r\n      }\r\n    });\r\n    \r\n    // Суммируем боевые характеристики\r\n    Object.keys(result.combat).forEach(stat => {\r\n      if (bonuses.combat && bonuses.combat[stat] !== undefined) {\r\n        result.combat[stat] += bonuses.combat[stat];\r\n      }\r\n    });\r\n    \r\n    // Суммируем характеристики культивации\r\n    Object.keys(result.cultivation).forEach(stat => {\r\n      if (bonuses.cultivation && bonuses.cultivation[stat] !== undefined) {\r\n        result.cultivation[stat] += bonuses.cultivation[stat];\r\n      }\r\n    });\r\n    \r\n    // Суммируем стихийные бонусы\r\n    Object.keys(result.elemental).forEach(element => {\r\n      if (bonuses.elemental && bonuses.elemental[element] !== undefined) {\r\n        result.elemental[element] += bonuses.elemental[element];\r\n      }\r\n    });\r\n    \r\n    // Добавляем особые эффекты\r\n    if (bonuses.special && Array.isArray(bonuses.special)) {\r\n      result.special = [...result.special, ...bonuses.special];\r\n    }\r\n  });\r\n  \r\n  return result;\r\n}\r\n\r\n/**\r\n * Проверка, имеет ли предмет предрассчитанные бонусы\r\n * @param {Object} item - Предмет для проверки\r\n * @returns {boolean} - true, если есть предрассчитанные бонусы\r\n */\r\nfunction hasCalculatedBonuses(item) {\r\n  return item && item.calculatedBonuses !== undefined && item.calculatedBonuses !== null;\r\n}\r\n\r\n/**\r\n * Создание пустой структуры бонусов\r\n * @returns {Object} - Пустая структура бонусов\r\n */\r\nfunction createEmptyBonusStructure() {\r\n  return {\r\n    stats: { strength: 0, dexterity: 0, vitality: 0, intelligence: 0, perception: 0, luck: 0 },\r\n    combat: { physicalDamage: 0, magicDamage: 0, physicalDefense: 0, magicDefense: 0, critChance: 0, critDamage: 0, dodgeChance: 0 },\r\n    cultivation: { energyMax: 0, energyRegen: 0, comprehensionRate: 0, breakthroughChance: 0 },\r\n    elemental: { fire: 0, water: 0, earth: 0, air: 0, light: 0, dark: 0 },\r\n    special: []\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  getItemBonuses,\r\n  getEquipmentTotalBonuses,\r\n  aggregateBonuses,\r\n  hasCalculatedBonuses,\r\n  createEmptyBonusStructure\r\n};\r\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass QuestProgress extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    QuestProgress.belongsTo(models.User, {\r\n      foreignKey: 'userId',\r\n      as: 'user'\r\n    });\r\n    \r\n    QuestProgress.belongsTo(models.Quest, {\r\n      foreignKey: 'questId',\r\n      as: 'quest'\r\n    });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nQuestProgress.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n  // Явно определяем ID для соответствия миграции\r\n  id: {\r\n    type: DataTypes.INTEGER,\r\n    autoIncrement: true,\r\n    primaryKey: true,\r\n    allowNull: false\r\n  },\r\n  userId: {\r\n    type: DataTypes.INTEGER,\r\n    references: {\r\n      model: 'users', // Имя таблицы в lowercase\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE'\r\n  },\r\n  questId: {\r\n    type: DataTypes.STRING(20), // Исправлен тип для соответствия модели Quest\r\n    references: {\r\n      model: 'quests', // Имя таблицы в lowercase\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE'\r\n  },\r\n  status: { // Соответствует status в миграции\r\n    type: DataTypes.ENUM('не начато', 'в процессе', 'выполнено', 'провалено'),\r\n    defaultValue: 'не начато' // Исправлено defaultValue\r\n  },\r\n  progress: { // Соответствует progress в миграции\r\n    type: DataTypes.INTEGER, // Исправлен тип\r\n    defaultValue: 0 // Исправлено defaultValue\r\n  },\r\n  completedObjectives: { // Добавлено поле completedObjectives из миграции\r\n    type: DataTypes.JSONB,\r\n    defaultValue: []\r\n  },\r\n  startedAt: { // Соответствует startedAt в миграции\r\n    type: DataTypes.DATE\r\n  },\r\n  completedAt: { // Соответствует completedAt в миграции\r\n    type: DataTypes.DATE\r\n  }\r\n  // Sequelize автоматически добавит createdAt и updatedAt\r\n  }, {\r\n    sequelize,\r\n    modelName: 'QuestProgress',\r\n    tableName: 'quest_progress', // Исправлено: имя таблицы в snake_case\r\n    timestamps: true,           // Явно указываем использование временных меток\r\n    underscored: true           // Используем snake_case для createdAt и updatedAt (created_at, updated_at)\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await QuestProgress.init();\r\n    console.log('QuestProgress модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели QuestProgress:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = QuestProgress;\r\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","const { Model, DataTypes } = require('../services/database');\r\nconst { unifiedDatabase } = require('../services/database-connection-manager');\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass LearnedTechnique extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    LearnedTechnique.belongsTo(models.User, {\r\n      foreignKey: 'userId',\r\n      as: 'user'\r\n    });\r\n    \r\n    LearnedTechnique.belongsTo(models.Technique, {\r\n      foreignKey: 'techniqueId',\r\n      as: 'technique'\r\n    });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nLearnedTechnique.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n  // Явно определяем ID для соответствия миграции\r\n  id: {\r\n    type: DataTypes.INTEGER,\r\n    autoIncrement: true,\r\n    primaryKey: true,\r\n    allowNull: false\r\n  },\r\n  userId: {\r\n    type: DataTypes.INTEGER,\r\n    references: {\r\n      model: 'users', // Имя таблицы в lowercase\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE'\r\n  },\r\n  techniqueId: {\r\n    type: DataTypes.INTEGER,\r\n    references: {\r\n      model: 'techniques', // Имя таблицы в lowercase\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE'\r\n  },\r\n  // Поле level удалено, используем masteryLevel\r\n  masteryLevel: { // Соответствует masteryLevel в миграции\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 1 // Исправлено defaultValue\r\n  },\r\n  experience: { // Соответствует experience в миграции\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  isEquipped: { // Добавлено поле isEquipped из миграции\r\n    type: DataTypes.BOOLEAN,\r\n    defaultValue: false\r\n  },\r\n  learnedAt: { // Добавлено поле learnedAt из миграции\r\n    type: DataTypes.DATE,\r\n    defaultValue: DataTypes.NOW\r\n  },\r\n  lastUsed: { // Соответствует lastUsed в миграции\r\n    type: DataTypes.DATE\r\n  }\r\n  // Sequelize автоматически добавит createdAt и updatedAt\r\n  }, {\r\n    sequelize,\r\n    modelName: 'LearnedTechnique',\r\n    tableName: 'learned_techniques', // Исправлено: имя таблицы в snake_case\r\n    timestamps: true,               // Явно указываем использование временных меток\r\n    underscored: true               // Используем snake_case для createdAt и updatedAt (created_at, updated_at)\r\n  });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await LearnedTechnique.init();\r\n    console.log('LearnedTechnique модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели LearnedTechnique:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nmodule.exports = LearnedTechnique;\r\n","/**\r\n * Файл с данными о духовных питомцах\r\n * Содержит информацию о всех духовных питомцах, их свойствах и способностях\r\n * Получает данные из базы данных\r\n */\r\n\r\n// Импортируем модуль для работы с базой данных\r\nconst { unifiedDatabase, initializeDatabaseConnection } = require('../services/database-connection-manager');\r\nconst { Sequelize } = require('sequelize');\r\nlet sequelize;\r\n\r\n// Переменная для хранения экземпляра Sequelize\r\nlet sequelizeInstance = null;\r\n\r\n// Асинхронная функция для получения экземпляра Sequelize\r\nasync function getSequelizeInstance() {\r\n  if (!sequelize) {\r\n    const { db } = await initializeDatabaseConnection();\r\n    sequelize = db;\r\n  }\r\n  return sequelize;\r\n}\r\n\r\n// Типы питомцев\r\nconst PET_TYPES = {\r\n  ELEMENTAL: 'elemental',  // Элементальные\r\n  BEAST: 'beast',          // Звери\r\n  MYTHICAL: 'mythical',    // Мифические\r\n  CELESTIAL: 'celestial',  // Небесные\r\n  DEMONIC: 'demonic'       // Демонические\r\n};\r\n\r\n// Рангирование редкости\r\nconst PET_RARITY = {\r\n  COMMON: 'common',        // Обычный\r\n  UNCOMMON: 'uncommon',    // Необычный\r\n  RARE: 'rare',            // Редкий\r\n  EPIC: 'epic',            // Эпический\r\n  LEGENDARY: 'legendary',  // Легендарный\r\n  MYTHIC: 'mythic'         // Мифический\r\n};\r\n\r\n// Кэш духовных питомцев для обратной совместимости\r\nlet spiritPets = [];\r\n\r\n// Определения констант на основе данных из БД\r\nconst petTypeNames = {\r\n  'fire': 'Огненный',\r\n  'water': 'Водный',\r\n  'earth': 'Земляной',\r\n  'wind': 'Воздушный',\r\n  'lightning': 'Молниевый',\r\n  'wood': 'Древесный',\r\n  'metal': 'Металлический',\r\n  'darkness': 'Тёмный',\r\n  'light': 'Светлый',\r\n  'beast': 'Зверь',\r\n  'elemental': 'Элементальный',\r\n  'mythical': 'Мифический', \r\n  'celestial': 'Небесный',\r\n  'demonic': 'Демонический'\r\n};\r\n\r\n// Описания типов питомцев\r\nconst petTypeDescriptions = {\r\n  'fire': 'Огненные духовные питомцы обладают большой силой атаки и склонны к агрессивным действиям.',\r\n  'water': 'Водные духовные питомцы хорошо приспосабливаются и могут восстанавливать энергию.',\r\n  'earth': 'Земляные духовные питомцы отличаются высокой живучестью и стойкостью.',\r\n  'wind': 'Воздушные духовные питомцы быстры и проворны, способны уклоняться от атак.',\r\n  'lightning': 'Молниевые духовные питомцы наносят стихийный урон и могут оглушать противников.',\r\n  'wood': 'Древесные духовные питомцы специализируются на исцелении и поддержке.',\r\n  'metal': 'Металлические духовные питомцы имеют высокую защиту и могут отражать урон.',\r\n  'darkness': 'Тёмные духовные питомцы могут ослаблять противников и красть жизненную силу.',\r\n  'light': 'Светлые духовные питомцы специализируются на защите и очищении от негативных эффектов.',\r\n  'beast': 'Духовные питомцы типа \"зверь\" отличаются хорошим балансом атаки и защиты.',\r\n  'elemental': 'Элементальные духовные питомцы имеют повышенный урон от своего элемента.',\r\n  'mythical': 'Мифические духовные питомцы обладают редкими и уникальными способностями.',\r\n  'celestial': 'Небесные духовные питомцы обладают высоким духовным потенциалом и защитными способностями.',\r\n  'demonic': 'Демонические духовные питомцы специализируются на силовых атаках и ослаблении противника.'\r\n};\r\n\r\n// Базовые характеристики по типам\r\nconst petTypeBaseStats = {\r\n  'fire': {\r\n    strength: 8,\r\n    intelligence: 5,\r\n    agility: 6,\r\n    vitality: 5,\r\n    spirit: 6\r\n  },\r\n  'water': {\r\n    strength: 5,\r\n    intelligence: 8,\r\n    agility: 6,\r\n    vitality: 7,\r\n    spirit: 4\r\n  },\r\n  'earth': {\r\n    strength: 7,\r\n    intelligence: 4,\r\n    agility: 3,\r\n    vitality: 10,\r\n    spirit: 6\r\n  },\r\n  'wind': {\r\n    strength: 4,\r\n    intelligence: 6,\r\n    agility: 10,\r\n    vitality: 4,\r\n    spirit: 6\r\n  },\r\n  'lightning': {\r\n    strength: 7,\r\n    intelligence: 7,\r\n    agility: 7,\r\n    vitality: 3,\r\n    spirit: 6\r\n  },\r\n  'wood': {\r\n    strength: 5,\r\n    intelligence: 6,\r\n    agility: 5,\r\n    vitality: 7,\r\n    spirit: 7\r\n  },\r\n  'metal': {\r\n    strength: 6,\r\n    intelligence: 5,\r\n    agility: 4,\r\n    vitality: 9,\r\n    spirit: 6\r\n  },\r\n  'darkness': {\r\n    strength: 6,\r\n    intelligence: 8,\r\n    agility: 5,\r\n    vitality: 5,\r\n    spirit: 6\r\n  },\r\n  'light': {\r\n    strength: 5,\r\n    intelligence: 7,\r\n    agility: 6,\r\n    vitality: 6,\r\n    spirit: 8\r\n  },\r\n  'beast': {\r\n    strength: 7,\r\n    intelligence: 5,\r\n    agility: 7,\r\n    vitality: 6,\r\n    spirit: 5\r\n  },\r\n  'elemental': {\r\n    strength: 6,\r\n    intelligence: 8,\r\n    agility: 6,\r\n    vitality: 5,\r\n    spirit: 7\r\n  },\r\n  'mythical': {\r\n    strength: 8,\r\n    intelligence: 8,\r\n    agility: 7,\r\n    vitality: 7,\r\n    spirit: 8\r\n  },\r\n  'celestial': {\r\n    strength: 6,\r\n    intelligence: 9,\r\n    agility: 7,\r\n    vitality: 7,\r\n    spirit: 10\r\n  },\r\n  'demonic': {\r\n    strength: 10,\r\n    intelligence: 7,\r\n    agility: 5,\r\n    vitality: 6,\r\n    spirit: 4\r\n  }\r\n};\r\n\r\n// Способности питомцев по типам\r\nconst petTypeAbilities = {\r\n  'fire': [\r\n    {id: 'fire_breath', name: 'Огненное дыхание', type: 'attack', description: 'Наносит урон огнем всем противникам.', cooldown: 3, damageMultiplier: 1.5, damageType: 'fire'},\r\n    {id: 'fire_shield', name: 'Огненный щит', type: 'buff', description: 'Создает щит из огня, который наносит урон атакующим.', cooldown: 4},\r\n    {id: 'fire_burst', name: 'Огненный взрыв', type: 'attack', description: 'Наносит большой урон одному противнику.', cooldown: 2, damageMultiplier: 2.0, damageType: 'fire'}\r\n  ],\r\n  'water': [\r\n    {id: 'water_heal', name: 'Исцеляющие воды', type: 'buff', description: 'Восстанавливает здоровье владельцу.', cooldown: 4},\r\n    {id: 'water_wave', name: 'Водная волна', type: 'attack', description: 'Наносит урон всем противникам и снижает их скорость.', cooldown: 3, damageMultiplier: 1.2, damageType: 'water'},\r\n    {id: 'water_shield', name: 'Водный щит', type: 'buff', description: 'Создает защитный барьер, снижающий получаемый урон.', cooldown: 5}\r\n  ],\r\n  'earth': [\r\n    {id: 'earth_barrier', name: 'Земляной барьер', type: 'buff', description: 'Значительно увеличивает защиту на несколько ходов.', cooldown: 4},\r\n    {id: 'rock_throw', name: 'Метание камней', type: 'attack', description: 'Наносит физический урон одному противнику.', cooldown: 2, damageMultiplier: 1.3, damageType: 'earth'},\r\n    {id: 'earthquake', name: 'Землетрясение', type: 'attack', description: 'Наносит урон всем противникам и имеет шанс оглушить.', cooldown: 5, damageMultiplier: 1.8, damageType: 'earth'}\r\n  ],\r\n  'wind': [\r\n    {id: 'wind_slash', name: 'Ветряной клинок', type: 'attack', description: 'Наносит урон с высоким шансом критического удара.', cooldown: 2, damageMultiplier: 1.2, damageType: 'wind'},\r\n    {id: 'wind_boost', name: 'Ускорение ветром', type: 'buff', description: 'Увеличивает скорость и шанс уклонения.', cooldown: 3},\r\n    {id: 'tornado', name: 'Торнадо', type: 'attack', description: 'Создает торнадо, которое атакует случайных противников несколько раз.', cooldown: 4, damageMultiplier: 1.6, damageType: 'wind'},\r\n    {id: 'wind_breath', name: 'Ветряное дыхание', type: 'attack', description: 'Выдыхает поток ветра, наносящий урон и отталкивающий противников.', cooldown: 3, damageMultiplier: 1.4, damageType: 'wind'}\r\n  ],\r\n  'lightning': [\r\n    {id: 'lightning_strike', name: 'Удар молнии', type: 'attack', description: 'Наносит большой урон одному противнику с шансом оглушить.', cooldown: 3, damageMultiplier: 1.7, damageType: 'lightning'},\r\n    {id: 'static_charge', name: 'Статический заряд', type: 'buff', description: 'Увеличивает скорость атаки и шанс критического удара.', cooldown: 4},\r\n    {id: 'chain_lightning', name: 'Цепная молния', type: 'attack', description: 'Атакует основную цель и перескакивает на ближайших противников.', cooldown: 4, damageMultiplier: 1.5, damageType: 'lightning'}\r\n  ],\r\n  'beast': [\r\n    {id: 'beast_charge', name: 'Звериная атака', type: 'attack', description: 'Стремительно атакует противника, нанося физический урон.', cooldown: 2, damageMultiplier: 1.6, damageType: 'physical'},\r\n    {id: 'feral_instinct', name: 'Дикий инстинкт', type: 'buff', description: 'Повышает все характеристики на короткое время.', cooldown: 4}\r\n  ],\r\n  'elemental': [\r\n    {id: 'elemental_blast', name: 'Удар стихии', type: 'attack', description: 'Наносит стихийный урон в зависимости от элемента питомца.', cooldown: 3, damageMultiplier: 1.8},\r\n    {id: 'elemental_harmony', name: 'Гармония стихий', type: 'buff', description: 'Усиливает элементальный урон и защиту.', cooldown: 4}\r\n  ]\r\n};\r\n\r\n// Стадии эволюции\r\nconst evolutionStages = {\r\n  1: {name: 'Детёныш', description: 'Начальная стадия развития духовного питомца. Имеет базовые способности.'},\r\n  2: {name: 'Подросток', description: 'Вторая стадия развития. Открывает доступ к дополнительным способностям.'},\r\n  3: {name: 'Взрослый', description: 'Полностью развитый духовный питомец с максимальным потенциалом.'},\r\n  4: {name: 'Древний', description: 'Редкая стадия эволюции. Обладает уникальными способностями.'}\r\n};\r\n\r\n/**\r\n * Рассчитывает количество опыта, необходимое для перехода на следующий уровень\r\n * @param {number} level - Текущий уровень питомца\r\n * @returns {number} - Необходимое количество опыта\r\n */\r\nfunction calculateExpForLevel(level) {\r\n  return Math.floor(100 * Math.pow(1.5, level - 1));\r\n}\r\n\r\n/**\r\n * Рассчитывает бонус к характеристике на основе базового значения и уровня\r\n * @param {number} stat - Базовое значение характеристики\r\n * @param {number} level - Уровень питомца\r\n * @returns {number} - Итоговое значение характеристики\r\n */\r\nfunction calculateStatBonus(stat, level) {\r\n  return Math.floor(stat * (1 + (level - 1) * 0.05));\r\n}\r\n\r\n/**\r\n * Рассчитывает боевые бонусы на основе характеристик питомца\r\n * @param {Object} pet - Объект питомца\r\n * @returns {Object} - Объект с боевыми бонусами\r\n */\r\nfunction calculateCombatBonus(pet) {\r\n  return {\r\n    attack: Math.floor((pet.strength || 0) * 0.8 + (pet.intelligence || 0) * 0.2),\r\n    defense: Math.floor((pet.vitality || 0) * 0.7 + (pet.strength || 0) * 0.3),\r\n    speed: Math.floor((pet.agility || 0) * 0.9 + (pet.intelligence || 0) * 0.1),\r\n    critChance: Math.min(0.5, ((pet.agility || 0) * 0.01 + (pet.intelligence || 0) * 0.005)),\r\n    healthBonus: Math.floor((pet.vitality || 0) * 5),\r\n    energyBonus: Math.floor((pet.spirit || 0) * 3)\r\n  };\r\n}\r\n\r\n/**\r\n * Преобразует духовного питомца из БД в формат для клиента\r\n * @param {Object} pet - Питомец из БД\r\n * @param {Array} abilities - Способности питомца\r\n * @param {Array} stats - Базовые характеристики питомца\r\n * @param {Array} growthRates - Показатели роста характеристик при развитии питомца\r\n * @returns {Object} - Питомец в формате для клиента\r\n */\r\nfunction convertPetFromDB(pet, abilities = [], stats = {}, growthRates = {}) {\r\n  return {\r\n    id: pet.id,\r\n    name: pet.name,\r\n    description: pet.description,\r\n    type: pet.type,\r\n    element: pet.element,\r\n    rarity: pet.rarity,\r\n    unlockCondition: pet.unlock_condition,\r\n    maxLevel: pet.max_level || 100,\r\n    evolutionPath: pet.evolution_path || [],\r\n    abilities: abilities.map(ability => ({\r\n      name: ability.name,\r\n      description: ability.description,\r\n      unlockLevel: ability.unlock_level,\r\n      cooldown: ability.cooldown,\r\n      energyCost: ability.energy_cost,\r\n      effects: JSON.parse(ability.effects || '{}')\r\n    })),\r\n    baseStats: stats,\r\n    growthRates: growthRates,\r\n    icon: pet.icon\r\n  };\r\n}\r\n\r\n/**\r\n * Асинхронно загружает всех духовных питомцев из базы данных\r\n * @returns {Promise<Array>} - Массив духовных питомцев\r\n */\r\nasync function loadSpiritPets() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем всех питомцев из базы данных\r\n    const petsData = await unifiedDatabase.query(\r\n      'SELECT * FROM spirit_pets',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    if (petsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID питомцев\r\n    const petIds = petsData.map(pet => pet.id);\r\n    \r\n    // Получаем способности для питомцев\r\n    const abilitiesQuery = `\r\n      SELECT * FROM spirit_pet_abilities \r\n      WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const abilitiesData = await unifiedDatabase.query(\r\n      abilitiesQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Получаем базовые характеристики для питомцев\r\n    const statsQuery = `\r\n      SELECT * FROM spirit_pet_stats \r\n      WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const statsData = await unifiedDatabase.query(\r\n      statsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Получаем показатели роста для питомцев\r\n    const growthRatesQuery = `\r\n      SELECT * FROM spirit_pet_growth_rates \r\n      WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const growthRatesData = await unifiedDatabase.query(\r\n      growthRatesQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Группируем способности по ID питомца\r\n    const abilitiesByPetId = {};\r\n    abilitiesData.forEach(ability => {\r\n      if (!abilitiesByPetId[ability.pet_id]) {\r\n        abilitiesByPetId[ability.pet_id] = [];\r\n      }\r\n      abilitiesByPetId[ability.pet_id].push(ability);\r\n    });\r\n    \r\n    // Группируем характеристики по ID питомца\r\n    const statsByPetId = {};\r\n    statsData.forEach(stat => {\r\n      if (!statsByPetId[stat.pet_id]) {\r\n        statsByPetId[stat.pet_id] = {};\r\n      }\r\n      statsByPetId[stat.pet_id][stat.stat_name] = stat.stat_value;\r\n    });\r\n    \r\n    // Группируем показатели роста по ID питомца\r\n    const growthRatesByPetId = {};\r\n    growthRatesData.forEach(rate => {\r\n      if (!growthRatesByPetId[rate.pet_id]) {\r\n        growthRatesByPetId[rate.pet_id] = {};\r\n      }\r\n      growthRatesByPetId[rate.pet_id][rate.stat_name] = rate.growth_rate;\r\n    });\r\n    \r\n    // Преобразуем питомцев в нужный формат\r\n    const formattedPets = petsData.map(pet => \r\n      convertPetFromDB(\r\n        pet,\r\n        abilitiesByPetId[pet.id] || [],\r\n        statsByPetId[pet.id] || {},\r\n        growthRatesByPetId[pet.id] || {}\r\n      )\r\n    );\r\n    \r\n    // Обновляем кэш для обратной совместимости\r\n    spiritPets = formattedPets;\r\n    \r\n    return formattedPets;\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке духовных питомцев из базы данных:', error);\r\n    // В случае ошибки возвращаем кэшированные данные\r\n    return spiritPets;\r\n  }\r\n}\r\n\r\n/**\r\n * Асинхронно получает духовного питомца по ID\r\n * @param {string} id - ID питомца\r\n * @returns {Promise<Object|null>} - Питомец или null, если не найден\r\n */\r\nasync function getSpiritPetByIdAsync(id) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем питомца из базы данных\r\n    const petData = await unifiedDatabase.query(\r\n      'SELECT * FROM spirit_pets WHERE id = :id',\r\n      { \r\n        replacements: { id },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    if (petData.length === 0) {\r\n      return null;\r\n    }\r\n    \r\n    // Получаем способности, характеристики и показатели роста для питомца\r\n    const [abilitiesData, statsData, growthRatesData] = await Promise.all([\r\n      unifiedDatabase.query(\r\n        'SELECT * FROM spirit_pet_abilities WHERE pet_id = :id',\r\n        { \r\n          replacements: { id },\r\n          type: seq.QueryTypes.SELECT \r\n        }\r\n      ),\r\n      unifiedDatabase.query(\r\n        'SELECT * FROM spirit_pet_stats WHERE pet_id = :id',\r\n        { \r\n          replacements: { id },\r\n          type: seq.QueryTypes.SELECT \r\n        }\r\n      ),\r\n      unifiedDatabase.query(\r\n        'SELECT * FROM spirit_pet_growth_rates WHERE pet_id = :id',\r\n        { \r\n          replacements: { id },\r\n          type: seq.QueryTypes.SELECT \r\n        }\r\n      )\r\n    ]);\r\n    \r\n    // Преобразуем характеристики в нужный формат\r\n    const stats = {};\r\n    statsData.forEach(stat => {\r\n      stats[stat.stat_name] = stat.stat_value;\r\n    });\r\n    \r\n    // Преобразуем показатели роста в нужный формат\r\n    const growthRates = {};\r\n    growthRatesData.forEach(rate => {\r\n      growthRates[rate.stat_name] = rate.growth_rate;\r\n    });\r\n    \r\n    // Преобразуем и возвращаем питомца\r\n    return convertPetFromDB(\r\n      petData[0], \r\n      abilitiesData,\r\n      stats,\r\n      growthRates\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении духовного питомца с ID ${id}:`, error);\r\n    // В случае ошибки ищем в кэше\r\n    return getSpiritPetById(id);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения духовного питомца по ID (для обратной совместимости)\r\n * @param {string} id - ID питомца\r\n * @returns {Object|null} - Питомец или null, если не найден\r\n */\r\n function getSpiritPetById(id) {\r\n  return spiritPets.find(pet => pet.id === id) || null;\r\n}\r\n\r\n/**\r\n * Асинхронно получает духовных питомцев по типу\r\n * @param {string} type - Тип питомца\r\n * @returns {Promise<Array>} - Массив питомцев указанного типа\r\n */\r\n async function getSpiritPetsByTypeAsync(type) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем питомцев из базы данных\r\n    const petsData = await unifiedDatabase.query(\r\n      'SELECT * FROM spirit_pets WHERE type = :type',\r\n      {\r\n        replacements: { type },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (petsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID питомцев\r\n    const petIds = petsData.map(pet => pet.id);\r\n    \r\n    // Получаем способности для питомцев\r\n    const abilitiesQuery = `\r\n      SELECT * FROM spirit_pet_abilities \r\n      WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const abilitiesData = await unifiedDatabase.query(\r\n      abilitiesQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Получаем характеристики для питомцев\r\n    const statsQuery = `\r\n      SELECT * FROM spirit_pet_stats \r\n      WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const statsData = await unifiedDatabase.query(\r\n      statsQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Получаем показатели роста для питомцев\r\n    const growthRatesQuery = `\r\n      SELECT * FROM spirit_pet_growth_rates \r\n      WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})\r\n    `;\r\n    const growthRatesData = await unifiedDatabase.query(\r\n      growthRatesQuery,\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Группируем способности, характеристики и показатели роста по ID питомца\r\n    const abilitiesByPetId = {};\r\n    abilitiesData.forEach(ability => {\r\n      if (!abilitiesByPetId[ability.pet_id]) {\r\n        abilitiesByPetId[ability.pet_id] = [];\r\n      }\r\n      abilitiesByPetId[ability.pet_id].push(ability);\r\n    });\r\n    \r\n    const statsByPetId = {};\r\n    statsData.forEach(stat => {\r\n      if (!statsByPetId[stat.pet_id]) {\r\n        statsByPetId[stat.pet_id] = {};\r\n      }\r\n      statsByPetId[stat.pet_id][stat.stat_name] = stat.stat_value;\r\n    });\r\n    \r\n    const growthRatesByPetId = {};\r\n    growthRatesData.forEach(rate => {\r\n      if (!growthRatesByPetId[rate.pet_id]) {\r\n        growthRatesByPetId[rate.pet_id] = {};\r\n      }\r\n      growthRatesByPetId[rate.pet_id][rate.stat_name] = rate.growth_rate;\r\n    });\r\n    \r\n    // Преобразуем и возвращаем питомцев\r\n    return petsData.map(pet => \r\n      convertPetFromDB(\r\n        pet,\r\n        abilitiesByPetId[pet.id] || [],\r\n        statsByPetId[pet.id] || {},\r\n        growthRatesByPetId[pet.id] || {}\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении духовных питомцев типа ${type}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return getSpiritPetsByType(type);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения духовных питомцев по типу (для обратной совместимости)\r\n * @param {string} type - Тип питомца\r\n * @returns {Array} - Массив питомцев указанного типа\r\n */\r\nfunction getSpiritPetsByType(type) {\r\n  return spiritPets.filter(pet => pet.type === type);\r\n}\r\n\r\n/**\r\n * Асинхронно получает духовных питомцев по элементу\r\n * @param {string} element - Элемент питомца\r\n * @returns {Promise<Array>} - Массив питомцев указанного элемента\r\n */\r\nasync function getSpiritPetsByElementAsync(element) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем питомцев из базы данных\r\n    const petsData = await unifiedDatabase.query(\r\n      'SELECT * FROM spirit_pets WHERE element = :element',\r\n      {\r\n        replacements: { element },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (petsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID питомцев\r\n    const petIds = petsData.map(pet => pet.id);\r\n    \r\n    // Получаем способности, характеристики и показатели роста для питомцев\r\n    const [abilitiesData, statsData, growthRatesData] = await Promise.all([\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM spirit_pet_abilities WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM spirit_pet_stats WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM spirit_pet_growth_rates WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      )\r\n    ]);\r\n    \r\n    // Группируем способности, характеристики и показатели роста по ID питомца\r\n    const abilitiesByPetId = {};\r\n    abilitiesData.forEach(ability => {\r\n      if (!abilitiesByPetId[ability.pet_id]) {\r\n        abilitiesByPetId[ability.pet_id] = [];\r\n      }\r\n      abilitiesByPetId[ability.pet_id].push(ability);\r\n    });\r\n    \r\n    const statsByPetId = {};\r\n    statsData.forEach(stat => {\r\n      if (!statsByPetId[stat.pet_id]) {\r\n        statsByPetId[stat.pet_id] = {};\r\n      }\r\n      statsByPetId[stat.pet_id][stat.stat_name] = stat.stat_value;\r\n    });\r\n    \r\n    const growthRatesByPetId = {};\r\n    growthRatesData.forEach(rate => {\r\n      if (!growthRatesByPetId[rate.pet_id]) {\r\n        growthRatesByPetId[rate.pet_id] = {};\r\n      }\r\n      growthRatesByPetId[rate.pet_id][rate.stat_name] = rate.growth_rate;\r\n    });\r\n    \r\n    // Преобразуем и возвращаем питомцев\r\n    return petsData.map(pet => \r\n      convertPetFromDB(\r\n        pet,\r\n        abilitiesByPetId[pet.id] || [],\r\n        statsByPetId[pet.id] || {},\r\n        growthRatesByPetId[pet.id] || {}\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении духовных питомцев элемента ${element}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return getSpiritPetsByElement(element);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения духовных питомцев по элементу (для обратной совместимости)\r\n * @param {string} element - Элемент питомца\r\n * @returns {Array} - Массив питомцев указанного элемента\r\n */\r\nfunction getSpiritPetsByElement(element) {\r\n  return spiritPets.filter(pet => pet.element === element);\r\n}\r\n\r\n/**\r\n * Асинхронно получает духовных питомцев по редкости\r\n * @param {string} rarity - Редкость питомца\r\n * @returns {Promise<Array>} - Массив питомцев указанной редкости\r\n */\r\nasync function getSpiritPetsByRarityAsync(rarity) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем питомцев из базы данных\r\n    const petsData = await unifiedDatabase.query(\r\n      'SELECT * FROM spirit_pets WHERE rarity = :rarity',\r\n      {\r\n        replacements: { rarity },\r\n        type: seq.QueryTypes.SELECT\r\n      }\r\n    );\r\n    \r\n    if (petsData.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    // Получаем ID питомцев\r\n    const petIds = petsData.map(pet => pet.id);\r\n    \r\n    // Получаем способности, характеристики и показатели роста для питомцев\r\n    const [abilitiesData, statsData, growthRatesData] = await Promise.all([\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM spirit_pet_abilities WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM spirit_pet_stats WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      ),\r\n      unifiedDatabase.query(\r\n        `SELECT * FROM spirit_pet_growth_rates WHERE pet_id IN (${petIds.map(id => `'${id}'`).join(',')})`,\r\n        { type: seq.QueryTypes.SELECT }\r\n      )\r\n    ]);\r\n    \r\n    // Группируем способности, характеристики и показатели роста по ID питомца\r\n    const abilitiesByPetId = {};\r\n    abilitiesData.forEach(ability => {\r\n      if (!abilitiesByPetId[ability.pet_id]) {\r\n        abilitiesByPetId[ability.pet_id] = [];\r\n      }\r\n      abilitiesByPetId[ability.pet_id].push(ability);\r\n    });\r\n    \r\n    const statsByPetId = {};\r\n    statsData.forEach(stat => {\r\n      if (!statsByPetId[stat.pet_id]) {\r\n        statsByPetId[stat.pet_id] = {};\r\n      }\r\n      statsByPetId[stat.pet_id][stat.stat_name] = stat.stat_value;\r\n    });\r\n    \r\n    const growthRatesByPetId = {};\r\n    growthRatesData.forEach(rate => {\r\n      if (!growthRatesByPetId[rate.pet_id]) {\r\n        growthRatesByPetId[rate.pet_id] = {};\r\n      }\r\n      growthRatesByPetId[rate.pet_id][rate.stat_name] = rate.growth_rate;\r\n    });\r\n    \r\n    // Преобразуем и возвращаем питомцев\r\n    return petsData.map(pet => \r\n      convertPetFromDB(\r\n        pet,\r\n        abilitiesByPetId[pet.id] || [],\r\n        statsByPetId[pet.id] || {},\r\n        growthRatesByPetId[pet.id] || {}\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении духовных питомцев редкости ${rarity}:`, error);\r\n    // В случае ошибки фильтруем кэш\r\n    return getSpiritPetsByRarity(rarity);\r\n  }\r\n}\r\n\r\n/**\r\n * Синхронная функция для получения духовных питомцев по редкости (для обратной совместимости)\r\n * @param {string} rarity - Редкость питомца\r\n * @returns {Array} - Массив питомцев указанной редкости\r\n */\r\nfunction getSpiritPetsByRarity(rarity) {\r\n  return spiritPets.filter(pet => pet.rarity === rarity);\r\n}\r\n\r\n// Инициализация: загружаем питомцев при импорте модуля\r\nloadSpiritPets().catch(error => {\r\n  console.error('Ошибка при инициализации модуля духовных питомцев:', error);\r\n});\r\n\r\n// Экспортируем функции и переменные\r\nmodule.exports = {\r\n  PET_TYPES,\r\n  PET_RARITY,\r\n  spiritPets,\r\n  loadSpiritPets,\r\n  getSpiritPetById,\r\n  getSpiritPetByIdAsync,\r\n  getSpiritPetsByType,\r\n  getSpiritPetsByTypeAsync,\r\n  getSpiritPetsByElement,\r\n  getSpiritPetsByElementAsync,\r\n  getSpiritPetsByRarity,\r\n  getSpiritPetsByRarityAsync,\r\n  // Новые экспорты\r\n  petTypeNames,\r\n  petTypeDescriptions,\r\n  petTypeBaseStats,\r\n  petTypeAbilities,\r\n  evolutionStages,\r\n  calculateExpForLevel,\r\n  calculateStatBonus,\r\n  calculateCombatBonus\r\n};\r\n","if(typeof pg === 'undefined') { var e = new Error(\"Cannot find module 'pg'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = pg;","// Импортируем модуль для работы с базой данных\r\nconst { unifiedDatabase, initializeDatabaseConnection } = require('../services/database-connection-manager');\r\nconst { Sequelize } = require('sequelize');\r\nlet sequelize;\r\n\r\n// Переменная для хранения экземпляра Sequelize\r\nlet sequelizeInstance = null;\r\n\r\n// Асинхронная функция для получения экземпляра Sequelize\r\nasync function getSequelizeInstance() {\r\n  if (!sequelize) {\r\n    const { db } = await initializeDatabaseConnection();\r\n    sequelize = db;\r\n  }\r\n  return sequelize;\r\n}\r\n// Вспомогательная функция для преобразования объектов задач из БД\r\nfunction getObjectivesFromDB(quest) {\r\n  try {\r\n    // Предполагаем, что steps хранится как JSON в поле rewards или в отдельном поле\r\n    const stepsData = JSON.parse(quest.steps || '[]');\r\n    return stepsData.map(step => ({\r\n      id: `q${quest.id}_obj${step.id}`,\r\n      text: step.description,\r\n      completed: step.completed || false\r\n    }));\r\n  } catch (e) {\r\n    console.error('Ошибка при парсинге задач квеста:', e);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Вспомогательная функция для преобразования наград из БД\r\nfunction getRewardsFromDB(quest) {\r\n  try {\r\n    const rewardsData = JSON.parse(quest.rewards || '{}');\r\n    const rewards = [];\r\n    \r\n    // Добавляем опыт, если он есть\r\n    if (rewardsData.experience) {\r\n      rewards.push({\r\n        type: 'experience',\r\n        amount: rewardsData.experience,\r\n        icon: '✨'\r\n      });\r\n    }\r\n    \r\n    // Добавляем предметы\r\n    if (rewardsData.items && Array.isArray(rewardsData.items)) {\r\n      rewardsData.items.forEach(item => {\r\n        rewards.push({\r\n          type: 'item',\r\n          name: item.name,\r\n          icon: getIconForItem(item.type)\r\n        });\r\n      });\r\n    }\r\n    \r\n    // Добавляем валюту\r\n    if (rewardsData.gold) {\r\n      const gold = Math.floor(rewardsData.gold);\r\n      const silver = Math.round((rewardsData.gold - gold) * 10);\r\n      \r\n      rewards.push({\r\n        type: 'currency',\r\n        amount: { gold, silver },\r\n        icon: '🪙'\r\n      });\r\n    }\r\n    \r\n    // Добавляем технику, если есть\r\n    if (rewardsData.technique) {\r\n      rewards.push({\r\n        type: 'technique',\r\n        name: rewardsData.technique.name,\r\n        icon: getTechniqueIcon(rewardsData.technique.id)\r\n      });\r\n    }\r\n    \r\n    return rewards;\r\n  } catch (e) {\r\n    console.error('Ошибка при парсинге наград квеста:', e);\r\n    return [];\r\n  }\r\n}\r\n\r\n// Вспомогательные функции для определения иконок\r\nfunction getIconForItem(type) {\r\n  const icons = {\r\n    'weapon': '🗡️',\r\n    'armor': '🛡️',\r\n    'pill': '💊',\r\n    'resource': '🔮',\r\n    'artifact': '📜',\r\n    'accessory': '📿'\r\n  };\r\n  return icons[type] || '📦';\r\n}\r\n\r\nfunction getTechniqueIcon(techniqueId) {\r\n  const icons = {\r\n    4: '🛡️', // Техника защиты Ци\r\n    8: '🔥', // Искусство Багряного Пламени\r\n    12: '⚔️', // Искусство Небесного Меча\r\n    default: '📚'\r\n  };\r\n  return icons[techniqueId] || icons.default;\r\n}\r\n\r\n// Функция для получения всех квестов из БД\r\nasync function getQuests() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем все квесты из базы данных\r\n    const questsFromDB = await unifiedDatabase.query(\r\n      'SELECT * FROM quests',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Преобразуем формат данных из БД в формат, используемый клиентским кодом\r\n    return questsFromDB.map(quest => ({\r\n      id: quest.id,\r\n      title: quest.title,\r\n      category: quest.type || 'основные',\r\n      difficulty: quest.difficulty || 'Легко',\r\n      description: quest.description,\r\n      objectives: getObjectivesFromDB(quest),\r\n      rewards: getRewardsFromDB(quest),\r\n      status: mapStatus(quest.status),\r\n      requiredLevel: quest.required_cultivation_level || 0\r\n    }));\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке квестов из БД:', error);\r\n    return []; // Возвращаем пустой массив в случае ошибки\r\n  }\r\n}\r\n\r\n// Функция для маппинга статуса из БД в формат клиента\r\nfunction mapStatus(dbStatus) {\r\n  const statusMap = {\r\n    'доступно': 'available',\r\n    'в процессе': 'active',\r\n    'выполнено': 'completed',\r\n    'проваленно': 'failed'\r\n  };\r\n  return statusMap[dbStatus] || 'available';\r\n}\r\n\r\n// Для обратной совместимости с существующим кодом\r\nlet quests = [];\r\n\r\n// Инициализация данных\r\nasync function initQuestData() {\r\n  quests = await getQuests();\r\n  return quests;\r\n}\r\n\r\n// Инициализируем данные при импорте модуля\r\ninitQuestData().catch(error => {\r\n  console.error('Ошибка при инициализации данных квестов:', error);\r\n});\r\n\r\nconst questCategories = [\r\n  { id: 'all', name: 'все' },\r\n  { id: 'main', name: 'основные' },\r\n  { id: 'side', name: 'побочные' },\r\n  { id: 'sect', name: 'секты' },\r\n  { id: 'daily', name: 'ежедневные' }\r\n];\r\n\r\n// Экспортируем функции и переменные\r\nmodule.exports = {\r\n  quests,\r\n  initQuestData,\r\n  getQuests,\r\n  questCategories\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"e2d741cf\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"immortal-path:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkimmortal_path\"] = self[\"webpackChunkimmortal_path\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport type AgnosticPatchRoutesOnNavigationFunctionArgs<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = {\n  signal: AbortSignal;\n  path: string;\n  matches: M[];\n  fetcherKey: string | undefined;\n  patch: (routeId: string | null, children: O[]) => void;\n};\n\nexport type AgnosticPatchRoutesOnNavigationFunction<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = (\n  opts: AgnosticPatchRoutesOnNavigationFunctionArgs<O, M>\n) => void | Promise<void>;\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      viewTransitionOpts?: ViewTransitionOpts;\n      flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialMatchesIsFOW = false;\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatchesIsFOW = true;\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches\n        .slice(0, idx + 1)\n        .every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Remove any lingering deleted fetchers that have already been removed\n    // from state.fetchers\n    deletedFetchers.forEach((key) => {\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\n        deletedFetchersKeys.push(key);\n      }\n    });\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    } else {\n      // We already called deleteFetcher() on these, can remove them from this\n      // Set now that we've handed the keys off to the data layer\n      deletedFetchersKeys.forEach((key) => deletedFetchers.delete(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches =\n      opts?.initialHydration &&\n      state.matches &&\n      state.matches.length > 0 &&\n      !initialMatchesIsFOW\n        ? // `matchRoutes()` has already been called if we're in here via `router.initialize()`\n          state.matches\n        : matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      matches &&\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error: discoverResult.error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    abortFetcher(key);\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        abortFetcher(staleKey);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        new URL(fetchRequest.url).pathname,\n        fetchRequest.signal,\n        key\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset,\n        });\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n    // If this fetcher was previously marked for deletion, unmark it since we\n    // have a new instance\n    if (deletedFetchers.has(key)) {\n      deletedFetchers.delete(key);\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n\n    // If we opted into the flag we can clear this now since we're calling\n    // deleteFetcher() at the end of updateState() and we've already handed the\n    // deleted fetcher keys off to the data layer.\n    // If not, we're eagerly calling deleteFetcher() and we need to keep this\n    // Set populated until the next updateState call, and we'll clear\n    // `deletedFetchers` then\n    if (future.v7_fetcherPersist) {\n      deletedFetchers.delete(key);\n    }\n\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    let count = (activeFetchers.get(key) || 0) - 1;\n    if (count <= 0) {\n      activeFetchers.delete(key);\n      deletedFetchers.add(key);\n      if (!future.v7_fetcherPersist) {\n        deleteFetcher(key);\n      }\n    } else {\n      activeFetchers.set(key, count);\n    }\n\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal,\n    fetcherKey?: string\n  ): Promise<DiscoverRoutesResult> {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          signal,\n          path: pathname,\n          matches: partialMatches,\n          fetcherKey,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties\n            );\n          },\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search\n        ? path.search.replace(/^\\?/, \"?index&\")\n        : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string,\n  includeBoundary = false\n) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  initialHydration: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      initialHydration ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction shouldLoadRouteOnHydration(\n  route: AgnosticDataRouteObject,\n  loaderData: RouteData | null | undefined,\n  errors: RouteData | null | undefined\n) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  let childrenToPatch: AgnosticDataRouteObject[];\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(\n    (newRoute) =>\n      !childrenToPatch.some((existingRoute) =>\n        isSameRoute(newRoute, existingRoute)\n      )\n  );\n\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n\n  childrenToPatch.push(...newRoutes);\n}\n\nfunction isSameRoute(\n  newRoute: AgnosticRouteObject,\n  existingRoute: AgnosticRouteObject\n): boolean {\n  // Most optimal check is by id\n  if (\n    \"id\" in newRoute &&\n    \"id\" in existingRoute &&\n    newRoute.id === existingRoute.id\n  ) {\n    return true;\n  }\n\n  // Second is by pathing differences\n  if (\n    !(\n      newRoute.index === existingRoute.index &&\n      newRoute.path === existingRoute.path &&\n      newRoute.caseSensitive === existingRoute.caseSensitive\n    )\n  ) {\n    return false;\n  }\n\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if (\n    (!newRoute.children || newRoute.children.length === 0) &&\n    (!existingRoute.children || existingRoute.children.length === 0)\n  ) {\n    return true;\n  }\n\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children!.every((aChild, i) =>\n    existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n          headers: result.init?.headers\n            ? new Headers(result.init.headers)\n            : undefined,\n        };\n      }\n\n      // Convert thrown data() to ErrorResponse instances\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(\n          result.init?.status || 500,\n          undefined,\n          result.data\n        ),\n        statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n        headers: result.init?.headers\n          ? new Headers(result.init.headers)\n          : undefined,\n      };\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n  viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator, static: isStatic } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches =\n    !isStatic &&\n    dataRouterState &&\n    dataRouterState.matches &&\n    dataRouterState.matches.length > 0\n      ? (dataRouterState.matches as AgnosticRouteMatch<string, RouteObject>[])\n      : matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type { FutureConfig as RouterFutureConfig } from \"@remix-run/router\";\nimport type { FutureConfig as RenderFutureConfig } from \"./components\";\n\nconst alreadyWarned: { [key: string]: boolean } = {};\n\nexport function warnOnce(key: string, message: string): void {\n  if (__DEV__ && !alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\n\nconst logDeprecation = (flag: string, msg: string, link: string) =>\n  warnOnce(\n    flag,\n    `⚠️ React Router Future Flag Warning: ${msg}. ` +\n      `You can use the \\`${flag}\\` future flag to opt-in early. ` +\n      `For more information, see ${link}.`\n  );\n\nexport function logV6DeprecationWarnings(\n  renderFuture: Partial<RenderFutureConfig> | undefined,\n  routerFuture?: Omit<RouterFutureConfig, \"v7_prependBasename\">\n) {\n  if (renderFuture?.v7_startTransition === undefined) {\n    logDeprecation(\n      \"v7_startTransition\",\n      \"React Router will begin wrapping state updates in `React.startTransition` in v7\",\n      \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\"\n    );\n  }\n\n  if (\n    renderFuture?.v7_relativeSplatPath === undefined &&\n    (!routerFuture || !routerFuture.v7_relativeSplatPath)\n  ) {\n    logDeprecation(\n      \"v7_relativeSplatPath\",\n      \"Relative route resolution within Splat routes is changing in v7\",\n      \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\"\n    );\n  }\n\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\n        \"v7_fetcherPersist\",\n        \"The persistence behavior of fetchers is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\"\n      );\n    }\n\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\n        \"v7_normalizeFormMethod\",\n        \"Casing of `formMethod` fields is being normalized to uppercase in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\"\n      );\n    }\n\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\n        \"v7_partialHydration\",\n        \"`RouterProvider` hydration behavior is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\"\n      );\n    }\n\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\n        \"v7_skipActionErrorRevalidation\",\n        \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\"\n      );\n    }\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\nimport { logV6DeprecationWarnings } from \"./deprecations\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [router, future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_logV6DeprecationWarnings as logV6DeprecationWarnings,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [future, router.future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n","function stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexport default stylis_min;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n","import memoize from '@emotion/memoize';\n\n// eslint-disable-next-line no-undef\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|fetchpriority|fetchPriority|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport { isPropValid as default };\n","// @flow\nimport type { Interpolation } from '../types';\n\nexport default (\n  strings: Array<string>,\n  interpolations: Array<Interpolation>\n): Array<Interpolation> => {\n  const result = [strings[0]];\n\n  for (let i = 0, len = interpolations.length; i < len; i += 1) {\n    result.push(interpolations[i], strings[i + 1]);\n  }\n\n  return result;\n};\n","// @flow\nimport { typeOf } from 'react-is';\n\nexport default (x: any): boolean =>\n  x !== null &&\n  typeof x === 'object' &&\n  (x.toString ? x.toString() : Object.prototype.toString.call(x)) === '[object Object]' &&\n  !typeOf(x);\n","// @flow\nexport const EMPTY_ARRAY = Object.freeze([]);\nexport const EMPTY_OBJECT = Object.freeze({});\n","// @flow\nexport default function isFunction(test: any): boolean %checks {\n  return typeof test === 'function';\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function getComponentName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return (\n    (process.env.NODE_ENV !== 'production' ? typeof target === 'string' && target : false) ||\n    // $FlowFixMe\n    target.displayName ||\n    // $FlowFixMe\n    target.name ||\n    'Component'\n  );\n}\n","// @flow\nexport default function isStyledComponent(target: any): boolean %checks {\n  return target && typeof target.styledComponentId === 'string';\n}\n","// @flow\n\ndeclare var SC_DISABLE_SPEEDY: ?boolean;\ndeclare var __VERSION__: string;\n\nexport const SC_ATTR: string =\n  (typeof process !== 'undefined' &&\n    typeof process.env !== 'undefined' &&\n    (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) ||\n  'data-styled';\n\nexport const SC_ATTR_ACTIVE = 'active';\nexport const SC_ATTR_VERSION = 'data-styled-version';\nexport const SC_VERSION = __VERSION__;\nexport const SPLITTER = '/*!sc*/\\n';\n\nexport const IS_BROWSER = typeof window !== 'undefined' && 'HTMLElement' in window;\n\nexport const DISABLE_SPEEDY = Boolean(\n  typeof SC_DISABLE_SPEEDY === 'boolean'\n    ? SC_DISABLE_SPEEDY\n    : typeof process !== 'undefined' && typeof process.env !== 'undefined'\n    ? typeof process.env.REACT_APP_SC_DISABLE_SPEEDY !== 'undefined' &&\n      process.env.REACT_APP_SC_DISABLE_SPEEDY !== ''\n      ? process.env.REACT_APP_SC_DISABLE_SPEEDY === 'false'\n        ? false\n        : process.env.REACT_APP_SC_DISABLE_SPEEDY\n      : typeof process.env.SC_DISABLE_SPEEDY !== 'undefined' && process.env.SC_DISABLE_SPEEDY !== ''\n      ? process.env.SC_DISABLE_SPEEDY === 'false'\n        ? false\n        : process.env.SC_DISABLE_SPEEDY\n      : process.env.NODE_ENV !== 'production'\n    : false\n);\n\n// Shared empty execution context when generating static styles\nexport const STATIC_EXECUTION_CONTEXT = {};\n","// @flow\nimport errorMap from './errors';\n\nconst ERRORS = process.env.NODE_ENV !== 'production' ? errorMap : {};\n\n/**\n * super basic version of sprintf\n */\nfunction format(...args) {\n  let a = args[0];\n  const b = [];\n\n  for (let c = 1, len = args.length; c < len; c += 1) {\n    b.push(args[c]);\n  }\n\n  b.forEach(d => {\n    a = a.replace(/%[a-z]/, d);\n  });\n\n  return a;\n}\n\n/**\n * Create an error file out of errors.md for development and a simple web link to the full errors\n * in production mode.\n */\nexport default function throwStyledComponentsError(\n  code: string | number,\n  ...interpolations: Array<any>\n) {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      `An error occurred. See https://git.io/JUIaE#${code} for more information.${\n        interpolations.length > 0 ? ` Args: ${interpolations.join(', ')}` : ''\n      }`\n    );\n  } else {\n    throw new Error(format(ERRORS[code], ...interpolations).trim());\n  }\n}\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport type { GroupedTag, Tag } from './types';\nimport { SPLITTER } from '../constants';\nimport throwStyledError from '../utils/error';\n\n/** Create a GroupedTag with an underlying Tag implementation */\nexport const makeGroupedTag = (tag: Tag): GroupedTag => {\n  return new DefaultGroupedTag(tag);\n};\n\nconst BASE_SIZE = 1 << 9;\n\nclass DefaultGroupedTag implements GroupedTag {\n  groupSizes: Uint32Array;\n\n  length: number;\n\n  tag: Tag;\n\n  constructor(tag: Tag) {\n    this.groupSizes = new Uint32Array(BASE_SIZE);\n    this.length = BASE_SIZE;\n    this.tag = tag;\n  }\n\n  indexOfGroup(group: number): number {\n    let index = 0;\n    for (let i = 0; i < group; i++) {\n      index += this.groupSizes[i];\n    }\n\n    return index;\n  }\n\n  insertRules(group: number, rules: string[]): void {\n    if (group >= this.groupSizes.length) {\n      const oldBuffer = this.groupSizes;\n      const oldSize = oldBuffer.length;\n\n      let newSize = oldSize;\n      while (group >= newSize) {\n        newSize <<= 1;\n        if (newSize < 0) {\n          throwStyledError(16, `${group}`);\n        }\n      }\n\n      this.groupSizes = new Uint32Array(newSize);\n      this.groupSizes.set(oldBuffer);\n      this.length = newSize;\n\n      for (let i = oldSize; i < newSize; i++) {\n        this.groupSizes[i] = 0;\n      }\n    }\n\n    let ruleIndex = this.indexOfGroup(group + 1);\n    for (let i = 0, l = rules.length; i < l; i++) {\n      if (this.tag.insertRule(ruleIndex, rules[i])) {\n        this.groupSizes[group]++;\n        ruleIndex++;\n      }\n    }\n  }\n\n  clearGroup(group: number): void {\n    if (group < this.length) {\n      const length = this.groupSizes[group];\n      const startIndex = this.indexOfGroup(group);\n      const endIndex = startIndex + length;\n\n      this.groupSizes[group] = 0;\n\n      for (let i = startIndex; i < endIndex; i++) {\n        this.tag.deleteRule(startIndex);\n      }\n    }\n  }\n\n  getGroup(group: number): string {\n    let css = '';\n    if (group >= this.length || this.groupSizes[group] === 0) {\n      return css;\n    }\n\n    const length = this.groupSizes[group];\n    const startIndex = this.indexOfGroup(group);\n    const endIndex = startIndex + length;\n\n    for (let i = startIndex; i < endIndex; i++) {\n      css += `${this.tag.getRule(i)}${SPLITTER}`;\n    }\n\n    return css;\n  }\n}\n","// @flow\n\nimport throwStyledError from '../utils/error';\n\nconst MAX_SMI = 1 << 31 - 1;\n\nlet groupIDRegister: Map<string, number> = new Map();\nlet reverseRegister: Map<number, string> = new Map();\nlet nextFreeGroup = 1;\n\nexport const resetGroupIds = () => {\n  groupIDRegister = new Map();\n  reverseRegister = new Map();\n  nextFreeGroup = 1;\n};\n\nexport const getGroupForId = (id: string): number => {\n  if (groupIDRegister.has(id)) {\n    return (groupIDRegister.get(id): any);\n  }\n\n  while (reverseRegister.has(nextFreeGroup)) {\n    nextFreeGroup++;\n  }\n\n  const group = nextFreeGroup++;\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    ((group | 0) < 0 || group > MAX_SMI)\n  ) {\n    throwStyledError(16, `${group}`);\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n  return group;\n};\n\nexport const getIdForGroup = (group: number): void | string => {\n  return reverseRegister.get(group);\n};\n\nexport const setGroupForId = (id: string, group: number) => {\n  if (group >= nextFreeGroup) {\n    nextFreeGroup = group + 1;\n  }\n\n  groupIDRegister.set(id, group);\n  reverseRegister.set(group, id);\n};\n","// @flow\n\nimport { SPLITTER, SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport { getIdForGroup, setGroupForId } from './GroupIDAllocator';\nimport type { Sheet } from './types';\n\nconst SELECTOR = `style[${SC_ATTR}][${SC_ATTR_VERSION}=\"${SC_VERSION}\"]`;\nconst MARKER_RE = new RegExp(`^${SC_ATTR}\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)`);\n\nexport const outputSheet = (sheet: Sheet) => {\n  const tag = sheet.getTag();\n  const { length } = tag;\n\n  let css = '';\n  for (let group = 0; group < length; group++) {\n    const id = getIdForGroup(group);\n    if (id === undefined) continue;\n\n    const names = sheet.names.get(id);\n    const rules = tag.getGroup(group);\n    if (!names || !rules || !names.size) continue;\n\n    const selector = `${SC_ATTR}.g${group}[id=\"${id}\"]`;\n\n    let content = '';\n    if (names !== undefined) {\n      names.forEach(name => {\n        if (name.length > 0) {\n          content += `${name},`;\n        }\n      });\n    }\n\n    // NOTE: It's easier to collect rules and have the marker\n    // after the actual rules to simplify the rehydration\n    css += `${rules}${selector}{content:\"${content}\"}${SPLITTER}`;\n  }\n\n  return css;\n};\n\nconst rehydrateNamesFromContent = (sheet: Sheet, id: string, content: string) => {\n  const names = content.split(',');\n  let name;\n\n  for (let i = 0, l = names.length; i < l; i++) {\n    // eslint-disable-next-line\n    if ((name = names[i])) {\n      sheet.registerName(id, name);\n    }\n  }\n};\n\nconst rehydrateSheetFromTag = (sheet: Sheet, style: HTMLStyleElement) => {\n  const parts = (style.textContent || '').split(SPLITTER);\n  const rules: string[] = [];\n\n  for (let i = 0, l = parts.length; i < l; i++) {\n    const part = parts[i].trim();\n    if (!part) continue;\n\n    const marker = part.match(MARKER_RE);\n\n    if (marker) {\n      const group = parseInt(marker[1], 10) | 0;\n      const id = marker[2];\n\n      if (group !== 0) {\n        // Rehydrate componentId to group index mapping\n        setGroupForId(id, group);\n        // Rehydrate names and rules\n        // looks like: data-styled.g11[id=\"idA\"]{content:\"nameA,\"}\n        rehydrateNamesFromContent(sheet, id, marker[3]);\n        sheet.getTag().insertRules(group, rules);\n      }\n\n      rules.length = 0;\n    } else {\n      rules.push(part);\n    }\n  }\n};\n\nexport const rehydrateSheet = (sheet: Sheet) => {\n  const nodes = document.querySelectorAll(SELECTOR);\n\n  for (let i = 0, l = nodes.length; i < l; i++) {\n    const node = ((nodes[i]: any): HTMLStyleElement);\n    if (node && node.getAttribute(SC_ATTR) !== SC_ATTR_ACTIVE) {\n      rehydrateSheetFromTag(sheet, node);\n\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }\n};\n","// @flow\n/* eslint-disable camelcase, no-undef */\n\ndeclare var __webpack_nonce__: string;\n\nconst getNonce = () => {\n  return typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n};\n\nexport default getNonce;\n","// @flow\n\nimport { SC_ATTR, SC_ATTR_ACTIVE, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport getNonce from '../utils/nonce';\nimport throwStyledError from '../utils/error';\n\nconst ELEMENT_TYPE = 1; /* Node.ELEMENT_TYPE */\n\n/** Find last style element if any inside target */\nconst findLastStyleTag = (target: HTMLElement): void | HTMLStyleElement => {\n  const { childNodes } = target;\n\n  for (let i = childNodes.length; i >= 0; i--) {\n    const child = ((childNodes[i]: any): ?HTMLElement);\n    if (child && child.nodeType === ELEMENT_TYPE && child.hasAttribute(SC_ATTR)) {\n      return ((child: any): HTMLStyleElement);\n    }\n  }\n\n  return undefined;\n};\n\n/** Create a style element inside `target` or <head> after the last */\nexport const makeStyleTag = (target?: HTMLElement): HTMLStyleElement => {\n  const head = ((document.head: any): HTMLElement);\n  const parent = target || head;\n  const style = document.createElement('style');\n  const prevStyle = findLastStyleTag(parent);\n  const nextSibling = prevStyle !== undefined ? prevStyle.nextSibling : null;\n\n  style.setAttribute(SC_ATTR, SC_ATTR_ACTIVE);\n  style.setAttribute(SC_ATTR_VERSION, SC_VERSION);\n\n  const nonce = getNonce();\n\n  if (nonce) style.setAttribute('nonce', nonce);\n\n  parent.insertBefore(style, nextSibling);\n\n  return style;\n};\n\n/** Get the CSSStyleSheet instance for a given style element */\nexport const getSheet = (tag: HTMLStyleElement): CSSStyleSheet => {\n  if (tag.sheet) {\n    return ((tag.sheet: any): CSSStyleSheet);\n  }\n\n  // Avoid Firefox quirk where the style element might not have a sheet property\n  const { styleSheets } = document;\n  for (let i = 0, l = styleSheets.length; i < l; i++) {\n    const sheet = styleSheets[i];\n    if (sheet.ownerNode === tag) {\n      return ((sheet: any): CSSStyleSheet);\n    }\n  }\n\n  throwStyledError(17);\n  return (undefined: any);\n};\n","// @flow\n/* eslint-disable no-use-before-define */\n\nimport { makeStyleTag, getSheet } from './dom';\nimport type { SheetOptions, Tag } from './types';\n\n/** Create a CSSStyleSheet-like tag depending on the environment */\nexport const makeTag = ({ isServer, useCSSOMInjection, target }: SheetOptions): Tag => {\n  if (isServer) {\n    return new VirtualTag(target);\n  } else if (useCSSOMInjection) {\n    return new CSSOMTag(target);\n  } else {\n    return new TextTag(target);\n  }\n};\n\nexport class CSSOMTag implements Tag {\n  element: HTMLStyleElement;\n\n  sheet: CSSStyleSheet;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n\n    // Avoid Edge bug where empty style elements don't create sheets\n    element.appendChild(document.createTextNode(''));\n\n    this.sheet = getSheet(element);\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    try {\n      this.sheet.insertRule(rule, index);\n      this.length++;\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.sheet.deleteRule(index);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    const rule = this.sheet.cssRules[index];\n    // Avoid IE11 quirk where cssText is inaccessible on some invalid rules\n    if (rule !== undefined && typeof rule.cssText === 'string') {\n      return rule.cssText;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A Tag that emulates the CSSStyleSheet API but uses text nodes */\nexport class TextTag implements Tag {\n  element: HTMLStyleElement;\n\n  nodes: NodeList<Node>;\n\n  length: number;\n\n  constructor(target?: HTMLElement) {\n    const element = (this.element = makeStyleTag(target));\n    this.nodes = element.childNodes;\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length && index >= 0) {\n      const node = document.createTextNode(rule);\n      const refNode = this.nodes[index];\n      this.element.insertBefore(node, refNode || null);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.element.removeChild(this.nodes[index]);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.nodes[index].textContent;\n    } else {\n      return '';\n    }\n  }\n}\n\n/** A completely virtual (server-side) Tag that doesn't manipulate the DOM */\nexport class VirtualTag implements Tag {\n  rules: string[];\n\n  length: number;\n\n  constructor(_target?: HTMLElement) {\n    this.rules = [];\n    this.length = 0;\n  }\n\n  insertRule(index: number, rule: string): boolean {\n    if (index <= this.length) {\n      this.rules.splice(index, 0, rule);\n      this.length++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteRule(index: number): void {\n    this.rules.splice(index, 1);\n    this.length--;\n  }\n\n  getRule(index: number): string {\n    if (index < this.length) {\n      return this.rules[index];\n    } else {\n      return '';\n    }\n  }\n}\n","// @flow\nimport { DISABLE_SPEEDY, IS_BROWSER } from '../constants';\nimport { EMPTY_OBJECT } from '../utils/empties';\nimport { makeGroupedTag } from './GroupedTag';\nimport { getGroupForId } from './GroupIDAllocator';\nimport { outputSheet, rehydrateSheet } from './Rehydration';\nimport { makeTag } from './Tag';\nimport type { GroupedTag, Sheet, SheetOptions } from './types';\n\nlet SHOULD_REHYDRATE = IS_BROWSER;\n\ntype SheetConstructorArgs = {\n  isServer?: boolean,\n  useCSSOMInjection?: boolean,\n  target?: HTMLElement,\n};\n\ntype GlobalStylesAllocationMap = { [key: string]: number };\ntype NamesAllocationMap = Map<string, Set<string>>;\n\nconst defaultOptions: SheetOptions = {\n  isServer: !IS_BROWSER,\n  useCSSOMInjection: !DISABLE_SPEEDY,\n};\n\n/** Contains the main stylesheet logic for stringification and caching */\nexport default class StyleSheet implements Sheet {\n  gs: GlobalStylesAllocationMap;\n\n  names: NamesAllocationMap;\n\n  options: SheetOptions;\n\n  server: boolean;\n\n  tag: void | GroupedTag;\n\n  /** Register a group ID to give it an index */\n  static registerId(id: string): number {\n    return getGroupForId(id);\n  }\n\n  constructor(\n    options: SheetConstructorArgs = EMPTY_OBJECT,\n    globalStyles?: GlobalStylesAllocationMap = {},\n    names?: NamesAllocationMap\n  ) {\n    this.options = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    this.gs = globalStyles;\n    this.names = new Map(names);\n    this.server = !!options.isServer;\n\n    // We rehydrate only once and use the sheet that is created first\n    if (!this.server && IS_BROWSER && SHOULD_REHYDRATE) {\n      SHOULD_REHYDRATE = false;\n      rehydrateSheet(this);\n    }\n  }\n\n  reconstructWithOptions(options: SheetConstructorArgs, withNames?: boolean = true) {\n    return new StyleSheet(\n      { ...this.options, ...options },\n      this.gs,\n      (withNames && this.names) || undefined\n    );\n  }\n\n  allocateGSInstance(id: string) {\n    return (this.gs[id] = (this.gs[id] || 0) + 1);\n  }\n\n  /** Lazily initialises a GroupedTag for when it's actually needed */\n  getTag(): GroupedTag {\n    return this.tag || (this.tag = makeGroupedTag(makeTag(this.options)));\n  }\n\n  /** Check whether a name is known for caching */\n  hasNameForId(id: string, name: string): boolean {\n    return this.names.has(id) && (this.names.get(id): any).has(name);\n  }\n\n  /** Mark a group's name as known for caching */\n  registerName(id: string, name: string) {\n    getGroupForId(id);\n\n    if (!this.names.has(id)) {\n      const groupNames = new Set();\n      groupNames.add(name);\n      this.names.set(id, groupNames);\n    } else {\n      (this.names.get(id): any).add(name);\n    }\n  }\n\n  /** Insert new rules which also marks the name as known */\n  insertRules(id: string, name: string, rules: string[]) {\n    this.registerName(id, name);\n    this.getTag().insertRules(getGroupForId(id), rules);\n  }\n\n  /** Clears all cached names for a given group ID */\n  clearNames(id: string) {\n    if (this.names.has(id)) {\n      (this.names.get(id): any).clear();\n    }\n  }\n\n  /** Clears all rules for a given group ID */\n  clearRules(id: string) {\n    this.getTag().clearGroup(getGroupForId(id));\n    this.clearNames(id);\n  }\n\n  /** Clears the entire tag which deletes all rules but not its names */\n  clearTag() {\n    // NOTE: This does not clear the names, since it's only used during SSR\n    // so that we can continuously output only new rules\n    this.tag = undefined;\n  }\n\n  /** Outputs the current sheet as a CSS string with markers for SSR */\n  toString(): string {\n    return outputSheet(this);\n  }\n}\n","// @flow\n/* eslint-disable no-bitwise */\n\nconst AD_REPLACER_R = /(a)(d)/gi;\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nconst charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nconst getAlphabeticChar = (code: number): string =>\n  String.fromCharCode(code + (code > 25 ? 39 : 97));\n\n/* input a number, usually a hash and convert it to base-52 */\nexport default function generateAlphabeticName(code: number): string {\n  let name = '';\n  let x;\n\n  /* get a char and divide by alphabet-length */\n  for (x = Math.abs(code); x > charsLength; x = (x / charsLength) | 0) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');\n}\n","// @flow\n/* eslint-disable */\n\nexport const SEED = 5381;\n\n// When we have separate strings it's useful to run a progressive\n// version of djb2 where we pretend that we're still looping over\n// the same string\nexport const phash = (h: number, x: string): number => {\n  let i = x.length;\n\n  while (i) {\n    h = (h * 33) ^ x.charCodeAt(--i);\n  }\n\n  return h;\n};\n\n// This is a djb2 hashing function\nexport const hash = (x: string): number => {\n  return phash(SEED, x);\n};\n","// @flow\nimport isFunction from './isFunction';\nimport isStyledComponent from './isStyledComponent';\nimport type { RuleSet } from '../types';\n\nexport default function isStaticRules(rules: RuleSet): boolean {\n  for (let i = 0; i < rules.length; i += 1) {\n    const rule = rules[i];\n\n    if (isFunction(rule) && !isStyledComponent(rule)) {\n      // functions are allowed to be static if they're just being\n      // used to get the classname of a nested styled component\n      return false;\n    }\n  }\n\n  return true;\n}\n","// @flow\nimport { SC_VERSION } from '../constants';\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport generateName from '../utils/generateAlphabeticName';\nimport { hash, phash } from '../utils/hash';\nimport isStaticRules from '../utils/isStaticRules';\n\nconst SEED = hash(SC_VERSION);\n\n/**\n * ComponentStyle is all the CSS-specific stuff, not the React-specific stuff.\n */\nexport default class ComponentStyle {\n  baseHash: number;\n\n  baseStyle: ?ComponentStyle;\n\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  staticRulesId: string;\n\n  constructor(rules: RuleSet, componentId: string, baseStyle?: ComponentStyle) {\n    this.rules = rules;\n    this.staticRulesId = '';\n    this.isStatic = process.env.NODE_ENV === 'production' &&\n      (baseStyle === undefined || baseStyle.isStatic) &&\n      isStaticRules(rules);\n    this.componentId = componentId;\n\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    this.baseHash = phash(SEED, componentId);\n\n    this.baseStyle = baseStyle;\n\n    // NOTE: This registers the componentId, which ensures a consistent order\n    // for this component's styles compared to others\n    StyleSheet.registerId(componentId);\n  }\n\n  /*\n   * Flattens a rule set into valid CSS\n   * Hashes it, wraps the whole chunk in a .hash1234 {}\n   * Returns the hash to be injected on render()\n   * */\n  generateAndInjectStyles(executionContext: Object, styleSheet: StyleSheet, stylis: Stringifier) {\n    const { componentId } = this;\n\n    const names = [];\n\n    if (this.baseStyle) {\n      names.push(this.baseStyle.generateAndInjectStyles(executionContext, styleSheet, stylis));\n    }\n\n    // force dynamic classnames if user-supplied stylis plugins are in use\n    if (this.isStatic && !stylis.hash) {\n      if (this.staticRulesId && styleSheet.hasNameForId(componentId, this.staticRulesId)) {\n        names.push(this.staticRulesId);\n      } else {\n        const cssStatic = flatten(this.rules, executionContext, styleSheet, stylis).join('');\n        const name = generateName(phash(this.baseHash, cssStatic) >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssStaticFormatted = stylis(cssStatic, `.${name}`, undefined, componentId);\n\n          styleSheet.insertRules(componentId, name, cssStaticFormatted);\n        }\n\n        names.push(name);\n        this.staticRulesId = name;\n      }\n    } else {\n      const { length } = this.rules;\n      let dynamicHash = phash(this.baseHash, stylis.hash);\n      let css = '';\n\n      for (let i = 0; i < length; i++) {\n        const partRule = this.rules[i];\n\n        if (typeof partRule === 'string') {\n          css += partRule;\n\n          if (process.env.NODE_ENV !== 'production') dynamicHash = phash(dynamicHash, partRule + i);\n        } else if (partRule) {\n          const partChunk = flatten(partRule, executionContext, styleSheet, stylis);\n          const partString = Array.isArray(partChunk) ? partChunk.join('') : partChunk;\n          dynamicHash = phash(dynamicHash, partString + i);\n          css += partString;\n        }\n      }\n\n      if (css) {\n        const name = generateName(dynamicHash >>> 0);\n\n        if (!styleSheet.hasNameForId(componentId, name)) {\n          const cssFormatted = stylis(css, `.${name}`, undefined, componentId);\n          styleSheet.insertRules(componentId, name, cssFormatted);\n        }\n\n        names.push(name);\n      }\n    }\n\n    return names.join(' ');\n  }\n}\n","import Stylis from '@emotion/stylis';\nimport { type Stringifier } from '../types';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from './empties';\nimport throwStyledError from './error';\nimport { phash, SEED } from './hash';\nimport insertRulePlugin from './stylisPluginInsertRule';\n\nconst COMMENT_REGEX = /^\\s*\\/\\/.*$/gm;\nconst COMPLEX_SELECTOR_PREFIX = [':', '[', '.', '#'];\n\ntype StylisInstanceConstructorArgs = {\n  options?: Object,\n  plugins?: Array<Function>,\n};\n\nexport default function createStylisInstance({\n  options = EMPTY_OBJECT,\n  plugins = EMPTY_ARRAY,\n}: StylisInstanceConstructorArgs = EMPTY_OBJECT) {\n  const stylis = new Stylis(options);\n\n  // Wrap `insertRulePlugin to build a list of rules,\n  // and then make our own plugin to return the rules. This\n  // makes it easier to hook into the existing SSR architecture\n\n  let parsingRules = [];\n\n  // eslint-disable-next-line consistent-return\n  const returnRulesPlugin = context => {\n    if (context === -2) {\n      const parsedRules = parsingRules;\n      parsingRules = [];\n      return parsedRules;\n    }\n  };\n\n  const parseRulesPlugin = insertRulePlugin(rule => {\n    parsingRules.push(rule);\n  });\n\n  let _componentId: string;\n  let _selector: string;\n  let _selectorRegexp: RegExp;\n  let _consecutiveSelfRefRegExp: RegExp;\n\n  const selfReferenceReplacer = (match, offset, string) => {\n    if (\n      // do not replace the first occurrence if it is complex (has a modifier)\n      (offset === 0 ? COMPLEX_SELECTOR_PREFIX.indexOf(string[_selector.length]) === -1 : true) &&\n      // no consecutive self refs (.b.b); that is a precedence boost and treated differently\n      !string.match(_consecutiveSelfRefRegExp)\n    ) {\n      return `.${_componentId}`;\n    }\n\n    return match;\n  };\n\n  /**\n   * When writing a style like\n   *\n   * & + & {\n   *   color: red;\n   * }\n   *\n   * The second ampersand should be a reference to the static component class. stylis\n   * has no knowledge of static class so we have to intelligently replace the base selector.\n   *\n   * https://github.com/thysultan/stylis.js/tree/v3.5.4#plugins <- more info about the context phase values\n   * \"2\" means this plugin is taking effect at the very end after all other processing is complete\n   */\n  const selfReferenceReplacementPlugin = (context, _, selectors) => {\n    if (context === 2 && selectors.length && selectors[0].lastIndexOf(_selector) > 0) {\n      // eslint-disable-next-line no-param-reassign\n      selectors[0] = selectors[0].replace(_selectorRegexp, selfReferenceReplacer);\n    }\n  };\n\n  stylis.use([...plugins, selfReferenceReplacementPlugin, parseRulesPlugin, returnRulesPlugin]);\n\n  function stringifyRules(css, selector, prefix, componentId = '&'): Stringifier {\n    const flatCSS = css.replace(COMMENT_REGEX, '');\n    const cssStr = selector && prefix ? `${prefix} ${selector} { ${flatCSS} }` : flatCSS;\n\n    // stylis has no concept of state to be passed to plugins\n    // but since JS is single-threaded, we can rely on that to ensure\n    // these properties stay in sync with the current stylis run\n    _componentId = componentId;\n    _selector = selector;\n    _selectorRegexp = new RegExp(`\\\\${_selector}\\\\b`, 'g');\n    _consecutiveSelfRefRegExp = new RegExp(`(\\\\${_selector}\\\\b){2,}`);\n\n    return stylis(prefix || !selector ? '' : selector, cssStr);\n  }\n\n  stringifyRules.hash = plugins.length\n    ? plugins\n        .reduce((acc, plugin) => {\n          if (!plugin.name) {\n            throwStyledError(15);\n          }\n\n          return phash(acc, plugin.name);\n        }, SEED)\n        .toString()\n    : '';\n\n  return stringifyRules;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2016 Sultan Tarimo\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/* eslint-disable */\n\nexport default function(insertRule) {\n  const delimiter = '/*|*/';\n  const needle = `${delimiter}}`;\n\n  function toSheet(block) {\n    if (block) {\n      try {\n        insertRule(`${block}}`);\n      } catch (e) {}\n    }\n  }\n\n  return function ruleSheet(\n    context,\n    content,\n    selectors,\n    parents,\n    line,\n    column,\n    length,\n    ns,\n    depth,\n    at\n  ) {\n    switch (context) {\n      // property\n      case 1:\n        // @import\n        if (depth === 0 && content.charCodeAt(0) === 64) return insertRule(`${content};`), '';\n        break;\n      // selector\n      case 2:\n        if (ns === 0) return content + delimiter;\n        break;\n      // at-rule\n      case 3:\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            return insertRule(selectors[0] + content), '';\n          default:\n            return content + (at === 0 ? delimiter : '');\n        }\n      case -2:\n        content.split(needle).forEach(toSheet);\n    }\n  };\n}\n","// @flow\nimport React, { type Context, type Node, useContext, useEffect, useMemo, useState } from 'react';\nimport shallowequal from 'shallowequal';\nimport StyleSheet from '../sheet';\nimport type { Stringifier } from '../types';\nimport createStylisInstance from '../utils/stylis';\n\ntype Props = {\n  children?: Node,\n  disableCSSOMInjection?: boolean,\n  disableVendorPrefixes?: boolean,\n  sheet?: StyleSheet,\n  stylisPlugins?: Array<Function>,\n  target?: HTMLElement,\n};\n\nexport const StyleSheetContext: Context<StyleSheet | void> = React.createContext();\nexport const StyleSheetConsumer = StyleSheetContext.Consumer;\nexport const StylisContext: Context<Stringifier | void> = React.createContext();\nexport const StylisConsumer = StylisContext.Consumer;\n\nexport const masterSheet: StyleSheet = new StyleSheet();\nexport const masterStylis: Stringifier = createStylisInstance();\n\nexport function useStyleSheet(): StyleSheet {\n  return useContext(StyleSheetContext) || masterSheet;\n}\n\nexport function useStylis(): Stringifier {\n  return useContext(StylisContext) || masterStylis;\n}\n\nexport default function StyleSheetManager(props: Props) {\n  const [plugins, setPlugins] = useState(props.stylisPlugins);\n  const contextStyleSheet = useStyleSheet();\n\n  const styleSheet = useMemo(() => {\n    let sheet = contextStyleSheet;\n\n    if (props.sheet) {\n      // eslint-disable-next-line prefer-destructuring\n      sheet = props.sheet;\n    } else if (props.target) {\n      sheet = sheet.reconstructWithOptions({ target: props.target }, false);\n    }\n\n    if (props.disableCSSOMInjection) {\n      sheet = sheet.reconstructWithOptions({ useCSSOMInjection: false });\n    }\n\n    return sheet;\n  }, [props.disableCSSOMInjection, props.sheet, props.target]);\n\n  const stylis = useMemo(\n    () =>\n      createStylisInstance({\n        options: { prefix: !props.disableVendorPrefixes },\n        plugins,\n      }),\n    [props.disableVendorPrefixes, plugins]\n  );\n\n  useEffect(() => {\n    if (!shallowequal(plugins, props.stylisPlugins)) setPlugins(props.stylisPlugins);\n  }, [props.stylisPlugins]);\n\n  return (\n    <StyleSheetContext.Provider value={styleSheet}>\n      <StylisContext.Provider value={stylis}>\n        {process.env.NODE_ENV !== 'production'\n          ? React.Children.only(props.children)\n          : props.children}\n      </StylisContext.Provider>\n    </StyleSheetContext.Provider>\n  );\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport { type Stringifier } from '../types';\nimport throwStyledError from '../utils/error';\nimport { masterStylis } from './StyleSheetManager';\n\nexport default class Keyframes {\n  id: string;\n\n  name: string;\n\n  rules: string;\n\n  constructor(name: string, rules: string) {\n    this.name = name;\n    this.id = `sc-keyframes-${name}`;\n    this.rules = rules;\n  }\n\n  inject = (styleSheet: StyleSheet, stylisInstance: Stringifier = masterStylis) => {\n    const resolvedName = this.name + stylisInstance.hash;\n\n    if (!styleSheet.hasNameForId(this.id, resolvedName)) {\n      styleSheet.insertRules(\n        this.id,\n        resolvedName,\n        stylisInstance(this.rules, resolvedName, '@keyframes')\n      );\n    }\n  };\n\n  toString = () => {\n    return throwStyledError(12, String(this.name));\n  };\n\n  getName(stylisInstance: Stringifier = masterStylis) {\n    return this.name + stylisInstance.hash;\n  }\n}\n","// @flow\n\n/**\n * inlined version of\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/hyphenateStyleName.js\n */\n\nconst uppercaseCheck = /([A-Z])/;\nconst uppercasePattern = /([A-Z])/g;\nconst msPattern = /^ms-/;\nconst prefixAndLowerCase = (char: string): string => `-${char.toLowerCase()}`;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nexport default function hyphenateStyleName(string: string): string {\n  return uppercaseCheck.test(string)\n  ? string\n    .replace(uppercasePattern, prefixAndLowerCase)\n    .replace(msPattern, '-ms-')\n  : string;\n}\n","// @flow\nimport { isElement } from 'react-is';\nimport getComponentName from './getComponentName';\nimport isFunction from './isFunction';\nimport isStatelessFunction from './isStatelessFunction';\nimport isPlainObject from './isPlainObject';\nimport isStyledComponent from './isStyledComponent';\nimport Keyframes from '../models/Keyframes';\nimport hyphenate from './hyphenateStyleName';\nimport addUnitIfNeeded from './addUnitIfNeeded';\nimport { type Stringifier } from '../types';\n\n/**\n * It's falsish not falsy because 0 is allowed.\n */\nconst isFalsish = chunk => chunk === undefined || chunk === null || chunk === false || chunk === '';\n\nexport const objToCssArray = (obj: Object, prevKey?: string): Array<string | Function> => {\n  const rules = [];\n\n  for (const key in obj) {\n    if (!obj.hasOwnProperty(key) || isFalsish(obj[key])) continue;\n\n    if ((Array.isArray(obj[key]) && obj[key].isCss) || isFunction(obj[key])) {\n      rules.push(`${hyphenate(key)}:`, obj[key], ';');\n    } else if (isPlainObject(obj[key])) {\n      rules.push(...objToCssArray(obj[key], key));\n    } else {\n      rules.push(`${hyphenate(key)}: ${addUnitIfNeeded(key, obj[key])};`);\n    }\n  }\n\n  return prevKey ? [`${prevKey} {`, ...rules, '}'] : rules;\n};\n\nexport default function flatten(\n  chunk: any,\n  executionContext: ?Object,\n  styleSheet: ?Object,\n  stylisInstance: ?Stringifier\n): any {\n  if (Array.isArray(chunk)) {\n    const ruleSet = [];\n\n    for (let i = 0, len = chunk.length, result; i < len; i += 1) {\n      result = flatten(chunk[i], executionContext, styleSheet, stylisInstance);\n\n      if (result === '') continue;\n      else if (Array.isArray(result)) ruleSet.push(...result);\n      else ruleSet.push(result);\n    }\n\n    return ruleSet;\n  }\n\n  if (isFalsish(chunk)) {\n    return '';\n  }\n\n  /* Handle other components */\n  if (isStyledComponent(chunk)) {\n    return `.${chunk.styledComponentId}`;\n  }\n\n  /* Either execute or defer the function */\n  if (isFunction(chunk)) {\n    if (isStatelessFunction(chunk) && executionContext) {\n      const result = chunk(executionContext);\n\n      if (process.env.NODE_ENV !== 'production' && isElement(result)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `${getComponentName(\n            chunk\n          )} is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.`\n        );\n      }\n\n      return flatten(result, executionContext, styleSheet, stylisInstance);\n    } else return chunk;\n  }\n\n  if (chunk instanceof Keyframes) {\n    if (styleSheet) {\n      chunk.inject(styleSheet, stylisInstance);\n      return chunk.getName(stylisInstance);\n    } else return chunk;\n  }\n\n  /* Handle objects */\n  return isPlainObject(chunk) ? objToCssArray(chunk) : chunk.toString();\n}\n","// @flow\nexport default function isStatelessFunction(test: any): boolean {\n  return (\n    typeof test === 'function'\n    && !(\n      test.prototype\n      && test.prototype.isReactComponent\n    )\n  );\n}\n","// @flow\nimport unitless from '@emotion/unitless';\n\n// Taken from https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/shared/dangerousStyleValue.js\nexport default function addUnitIfNeeded(name: string, value: any): any {\n  // https://github.com/amilajack/eslint-plugin-flowtype-errors/issues/133\n  // $FlowFixMe\n  if (value == null || typeof value === 'boolean' || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'number' && value !== 0 && !(name in unitless) && !name.startsWith('--')) {\n    return `${value}px`; // Presumes implicit 'px' suffix for unitless numbers except for CSS variables\n  }\n\n  return String(value).trim();\n}\n","// @flow\nimport interleave from '../utils/interleave';\nimport isPlainObject from '../utils/isPlainObject';\nimport { EMPTY_ARRAY } from '../utils/empties';\nimport isFunction from '../utils/isFunction';\nimport flatten from '../utils/flatten';\nimport type { Interpolation, RuleSet, Styles } from '../types';\n\n/**\n * Used when flattening object styles to determine if we should\n * expand an array of styles.\n */\nconst addTag = arg => {\n  if (Array.isArray(arg)) {\n    // eslint-disable-next-line no-param-reassign\n    arg.isCss = true;\n  }\n  return arg;\n};\n\nexport default function css(styles: Styles, ...interpolations: Array<Interpolation>): RuleSet {\n  if (isFunction(styles) || isPlainObject(styles)) {\n    // $FlowFixMe\n    return addTag(flatten(interleave(EMPTY_ARRAY, [styles, ...interpolations])));\n  }\n\n  if (interpolations.length === 0 && styles.length === 1 && typeof styles[0] === 'string') {\n    // $FlowFixMe\n    return styles;\n  }\n\n  // $FlowFixMe\n  return addTag(flatten(interleave(styles, interpolations)));\n}\n","// @flow\n\nimport { useRef } from 'react';\n\nconst invalidHookCallRe = /invalid hook call/i;\nconst seen = new Set();\n\nexport const checkDynamicCreation = (displayName: string, componentId?: string) => {\n  if (process.env.NODE_ENV !== 'production') {\n    const parsedIdString = componentId ? ` with the id of \"${componentId}\"` : '';\n    const message =\n      `The component ${displayName}${parsedIdString} has been created dynamically.\\n` +\n      \"You may see this warning because you've called styled inside another component.\\n\" +\n      'To resolve this only create new StyledComponents outside of any render method and function component.';\n\n    // If a hook is called outside of a component:\n    // React 17 and earlier throw an error\n    // React 18 and above use console.error\n\n    const originalConsoleError = console.error // eslint-disable-line no-console\n    try {\n      let didNotCallInvalidHook = true\n      /* $FlowIgnore[cannot-write] */\n      console.error = (consoleErrorMessage, ...consoleErrorArgs) => { // eslint-disable-line no-console\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n        if (invalidHookCallRe.test(consoleErrorMessage)) {\n          didNotCallInvalidHook = false\n          // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n          seen.delete(message);\n        } else {\n          originalConsoleError(consoleErrorMessage, ...consoleErrorArgs);\n        }\n      }\n      // We purposefully call `useRef` outside of a component and expect it to throw\n      // If it doesn't, then we're inside another component.\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRef();\n\n      if (didNotCallInvalidHook && !seen.has(message)) {\n        // eslint-disable-next-line no-console\n        console.warn(message);\n        seen.add(message);\n      }\n    } catch (error) {\n      // The error here is expected, since we're expecting anything that uses `checkDynamicCreation` to\n      // be called outside of a React component.\n      if (invalidHookCallRe.test(error.message)) {\n        // This shouldn't happen, but resets `warningSeen` if we had this error happen intermittently\n        seen.delete(message);\n      }\n    } finally {\n      /* $FlowIgnore[cannot-write] */\n      console.error = originalConsoleError; // eslint-disable-line no-console\n    }\n  }\n};\n","// @flow\nimport { EMPTY_OBJECT } from './empties';\n\ntype Props = {\n  theme?: any,\n};\n\nexport default (props: Props, providedTheme: any, defaultProps: any = EMPTY_OBJECT) => {\n  return (props.theme !== defaultProps.theme && props.theme) || providedTheme || defaultProps.theme;\n};\n","// @flow\n\n// Source: https://www.w3.org/TR/cssom-1/#serialize-an-identifier\n// Control characters and non-letter first symbols are not supported\nconst escapeRegex = /[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g;\n\nconst dashesAtEnds = /(^-|-$)/g;\n\n/**\n * TODO: Explore using CSS.escape when it becomes more available\n * in evergreen browsers.\n */\nexport default function escape(str: string): string {\n  return (\n    str\n      // Replace all possible CSS selectors\n      .replace(escapeRegex, '-')\n\n      // Remove extraneous hyphens at the start and end\n      .replace(dashesAtEnds, '')\n  );\n}\n","// @flow\n/* eslint-disable */\nimport generateAlphabeticName from './generateAlphabeticName';\nimport { hash } from './hash';\n\nexport default (str: string): string => {\n  return generateAlphabeticName(hash(str) >>> 0);\n};\n","// @flow\nimport type { IStyledComponent } from '../types';\n\nexport default function isTag(target: $PropertyType<IStyledComponent, 'target'>): boolean %checks {\n  return (\n    typeof target === 'string' &&\n    (process.env.NODE_ENV !== 'production'\n      ? target.charAt(0) === target.charAt(0).toLowerCase()\n      : true)\n  );\n}\n","/* eslint-disable */\n/**\n  mixin-deep; https://github.com/jonschlinkert/mixin-deep\n  Inlined such that it will be consistently transpiled to an IE-compatible syntax.\n\n  The MIT License (MIT)\n\n  Copyright (c) 2014-present, Jon Schlinkert.\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nconst isObject = val => {\n  return (\n    typeof val === 'function' || (typeof val === 'object' && val !== null && !Array.isArray(val))\n  );\n};\n\nconst isValidKey = key => {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n};\n\nfunction mixin(target, val, key) {\n  const obj = target[key];\n  if (isObject(val) && isObject(obj)) {\n    mixinDeep(obj, val);\n  } else {\n    target[key] = val;\n  }\n}\n\nexport default function mixinDeep(target, ...rest) {\n  for (const obj of rest) {\n    if (isObject(obj)) {\n      for (const key in obj) {\n        if (isValidKey(key)) {\n          mixin(target, obj[key], key);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n","// @flow\nimport React, { useContext, useMemo, type Element, type Context } from 'react';\nimport throwStyledError from '../utils/error';\nimport isFunction from '../utils/isFunction';\n\nexport type Theme = { [key: string]: mixed };\n\ntype ThemeArgument = Theme | ((outerTheme?: Theme) => Theme);\n\ntype Props = {\n  children?: Element<any>,\n  theme: ThemeArgument,\n};\n\nexport const ThemeContext: Context<Theme | void> = React.createContext();\n\nexport const ThemeConsumer = ThemeContext.Consumer;\n\nfunction mergeTheme(theme: ThemeArgument, outerTheme?: Theme): Theme {\n  if (!theme) {\n    return throwStyledError(14);\n  }\n\n  if (isFunction(theme)) {\n    const mergedTheme = theme(outerTheme);\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      (mergedTheme === null || Array.isArray(mergedTheme) || typeof mergedTheme !== 'object')\n    ) {\n      return throwStyledError(7);\n    }\n\n    return mergedTheme;\n  }\n\n  if (Array.isArray(theme) || typeof theme !== 'object') {\n    return throwStyledError(8);\n  }\n\n  return outerTheme ? { ...outerTheme, ...theme } : theme;\n}\n\n/**\n * Provide a theme to an entire react component tree via context\n */\nexport default function ThemeProvider(props: Props) {\n  const outerTheme = useContext(ThemeContext);\n  const themeContext = useMemo(() => mergeTheme(props.theme, outerTheme), [\n    props.theme,\n    outerTheme,\n  ]);\n\n  if (!props.children) {\n    return null;\n  }\n\n  return <ThemeContext.Provider value={themeContext}>{props.children}</ThemeContext.Provider>;\n}\n","// @flow\nimport validAttr from '@emotion/is-prop-valid';\nimport hoist from 'hoist-non-react-statics';\nimport React, { createElement, type Ref, useContext } from 'react';\nimport { SC_VERSION } from '../constants';\nimport type {\n  Attrs,\n  IStyledComponent,\n  IStyledStatics,\n  RuleSet,\n  ShouldForwardProp,\n  Target,\n} from '../types';\nimport { checkDynamicCreation } from '../utils/checkDynamicCreation';\nimport createWarnTooManyClasses from '../utils/createWarnTooManyClasses';\nimport determineTheme from '../utils/determineTheme';\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from '../utils/empties';\nimport escape from '../utils/escape';\nimport generateComponentId from '../utils/generateComponentId';\nimport generateDisplayName from '../utils/generateDisplayName';\nimport getComponentName from '../utils/getComponentName';\nimport isFunction from '../utils/isFunction';\nimport isStyledComponent from '../utils/isStyledComponent';\nimport isTag from '../utils/isTag';\nimport joinStrings from '../utils/joinStrings';\nimport merge from '../utils/mixinDeep';\nimport ComponentStyle from './ComponentStyle';\nimport { useStyleSheet, useStylis } from './StyleSheetManager';\nimport { ThemeContext } from './ThemeProvider';\n\nconst identifiers = {};\n\n/* We depend on components having unique IDs */\nfunction generateId(displayName?: string, parentComponentId?: string) {\n  const name = typeof displayName !== 'string' ? 'sc' : escape(displayName);\n  // Ensure that no displayName can lead to duplicate componentIds\n  identifiers[name] = (identifiers[name] || 0) + 1;\n\n  const componentId = `${name}-${generateComponentId(\n    // SC_VERSION gives us isolation between multiple runtimes on the page at once\n    // this is improved further with use of the babel plugin \"namespace\" feature\n    SC_VERSION + name + identifiers[name]\n  )}`;\n\n  return parentComponentId ? `${parentComponentId}-${componentId}` : componentId;\n}\n\nfunction useResolvedAttrs<Config>(theme: any = EMPTY_OBJECT, props: Config, attrs: Attrs) {\n  // NOTE: can't memoize this\n  // returns [context, resolvedAttrs]\n  // where resolvedAttrs is only the things injected by the attrs themselves\n  const context = { ...props, theme };\n  const resolvedAttrs = {};\n\n  attrs.forEach(attrDef => {\n    let resolvedAttrDef = attrDef;\n    let key;\n\n    if (isFunction(resolvedAttrDef)) {\n      resolvedAttrDef = resolvedAttrDef(context);\n    }\n\n    /* eslint-disable guard-for-in */\n    for (key in resolvedAttrDef) {\n      context[key] = resolvedAttrs[key] =\n        key === 'className'\n          ? joinStrings(resolvedAttrs[key], resolvedAttrDef[key])\n          : resolvedAttrDef[key];\n    }\n    /* eslint-enable guard-for-in */\n  });\n\n  return [context, resolvedAttrs];\n}\n\nfunction useInjectedStyle<T>(\n  componentStyle: ComponentStyle,\n  isStatic: boolean,\n  resolvedAttrs: T,\n  warnTooManyClasses?: $Call<typeof createWarnTooManyClasses, string, string>\n) {\n  const styleSheet = useStyleSheet();\n  const stylis = useStylis();\n\n  const className = isStatic\n    ? componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet, stylis)\n    : componentStyle.generateAndInjectStyles(resolvedAttrs, styleSheet, stylis);\n\n  if (process.env.NODE_ENV !== 'production' && !isStatic && warnTooManyClasses) {\n    warnTooManyClasses(className);\n  }\n\n  return className;\n}\n\nfunction useStyledComponentImpl(\n  forwardedComponent: IStyledComponent,\n  props: Object,\n  forwardedRef: Ref<any>,\n  isStatic: boolean\n) {\n  const {\n    attrs: componentAttrs,\n    componentStyle,\n    defaultProps,\n    foldedComponentIds,\n    shouldForwardProp,\n    styledComponentId,\n    target,\n  } = forwardedComponent;\n\n  // NOTE: the non-hooks version only subscribes to this when !componentStyle.isStatic,\n  // but that'd be against the rules-of-hooks. We could be naughty and do it anyway as it\n  // should be an immutable value, but behave for now.\n  const theme = determineTheme(props, useContext(ThemeContext), defaultProps);\n\n  const [context, attrs] = useResolvedAttrs(theme || EMPTY_OBJECT, props, componentAttrs);\n\n  const generatedClassName = useInjectedStyle(\n    componentStyle,\n    isStatic,\n    context,\n    process.env.NODE_ENV !== 'production' ? forwardedComponent.warnTooManyClasses : undefined\n  );\n\n  const refToForward = forwardedRef;\n\n  const elementToBeCreated: Target = attrs.$as || props.$as || attrs.as || props.as || target;\n\n  const isTargetTag = isTag(elementToBeCreated);\n  const computedProps = attrs !== props ? { ...props, ...attrs } : props;\n  const propsForElement = {};\n\n  // eslint-disable-next-line guard-for-in\n  for (const key in computedProps) {\n    if (key[0] === '$' || key === 'as') continue;\n    else if (key === 'forwardedAs') {\n      propsForElement.as = computedProps[key];\n    } else if (\n      shouldForwardProp\n        ? shouldForwardProp(key, validAttr, elementToBeCreated)\n        : isTargetTag\n        ? validAttr(key)\n        : true\n    ) {\n      // Don't pass through non HTML tags through to HTML elements\n      propsForElement[key] = computedProps[key];\n    }\n  }\n\n  if (props.style && attrs.style !== props.style) {\n    propsForElement.style = { ...props.style, ...attrs.style };\n  }\n\n  propsForElement.className = Array.prototype\n    .concat(\n      foldedComponentIds,\n      styledComponentId,\n      generatedClassName !== styledComponentId ? generatedClassName : null,\n      props.className,\n      attrs.className\n    )\n    .filter(Boolean)\n    .join(' ');\n\n  propsForElement.ref = refToForward;\n\n  return createElement(elementToBeCreated, propsForElement);\n}\n\nexport default function createStyledComponent(\n  target: $PropertyType<IStyledComponent, 'target'>,\n  options: {\n    attrs?: Attrs,\n    componentId: string,\n    displayName?: string,\n    parentComponentId?: string,\n    shouldForwardProp?: ShouldForwardProp,\n  },\n  rules: RuleSet\n) {\n  const isTargetStyledComp = isStyledComponent(target);\n  const isCompositeComponent = !isTag(target);\n\n  const {\n    attrs = EMPTY_ARRAY,\n    componentId = generateId(options.displayName, options.parentComponentId),\n    displayName = generateDisplayName(target),\n  } = options;\n\n  const styledComponentId =\n    options.displayName && options.componentId\n      ? `${escape(options.displayName)}-${options.componentId}`\n      : options.componentId || componentId;\n\n  // fold the underlying StyledComponent attrs up (implicit extend)\n  const finalAttrs =\n    isTargetStyledComp && ((target: any): IStyledComponent).attrs\n      ? Array.prototype.concat(((target: any): IStyledComponent).attrs, attrs).filter(Boolean)\n      : attrs;\n\n  // eslint-disable-next-line prefer-destructuring\n  let shouldForwardProp = options.shouldForwardProp;\n\n  if (isTargetStyledComp && target.shouldForwardProp) {\n    if (options.shouldForwardProp) {\n      // compose nested shouldForwardProp calls\n      shouldForwardProp = (prop, filterFn, elementToBeCreated) =>\n        ((((target: any): IStyledComponent).shouldForwardProp: any): ShouldForwardProp)(\n          prop,\n          filterFn,\n          elementToBeCreated\n        ) &&\n        ((options.shouldForwardProp: any): ShouldForwardProp)(prop, filterFn, elementToBeCreated);\n    } else {\n      // eslint-disable-next-line prefer-destructuring\n      shouldForwardProp = ((target: any): IStyledComponent).shouldForwardProp;\n    }\n  }\n\n  const componentStyle = new ComponentStyle(\n    rules,\n    styledComponentId,\n    isTargetStyledComp ? ((target: Object).componentStyle: ComponentStyle) : undefined\n  );\n\n  // statically styled-components don't need to build an execution context object,\n  // and shouldn't be increasing the number of class names\n  const isStatic = componentStyle.isStatic && attrs.length === 0;\n\n  /**\n   * forwardRef creates a new interim component, which we'll take advantage of\n   * instead of extending ParentComponent to create _another_ interim class\n   */\n  let WrappedStyledComponent: IStyledComponent;\n\n  const forwardRef = (props, ref) =>\n    // eslint-disable-next-line\n    useStyledComponentImpl(WrappedStyledComponent, props, ref, isStatic);\n\n  forwardRef.displayName = displayName;\n\n  WrappedStyledComponent = ((React.forwardRef(forwardRef): any): IStyledComponent);\n  WrappedStyledComponent.attrs = finalAttrs;\n  WrappedStyledComponent.componentStyle = componentStyle;\n  WrappedStyledComponent.displayName = displayName;\n  WrappedStyledComponent.shouldForwardProp = shouldForwardProp;\n\n  // this static is used to preserve the cascade of static classes for component selector\n  // purposes; this is especially important with usage of the css prop\n  WrappedStyledComponent.foldedComponentIds = isTargetStyledComp\n    ? Array.prototype.concat(\n        ((target: any): IStyledComponent).foldedComponentIds,\n        ((target: any): IStyledComponent).styledComponentId\n      )\n    : EMPTY_ARRAY;\n\n  WrappedStyledComponent.styledComponentId = styledComponentId;\n\n  // fold the underlying StyledComponent target up since we folded the styles\n  WrappedStyledComponent.target = isTargetStyledComp\n    ? ((target: any): IStyledComponent).target\n    : target;\n\n  WrappedStyledComponent.withComponent = function withComponent(tag: Target) {\n    const { componentId: previousComponentId, ...optionsToCopy } = options;\n\n    const newComponentId =\n      previousComponentId &&\n      `${previousComponentId}-${isTag(tag) ? tag : escape(getComponentName(tag))}`;\n\n    const newOptions = {\n      ...optionsToCopy,\n      attrs: finalAttrs,\n      componentId: newComponentId,\n    };\n\n    return createStyledComponent(tag, newOptions, rules);\n  };\n\n  Object.defineProperty(WrappedStyledComponent, 'defaultProps', {\n    get() {\n      return this._foldedDefaultProps;\n    },\n\n    set(obj) {\n      this._foldedDefaultProps = isTargetStyledComp\n        ? merge({}, ((target: any): IStyledComponent).defaultProps, obj)\n        : obj;\n    },\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    checkDynamicCreation(displayName, styledComponentId);\n\n    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(\n      displayName,\n      styledComponentId\n    );\n  }\n\n  // If the Object prototype is frozen, the \"toString\" property is non-writable. This means that any objects which inherit this property\n  // cannot have the property changed using an assignment. If using strict mode, attempting that will cause an error. If not using strict\n  // mode, attempting that will be silently ignored.\n  // However, we can still explicitly shadow the prototype's \"toString\" property by defining a new \"toString\" property on this object.\n  Object.defineProperty(WrappedStyledComponent, 'toString', { value: () => `.${WrappedStyledComponent.styledComponentId}` });\n\n  if (isCompositeComponent) {\n    hoist<\n      IStyledStatics,\n      $PropertyType<IStyledComponent, 'target'>,\n      { [key: $Keys<IStyledStatics>]: true }\n    >(WrappedStyledComponent, ((target: any): $PropertyType<IStyledComponent, 'target'>), {\n      // all SC-specific things should not be hoisted\n      attrs: true,\n      componentStyle: true,\n      displayName: true,\n      foldedComponentIds: true,\n      shouldForwardProp: true,\n      styledComponentId: true,\n      target: true,\n      withComponent: true,\n    });\n  }\n\n  return WrappedStyledComponent;\n}\n","// @flow\nimport type { IStyledComponent } from '../types';\nimport getComponentName from './getComponentName';\nimport isTag from './isTag';\n\nexport default function generateDisplayName(\n  target: $PropertyType<IStyledComponent, 'target'>\n): string {\n  return isTag(target) ? `styled.${target}` : `Styled(${getComponentName(target)})`;\n}\n","/**\n * Convenience function for joining strings to form className chains\n */\nexport default function joinStrings(a: ?String, b: ?String): ?String {\n  return a && b ? `${a} ${b}` : a || b;\n}\n","// @flow\n// Thanks to ReactDOMFactories for this handy list!\n\nexport default [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'marker',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'textPath',\n  'tspan',\n];\n","// @flow\nimport constructWithOptions from './constructWithOptions';\nimport StyledComponent from '../models/StyledComponent';\nimport domElements from '../utils/domElements';\n\nimport type { Target } from '../types';\n\nconst styled = (tag: Target) => constructWithOptions(StyledComponent, tag);\n\n// Shorthands for all valid HTML Elements\ndomElements.forEach(domElement => {\n  styled[domElement] = styled(domElement);\n});\n\nexport default styled;\n","// @flow\nimport { isValidElementType } from 'react-is';\nimport css from './css';\nimport throwStyledError from '../utils/error';\nimport { EMPTY_OBJECT } from '../utils/empties';\n\nimport type { Target } from '../types';\n\nexport default function constructWithOptions(\n  componentConstructor: Function,\n  tag: Target,\n  options: Object = EMPTY_OBJECT\n) {\n  if (!isValidElementType(tag)) {\n    return throwStyledError(1, String(tag));\n  }\n\n  /* This is callable directly as a template function */\n  // $FlowFixMe: Not typed to avoid destructuring arguments\n  const templateFunction = (...args) => componentConstructor(tag, options, css(...args));\n\n  /* If config methods are called, wrap up a new template function and merge options */\n  templateFunction.withConfig = config =>\n    constructWithOptions(componentConstructor, tag, { ...options, ...config });\n\n  /* Modify/inject new props at runtime */\n  templateFunction.attrs = attrs =>\n    constructWithOptions(componentConstructor, tag, {\n      ...options,\n      attrs: Array.prototype.concat(options.attrs, attrs).filter(Boolean),\n    });\n\n  return templateFunction;\n}\n","// @flow\nimport StyleSheet from '../sheet';\nimport type { RuleSet, Stringifier } from '../types';\nimport flatten from '../utils/flatten';\nimport isStaticRules from '../utils/isStaticRules';\n\nexport default class GlobalStyle {\n  componentId: string;\n\n  isStatic: boolean;\n\n  rules: RuleSet;\n\n  constructor(rules: RuleSet, componentId: string) {\n    this.rules = rules;\n    this.componentId = componentId;\n    this.isStatic = isStaticRules(rules);\n\n    // pre-register the first instance to ensure global styles\n    // load before component ones\n    StyleSheet.registerId(this.componentId + 1);\n  }\n\n  createStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    const flatCSS = flatten(this.rules, executionContext, styleSheet, stylis);\n    const css = stylis(flatCSS.join(''), '');\n    const id = this.componentId + instance;\n\n    // NOTE: We use the id as a name as well, since these rules never change\n    styleSheet.insertRules(id, id, css);\n  }\n\n  removeStyles(instance: number, styleSheet: StyleSheet) {\n    styleSheet.clearRules(this.componentId + instance);\n  }\n\n  renderStyles(\n    instance: number,\n    executionContext: Object,\n    styleSheet: StyleSheet,\n    stylis: Stringifier\n  ) {\n    if (instance > 2) StyleSheet.registerId(this.componentId + instance);\n\n    // NOTE: Remove old styles, then inject the new ones\n    this.removeStyles(instance, styleSheet);\n    this.createStyles(instance, executionContext, styleSheet, stylis);\n  }\n}\n","// @flow\n\nimport css from './css';\nimport generateComponentId from '../utils/generateComponentId';\nimport Keyframes from '../models/Keyframes';\n\nimport type { Interpolation, Styles } from '../types';\n\nexport default function keyframes(\n  strings: Styles,\n  ...interpolations: Array<Interpolation>\n): Keyframes {\n  /* Warning if you've used keyframes on React Native */\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.'\n    );\n  }\n\n  const rules = css(strings, ...interpolations).join('');\n  const name = generateComponentId(rules);\n  return new Keyframes(name, rules);\n}\n","// @flow\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { IS_BROWSER, SC_ATTR, SC_ATTR_VERSION, SC_VERSION } from '../constants';\nimport throwStyledError from '../utils/error';\nimport getNonce from '../utils/nonce';\nimport StyleSheet from '../sheet';\nimport StyleSheetManager from './StyleSheetManager';\n\ndeclare var __SERVER__: boolean;\n\nconst CLOSING_TAG_R = /^\\s*<\\/[a-z]/i;\n\nexport default class ServerStyleSheet {\n  isStreaming: boolean;\n\n  instance: StyleSheet;\n\n  sealed: boolean;\n\n  constructor() {\n    this.instance = new StyleSheet({ isServer: true });\n    this.sealed = false;\n  }\n\n  _emitSheetCSS = (): string => {\n    const css = this.instance.toString();\n    if (!css) return '';\n\n    const nonce = getNonce();\n    const attrs = [nonce && `nonce=\"${nonce}\"`, `${SC_ATTR}=\"true\"`, `${SC_ATTR_VERSION}=\"${SC_VERSION}\"`];\n    const htmlAttr = attrs.filter(Boolean).join(' ');\n\n    return `<style ${htmlAttr}>${css}</style>`;\n  };\n\n  collectStyles(children: any) {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return <StyleSheetManager sheet={this.instance}>{children}</StyleSheetManager>;\n  }\n\n  getStyleTags = (): string => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    return this._emitSheetCSS();\n  };\n\n  getStyleElement = () => {\n    if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    const props = {\n      [SC_ATTR]: '',\n      [SC_ATTR_VERSION]: SC_VERSION,\n      dangerouslySetInnerHTML: {\n        __html: this.instance.toString(),\n      },\n    };\n\n    const nonce = getNonce();\n    if (nonce) {\n      (props: any).nonce = nonce;\n    }\n\n    // v4 returned an array for this fn, so we'll do the same for v5 for backward compat\n    return [<style {...props} key=\"sc-0-0\" />];\n  };\n\n  // eslint-disable-next-line consistent-return\n  interleaveWithNodeStream(input: any) {\n    if (!__SERVER__ || IS_BROWSER) {\n      return throwStyledError(3);\n    } else if (this.sealed) {\n      return throwStyledError(2);\n    }\n\n    if (__SERVER__) {\n      this.seal();\n\n      // eslint-disable-next-line global-require\n      const { Readable, Transform } = require('stream');\n\n      const readableStream: Readable = input;\n      const { instance: sheet, _emitSheetCSS } = this;\n\n      const transformer = new Transform({\n        transform: function appendStyleChunks(chunk, /* encoding */ _, callback) {\n          // Get the chunk and retrieve the sheet's CSS as an HTML chunk,\n          // then reset its rules so we get only new ones for the next chunk\n          const renderedHtml = chunk.toString();\n          const html = _emitSheetCSS();\n\n          sheet.clearTag();\n\n          // prepend style html to chunk, unless the start of the chunk is a\n          // closing tag in which case append right after that\n          if (CLOSING_TAG_R.test(renderedHtml)) {\n            const endOfClosingTag = renderedHtml.indexOf('>') + 1;\n            const before = renderedHtml.slice(0, endOfClosingTag);\n            const after = renderedHtml.slice(endOfClosingTag);\n\n            this.push(before + html + after);\n          } else {\n            this.push(html + renderedHtml);\n          }\n\n          callback();\n        },\n      });\n\n      readableStream.on('error', err => {\n        // forward the error to the transform stream\n        transformer.emit('error', err);\n      });\n\n      return readableStream.pipe(transformer);\n    }\n  }\n\n  seal = () => {\n    this.sealed = true;\n  };\n}\n","// @flow\n/* Import singletons */\nimport isStyledComponent from './utils/isStyledComponent';\nimport css from './constructors/css';\nimport createGlobalStyle from './constructors/createGlobalStyle';\nimport keyframes from './constructors/keyframes';\nimport ServerStyleSheet from './models/ServerStyleSheet';\nimport { SC_VERSION } from './constants';\n\nimport StyleSheetManager, {\n  StyleSheetContext,\n  StyleSheetConsumer,\n} from './models/StyleSheetManager';\n\n/* Import components */\nimport ThemeProvider, { ThemeContext, ThemeConsumer } from './models/ThemeProvider';\n\n/* Import Higher Order Components */\nimport withTheme from './hoc/withTheme';\n\n/* Import hooks */\nimport useTheme from './hooks/useTheme';\n\ndeclare var __SERVER__: boolean;\n\n/* Warning if you've imported this file on React Native */\nif (\n  process.env.NODE_ENV !== 'production' &&\n  typeof navigator !== 'undefined' &&\n  navigator.product === 'ReactNative'\n) {\n  // eslint-disable-next-line no-console\n  console.warn(\n    \"It looks like you've imported 'styled-components' on React Native.\\n\" +\n      \"Perhaps you're looking to import 'styled-components/native'?\\n\" +\n      'Read more about this at https://www.styled-components.com/docs/basics#react-native'\n  );\n}\n\n/* Warning if there are several instances of styled-components */\nif (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test' && typeof window !== 'undefined') {\n  window['__styled-components-init__'] = window['__styled-components-init__'] || 0;\n\n  if (window['__styled-components-init__'] === 1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      \"It looks like there are several instances of 'styled-components' initialized in this application. \" +\n        'This may cause dynamic styles to not render properly, errors during the rehydration process, ' +\n        'a missing theme prop, and makes your application bigger without good reason.\\n\\n' +\n        'See https://s-c.sh/2BAXzed for more info.'\n    );\n  }\n\n  window['__styled-components-init__'] += 1;\n}\n\n/* Export everything */\nexport * from './secretInternals';\nexport {\n  createGlobalStyle,\n  css,\n  isStyledComponent,\n  keyframes,\n  ServerStyleSheet,\n  StyleSheetConsumer,\n  StyleSheetContext,\n  StyleSheetManager,\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n  useTheme,\n  SC_VERSION as version,\n  withTheme,\n};\n","/**\r\n * Прямые консольные команды для быстрого использования\r\n * Эти функции автоматически прикрепляются к объекту window и доступны сразу после загрузки\r\n */\r\n\r\n// Самовыполняющаяся функция для прикрепления команд к window\r\n(function(window) {\r\n  /**\r\n   * Получает актуальные значения здоровья и энергии игрока\r\n   * Проверяет как боевое состояние, так и глобальное состояние\r\n   */\r\n  function getPlayerVitalStats() {\r\n    try {\r\n      // Проверяем, находится ли игрок в бою\r\n      const gameContext = window.__GAME_CONTEXT__;\r\n      const gameState = window.__GAME_STATE__;\r\n      \r\n      // Пытаемся найти данные боя через DOM (компонент CombatManager)\r\n      let combatData = null;\r\n      try {\r\n        // Ищем элементы с атрибутами данных о здоровье/энергии\r\n        const healthEl = document.querySelector('[data-health]');\r\n        const energyEl = document.querySelector('[data-energy]'); \r\n        \r\n        if (healthEl && energyEl) {\r\n          combatData = {\r\n            health: parseFloat(healthEl.getAttribute('data-health')),\r\n            maxHealth: parseFloat(healthEl.getAttribute('data-max-health')),\r\n            energy: parseFloat(energyEl.getAttribute('data-energy')),\r\n            maxEnergy: parseFloat(energyEl.getAttribute('data-max-energy'))\r\n          };\r\n          console.debug('Найдены данные боя через DOM:', combatData);\r\n        }\r\n      } catch (domError) {\r\n        console.debug('Не удалось получить данные боя через DOM:', domError);\r\n      }\r\n      \r\n      // Если игрок в бою и есть данные боя - используем их\r\n      if (combatData && combatData.health !== undefined) {\r\n        return combatData;\r\n      }\r\n      \r\n      // Иначе берем данные из глобального состояния, сначала проверяя stats\r\n      if (gameState && gameState.player) {\r\n        // Приоритет 1: player.stats (если есть полные данные)\r\n        if (gameState.player.stats && \r\n            gameState.player.stats.health !== undefined && \r\n            gameState.player.stats.maxHealth !== undefined &&\r\n            gameState.player.stats.energy !== undefined &&\r\n            gameState.player.stats.maxEnergy !== undefined) {\r\n          \r\n          return {\r\n            health: gameState.player.stats.health,\r\n            maxHealth: gameState.player.stats.maxHealth,\r\n            energy: gameState.player.stats.energy,\r\n            maxEnergy: gameState.player.stats.maxEnergy\r\n          };\r\n        }\r\n        \r\n        // Приоритет 2: прямые свойства player (для совместимости)\r\n        return {\r\n          health: gameState.player.health !== undefined ? gameState.player.health : 100,\r\n          maxHealth: gameState.player.maxHealth !== undefined ? gameState.player.maxHealth : 100,\r\n          energy: gameState.player.energy !== undefined ? gameState.player.energy : 100, \r\n          maxEnergy: gameState.player.maxEnergy !== undefined ? gameState.player.maxEnergy : 100\r\n        };\r\n      }\r\n      \r\n      // Если ничего не нашли - возвращаем значения по умолчанию\r\n      return { health: 100, maxHealth: 100, energy: 100, maxEnergy: 100 };\r\n    } catch (error) {\r\n      console.error('Ошибка при получении данных игрока:', error);\r\n      return { health: 100, maxHealth: 100, energy: 100, maxEnergy: 100 };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Добавляет игроку 1000 единиц каждой валюты (медь, серебро, золото, духовные камни)\r\n   */\r\n  window.add1000Currency = function() {\r\n    try {\r\n      // Найти контекст игры\r\n      const gameContext = window.__GAME_CONTEXT__;\r\n      const gameState = window.__GAME_STATE__;\r\n      const gameDispatch = window.__GAME_DISPATCH__;\r\n      \r\n      // Проверка наличия контекста\r\n      if (gameContext && gameContext.actions && gameContext.actions.updateCurrency) {\r\n        // Получаем текущую валюту\r\n        const currentCurrency = gameContext.state?.player?.inventory?.currency || {};\r\n        \r\n        // Обновляем валюту через actions (используем аддитивный режим)\r\n        const updatedCurrency = {\r\n          copper: 1000,\r\n          silver: 1000,\r\n          gold: 1000,\r\n          spiritStones: 1000\r\n        };\r\n        \r\n        gameContext.actions.updateCurrency(updatedCurrency, true);\r\n        console.log('Добавлено по 1000 единиц каждой валюты!', updatedCurrency);\r\n        return true;\r\n      } \r\n      // Проверка наличия стейта и диспетчера\r\n      else if (gameState && gameDispatch) {\r\n        // Получаем текущую валюту\r\n        const currentCurrency = gameState?.player?.inventory?.currency || {};\r\n        \r\n        // Обновляем через диспетчер напрямую\r\n        const updatedCurrency = {\r\n          copper: (currentCurrency.copper || 0) + 1000,\r\n          silver: (currentCurrency.silver || 0) + 1000,\r\n          gold: (currentCurrency.gold || 0) + 1000,\r\n          spiritStones: (currentCurrency.spiritStones || 0) + 1000\r\n        };\r\n        \r\n        gameDispatch({ \r\n          type: 'UPDATE_CURRENCY', \r\n          payload: updatedCurrency \r\n        });\r\n        \r\n        console.log('Добавлено по 1000 единиц каждой валюты!', updatedCurrency);\r\n        return true;\r\n      }\r\n      // Если не удалось найти контекст игры через глобальные переменные, пробуем найти через React DevTools\r\n      else {\r\n        // Ищем React DevTools instance\r\n        let reactInstance = null;\r\n        \r\n        // Функция для поиска React-компонента с контекстом игры\r\n        const findReactComponent = (node) => {\r\n          const keys = Object.keys(node || {});\r\n          for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            if (key.startsWith('__reactInternalInstance$') || key.startsWith('__reactContainer$')) {\r\n              return node[key];\r\n            }\r\n          }\r\n          return null;\r\n        };\r\n        \r\n        // Ищем корневой компонент React\r\n        const rootElement = document.getElementById('root') || document.body.firstChild;\r\n        if (rootElement) {\r\n          reactInstance = findReactComponent(rootElement);\r\n        }\r\n        \r\n        // Если нашли React-компонент\r\n        if (reactInstance) {\r\n          console.log('Найден React-компонент, пытаемся найти контекст игры...');\r\n          \r\n          // В режиме разработки создаем и вызываем простую функцию для обновления валюты\r\n          console.log('Вызываем функцию через функцию разработчика для обновления валюты...');\r\n          \r\n          // Вставляем в DOM скрипт, который обновит валюту\r\n          const script = document.createElement('script');\r\n          script.textContent = `\r\n            (function() {\r\n              try {\r\n                const dispatch = window.__GAME_DISPATCH__ || \r\n                                (window.__store__ && window.__store__.dispatch);\r\n                \r\n                if (dispatch) {\r\n                  dispatch({\r\n                    type: 'UPDATE_CURRENCY',\r\n                    payload: {\r\n                      copper: 1000,\r\n                      silver: 1000,\r\n                      gold: 1000,\r\n                      spiritStones: 1000\r\n                    }\r\n                  });\r\n                  console.log('Валюта успешно обновлена!');\r\n                  return true;\r\n                } else {\r\n                  console.error('Не удалось найти функцию dispatch');\r\n                  return false;\r\n                }\r\n              } catch (e) {\r\n                console.error('Ошибка при обновлении валюты:', e);\r\n                return false;\r\n              }\r\n            })();\r\n          `;\r\n          document.body.appendChild(script);\r\n          document.body.removeChild(script);\r\n          \r\n          return true;\r\n        }\r\n        \r\n        console.error('Не удалось найти контекст игры');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при добавлении валюты:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Функция для отображения информации об игроке\r\n  window.showPlayerInfo = function() {\r\n    try {\r\n      const gameContext = window.__GAME_CONTEXT__;\r\n      const gameState = window.__GAME_STATE__;\r\n      \r\n      if (!gameContext && !gameState) {\r\n        console.error('Не удалось получить состояние игры');\r\n        return false;\r\n      }\r\n      \r\n      const state = gameContext?.state || gameState;\r\n      if (!state || !state.player) {\r\n        console.error('Не удалось получить данные игрока');\r\n        return false;\r\n      }\r\n      \r\n      // Получаем актуальные значения здоровья и энергии\r\n      const vitalStats = getPlayerVitalStats();\r\n      \r\n      // Выводим информацию об игроке в консоль\r\n      console.log('🧙 Игрок:');\r\n      console.log('Имя:', state.player.name || 'Нет данных');\r\n      console.log('Уровень:', state.player.cultivation?.level || '1');\r\n      console.log('Здоровье:', vitalStats.health + '/' + vitalStats.maxHealth);\r\n      console.log('Энергия:', vitalStats.energy + '/' + vitalStats.maxEnergy);\r\n      console.log('Статус-эффекты:', Object.keys(state.player.statusEffects || {}).length ? 'Активны' : 'Нет активных эффектов');\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка при отображении информации об игроке:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Автоматически показываем информацию об игроке при загрузке\r\n  setTimeout(() => {\r\n    try {\r\n      window.showPlayerInfo();\r\n    } catch (e) {\r\n      console.debug('Не удалось автоматически показать информацию об игроке:', e);\r\n    }\r\n  }, 1000);\r\n  \r\n  /**\r\n   * Восстанавливает все техники из базовых определений, сохраняя только id, level и прогресс\r\n   */\r\n  window.repairAllTechniques = function() {\r\n    try {\r\n      const gameContext = window.__GAME_CONTEXT__;\r\n      const gameState = window.__GAME_STATE__;\r\n      const gameDispatch = window.__GAME_DISPATCH__;\r\n      \r\n      if (!gameContext && !gameState) {\r\n        console.error('❌ Не удалось получить состояние игры');\r\n        return false;\r\n      }\r\n      \r\n      // Получаем текущие техники игрока\r\n      const playerTechniques = (gameContext?.state?.player?.techniques || gameState?.player?.techniques);\r\n      if (!Array.isArray(playerTechniques) || playerTechniques.length === 0) {\r\n        console.warn('⚠️ Техники не найдены или массив пуст');\r\n        return false;\r\n      }\r\n      \r\n      //console.log(`🔧 Запуск восстановления ${playerTechniques.length} техник...`);\r\n      \r\n      // Используем восстановление напрямую через action\r\n      if (gameDispatch) {\r\n        gameDispatch({ \r\n          type: 'REPAIR_TECHNIQUES', \r\n          payload: null \r\n        });\r\n        console.log('✅ Техники обновлены через REPAIR_TECHNIQUES action');\r\n        return true;\r\n      }\r\n      \r\n      if (gameContext && gameContext.actions && gameContext.actions.repairTechniques) {\r\n        gameContext.actions.repairTechniques();\r\n        console.log('✅ Техники обновлены через GameContext.actions.repairTechniques()');\r\n        return true;\r\n      }\r\n      \r\n      // Применяем восстановленные техники\r\n      if (gameContext && gameContext.actions) {\r\n        // Обновляем через специальное действие для техник\r\n        if (typeof gameContext.actions.repairTechniques === 'function') {\r\n          gameContext.actions.repairTechniques();\r\n          console.log('✅ Техники обновлены через GameContext.actions.repairTechniques()');\r\n          return true;\r\n        }\r\n        \r\n        // Альтернативный вариант - через dispatch\r\n        if (gameDispatch) {\r\n          gameDispatch({ \r\n            type: 'REPAIR_TECHNIQUES', \r\n            payload: null \r\n          });\r\n          console.log('✅ Техники обновлены через REPAIR_TECHNIQUES action');\r\n          return true;\r\n        }\r\n      }\r\n      \r\n      console.warn('⚠️ Техники восстановлены, но не применены автоматически');\r\n      console.log('Для ручного применения используйте:');\r\n      console.log('window.__GAME_DISPATCH__({ type: \"REPAIR_TECHNIQUES\", payload: null })');\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ Ошибка при восстановлении техник:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Синоним для основной функции для удобства\r\n  window.дать1000Ресурсов = window.add1000Currency;\r\n  window.показатьИгрока = window.showPlayerInfo;\r\n  window.восстановитьТехники = window.repairAllTechniques;\r\n  \r\n  // Рекомендуемая информация в консоли\r\n  console.log('Доступны команды для разработки:');\r\n  console.log('add1000Currency() - Добавляет по 1000 единиц меди, серебра, золота и духовных камней');\r\n  console.log('дать1000Ресурсов() - То же самое, но на русском');\r\n  console.log('showPlayerInfo() - Показывает информацию об игроке');\r\n  console.log('показатьИгрока() - То же самое, но на русском');\r\n  console.log('repairAllTechniques() - Восстанавливает все техники из базовых определений');\r\n  console.log('восстановитьТехники() - То же самое, но на русском');\r\n  \r\n})(typeof window !== 'undefined' ? window : {});\r\n\r\n// Экспортируем пустой объект для совместимости с import\r\nexport default {};\r\n","/**\r\n * Утилиты отладки для игры \"Путь к Бессмертию\"\r\n * Содержит функции для доступа к важной игровой информации через консоль браузера\r\n */\r\n\r\nimport WeatherService from '../services/weather-service';\r\nimport './directConsoleCommands'; // Импортируем прямые консольные команды\r\n\r\n// Храним глобальную ссылку на состояние игры\r\nlet gameStateRef = null;\r\n\r\n// Хранение ID интервала для периодического вывода состояния\r\nlet stateLoggingIntervalId = null;\r\n\r\n/**\r\n * Инициализирует инструменты отладки и подключает их к состоянию игры\r\n * @param {Object} store - Redux store (если используется Redux)\r\n */\r\nexport function initDebugTools(store) {\r\n  // Привязываем глобальные функции для добавления ресурсов\r\n  if (typeof window !== 'undefined') {\r\n    // Функция для добавления 1000 единиц каждой валюты\r\n    window.add1000ToEverything = () => {\r\n      try {\r\n        // Получаем контекст игры\r\n        const gameContext = window.__GAME_CONTEXT__ || window.gameContext;\r\n        \r\n        if (!gameContext || !gameContext.actions) {\r\n          // Если не нашли контекст через глобальные переменные\r\n          console.error('Не удалось найти игровой контекст. Используйте add1000Currency(), которая работает через прямой доступ.');\r\n          // Пробуем использовать директ-функцию, если она есть\r\n          if (typeof window.add1000Currency === 'function') {\r\n            window.add1000Currency();\r\n          }\r\n          return false;\r\n        }\r\n        \r\n        // Получаем текущие значения валют из состояния\r\n        const currentCurrency = gameContext.state?.player?.inventory?.currency || {};\r\n        \r\n        // Добавляем 1000 единиц каждой валюты (используем аддитивный режим)\r\n        const updatedCurrency = {\r\n          copper: 1000,\r\n          silver: 1000,\r\n          gold: 1000,\r\n          spiritStones: 1000\r\n        };\r\n        \r\n        // Обновляем валюту в состоянии игры (true для аддитивного режима)\r\n        gameContext.actions.updateCurrency(updatedCurrency, true);\r\n        \r\n        console.log('Добавлено по 1000 единиц каждой валюты!', updatedCurrency);\r\n        return true;\r\n      } catch (error) {\r\n        console.error('Ошибка при добавлении валюты:', error);\r\n        return false;\r\n      }\r\n    };\r\n    \r\n    // Синоним на русском\r\n    window.добавить1000Всего = window.add1000ToEverything;\r\n  }\r\n  // Добавляем функцию для получения времени\r\n  if (typeof window !== 'undefined') {\r\n    // Глобальная функция для доступа к отладочной информации\r\n    window.gameDebug = window.gameDebug || {};\r\n    \r\n    // Создаем WeatherService для использования в функциях отладки\r\n    const weatherService = new WeatherService();\r\n    \r\n    // Регистрируем глобальную функцию для получения времени\r\n    window.getGameTime = (customState = null) => {\r\n      // Используем переданное состояние, или сохраненную ссылку, или пытаемся найти глобальное состояние\r\n      const state = customState || gameStateRef || window.gameState || window.gameContext?.state;\r\n      \r\n      if (!state) {\r\n        console.warn('Не удалось получить состояние игры. Возможно, страница еще не полностью загружена.');\r\n        console.info('Попробуйте снова через несколько секунд или передайте состояние явно: getGameTime(yourStateObject)');\r\n        return null;\r\n      }\r\n      \r\n      // Извлекаем данные о времени из различных возможных мест в состоянии\r\n      const weatherState = state.weather || {};\r\n      const worldTime = state.world?.time || {};\r\n      \r\n      // Комбинируем данные из разных частей состояния\r\n      const timeData = {\r\n        hour: weatherState.hour || worldTime.hour || 12,\r\n        minute: weatherState.minute || worldTime.minute || 0,\r\n        dayCount: weatherState.dayCount || worldTime.day || 1,\r\n        currentSeason: weatherState.currentSeason || worldTime.season || 'spring',\r\n        seasonDay: weatherState.seasonDay || 1,\r\n        isDayTime: weatherState.isDayTime !== undefined ? weatherState.isDayTime : true,\r\n        nextWeatherChange: weatherState.nextWeatherChange,\r\n        currentWeather: weatherState.currentWeather || 'clear'\r\n      };\r\n      \r\n      // Вычисляем период суток, если его нет в состоянии\r\n      if (!timeData.daytimePeriod) {\r\n        timeData.daytimePeriod = weatherService._getDaytimePeriod(timeData.hour);\r\n      }\r\n      \r\n      // Получаем имя периода суток\r\n      timeData.daytimeName = weatherService.daytimeEffects?.[\r\n        timeData.daytimePeriod\r\n      ]?.name || 'Неизвестно';\r\n      \r\n      // Форматируем время\r\n      timeData.formattedTime = `${timeData.hour.toString().padStart(2, '0')}:${timeData.minute.toString().padStart(2, '0')}`;\r\n      \r\n      // Выводим информацию в консоль\r\n     /* console.group('🕒 Информация об игровом времени:');\r\n      console.log(`Текущее время: ${timeData.formattedTime} (${timeData.daytimeName})`);\r\n      console.log(`День: ${timeData.dayCount}, Сезон: ${timeData.currentSeason} (день ${timeData.seasonDay})`);\r\n      console.log(`Период суток: ${timeData.daytimeName} (${timeData.daytimePeriod || '-'})`);\r\n      console.log(`Световой день: ${timeData.isDayTime ? 'Да' : 'Нет'}`);\r\n      \r\n      if (timeData.activeEvent) {\r\n        console.log(`Активное событие: ${timeData.activeEvent}, осталось ${timeData.eventRemainingTime} мин. игрового времени`);\r\n      }\r\n      \r\n      console.log(`Следующая смена погоды через: ${timeData.nextWeatherChange} мин. игрового времени (${timeData.nextWeatherChange ? Math.ceil(timeData.nextWeatherChange / WeatherService.TIME_MULTIPLIER) : '-'} мин. реального времени)`);\r\n      console.log(`Множитель времени: 1:${WeatherService.TIME_MULTIPLIER} (1 мин. реального времени = ${WeatherService.TIME_MULTIPLIER} мин. игрового времени)`);\r\n      console.groupEnd();\r\n      */\r\n      return timeData;\r\n    };\r\n    \r\n    // Алиас для getGameTime для совместимости\r\n    window.gameDebug.getTime = window.getGameTime;\r\n    \r\n    /**\r\n     * Функция для запуска периодического вывода состояния игры в консоль\r\n     * @param {number} interval - Интервал вывода в миллисекундах (по умолчанию 3000 мс)\r\n     * @returns {boolean} - true если запущено успешно, false если уже запущено\r\n     */\r\n    window.startStateLogging = (interval = 3000) => {\r\n      // Проверяем, не запущен ли уже интервал\r\n      if (stateLoggingIntervalId !== null) {\r\n        console.warn('Логирование состояния уже запущено. Сначала остановите его с помощью window.stopStateLogging()');\r\n        return false;\r\n      }\r\n\r\n      // Определяем функцию вывода состояния\r\n      const logGameState = () => {\r\n        try {\r\n          // Расширенный способ получения состояния игры - проверяем несколько возможных источников\r\n          const state = window.__GAME_STATE__ || \r\n                     gameStateRef || \r\n                     window.gameContext?.state || \r\n                     window.__GAME_CONTEXT__?.state;\r\n          \r\n          // Если стандартные методы не сработали, попробуем получить состояние через React DevTools\r\n          if (!state && window.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\r\n            try {\r\n              // Пытаемся получить доступ к фиберам React для извлечения состояния\r\n              const reactInstance = Array.from(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers.values())[0];\r\n              if (reactInstance && reactInstance._currentFiber) {\r\n                const gameContextFiber = reactInstance._currentFiber;\r\n                \r\n                // Ищем компонент GameContextProvider и его состояние\r\n                let fiber = gameContextFiber;\r\n                let maxIterations = 1000; // Защита от бесконечного цикла\r\n                \r\n                while (fiber && maxIterations > 0) {\r\n                  if (fiber.type && \r\n                      ((typeof fiber.type === 'function' && fiber.type.name === 'GameContextProvider') ||\r\n                       (typeof fiber.type === 'object' && fiber.type.displayName === 'GameContextProvider'))) {\r\n                    \r\n                    // Нашли нужный компонент, получаем его состояние\r\n                    if (fiber.memoizedState && fiber.memoizedState.memoizedState) {\r\n                      console.log('Найдено состояние через React DevTools');\r\n                      return fiber.memoizedState.memoizedState;\r\n                    }\r\n                  }\r\n                  \r\n                  // Проверяем дочерние компоненты\r\n                  if (fiber.child) {\r\n                    fiber = fiber.child;\r\n                  } else if (fiber.sibling) {\r\n                    fiber = fiber.sibling;\r\n                  } else {\r\n                    // Переходим к следующему узлу вверх по дереву\r\n                    let current = fiber;\r\n                    fiber = fiber.return;\r\n                    \r\n                    while (fiber && !fiber.sibling && maxIterations > 0) {\r\n                      fiber = fiber.return;\r\n                      maxIterations--;\r\n                    }\r\n                    \r\n                    if (fiber) {\r\n                      fiber = fiber.sibling;\r\n                    }\r\n                  }\r\n                  \r\n                  maxIterations--;\r\n                }\r\n              }\r\n            } catch (reactError) {\r\n              console.debug('Не удалось получить состояние через React DevTools:', reactError);\r\n            }\r\n          }\r\n          \r\n          // Последняя попытка - попытаться найти через DOM\r\n          if (!state && document.querySelector('[data-gamestate]')) {\r\n            try {\r\n              const gameStateAttribute = document.querySelector('[data-gamestate]').getAttribute('data-gamestate');\r\n              if (gameStateAttribute) {\r\n                return JSON.parse(gameStateAttribute);\r\n              }\r\n            } catch (domError) {\r\n              console.debug('Не удалось получить состояние через DOM атрибуты:', domError);\r\n            }\r\n          }\r\n          \r\n          if (!state) {\r\n            console.error('Не удалось получить состояние игры для логирования');\r\n            console.info('Убедитесь, что страница полностью загружена и игра инициализирована');\r\n            console.info('Можете попробовать выполнить window.getGameDebugInfo() для дополнительной информации');\r\n            \r\n            // Выводим дополнительную информацию для отладки\r\n            console.group('Доступные глобальные объекты:');\r\n            console.log('window.__GAME_STATE__:', Boolean(window.__GAME_STATE__));\r\n            console.log('gameStateRef:', Boolean(gameStateRef));\r\n            console.log('window.gameContext:', Boolean(window.gameContext));\r\n            console.log('window.__GAME_CONTEXT__:', Boolean(window.__GAME_CONTEXT__));\r\n            console.groupEnd();\r\n            return;\r\n          }\r\n          \r\n          // Выводим состояние в консоль с понятной структурой\r\n          console.group('🎮 Состояние игры:');\r\n          console.log('⏰ Время:', new Date().toLocaleTimeString());\r\n          \r\n          // Вывод данных игрока\r\n          console.group('👤 Игрок:');\r\n          console.log('Имя:', state.player?.name || 'Нет данных');\r\n          console.log('Уровень:', state.player?.cultivation?.level || 'Нет данных');\r\n          \r\n          // Всегда берем здоровье и энергию из stats, так как теперь они там правильно определены\r\n          const health = state.player?.stats?.health || 100;\r\n          const maxHealth = state.player?.stats?.maxHealth || 100;\r\n          console.log('Здоровье:', health + '/' + maxHealth);\r\n          \r\n          // Энергия также взята из stats\r\n          const energy = state.player?.stats?.energy || 100;\r\n          const maxEnergy = state.player?.stats?.maxEnergy || 100;\r\n          console.log('Энергия:', energy + '/' + maxEnergy);\r\n          \r\n          // Показываем более подробную информацию о статус-эффектах\r\n          if (state.player?.statusEffects) {\r\n            if (Object.keys(state.player.statusEffects).length > 0) {\r\n              console.group('Статус-эффекты:');\r\n              Object.entries(state.player.statusEffects).forEach(([id, effect]) => {\r\n                console.log(`- ${effect.name || id}: ${effect.description || 'Нет описания'}`);\r\n              });\r\n              console.groupEnd();\r\n            } else {\r\n              console.log('Статус-эффекты: Нет активных эффектов');\r\n            }\r\n          } else {\r\n            console.log('Статус-эффекты: Нет данных');\r\n          }\r\n          console.groupEnd();\r\n          \r\n          // Вывод данных погоды и мира\r\n          console.group('🌍 Игровой мир:');\r\n          console.log('Локация:', state.world?.currentLocation?.name || 'Нет данных');\r\n          console.log('Погода:', state.weather?.currentWeather || 'Нет данных');\r\n          \r\n          // Форматированное время с поддержкой разных источников данных\r\n          const hour = state.weather?.hour || state.world?.time?.hour || 0;\r\n          const minute = state.weather?.minute || state.world?.time?.minute || 0;\r\n          console.log('Время:', `${hour}:${String(minute).padStart(2, '0')}`);\r\n          \r\n          // День и сезон могут быть в разных местах\r\n          const day = state.weather?.dayCount || state.world?.time?.day || 1;\r\n          const season = state.weather?.currentSeason || state.world?.time?.season || 'spring';\r\n          console.log('День:', `${day} (сезон: ${season})`);\r\n          \r\n          // Детальная информация о погодных эффектах\r\n          if (state.weather?.weatherEffects) {\r\n            console.group('Погодные эффекты:');\r\n            if (Array.isArray(state.weather.weatherEffects)) {\r\n              if (state.weather.weatherEffects.length > 0) {\r\n                state.weather.weatherEffects.forEach((effect, index) => {\r\n                  console.log(`- Эффект ${index + 1}:`, effect);\r\n                });\r\n              } else {\r\n                console.log('Нет активных погодных эффектов');\r\n              }\r\n            } else if (typeof state.weather.weatherEffects === 'object') {\r\n              Object.entries(state.weather.weatherEffects).forEach(([key, value]) => {\r\n                console.log(`- ${key}:`, value);\r\n              });\r\n            } else {\r\n              console.log(state.weather.weatherEffects);\r\n            }\r\n            console.groupEnd();\r\n          } else {\r\n            console.log('Погодные эффекты: Нет данных');\r\n          }\r\n          console.groupEnd();\r\n          \r\n          // Полное состояние для отладки с возможностью фильтрации\r\n          console.group('🔍 Полное состояние:');\r\n          \r\n          // Состояние игрока с выделением важных компонентов\r\n          console.group('Игрок (state.player):');\r\n          if (state.player) {\r\n            // Выводим только ключевые свойства первого уровня для лучшей читаемости\r\n            const playerKeys = Object.keys(state.player);\r\n            playerKeys.forEach(key => {\r\n              console.log(`- ${key}:`, state.player[key]);\r\n            });\r\n          } else {\r\n            console.log('Нет данных');\r\n          }\r\n          console.groupEnd();\r\n          \r\n          // Состояние мира\r\n          console.group('Мир (state.world):');\r\n          if (state.world) {\r\n            Object.keys(state.world).forEach(key => {\r\n              console.log(`- ${key}:`, state.world[key]);\r\n            });\r\n          } else {\r\n            console.log('Нет данных');\r\n          }\r\n          console.groupEnd();\r\n          \r\n          // Состояние погоды\r\n          console.group('Погода (state.weather):');\r\n          if (state.weather) {\r\n            Object.keys(state.weather).forEach(key => {\r\n              console.log(`- ${key}:`, state.weather[key]);\r\n            });\r\n          } else {\r\n            console.log('Нет данных');\r\n          }\r\n          console.groupEnd();\r\n          \r\n          console.log('Полное состояние:', state);\r\n          console.groupEnd();\r\n          \r\n          console.groupEnd();\r\n          \r\n          // Сохраняем состояние в глобальную переменную для доступа через консоль\r\n          window.__LAST_LOGGED_STATE__ = state;\r\n        } catch (error) {\r\n          console.error('Ошибка при логировании состояния:', error);\r\n        }\r\n      };\r\n      \r\n      // Запускаем интервал\r\n      stateLoggingIntervalId = setInterval(logGameState, interval);\r\n      \r\n      // Выполняем первый вывод сразу\r\n      logGameState();\r\n      \r\n      console.info(`✅ Запущено логирование состояния игры каждые ${interval / 1000} секунд. Для остановки используйте window.stopStateLogging()`);\r\n      return true;\r\n    };\r\n    \r\n    /**\r\n     * Функция для остановки периодического вывода состояния\r\n     * @returns {boolean} - true если остановлено успешно, false если не было запущено\r\n     */\r\n    window.stopStateLogging = () => {\r\n      if (stateLoggingIntervalId === null) {\r\n        console.warn('Логирование состояния не запущено');\r\n        return false;\r\n      }\r\n      \r\n      clearInterval(stateLoggingIntervalId);\r\n      stateLoggingIntervalId = null;\r\n      \r\n      console.info('✅ Логирование состояния игры остановлено');\r\n      return true;\r\n    };\r\n    \r\n    /**\r\n     * Удобная функция для получения последнего залогированного состояния\r\n     * @returns {Object} - последнее сохраненное состояние игры\r\n     */\r\n    window.getLastLoggedState = () => {\r\n      if (!window.__LAST_LOGGED_STATE__) {\r\n        console.warn('Нет сохраненного состояния. Запустите логирование с помощью window.startStateLogging()');\r\n        return null;\r\n      }\r\n      return window.__LAST_LOGGED_STATE__;\r\n    };\r\n    \r\n    /**\r\n     * Функция для отображения дополнительной отладочной информации\r\n     * @returns {Object} - объект с информацией об окружении\r\n     */\r\n    window.getGameDebugInfo = () => {\r\n      const debugInfo = {\r\n        globalGameState: Boolean(window.__GAME_STATE__),\r\n        gameStateRef: Boolean(gameStateRef),\r\n        gameContext: Boolean(window.gameContext) || Boolean(window.__GAME_CONTEXT__),\r\n        lastLoggedState: Boolean(window.__LAST_LOGGED_STATE__),\r\n        reactDevTools: Boolean(window.__REACT_DEVTOOLS_GLOBAL_HOOK__),\r\n        browser: navigator.userAgent,\r\n        time: new Date().toISOString()\r\n      };\r\n      \r\n      console.group('🛠️ Отладочная информация игры:');\r\n      console.log('- Глобальное состояние (__GAME_STATE__):', debugInfo.globalGameState);\r\n      console.log('- Ссылка на состояние (gameStateRef):', debugInfo.gameStateRef);\r\n      console.log('- Игровой контекст (gameContext):', debugInfo.gameContext);\r\n      console.log('- Последнее сохраненное состояние:', debugInfo.lastLoggedState);\r\n      console.log('- React DevTools:', debugInfo.reactDevTools);\r\n      console.log('- Браузер:', debugInfo.browser);\r\n      console.log('- Время:', debugInfo.time);\r\n      console.groupEnd();\r\n      \r\n      return debugInfo;\r\n    };\r\n    \r\n    // Сообщаем пользователю о доступных функциях отладки\r\n    console.info('🛠️ Инструменты отладки инициализированы. Доступные функции:');\r\n    console.info('• window.getGameTime() - получить информацию об игровом времени');\r\n    console.info('• window.gameDebug.getTime() - альтернативный способ получения информации о времени');\r\n    console.info('• window.add1000ToEverything() - добавить 1000 единиц каждой валюты');\r\n    console.info('• window.добавить1000Всего() - то же самое на русском');\r\n    console.info('• window.add1000Currency() - альтернативный способ добавления валюты');\r\n    console.info('• window.дать1000Ресурсов() - то же самое на русском');\r\n    console.info('• window.startStateLogging(interval) - запустить периодический вывод состояния игры каждые 3 секунды');\r\n    console.info('• window.stopStateLogging() - остановить периодический вывод состояния игры');\r\n    console.info('• window.getLastLoggedState() - получить последнее залогированное состояние');\r\n    console.info('• window.getGameDebugInfo() - получить отладочную информацию о доступности данных игры');\r\n  }\r\n}\r\n\r\n/**\r\n * Подключает инструменты отладки к компоненту React\r\n * @param {Object} component - Компонент React\r\n * @param {Object} props - Свойства компонента\r\n */\r\nexport function connectDebugTools(component, props) {\r\n  if (typeof window !== 'undefined' && component) {\r\n    // Если компонент имеет доступ к контексту или состоянию\r\n    if (component.context || component.state || props) {\r\n      // Получаем данные о состоянии из разных источников\r\n      const state = component.state || {};\r\n      const context = component.context || {};\r\n      const contextState = context.state || context.value?.state;\r\n      \r\n      // Сохраняем ссылку на состояние игры\r\n      if (contextState) {\r\n        gameStateRef = contextState;\r\n      } else if (props && (props.state || props.weather || props.world)) {\r\n        gameStateRef = props;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Пример использования в точке входа приложения:\r\n * \r\n * import { initDebugTools } from './utils/debugTools';\r\n * import store from './store';\r\n * \r\n * // В точке входа приложения\r\n * initDebugTools(store);\r\n * \r\n * Пример использования в компоненте:\r\n * \r\n * import { connectDebugTools } from './utils/debugTools';\r\n * \r\n * class MyComponent extends React.Component {\r\n *   componentDidMount() {\r\n *     connectDebugTools(this, this.props);\r\n *   }\r\n * }\r\n */\r\n","/**\r\n * API-сервис для работы с авторизацией\r\n * Использует HTTP запросы к серверу вместо прямого доступа к базе данных\r\n */\r\n\r\n// Базовый URL API\r\nconst API_URL = '/api';\r\n\r\nclass AuthServiceAPI {\r\n  /**\r\n   * Регистрация нового пользователя\r\n   * @param {string} username - Имя пользователя\r\n   * @param {string} email - Email пользователя\r\n   * @param {string} password - Пароль пользователя\r\n   * @returns {Promise<Object>} - Данные созданного пользователя\r\n   */\r\n  static async registerUser(username, email, password) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при регистрации');\r\n      }\r\n\r\n      const user = await response.json();\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Ошибка регистрации:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Авторизация пользователя\r\n   * @param {string} usernameOrEmail - Имя пользователя или email\r\n   * @param {string} password - Пароль пользователя\r\n   * @returns {Promise<Object>} - Данные авторизованного пользователя\r\n   */\r\n  static async loginUser(usernameOrEmail, password) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          usernameOrEmail,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при авторизации');\r\n      }\r\n\r\n      const user = await response.json();\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Ошибка входа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновление прогресса пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @param {number} experience - Опыт пользователя\r\n   * @param {number} cultivationLevel - Уровень культивации\r\n   * @returns {Promise<Object>} - Обновленные данные пользователя\r\n   */\r\n  static async updateUserProgress(userId, experience, cultivationLevel) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/users/${userId}/progress`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n        body: JSON.stringify({\r\n          experience,\r\n          cultivationLevel,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при обновлении прогресса');\r\n      }\r\n\r\n      const user = await response.json();\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Ошибка обновления прогресса:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получение профиля пользователя\r\n   * @param {string|number} userIdOrUsername - ID пользователя или имя пользователя\r\n   * @returns {Promise<Object>} - Данные пользователя\r\n   */\r\n  static async getUserProfile(userIdOrUsername) {\r\n    try {\r\n      // Определяем, это ID или имя пользователя\r\n      const isId = typeof userIdOrUsername === 'number' || !isNaN(parseInt(userIdOrUsername));\r\n      const endpoint = isId \r\n        ? `${API_URL}/users/${userIdOrUsername}`\r\n        : `${API_URL}/users/by-username/${userIdOrUsername}`;\r\n      \r\n      const response = await fetch(endpoint, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при получении профиля');\r\n      }\r\n\r\n      const user = await response.json();\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Ошибка получения профиля:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default AuthServiceAPI;","/**\r\n * Адаптер для выбора подходящего AuthService в зависимости от среды выполнения\r\n * Улучшенная версия с динамическим импортом для предотвращения включения серверного кода в клиентскую сборку\r\n */\r\nimport { isServerEnvironment } from '../sequelize-config';\r\n\r\n// Импортируем API-версию для клиента всегда\r\nimport AuthServiceAPI from './auth-api'; // Через API (для браузера)\r\n\r\n// Дополнительная проверка серверного окружения\r\nfunction isTrueServerEnvironment() {\r\n  return (\r\n    isServerEnvironment &&\r\n    typeof process !== 'undefined' &&\r\n    process.versions &&\r\n    process.versions.node\r\n  );\r\n}\r\n\r\n// Создаем асинхронную функцию для получения правильного сервиса\r\nasync function getAuthService() {\r\n  if (isTrueServerEnvironment()) {\r\n    try {\r\n      // Динамический импорт серверной версии\r\n      // Это предотвратит попытки webpack включить этот модуль в клиентскую сборку\r\n      const serverModule = await import('./auth');\r\n      return serverModule.default || serverModule;\r\n    } catch (error) {\r\n      console.error('Ошибка при импорте серверного AuthService:', error);\r\n      console.warn('Используем API версию из-за ошибки импорта');\r\n      return AuthServiceAPI;\r\n    }\r\n  }\r\n  // Для клиента всегда возвращаем API версию\r\n  return AuthServiceAPI;\r\n}\r\n\r\n// Создаем прокси объект, который будет асинхронно загружать нужную реализацию\r\nconst AuthService = new Proxy({}, {\r\n  get: function(target, prop) {\r\n    return async function(...args) {\r\n      const service = await getAuthService();\r\n      if (typeof service[prop] === 'function') {\r\n        return service[prop](...args);\r\n      } else {\r\n        throw new Error(`Метод ${prop} не найден в AuthService`);\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nexport default AuthService;","/**\r\n * API-сервис для работы с системой культивации\r\n * Использует HTTP запросы к серверу вместо прямого доступа к базе данных\r\n */\r\n\r\n// Базовый URL API\r\nconst API_URL = '/api';\r\n\r\n/**\r\n * Сервис для работы с данными о культивации через API\r\n */\r\nclass CultivationServiceAPI {\r\n  /**\r\n   * Получение данных о культивации пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Данные о культивации\r\n   */\r\n  static async getCultivationProgress(userId) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/cultivation/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при получении данных о культивации');\r\n      }\r\n\r\n      const cultivation = await response.json();\r\n      return cultivation;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении данных о культивации:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обновление данных о культивации пользователя\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} data - Новые данные о культивации\r\n   * @returns {Promise<Object>} - Обновленные данные о культивации\r\n   */\r\n  static async updateCultivationProgress(userId, data) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/cultivation/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при обновлении данных о культивации');\r\n      }\r\n\r\n      const updatedCultivation = await response.json();\r\n      return updatedCultivation;\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении данных о культивации:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Проверка возможности прорыва на следующий уровень\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Результат проверки\r\n   */\r\n  static async checkBreakthroughPossibility(userId) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/cultivation/${userId}/breakthrough-check`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при проверке возможности прорыва');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Ошибка при проверке возможности прорыва:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Завершение трибуляции\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} tribulationResult - Результат трибуляции\r\n   * @returns {Promise<Object>} - Результат обработки трибуляции\r\n   */\r\n  static async completeTribulation(userId, tribulationResult) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/cultivation/${userId}/complete-tribulation`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n        body: JSON.stringify(tribulationResult),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при завершении трибуляции');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Ошибка при завершении трибуляции:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Увеличение прогресса \"бутылочного горлышка\"\r\n   * @param {number} userId - ID пользователя\r\n   * @param {number} amount - Количество прогресса для добавления\r\n   * @returns {Promise<Object>} - Обновленные данные о культивации\r\n   */\r\n  static async increaseBottleneckProgress(userId, amount) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/cultivation/${userId}/bottleneck-progress`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n        body: JSON.stringify({ amount }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при увеличении прогресса \"бутылочного горлышка\"');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Ошибка при увеличении прогресса \"бутылочного горлышка\":', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получение озарения\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Результат озарения\r\n   */\r\n  static async gainInsight(userId) {\r\n    try {\r\n      const response = await fetch(`${API_URL}/cultivation/${userId}/gain-insight`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || 'Ошибка при получении озарения');\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении озарения:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CultivationServiceAPI;","/**\r\n * Адаптер для выбора подходящего CultivationService в зависимости от среды выполнения\r\n * Улучшенная версия с динамическим импортом для предотвращения включения серверного кода в клиентскую сборку\r\n */\r\nimport { isServerEnvironment } from '../sequelize-config';\r\n\r\n// Импортируем API-версию для клиента всегда\r\nimport CultivationServiceAPI from './cultivation-api'; // Через API (для браузера)\r\n\r\n// Дополнительная проверка серверного окружения\r\nfunction isTrueServerEnvironment() {\r\n  return (\r\n    isServerEnvironment &&\r\n    typeof process !== 'undefined' &&\r\n    process.versions &&\r\n    process.versions.node\r\n  );\r\n}\r\n\r\n// Создаем асинхронную функцию для получения правильного сервиса\r\nasync function getCultivationService() {\r\n  if (isTrueServerEnvironment()) {\r\n    try {\r\n      // Динамический импорт серверной версии\r\n      // Это предотвратит попытки webpack включить этот модуль в клиентскую сборку\r\n      const serverModule = await import('./cultivation-service');\r\n      return serverModule.default || serverModule;\r\n    } catch (error) {\r\n      console.error('Ошибка при импорте серверного CultivationService:', error);\r\n      console.warn('Используем API версию из-за ошибки импорта');\r\n      return CultivationServiceAPI;\r\n    }\r\n  }\r\n  // Для клиента всегда возвращаем API версию\r\n  return CultivationServiceAPI;\r\n}\r\n\r\n// Создаем прокси объект, который будет асинхронно загружать нужную реализацию\r\nconst CultivationService = new Proxy({}, {\r\n  get: function(target, prop) {\r\n    return async function(...args) {\r\n      const service = await getCultivationService();\r\n      if (typeof service[prop] === 'function') {\r\n        return service[prop](...args);\r\n      } else {\r\n        throw new Error(`Метод ${prop} не найден в CultivationService`);\r\n      }\r\n    };\r\n  }\r\n});\r\n\r\nexport default CultivationService;","import { Model, DataTypes } from '../services/database';\r\nimport { unifiedDatabase } from '../services/database-connection-manager';\r\n\r\n// Получаем экземпляр Sequelize асинхронно\r\nlet sequelizeInstance = null;\r\nasync function getSequelize() {\r\n  if (!sequelizeInstance) {\r\n    const result = await unifiedDatabase.getSequelizeInstance();\r\n    sequelizeInstance = result.db;\r\n  }\r\n  return sequelizeInstance;\r\n}\r\n\r\nclass CharacterProfile extends Model {\r\n  static associate(models) {\r\n    // Определение связей с другими моделями\r\n    CharacterProfile.belongsTo(models.User, {\r\n      foreignKey: 'userId',\r\n      as: 'user'\r\n    });\r\n  }\r\n}\r\n\r\n// Исправление: не используем super за пределами класса\r\nCharacterProfile.init = async function() {\r\n  const sequelize = await getSequelize();\r\n  \r\n  // Вызываем метод init стандартным образом\r\n  return Model.init.call(this, {\r\n  userId: {\r\n    type: DataTypes.INTEGER,\r\n    references: {\r\n      model: 'Users',\r\n      key: 'id'\r\n    },\r\n    onUpdate: 'CASCADE',\r\n    onDelete: 'CASCADE',\r\n    unique: true\r\n  },\r\n  name: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false\r\n  },\r\n  gender: {\r\n    type: DataTypes.ENUM('male', 'female'),\r\n    defaultValue: 'male'\r\n  },\r\n  region: {\r\n    type: DataTypes.STRING,\r\n    defaultValue: 'central'\r\n  },\r\n  background: {\r\n    type: DataTypes.STRING,\r\n    defaultValue: 'commoner'\r\n  },\r\n  description: {\r\n    type: DataTypes.TEXT\r\n  },\r\n  avatar: {\r\n    type: DataTypes.STRING\r\n  },\r\n  level: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 1\r\n  },\r\n  experience: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  gold: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  silver: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  copper: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  spiritStones: {\r\n    type: DataTypes.INTEGER,\r\n    defaultValue: 0\r\n  },\r\n  reputation: {\r\n    type: DataTypes.JSON,\r\n    defaultValue: {}\r\n  },\r\n  relationships: {\r\n    type: DataTypes.JSON,\r\n    defaultValue: {}\r\n  }\r\n  }, {\r\n    sequelize,\r\n    modelName: 'CharacterProfile',\r\n    tableName: 'CharacterProfiles'\r\n    });\r\n};\r\n\r\n// Инициализируем модель сразу для применения изменений\r\n(async () => {\r\n  try {\r\n    await CharacterProfile.init();\r\n    console.log('CharacterProfile модель инициализирована');\r\n  } catch (error) {\r\n    console.error('Ошибка инициализации модели CharacterProfile:', error);\r\n    console.error(error.stack);\r\n  }\r\n})();\r\n\r\nexport default CharacterProfile;\r\n","import CharacterProfile from '../models/character-profile';\r\nimport { getInitializedUserModel } from '../models/user';\r\n\r\n// Проверяем, находимся ли мы в браузере\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\n// Храним данные о профилях персонажей в памяти для браузера\r\nlet browserProfileData = {};\r\n\r\n/**\r\n * Сервис для работы с профилем персонажа\r\n */\r\nclass CharacterProfileService {\r\n  /**\r\n   * Получение профиля персонажа\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<Object>} - Профиль персонажа\r\n   */\r\n  static async getCharacterProfile(userId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        const profile = browserProfileData[userId];\r\n        \r\n        // Если записи нет, возвращаем null (персонаж не создан)\r\n        if (!profile) {\r\n          return null;\r\n        }\r\n        \r\n        // Возвращаем данные из памяти\r\n        return {\r\n          name: profile.name,\r\n          gender: profile.gender,\r\n          region: profile.region,\r\n          background: profile.background,\r\n          description: profile.description,\r\n          avatar: profile.avatar,\r\n          level: profile.level,\r\n          experience: profile.experience,\r\n          currency: {\r\n            gold: profile.gold,\r\n            silver: profile.silver,\r\n            copper: profile.copper,\r\n            spiritStones: profile.spiritStones\r\n          },\r\n          reputation: profile.reputation,\r\n          relationships: profile.relationships\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Проверяем, есть ли запись о профиле для пользователя\r\n        let profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Если записи нет, возвращаем null (персонаж не создан)\r\n        if (!profile) {\r\n          return null;\r\n        }\r\n        \r\n        // Преобразуем данные для клиента\r\n        return {\r\n          name: profile.name,\r\n          gender: profile.gender,\r\n          region: profile.region,\r\n          background: profile.background,\r\n          description: profile.description,\r\n          avatar: profile.avatar,\r\n          level: profile.level,\r\n          experience: profile.experience,\r\n          currency: {\r\n            gold: profile.gold,\r\n            silver: profile.silver,\r\n            copper: profile.copper,\r\n            spiritStones: profile.spiritStones\r\n          },\r\n          reputation: profile.reputation,\r\n          relationships: profile.relationships\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при получении профиля персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Создание или обновление профиля персонажа\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} data - Данные профиля персонажа\r\n   * @returns {Promise<Object>} - Обновленный профиль персонажа\r\n   */\r\n  static async updateCharacterProfile(userId, data) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        const profile = browserProfileData[userId];\r\n        \r\n        // Если записи нет, создаем новую\r\n        if (!profile) {\r\n          // Проверяем обязательные поля\r\n          if (!data.name) {\r\n            throw new Error('Имя персонажа обязательно');\r\n          }\r\n          \r\n          browserProfileData[userId] = {\r\n            userId,\r\n            name: data.name,\r\n            gender: data.gender || 'male',\r\n            region: data.region || 'central',\r\n            background: data.background || 'commoner',\r\n            description: data.description || '',\r\n            avatar: data.avatar || '',\r\n            level: data.level || 1,\r\n            experience: data.experience || 0,\r\n            gold: data.currency?.gold || 0,\r\n            silver: data.currency?.silver || 0,\r\n            copper: data.currency?.copper || 0,\r\n            spiritStones: data.currency?.spiritStones || 0,\r\n            reputation: data.reputation || {},\r\n            relationships: data.relationships || {}\r\n          };\r\n        } else {\r\n          // Обновляем существующий профиль\r\n          if (data.name !== undefined) browserProfileData[userId].name = data.name;\r\n          if (data.gender !== undefined) browserProfileData[userId].gender = data.gender;\r\n          if (data.region !== undefined) browserProfileData[userId].region = data.region;\r\n          if (data.background !== undefined) browserProfileData[userId].background = data.background;\r\n          if (data.description !== undefined) browserProfileData[userId].description = data.description;\r\n          if (data.avatar !== undefined) browserProfileData[userId].avatar = data.avatar;\r\n          if (data.level !== undefined) browserProfileData[userId].level = data.level;\r\n          if (data.experience !== undefined) browserProfileData[userId].experience = data.experience;\r\n          \r\n          // Обновляем валюту\r\n          if (data.currency) {\r\n            if (data.currency.gold !== undefined) browserProfileData[userId].gold = data.currency.gold;\r\n            if (data.currency.silver !== undefined) browserProfileData[userId].silver = data.currency.silver;\r\n            if (data.currency.copper !== undefined) browserProfileData[userId].copper = data.currency.copper;\r\n            if (data.currency.spiritStones !== undefined) browserProfileData[userId].spiritStones = data.currency.spiritStones;\r\n          }\r\n          \r\n          // Обновляем репутацию и отношения\r\n          if (data.reputation !== undefined) browserProfileData[userId].reputation = data.reputation;\r\n          if (data.relationships !== undefined) browserProfileData[userId].relationships = data.relationships;\r\n        }\r\n        \r\n        // Возвращаем обновленные данные\r\n        const updatedProfile = browserProfileData[userId];\r\n        \r\n        return {\r\n          name: updatedProfile.name,\r\n          gender: updatedProfile.gender,\r\n          region: updatedProfile.region,\r\n          background: updatedProfile.background,\r\n          description: updatedProfile.description,\r\n          avatar: updatedProfile.avatar,\r\n          level: updatedProfile.level,\r\n          experience: updatedProfile.experience,\r\n          currency: {\r\n            gold: updatedProfile.gold,\r\n            silver: updatedProfile.silver,\r\n            copper: updatedProfile.copper,\r\n            spiritStones: updatedProfile.spiritStones\r\n          },\r\n          reputation: updatedProfile.reputation,\r\n          relationships: updatedProfile.relationships\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем текущий профиль персонажа\r\n        let profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Если записи нет, создаем новую\r\n        if (!profile) {\r\n          // Проверяем обязательные поля\r\n          if (!data.name) {\r\n            throw new Error('Имя персонажа обязательно');\r\n          }\r\n          \r\n          profile = await CharacterProfile.create({\r\n            userId,\r\n            name: data.name,\r\n            gender: data.gender || 'male',\r\n            region: data.region || 'central',\r\n            background: data.background || 'commoner',\r\n            description: data.description || '',\r\n            avatar: data.avatar || '',\r\n            level: data.level || 1,\r\n            experience: data.experience || 0,\r\n            gold: data.currency?.gold || 0,\r\n            silver: data.currency?.silver || 0,\r\n            copper: data.currency?.copper || 0,\r\n            spiritStones: data.currency?.spiritStones || 0,\r\n            reputation: data.reputation || {},\r\n            relationships: data.relationships || {}\r\n          });\r\n        } else {\r\n          // Обновляем существующий профиль\r\n          const updateData = {};\r\n          \r\n          if (data.name !== undefined) updateData.name = data.name;\r\n          if (data.gender !== undefined) updateData.gender = data.gender;\r\n          if (data.region !== undefined) updateData.region = data.region;\r\n          if (data.background !== undefined) updateData.background = data.background;\r\n          if (data.description !== undefined) updateData.description = data.description;\r\n          if (data.avatar !== undefined) updateData.avatar = data.avatar;\r\n          if (data.level !== undefined) updateData.level = data.level;\r\n          if (data.experience !== undefined) updateData.experience = data.experience;\r\n          \r\n          // Обновляем валюту\r\n          if (data.currency) {\r\n            if (data.currency.gold !== undefined) updateData.gold = data.currency.gold;\r\n            if (data.currency.silver !== undefined) updateData.silver = data.currency.silver;\r\n            if (data.currency.copper !== undefined) updateData.copper = data.currency.copper;\r\n            if (data.currency.spiritStones !== undefined) updateData.spiritStones = data.currency.spiritStones;\r\n          }\r\n          \r\n          // Обновляем репутацию и отношения\r\n          if (data.reputation !== undefined) updateData.reputation = data.reputation;\r\n          if (data.relationships !== undefined) updateData.relationships = data.relationships;\r\n          \r\n          await profile.update(updateData);\r\n        }\r\n        \r\n        // Получаем обновленный профиль\r\n        profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Преобразуем данные для клиента\r\n        return {\r\n          name: profile.name,\r\n          gender: profile.gender,\r\n          region: profile.region,\r\n          background: profile.background,\r\n          description: profile.description,\r\n          avatar: profile.avatar,\r\n          level: profile.level,\r\n          experience: profile.experience,\r\n          currency: {\r\n            gold: profile.gold,\r\n            silver: profile.silver,\r\n            copper: profile.copper,\r\n            spiritStones: profile.spiritStones\r\n          },\r\n          reputation: profile.reputation,\r\n          relationships: profile.relationships\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении профиля персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Проверка, создан ли персонаж\r\n   * @param {number} userId - ID пользователя\r\n   * @returns {Promise<boolean>} - Флаг, создан ли персонаж\r\n   */\r\n  static async isCharacterCreated(userId) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        return !!browserProfileData[userId];\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Проверяем, есть ли запись о профиле для пользователя\r\n        const profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        return !!profile;\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при проверке создания персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление валюты персонажа\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} currency - Данные о валюте\r\n   * @returns {Promise<Object>} - Обновленная валюта\r\n   */\r\n  static async updateCurrency(userId, currency) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        const profile = browserProfileData[userId];\r\n        \r\n        if (!profile) {\r\n          throw new Error('Профиль персонажа не найден');\r\n        }\r\n        \r\n        // Обновляем валюту\r\n        if (currency.gold !== undefined) profile.gold = currency.gold;\r\n        if (currency.silver !== undefined) profile.silver = currency.silver;\r\n        if (currency.copper !== undefined) profile.copper = currency.copper;\r\n        if (currency.spiritStones !== undefined) profile.spiritStones = currency.spiritStones;\r\n        \r\n        // Возвращаем обновленную валюту\r\n        return {\r\n          gold: profile.gold,\r\n          silver: profile.silver,\r\n          copper: profile.copper,\r\n          spiritStones: profile.spiritStones\r\n        };\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем текущий профиль персонажа\r\n        let profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        if (!profile) {\r\n          throw new Error('Профиль персонажа не найден');\r\n        }\r\n        \r\n        // Обновляем валюту\r\n        const updateData = {};\r\n        \r\n        if (currency.gold !== undefined) updateData.gold = currency.gold;\r\n        if (currency.silver !== undefined) updateData.silver = currency.silver;\r\n        if (currency.copper !== undefined) updateData.copper = currency.copper;\r\n        if (currency.spiritStones !== undefined) updateData.spiritStones = currency.spiritStones;\r\n        \r\n        await profile.update(updateData);\r\n        \r\n        // Получаем обновленный профиль\r\n        profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Возвращаем обновленную валюту\r\n        return {\r\n          gold: profile.gold,\r\n          silver: profile.silver,\r\n          copper: profile.copper,\r\n          spiritStones: profile.spiritStones\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении валюты персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление отношений с NPC\r\n   * @param {number} userId - ID пользователя\r\n   * @param {Object} relationships - Данные об отношениях\r\n   * @returns {Promise<Object>} - Обновленные отношения\r\n   */\r\n  static async updateRelationships(userId, relationships) {\r\n    try {\r\n      if (isBrowser) {\r\n        // В браузере используем объект в памяти\r\n        const profile = browserProfileData[userId];\r\n        \r\n        if (!profile) {\r\n          throw new Error('Профиль персонажа не найден');\r\n        }\r\n        \r\n        // Обновляем отношения\r\n        profile.relationships = relationships;\r\n        \r\n        // Возвращаем обновленные отношения\r\n        return profile.relationships;\r\n      } else {\r\n        // На сервере используем базу данных\r\n        // Получаем текущий профиль персонажа\r\n        let profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        if (!profile) {\r\n          throw new Error('Профиль персонажа не найден');\r\n        }\r\n        \r\n        // Обновляем отношения\r\n        await profile.update({\r\n          relationships\r\n        });\r\n        \r\n        // Получаем обновленный профиль\r\n        profile = await CharacterProfile.findOne({\r\n          where: { userId }\r\n        });\r\n        \r\n        // Возвращаем обновленные отношения\r\n        return profile.relationships;\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении отношений персонажа:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default CharacterProfileService;\r\n","/**\r\n * Начальные социальные отношения для нового игрока\r\n * Этот файл содержит данные NPC, с которыми игрок начинает игру\r\n */\r\n\r\nconst initialRelationships = [\r\n  { \r\n    id: 1, \r\n    name: 'Мастер Ли', \r\n    role: 'Наставник', \r\n    level: 80, \r\n    events: ['Вы получили урок от Мастера Ли', 'Мастер Ли похвалил ваш прогресс'] \r\n  },\r\n  { \r\n    id: 2, \r\n    name: 'Старейшина Чжан', \r\n    role: 'Старейшина секты', \r\n    level: 60, \r\n    events: ['Вы помогли Старейшине Чжану собрать травы'] \r\n  },\r\n  { \r\n    id: 3, \r\n    name: 'Ученик Ван', \r\n    role: 'Соученик', \r\n    level: 45, \r\n    events: ['Вы тренировались вместе с Ваном', 'Вы одолжили Вану духовный камень'] \r\n  },\r\n  { \r\n    id: 4, \r\n    name: 'Ученица Мэй', \r\n    role: 'Соученица', \r\n    level: 40, \r\n    events: ['Мэй поделилась с вами техникой культивации'] \r\n  },\r\n  { \r\n    id: 5, \r\n    name: 'Торговец Чен', \r\n    role: 'Торговец', \r\n    level: 30, \r\n    events: ['Вы купили товары у Чена', 'Чен дал вам скидку'] \r\n  },\r\n  { \r\n    id: 6, \r\n    name: 'Глава клана Сюй', \r\n    role: 'Глава враждебного клана', \r\n    level: 10, \r\n    events: ['Глава клана Сюй угрожал вам', 'Вы избежали ловушки клана Сюй'] \r\n  }\r\n];\r\n\r\n/**\r\n * Функция для получения начальных социальных отношений\r\n * @returns {Array} Массив начальных отношений\r\n */\r\nexport const getInitialRelationships = () => {\r\n  return JSON.parse(JSON.stringify(initialRelationships)); // Возвращаем копию массива\r\n};\r\n\r\nexport default initialRelationships;\r\n","/**\r\n * API-сервис для работы с сервером\r\n * Использует адаптеры для авторизации и хранения игровых данных\r\n */\r\n\r\n// Импортируем сервисы через адаптеры для поддержки как серверного, так и браузерного окружения\r\nimport AuthService from './auth-adapter';\r\nimport CultivationService from './cultivation-adapter';\r\nimport InventoryService from './inventory-service';\r\nimport TechniqueService from './technique-service';\r\nimport CharacterStatsService from './character-stats-service';\r\nimport QuestService from './quest-service';\r\nimport ResourceService from './resource-service';\r\nimport { getInitializedUserModel } from '../models/user';\r\nimport CharacterProfileService from './character-profile-service';\r\nimport initialRelationships, { getInitialRelationships } from '../utils/initialRelationships';\r\nimport { hashPassword } from './web-crypto-hash';\r\n\r\n// Базовый URL API (в реальном приложении)\r\n// const API_URL = 'https://api.cultivationgame.com/v1';\r\n\r\n// Имитация задержки сети\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n/**\r\n * Сервис для работы с API\r\n */\r\nconst apiService = {\r\n  /**\r\n   * Авторизация пользователя\r\n   * @param {string} username - Имя пользователя\r\n   * @param {string} password - Пароль\r\n   * @returns {Promise<Object>} - Данные пользователя и токен\r\n   */\r\n  async login(username, password) {\r\n    // Имитация запроса к серверу\r\n    await delay(1000);\r\n    \r\n    try {\r\n      // Используем AuthService для авторизации через базу данных\r\n      const user = await AuthService.loginUser(username, password);\r\n      \r\n      // Успешная авторизация\r\n      console.log('Успешная авторизация:', user.username);\r\n      \r\n      // Генерируем токен (в реальном приложении это будет JWT)\r\n      const token = Math.random().toString(36).substring(2);\r\n      \r\n      // Сохраняем только токен и имя пользователя в localStorage для сессии\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('currentUser', user.username);\r\n      \r\n      return {\r\n        user: {\r\n          id: user.id,\r\n          username: user.username,\r\n          email: user.email,\r\n          cultivationLevel: user.cultivationLevel,\r\n          experience: user.experience\r\n        },\r\n        token\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка входа:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Регистрация нового пользователя\r\n   * @param {string} username - Имя пользователя\r\n   * @param {string} password - Пароль\r\n   * @returns {Promise<Object>} - Данные пользователя и токен\r\n   */\r\n  async register(username, password) {\r\n    // Имитация запроса к серверу\r\n    await delay(1000);\r\n    \r\n    try {\r\n      // Создаем email на основе имени пользователя\r\n      const email = `${username}@example.com`;\r\n      \r\n      // Используем AuthService для регистрации пользователя в базе данных\r\n      const user = await AuthService.registerUser(username, email, password);\r\n      \r\n      // Генерируем токен (в реальном приложении это будет JWT)\r\n      const token = Math.random().toString(36).substring(2);\r\n      \r\n      // Сохраняем только токен и имя пользователя в localStorage для сессии\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('currentUser', username);\r\n      \r\n      console.log('Успешная регистрация:', username);\r\n      \r\n      // Создаем профиль пользователя с начальными данными\r\n      await CharacterProfileService.updateCharacterProfile(user.id, {\r\n        name: null,  // Будет заполнено при создании персонажа\r\n        gender: null,\r\n        region: null,\r\n        background: null,\r\n        description: null,\r\n        social: {\r\n          sect: null,\r\n          reputation: {},\r\n          friends: [],\r\n          relationships: getInitialRelationships() // Используем начальные отношения\r\n        }\r\n      });\r\n      \r\n      return {\r\n        user: {\r\n          id: user.id,\r\n          username: user.username,\r\n          email: user.email,\r\n          cultivationLevel: user.cultivationLevel,\r\n          experience: user.experience,\r\n          // Добавляем базовую структуру социальных данных для совместимости\r\n          social: {\r\n            sect: null,\r\n            reputation: {},\r\n            friends: [],\r\n            relationships: getInitialRelationships()\r\n          }\r\n        },\r\n        token\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка регистрации:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Выход из системы\r\n   * @returns {Promise<void>}\r\n   */\r\n  async logout() {\r\n    // Имитация запроса к серверу\r\n    await delay(500);\r\n    \r\n    // Удаляем токен\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('currentUser');\r\n    \r\n    console.log('Выход из системы');\r\n  },\r\n  \r\n  /**\r\n   * Проверка авторизации\r\n   * @returns {Promise<boolean>}\r\n   */\r\n  async checkAuth() {\r\n    // Имитация запроса к серверу\r\n    await delay(500);\r\n    \r\n    // Проверяем наличие токена и имени пользователя в localStorage\r\n    const token = localStorage.getItem('authToken');\r\n    const username = localStorage.getItem('currentUser');\r\n    \r\n    if (!token || !username) {\r\n      return false;\r\n    }\r\n    \r\n    // Проверяем наличие пользователя в базе данных\r\n    try {\r\n      const user = await AuthService.getUserProfile(username);\r\n      return !!user;\r\n    } catch (error) {\r\n      console.warn('Ошибка проверки авторизации:', error);\r\n      // Если пользователь не найден в базе данных, очищаем токен\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('currentUser');\r\n      return false;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Получение данных текущего пользователя\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async getCurrentUser() {\r\n    // Имитация запроса к серверу\r\n    await delay(500);\r\n    \r\n    // Получаем имя текущего пользователя\r\n    const username = localStorage.getItem('currentUser');\r\n    \r\n    if (!username) {\r\n      throw new Error('Пользователь не авторизован');\r\n    }\r\n    \r\n    try {\r\n      // Получаем пользователя из базы данных\r\n      const user = await AuthService.getUserProfile(username);\r\n      \r\n      // Получаем профиль персонажа\r\n      const characterProfile = await CharacterProfileService.getCharacterProfile(user.id);\r\n      \r\n      // Формируем и возвращаем данные пользователя\r\n      return {\r\n        id: user.id,\r\n        username: user.username,\r\n        email: user.email,\r\n        cultivationLevel: user.cultivationLevel,\r\n        experience: user.experience,\r\n        // Добавляем данные персонажа, если они есть\r\n        ...(characterProfile ? {\r\n          name: characterProfile.name,\r\n          gender: characterProfile.gender,\r\n          region: characterProfile.region,\r\n          background: characterProfile.background,\r\n          description: characterProfile.description,\r\n          social: characterProfile.social || {\r\n            sect: null,\r\n            reputation: {},\r\n            friends: [],\r\n            relationships: getInitialRelationships()\r\n          }\r\n        } : {})\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка получения данных пользователя:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Сохранение игрового состояния\r\n   * @param {Object} gameState - Игровое состояние\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async saveGameState(gameState) {\r\n    try {\r\n      // Имитация задержки сети\r\n      await delay(300);\r\n      \r\n      // Получаем имя текущего пользователя\r\n      const username = localStorage.getItem('currentUser');\r\n      \r\n      if (!username) {\r\n        throw new Error('Пользователь не авторизован');\r\n      }\r\n      \r\n      // Получаем пользователя из базы данных\r\n      const user = await AuthService.getUserProfile(username);\r\n      \r\n      if (!user) {\r\n        throw new Error('Пользователь не найден в базе данных');\r\n      }\r\n      \r\n      // Сохраняем данные в базу данных\r\n      if (gameState && gameState.player) {\r\n        // Сохраняем профиль персонажа\r\n        if (gameState.player.name) {\r\n          await CharacterProfileService.updateCharacterProfile(user.id, {\r\n            name: gameState.player.name,\r\n            gender: gameState.player.gender,\r\n            region: gameState.player.region,\r\n            background: gameState.player.background,\r\n            description: gameState.player.description,\r\n            avatar: gameState.player.avatar,\r\n            level: gameState.player.level,\r\n            experience: gameState.player.experience,\r\n            currency: gameState.player.inventory.currency,\r\n            reputation: gameState.player.social.reputation,\r\n            relationships: gameState.player.social.relationships\r\n          });\r\n        }\r\n        \r\n        // Сохраняем данные о культивации\r\n        if (gameState.player.cultivation) {\r\n          await CultivationService.updateCultivationProgress(user.id, gameState.player.cultivation);\r\n        }\r\n        \r\n        // Сохраняем характеристики персонажа\r\n        if (gameState.player.stats) {\r\n          await CharacterStatsService.updateCharacterStats(user.id, gameState.player.stats);\r\n        }\r\n        \r\n        // Сохраняем инвентарь\r\n        if (gameState.player.inventory && gameState.player.inventory.items) {\r\n          // Удаляем все предметы инвентаря и добавляем новые\r\n          for (const item of gameState.player.inventory.items) {\r\n            await InventoryService.addInventoryItem(user.id, item);\r\n          }\r\n        }\r\n        \r\n        // Сохраняем изученные техники\r\n        if (gameState.player.techniques) {\r\n          for (const technique of gameState.player.techniques) {\r\n            try {\r\n              // Проверяем, изучена ли уже техника\r\n              const learnedTechniques = await TechniqueService.getLearnedTechniques(user.id);\r\n              const isLearned = learnedTechniques.some(t => t.id === technique.id);\r\n              \r\n              if (!isLearned) {\r\n                // Если техника еще не изучена, изучаем ее\r\n                await TechniqueService.learnTechnique(user.id, technique.id);\r\n              } else {\r\n                // Если техника уже изучена, обновляем ее уровень\r\n                if (technique.level > 1) {\r\n                  for (let i = 1; i < technique.level; i++) {\r\n                    await TechniqueService.upgradeTechnique(user.id, technique.id);\r\n                  }\r\n                }\r\n              }\r\n            } catch (error) {\r\n              //console.error(`Ошибка при сохранении техники ${technique.id}:`, error);\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Сохраняем прогресс заданий\r\n        if (gameState.player.progress && gameState.player.progress.quests) {\r\n          // Активные задания\r\n          for (const quest of gameState.player.progress.quests.active) {\r\n            try {\r\n              await QuestService.acceptQuest(user.id, quest.id);\r\n              await QuestService.updateQuestProgress(user.id, quest.id, quest.progress || {});\r\n            } catch (error) {\r\n              console.error(`Ошибка при сохранении активного задания ${quest.id}:`, error);\r\n            }\r\n          }\r\n          \r\n          // Завершенные задания\r\n          for (const quest of gameState.player.progress.quests.completed) {\r\n            try {\r\n              await QuestService.acceptQuest(user.id, quest.id);\r\n              await QuestService.completeQuest(user.id, quest.id);\r\n            } catch (error) {\r\n              console.error(`Ошибка при сохранении завершенного задания ${quest.id}:`, error);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      //console.log('Игровое состояние сохранено в базе данных для пользователя:', username);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении игрового состояния:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Загрузка игрового состояния\r\n   * @returns {Promise<Object>}\r\n   */\r\n  async loadGameState() {\r\n    try {\r\n      // Имитация задержки сети\r\n      await delay(300);\r\n      \r\n      // Получаем имя текущего пользователя\r\n      const username = localStorage.getItem('currentUser');\r\n      \r\n      if (!username) {\r\n        throw new Error('Пользователь не авторизован');\r\n      }\r\n      \r\n      // Получаем пользователя из базы данных\r\n      const user = await AuthService.getUserProfile(username);\r\n      \r\n      if (!user) {\r\n        throw new Error('Пользователь не найден в базе данных');\r\n      }\r\n      \r\n      // Создаем базовое игровое состояние\r\n      const gameState = {\r\n        player: {\r\n          id: user.id,\r\n          stats: {},\r\n          cultivation: {},\r\n          inventory: {\r\n            items: [],\r\n            equipment: {},\r\n            currency: {\r\n              copper: 0,\r\n              silver: 0,\r\n              gold: 0,\r\n              spiritStones: 0\r\n            }\r\n          },\r\n          techniques: [],\r\n          progress: {\r\n            quests: {\r\n              active: [],\r\n              available: [],\r\n              completed: []\r\n            },\r\n            discoveries: {},\r\n            achievements: {}\r\n          },\r\n          social: {\r\n            sect: null,\r\n            reputation: {},\r\n            friends: [],\r\n            relationships: getInitialRelationships() // Используем начальные отношения\r\n          }\r\n        },\r\n        world: {\r\n          currentLocation: null,\r\n          time: {\r\n            day: 1,\r\n            hour: 6,\r\n            minute: 0,\r\n            season: 'spring',\r\n            year: 1\r\n          },\r\n          weather: 'clear',\r\n          events: []\r\n        },\r\n        ui: {\r\n          currentScreen: 'world',\r\n          notifications: [],\r\n          dialogs: [],\r\n          settings: {\r\n            soundVolume: 0.5,\r\n            musicVolume: 0.5,\r\n            graphicsQuality: 'medium'\r\n          }\r\n        },\r\n        achievements: {\r\n          completed: [],\r\n          points: 0\r\n        },\r\n        combat: {\r\n          inCombat: false,\r\n          enemy: null,\r\n          log: [],\r\n          turn: 1\r\n        }\r\n      };\r\n      \r\n      // Загружаем данные из базы данных\r\n      \r\n      // Загружаем профиль персонажа\r\n      const characterProfile = await CharacterProfileService.getCharacterProfile(user.id);\r\n      \r\n      if (characterProfile) {\r\n        // Если профиль персонажа существует, загружаем его данные\r\n        gameState.player.name = characterProfile.name;\r\n        gameState.player.gender = characterProfile.gender;\r\n        gameState.player.region = characterProfile.region;\r\n        gameState.player.background = characterProfile.background;\r\n        gameState.player.description = characterProfile.description;\r\n        gameState.player.avatar = characterProfile.avatar;\r\n        gameState.player.level = characterProfile.level;\r\n        gameState.player.experience = characterProfile.experience;\r\n        gameState.player.inventory.currency = characterProfile.currency;\r\n        gameState.player.social.reputation = characterProfile.reputation;\r\n        \r\n        // Проверка и преобразование relationships\r\n        if (characterProfile.relationships) {\r\n          // Если relationships существует, проверяем формат\r\n          if (!Array.isArray(characterProfile.relationships)) {\r\n            console.log('Преобразование relationships из объекта в массив');\r\n            // Если это объект, преобразуем его в массив\r\n            gameState.player.social.relationships = Object.values(characterProfile.relationships);\r\n          } else {\r\n            // Если это массив, используем его\r\n            gameState.player.social.relationships = characterProfile.relationships;\r\n          }\r\n          \r\n          // Если relationships пустой, используем начальные отношения\r\n          if (Array.isArray(gameState.player.social.relationships) && \r\n              gameState.player.social.relationships.length === 0) {\r\n            console.log('Relationships пустой, используем начальные отношения');\r\n            gameState.player.social.relationships = getInitialRelationships();\r\n          }\r\n        } else {\r\n          // Если relationships не существует, используем начальные отношения\r\n          console.log('Relationships не найден, используем начальные отношения');\r\n          gameState.player.social.relationships = getInitialRelationships();\r\n        }\r\n      }\r\n      \r\n      // Загружаем данные о культивации\r\n      const cultivation = await CultivationService.getCultivationProgress(user.id);\r\n      gameState.player.cultivation = cultivation;\r\n      \r\n      // Загружаем характеристики персонажа\r\n      const stats = await CharacterStatsService.getCharacterStats(user.id);\r\n      gameState.player.stats = stats;\r\n      \r\n      // Загружаем вторичные характеристики\r\n      const secondaryStats = CharacterStatsService.calculateSecondaryStats(stats, cultivation);\r\n      gameState.player.secondaryStats = secondaryStats;\r\n      \r\n      // Загружаем инвентарь\r\n      const inventoryItems = await InventoryService.getInventoryItems(user.id);\r\n      gameState.player.inventory.items = inventoryItems;\r\n      \r\n      // Загружаем изученные техники\r\n      const techniques = await TechniqueService.getLearnedTechniques(user.id);\r\n      gameState.player.techniques = techniques;\r\n      \r\n      // Загружаем задания\r\n      const quests = await QuestService.getQuests(user.id);\r\n      gameState.player.progress.quests = quests;\r\n      \r\n      console.log('Игровое состояние загружено из базы данных для пользователя:', username);\r\n      \r\n      return gameState;\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке игрового состояния:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * Миграция пользователей из localStorage в базу данных\r\n   * @returns {Promise<Object>} - Результат миграции\r\n   */\r\n  async migrateUsersToDatabase() {\r\n    try {\r\n      // Получаем пользователей из localStorage\r\n      const users = JSON.parse(localStorage.getItem('users') || '{}');\r\n      const migrationResults = {\r\n        success: true,\r\n        processed: 0,\r\n        migrated: 0,\r\n        skipped: 0,\r\n        errors: []\r\n      };\r\n      \r\n      // Для каждого пользователя в localStorage\r\n      for (const username in users) {\r\n        migrationResults.processed++;\r\n        const localUser = users[username];\r\n        \r\n        try {\r\n          // Проверяем, существует ли пользователь в БД\r\n          let dbUser = null;\r\n          try {\r\n            const UserModel = await getInitializedUserModel();\r\n            dbUser = await UserModel.findOne({ where: { username } });\r\n          } catch (findError) {\r\n            console.error(`Ошибка при поиске пользователя ${username}:`, findError);\r\n            migrationResults.errors.push({\r\n              username,\r\n              stage: 'search',\r\n              error: findError.message\r\n            });\r\n          }\r\n          \r\n          if (!dbUser) {\r\n            // Создаем пользователя в БД\r\n            const email = localUser.email || `${username}@example.com`;\r\n            \r\n            try {\r\n              // Создаем хешированный пароль с использованием WebCrypto вместо bcrypt\r\n              const passwordHash = await hashPassword(localUser.password);\r\n              \r\n              // Создаем пользователя\r\n              const UserModel = await getInitializedUserModel();\r\n              await UserModel.create({\r\n                username,\r\n                email,\r\n                passwordHash,\r\n                cultivationLevel: 1,\r\n                experience: 0,\r\n                createdAt: new Date(),\r\n                updatedAt: new Date()\r\n              });\r\n              \r\n              console.log(`Пользователь ${username} успешно мигрирован в БД`);\r\n              migrationResults.migrated++;\r\n            } catch (createError) {\r\n              console.error(`Ошибка при создании пользователя ${username} в БД:`, createError);\r\n              migrationResults.errors.push({\r\n                username,\r\n                stage: 'create',\r\n                error: createError.message\r\n              });\r\n            }\r\n          } else {\r\n            console.log(`Пользователь ${username} уже существует в БД`);\r\n            migrationResults.skipped++;\r\n          }\r\n        } catch (error) {\r\n          console.error(`Ошибка при миграции пользователя ${username}:`, error);\r\n          migrationResults.errors.push({\r\n            username,\r\n            stage: 'process',\r\n            error: error.message\r\n          });\r\n        }\r\n      }\r\n      \r\n      return migrationResults;\r\n    } catch (error) {\r\n      console.error('Общая ошибка миграции пользователей:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiService;\r\n","// Начальное состояние игры\r\nconst initialState = {\r\n  // Данные игрока\r\n  player: {\r\n    id: null,\r\n    name: '',\r\n    avatar: '',\r\n    gender: '',\r\n    background: '',\r\n    region: '',\r\n    \r\n    // Характеристики\r\n    stats: {\r\n      strength: 10, // Сила\r\n      intellect: 10, // Дух\r\n      agility: 10, // Ловкость\r\n      health: 100, // Здоровье - исправлено с 10 на 100 для согласованности\r\n      maxHealth: 100, // Максимальное здоровье\r\n      energy: 100, // Текущая энергия\r\n      maxEnergy: 100, // Максимальная энергия\r\n      unassignedPoints: 0, // Нераспределенные очки характеристик\r\n    },\r\n    \r\n    // Вторичные характеристики\r\n    secondaryStats: {\r\n      physicalDefense: 0,\r\n      spiritualDefense: 0,\r\n      attackSpeed: 0,\r\n      criticalChance: 0,\r\n      movementSpeed: 0,\r\n      luck: 0,\r\n    },\r\n    \r\n    // Система культивации\r\n    cultivation: {\r\n      stage: 'Закалка тела', // Текущая ступень\r\n      level: 1, // Уровень в текущей ступени (1-9)\r\n      experience: 0, // Текущий опыт\r\n      experienceToNextLevel: 100, // Опыт для следующего уровня\r\n      energy: 100, // Текущая духовная энергия\r\n      maxEnergy: 100, // Максимальная духовная энергия\r\n      techniques: [], // Изученные техники\r\n    },\r\n    \r\n    // Инвентарь\r\n    inventory: {\r\n      items: [], // Предметы в инвентаре\r\n      equipment: {}, // Экипированные предметы\r\n      currency: {\r\n        copper: 0, // Медные монеты\r\n        silver: 0, // Серебряные монеты\r\n        gold: 0, // Золотые монеты\r\n        spiritStones: 0, // Духовные камни (премиум валюта)\r\n      },\r\n    },\r\n    \r\n    // Социальные данные\r\n    social: {\r\n      sect: null, // Принадлежность к секте\r\n      reputationLegacy: {}, // Устаревшие данные о репутации (для совместимости)\r\n      friends: [], // Список друзей\r\n      relationships: [], // Отношения с NPC (массив, а не объект!)\r\n    },\r\n    \r\n    // Прогресс\r\n    progress: {\r\n      quests: {\r\n        active: [],\r\n        available: [],\r\n        completed: []\r\n      },\r\n      discoveries: {}, // Открытые локации\r\n      achievements: {}, // Достижения\r\n    },\r\n    techniques: [],\r\n    activeTechniques: {}, // Активные эффекты от техник с таймерами\r\n    // Примечание: основные параметры здоровья и энергии уже перенесены в stats выше\r\n    statusEffects: {},\r\n    \r\n    // Духовные питомцы\r\n    spiritPets: {\r\n      pets: [], // Список питомцев игрока\r\n      activePetId: null, // ID активного питомца\r\n    },\r\n    \r\n    // История боев\r\n    combatHistory: [] // Сохраняет результаты всех завершенных боев\r\n  },\r\n  \r\n  // Состояние игрового мира\r\n  world: {\r\n    currentLocation: null, // Текущая локация\r\n    time: {\r\n      day: 1,\r\n      hour: 6,\r\n      minute: 0,\r\n      season: 'spring',\r\n      year: 1,\r\n    },\r\n    weather: 'clear', // Текущая погода\r\n    events: [], // Активные события\r\n    generatedEnemies: {}, // Кэш сгенерированных врагов\r\n  },\r\n  \r\n  // Состояние интерфейса\r\n  ui: {\r\n    currentScreen: 'world', // Текущий экран (world, inventory, character, etc.)\r\n    notifications: [], // Уведомления\r\n    dialogs: [], // Активные диалоги\r\n    settings: {\r\n      soundVolume: 0.5,\r\n      musicVolume: 0.5,\r\n      graphicsQuality: 'medium',\r\n    },\r\n  },\r\n  \r\n  achievements: {\r\n    completed: [],\r\n    points: 0\r\n  },\r\n  \r\n  combat: {\r\n    inCombat: false,\r\n    enemy: null,\r\n    log: [],\r\n    turn: 1,\r\n    \r\n    // Расширенное состояние боя для сохранения прогресса\r\n    playerCombatState: {\r\n      stats: null,\r\n      effects: []\r\n    },\r\n    \r\n    enemyCombatState: null,\r\n    \r\n    isPlayerTurn: true,\r\n    combatStats: {\r\n      player: { damageDealt: 0, techniquesUsed: 0, criticalHits: 0, dodges: 0 },\r\n      enemy: { damageDealt: 0, techniquesUsed: 0, criticalHits: 0, dodges: 0 }\r\n    },\r\n    \r\n    startTime: null,\r\n    \r\n    // История боев\r\n    lastCombatResult: null\r\n  },\r\n  \r\n  // Состояние сект\r\n  sect: {\r\n    sect: null, // Информация о секте\r\n    loading: false,\r\n    error: null,\r\n    userRank: null, // Ранг пользователя в секте\r\n    privileges: [], // Привилегии пользователя в секте\r\n    benefits: [], // Бонусы от секты в виде массива эффектов\r\n    selectedMember: null // Выбранный член секты для взаимодействия\r\n  },\r\n  \r\n  // Состояние рынка и торговли\r\n  market: {\r\n    playerItems: [], // Предметы, выставленные игроком на продажу\r\n    marketItems: [], // Предметы других игроков на рынке\r\n    merchantReputation: {}, // Репутация игрока у разных торговцев\r\n    lastUpdated: null, // Время последнего обновления рынка\r\n  },\r\n  \r\n  // Система репутации\r\n  reputation: {\r\n    // Данные о репутации\r\n    data: {\r\n      cities: [],\r\n      factions: [],\r\n      global: null\r\n    },\r\n    // Доступные возможности\r\n    features: [],\r\n    // Уведомления\r\n    notifications: [],\r\n    // Статус загрузки\r\n    loading: false,\r\n    // Флаг изменения репутации\r\n    changing: false,\r\n    // Ошибка\r\n    error: null\r\n  },\r\n  \r\n  isInitialized: false\r\n};\r\n\r\nexport default initialState;\r\n","// Типы действий\r\nconst ACTION_TYPES = {\r\n  // Действия для групп и групповых активностей\r\n  SET_GROUPS: 'SET_GROUPS',\r\n  SET_CURRENT_GROUP: 'SET_CURRENT_GROUP',\r\n  CREATE_GROUP: 'CREATE_GROUP',\r\n  UPDATE_GROUP: 'UPDATE_GROUP',\r\n  DELETE_GROUP: 'DELETE_GROUP',\r\n  JOIN_GROUP: 'JOIN_GROUP',\r\n  LEAVE_GROUP: 'LEAVE_GROUP',\r\n  SET_GROUP_ACTIVITIES: 'SET_GROUP_ACTIVITIES',\r\n  SET_CURRENT_ACTIVITY: 'SET_CURRENT_ACTIVITY',\r\n  FETCH_USER_INVITATIONS: 'FETCH_USER_INVITATIONS',\r\n  SET_USER_INVITATIONS: 'SET_USER_INVITATIONS',\r\n  RESPOND_TO_INVITATION: 'RESPOND_TO_INVITATION',\r\n  \r\n  // Действия для экземпляров групповых активностей\r\n  CREATE_ACTIVITY_INSTANCE: 'CREATE_ACTIVITY_INSTANCE',\r\n  FETCH_GROUP_ACTIVITY_INSTANCES: 'FETCH_GROUP_ACTIVITY_INSTANCES',\r\n  SET_GROUP_ACTIVITY_INSTANCES: 'SET_GROUP_ACTIVITY_INSTANCES',\r\n  UPDATE_ACTIVITY_INSTANCE: 'UPDATE_ACTIVITY_INSTANCE',\r\n  START_ACTIVITY: 'START_ACTIVITY',\r\n  UPDATE_ACTIVITY_PROGRESS: 'UPDATE_ACTIVITY_PROGRESS',\r\n  COMPLETE_ACTIVITY: 'COMPLETE_ACTIVITY',\r\n  FAIL_ACTIVITY: 'FAIL_ACTIVITY',\r\n  ABANDON_ACTIVITY: 'ABANDON_ACTIVITY',\r\n  ADD_ACTIVITY_PARTICIPANT: 'ADD_ACTIVITY_PARTICIPANT',\r\n  REMOVE_ACTIVITY_PARTICIPANT: 'REMOVE_ACTIVITY_PARTICIPANT',\r\n  UPDATE_ACTIVITY_REWARDS: 'UPDATE_ACTIVITY_REWARDS',\r\n  ADD_REWARDS: 'ADD_REWARDS',\r\n  \r\n  // Добавляем новый тип действия для инициализации погоды с прогнозом\r\n  INITIALIZE_WEATHER: 'INITIALIZE_WEATHER',\r\n  UPDATE_PLAYER: 'UPDATE_PLAYER',\r\n  UPDATE_PLAYER_STATS: 'UPDATE_PLAYER_STATS',\r\n  UPDATE_CULTIVATION: 'UPDATE_CULTIVATION',\r\n  ADD_ITEM: 'ADD_ITEM',\r\n  REMOVE_ITEM: 'REMOVE_ITEM',\r\n  EQUIP_ITEM: 'EQUIP_ITEM',\r\n  UNEQUIP_ITEM: 'UNEQUIP_ITEM',\r\n  UPDATE_CURRENCY: 'UPDATE_CURRENCY',\r\n  UPDATE_LOCATION: 'UPDATE_LOCATION',\r\n  UPDATE_TIME: 'UPDATE_TIME',\r\n  UPDATE_WEATHER: 'UPDATE_WEATHER',\r\n  ADD_EVENT: 'ADD_EVENT',\r\n  REMOVE_EVENT: 'REMOVE_EVENT',\r\n  CHANGE_SCREEN: 'CHANGE_SCREEN',\r\n  ADD_NOTIFICATION: 'ADD_NOTIFICATION',\r\n  REMOVE_NOTIFICATION: 'REMOVE_NOTIFICATION',\r\n  UPDATE_SETTINGS: 'UPDATE_SETTINGS',\r\n  SAVE_GAME: 'SAVE_GAME',\r\n  LOAD_GAME: 'LOAD_GAME',\r\n  ACCEPT_QUEST: 'ACCEPT_QUEST',\r\n  COMPLETE_QUEST: 'COMPLETE_QUEST',\r\n  UPDATE_QUEST_OBJECTIVE: 'UPDATE_QUEST_OBJECTIVE',\r\n  CHECK_ACHIEVEMENTS: 'CHECK_ACHIEVEMENTS',\r\n  COMPLETE_ACHIEVEMENT: 'COMPLETE_ACHIEVEMENT',\r\n  LEARN_TECHNIQUE: 'LEARN_TECHNIQUE',\r\n  UPGRADE_TECHNIQUE: 'UPGRADE_TECHNIQUE',\r\n  USE_TECHNIQUE: 'USE_TECHNIQUE',\r\n  START_COMBAT: 'START_COMBAT',\r\n  END_COMBAT: 'END_COMBAT',\r\n  UPDATE_COMBAT: 'UPDATE_COMBAT',\r\n  UPDATE_COMBAT_STATE: 'UPDATE_COMBAT_STATE',\r\n  ADD_COMBAT_LOG: 'ADD_COMBAT_LOG',\r\n  ADD_STATUS_EFFECT: 'ADD_STATUS_EFFECT',\r\n  UPDATE_STATUS_EFFECT: 'UPDATE_STATUS_EFFECT',\r\n  REMOVE_STATUS_EFFECT: 'REMOVE_STATUS_EFFECT',\r\n  SET_INITIALIZED: 'SET_INITIALIZED',\r\n  SET_ERROR: 'SET_ERROR',\r\n  \r\n  // Действия для сект\r\n  SET_SECT: 'SET_SECT',\r\n  UPDATE_SECT: 'UPDATE_SECT',\r\n  JOIN_SECT: 'JOIN_SECT',\r\n  LEAVE_SECT: 'LEAVE_SECT',\r\n  CONTRIBUTE_TO_SECT: 'CONTRIBUTE_TO_SECT',\r\n  TRAIN_SECT_MEMBER: 'TRAIN_SECT_MEMBER',\r\n  UPDATE_SECT_MEMBER: 'UPDATE_SECT_MEMBER',\r\n  UPDATE_SECT_BENEFITS: 'UPDATE_SECT_BENEFITS',\r\n  UPDATE_SECT_RANK: 'UPDATE_SECT_RANK',\r\n  \r\n  // Действия для духовных питомцев\r\n  ADD_SPIRIT_PET: 'ADD_SPIRIT_PET',\r\n  REMOVE_SPIRIT_PET: 'REMOVE_SPIRIT_PET',\r\n  REMOVE_FLEEING_PET: 'REMOVE_FLEEING_PET',\r\n  UPDATE_SPIRIT_PET: 'UPDATE_SPIRIT_PET',\r\n  SET_ACTIVE_SPIRIT_PET: 'SET_ACTIVE_SPIRIT_PET',\r\n  FEED_SPIRIT_PET: 'FEED_SPIRIT_PET',\r\n  TRAIN_SPIRIT_PET: 'TRAIN_SPIRIT_PET',\r\n  USE_PET_ABILITY: 'USE_PET_ABILITY',\r\n  UPDATE_PETS_STATE: 'UPDATE_PETS_STATE',\r\n  \r\n  // Действия для рынка и торговли\r\n  ADD_MARKET_ITEM: 'ADD_MARKET_ITEM',\r\n  REMOVE_MARKET_ITEM: 'REMOVE_MARKET_ITEM',\r\n  UPDATE_MARKET_ITEM: 'UPDATE_MARKET_ITEM',\r\n  BUY_MARKET_ITEM: 'BUY_MARKET_ITEM',\r\n  SELL_MARKET_ITEM: 'SELL_MARKET_ITEM',\r\n  UPDATE_MERCHANT_REPUTATION: 'UPDATE_MERCHANT_REPUTATION',\r\n  UPDATE_MARKET_STATE: 'UPDATE_MARKET_STATE',\r\n  \r\n  // Действия для кэширования врагов\r\n  CACHE_GENERATED_ENEMY: 'CACHE_GENERATED_ENEMY',\r\n  \r\n  // Действия для экипировки\r\n  APPLY_EQUIPMENT_BONUSES: 'APPLY_EQUIPMENT_BONUSES',\r\n  \r\n  // Действия для отношений с персонажами\r\n  UPDATE_RELATIONSHIP: 'UPDATE_RELATIONSHIP',\r\n  \r\n  // Действие для исправления техник\r\n  REPAIR_TECHNIQUES: 'REPAIR_TECHNIQUES',\r\n  \r\n  // Действие для сохранения истории боев в состоянии игрока\r\n  ADD_COMBAT_HISTORY: 'ADD_COMBAT_HISTORY',\r\n  \r\n  // Действие для нормализации данных сект\r\n  NORMALIZE_SECT_DATA: 'NORMALIZE_SECT_DATA',\r\n  \r\n  // Действие для нормализации эффектов\r\n  NORMALIZE_EFFECTS: 'NORMALIZE_EFFECTS',\r\n  \r\n  // Действия для синхронизации отношений между сектой и социальными отношениями\r\n  SYNC_SECT_TO_SOCIAL: 'SYNC_SECT_TO_SOCIAL',\r\n  SYNC_SOCIAL_TO_SECT: 'SYNC_SOCIAL_TO_SECT',\r\n  UPDATE_SECT_LOYALTY: 'UPDATE_SECT_LOYALTY',\r\n  UPDATE_SOCIAL_RELATIONSHIPS: 'UPDATE_SOCIAL_RELATIONSHIPS',\r\n  UPDATE_SECT_DATA: 'UPDATE_SECT_DATA',\r\n  \r\n  // Действие для одновременного обновления отношений и лояльности\r\n  UPDATE_RELATIONSHIP_AND_LOYALTY: 'UPDATE_RELATIONSHIP_AND_LOYALTY'\r\n};\r\n\r\nexport default ACTION_TYPES;\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\nimport CharacterStatsService from '../../services/character-stats-service';\r\nimport BonusService from '../../services/bonus-service';\r\nimport { ensureEquipmentHasCalculatedBonuses, ensureItemHasCalculatedBonuses } from '../../utils/equipmentBonusHelper';\r\nimport { normalizeStatusEffects, mergeEffects, reindexEffects, normalizePlayerEffects } from '../../utils/effectsNormalizer'; \r\nimport { createNormalizedSectData, collectAllSectBenefits, cleanEffects } from '../../utils/sectUtils';\r\nimport { syncSectRelationshipToSocial, syncSocialToSectRelationship, updateRelationshipAndLoyalty } from '../../utils/sectRelationshipSyncer.js';\r\n\r\n// Редуктор для обработки действий, связанных с игроком\r\nexport const playerReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.UPDATE_PLAYER:\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          ...action.payload,\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_PLAYER_STATS:\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          stats: {\r\n            ...state.player.stats,\r\n            ...action.payload,\r\n          },\r\n          // Пересчитываем вторичные характеристики при изменении основных\r\n          secondaryStats: CharacterStatsService.calculateSecondaryStats({\r\n            ...state.player.stats,\r\n            ...action.payload,\r\n          }, state.player.cultivation),\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_CULTIVATION:\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          cultivation: {\r\n            ...state.player.cultivation,\r\n            ...action.payload,\r\n          },\r\n          // Пересчитываем вторичные характеристики при изменении культивации\r\n          secondaryStats: CharacterStatsService.calculateSecondaryStats(\r\n            state.player.stats, \r\n            {\r\n              ...state.player.cultivation,\r\n              ...action.payload,\r\n            }\r\n          ),\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.ADD_ITEM:\r\n      // Проверяем, есть ли уже такой предмет в инвентаре\r\n      const existingItemIndex = state.player.inventory.items.findIndex(\r\n        item => item.id === action.payload.id\r\n      );\r\n      \r\n      if (existingItemIndex !== -1) {\r\n        // Если предмет уже есть, увеличиваем его количество\r\n        const updatedItems = [...state.player.inventory.items];\r\n        updatedItems[existingItemIndex] = {\r\n          ...updatedItems[existingItemIndex],\r\n          quantity: updatedItems[existingItemIndex].quantity + (action.payload.quantity || 1)\r\n        };\r\n        \r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            inventory: {\r\n              ...state.player.inventory,\r\n              items: updatedItems,\r\n            },\r\n          },\r\n        };\r\n      } else {\r\n        // Если предмета нет, добавляем новый с указанным количеством\r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            inventory: {\r\n              ...state.player.inventory,\r\n              items: [...state.player.inventory.items, {\r\n                ...action.payload,\r\n                quantity: action.payload.quantity || 1\r\n              }],\r\n            },\r\n          },\r\n        };\r\n      }\r\n      \r\n    case ACTION_TYPES.REMOVE_ITEM:\r\n      // Находим предмет, который нужно удалить\r\n      const itemToRemoveIndex = state.player.inventory.items.findIndex(\r\n        item => item.id === action.payload.id\r\n      );\r\n      \r\n      if (itemToRemoveIndex === -1) {\r\n        // Если предмет не найден, возвращаем состояние без изменений\r\n        return state;\r\n      }\r\n      \r\n      const itemToRemove = state.player.inventory.items[itemToRemoveIndex];\r\n      const quantityToRemove = action.payload.quantity || 1;\r\n      \r\n      if (itemToRemove.quantity <= quantityToRemove) {\r\n        // Если нужно удалить все количество или больше, удаляем предмет полностью\r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            inventory: {\r\n              ...state.player.inventory,\r\n              items: state.player.inventory.items.filter((_, index) => index !== itemToRemoveIndex),\r\n            },\r\n          },\r\n        };\r\n      } else {\r\n        // Если нужно удалить часть предметов, уменьшаем количество\r\n        const updatedItems = [...state.player.inventory.items];\r\n        updatedItems[itemToRemoveIndex] = {\r\n          ...itemToRemove,\r\n          quantity: itemToRemove.quantity - quantityToRemove\r\n        };\r\n        \r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            inventory: {\r\n              ...state.player.inventory,\r\n              items: updatedItems,\r\n            },\r\n          },\r\n        };\r\n      }\r\n      \r\n    case ACTION_TYPES.UPDATE_CURRENCY:\r\n      // Обрабатываем разные форматы валюты\r\n      const newCurrency = { ...(state.player.inventory.currency || {}) };\r\n      \r\n      if (typeof action.payload === 'number') {\r\n        // Обратная совместимость: если payload это число, добавляем его к текущему значению золота\r\n        newCurrency.gold = (newCurrency.gold || 0) + action.payload;\r\n      } else if (typeof action.payload === 'object') {\r\n        // Если payload это объект с разными типами валют\r\n        Object.entries(action.payload).forEach(([currency, amount]) => {\r\n          if (typeof amount === 'number') {\r\n            // ИСПРАВЛЕНО: Уточняем логику аддитивного режима\r\n            if (action.isAdditive === true) {\r\n              // Режим ДОБАВЛЕНИЯ - аддитивный (складываем)\r\n              newCurrency[currency] = (newCurrency[currency] || 0) + amount;\r\n            } else {\r\n              // Режим УСТАНОВКИ (по умолчанию) - заменяем значение\r\n              newCurrency[currency] = amount;\r\n            }\r\n          }\r\n        });\r\n      }\r\n      \r\n      // Отладочный вывод\r\n      console.log('Обновление валюты:', { \r\n        было: state.player.inventory.currency, \r\n        новое: newCurrency,\r\n        разница: action.payload,\r\n        режим: action.isAdditive === true ? 'добавление' : 'установка'\r\n      });\r\n      \r\n      console.log('Обновление валюты:', newCurrency);\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          inventory: {\r\n            ...state.player.inventory,\r\n            currency: newCurrency,\r\n          },\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_LOCATION:\r\n      // Дополнительная обработка для разрешения проблемы с отображением \"Неизвестно\" для локации\r\n      const locationPayload = action.payload;\r\n      // Если payload содержит только координаты, но не содержит полной информации о локации\r\n      const defaultLocations = [\r\n        { id: 1, name: 'Долина Начала', type: 'forest', x: 3, y: 3, description: 'Место, где начинают свой путь молодые культиваторы.', resources: [{ id: 1, name: 'Духовные травы', amount: 'Мало' }] },\r\n        { id: 2, name: 'Горы Облачного Пика', type: 'mountain', x: 5, y: 2, description: 'Высокие горы, окутанные облаками и духовной энергией.', resources: [{ id: 2, name: 'Духовные камни', amount: 'Средне' }] },\r\n        { id: 3, name: 'Город Восточного Ветра', type: 'city', x: 7, y: 5, description: 'Крупный город, центр торговли и культивации.', resources: [{ id: 3, name: 'Товары', amount: 'Много' }] },\r\n        { id: 4, name: 'Озеро Отражений', type: 'water', x: 2, y: 6, description: 'Мистическое озеро, в котором отражаются звезды даже днем.', resources: [{ id: 4, name: 'Водные эссенции', amount: 'Много' }] },\r\n        { id: 5, name: 'Пещера Тысячи Испытаний', type: 'dungeon', x: 8, y: 8, description: 'Древнее место испытаний для культиваторов.', resources: [{ id: 5, name: 'Сокровища', amount: 'Редко' }] }\r\n      ];\r\n      \r\n      // Если получены только координаты, ищем полную информацию о локации\r\n      let fullLocationInfo = locationPayload;\r\n      if (locationPayload && locationPayload.x !== undefined && (!locationPayload.name || !locationPayload.type)) {\r\n        // Поиск по координатам\r\n        const matchedLocation = defaultLocations.find(\r\n          loc => loc.x === locationPayload.x && loc.y === locationPayload.y\r\n        );\r\n        \r\n        if (matchedLocation) {\r\n          fullLocationInfo = {\r\n            ...matchedLocation,\r\n            ...locationPayload // Сохраняем все переданные данные\r\n          };\r\n          console.log(`🌍 Найдена полная информация о локации: ${fullLocationInfo.name}`);\r\n        }\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          currentLocation: fullLocationInfo,\r\n        },\r\n        player: {\r\n          ...state.player,\r\n          location: fullLocationInfo,\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.ADD_STATUS_EFFECT:\r\n      console.log('Добавление эффекта:', action.payload);\r\n      \r\n      // Получаем текущие эффекты и конвертируем в массив, если это объект\r\n      const currentEffects = normalizeStatusEffects(state.player.statusEffects);\r\n      \r\n      // Очищаем новый эффект от id и source\r\n      const cleanNewEffect = cleanEffects([action.payload])[0];\r\n      \r\n      // Добавляем очищенный новый эффект\r\n      const effectsWithNew = [...currentEffects, cleanNewEffect];\r\n      \r\n      // Получаем нормализованные бонусы секты, используя функцию из sectUtils\r\n      const sectBenefits = collectAllSectBenefits(state.sect);\r\n      \r\n      // Создаем новый объект игрока с обновленными эффектами\r\n      const playerWithNewEffect = {\r\n        ...state.player,\r\n        statusEffects: effectsWithNew\r\n      };\r\n      \r\n      // Используем функцию комплексной нормализации из effectsNormalizer.js\r\n      const normalizedPlayerWithNew = normalizePlayerEffects(playerWithNewEffect, state.sect);\r\n      \r\n      return {\r\n        ...state,\r\n        player: normalizedPlayerWithNew\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_STATUS_EFFECT:\r\n      console.log('Обновление эффекта:', action.payload);\r\n      \r\n      // Получаем текущие эффекты и конвертируем в массив\r\n      const allEffects = normalizeStatusEffects(state.player.statusEffects);\r\n      \r\n      // Получаем тип эффекта, который нужно обновить\r\n      const effectTypeToUpdate = action.payload.type;\r\n      if (!effectTypeToUpdate) {\r\n        console.error('Ошибка: тип эффекта не указан в обновлении', action.payload);\r\n        return state;\r\n      }\r\n      \r\n      // Создаем очищенную версию обновления\r\n      const cleanUpdatePayload = cleanEffects([action.payload])[0];\r\n      \r\n      // Находим и обновляем эффект по типу вместо ID\r\n      const updatedEffects = allEffects.map(effect => \r\n        effect.type === effectTypeToUpdate ? {...effect, ...cleanUpdatePayload} : effect\r\n      );\r\n      \r\n      // Создаем новый объект игрока с обновленными эффектами\r\n      const playerWithUpdatedEffect = {\r\n        ...state.player,\r\n        statusEffects: updatedEffects\r\n      };\r\n      \r\n      // Используем функцию комплексной нормализации из effectsNormalizer.js\r\n      const normalizedPlayerWithUpdated = normalizePlayerEffects(playerWithUpdatedEffect, state.sect);\r\n      \r\n      return {\r\n        ...state,\r\n        player: normalizedPlayerWithUpdated\r\n      };\r\n      \r\n    case ACTION_TYPES.REMOVE_STATUS_EFFECT:\r\n      // Теперь вместо ID передаем тип эффекта\r\n      console.log('Удаление эффекта с типом:', action.payload);\r\n      \r\n      // Получаем текущие эффекты и конвертируем в массив\r\n      const effectsArray = normalizeStatusEffects(state.player.statusEffects);\r\n      \r\n      // Определяем, что именно передано - ID или тип эффекта\r\n      const isTypeProvided = typeof action.payload === 'string';\r\n      \r\n      // Удаляем эффект по типу или ID\r\n      const filteredEffects = isTypeProvided \r\n        ? effectsArray.filter(effect => effect.type !== action.payload)\r\n        : effectsArray.filter(effect => effect.id !== action.payload);\r\n      \r\n      // Создаем новый объект игрока с отфильтрованными эффектами\r\n      const playerWithRemovedEffect = {\r\n        ...state.player,\r\n        statusEffects: filteredEffects\r\n      };\r\n      \r\n      // Используем функцию комплексной нормализации из effectsNormalizer.js\r\n      const normalizedPlayerWithRemoved = normalizePlayerEffects(playerWithRemovedEffect, state.sect);\r\n      \r\n      return {\r\n        ...state,\r\n        player: normalizedPlayerWithRemoved\r\n      };\r\n      \r\n    // Действие для нормализации эффектов\r\n    case ACTION_TYPES.NORMALIZE_EFFECTS:\r\n      console.log('📊 Принудительная нормализация эффектов');\r\n      \r\n      // Используем функцию комплексной нормализации\r\n      const normalizedPlayer = normalizePlayerEffects(state.player, state.sect);\r\n      \r\n      console.log('✅ Эффекты нормализованы:', normalizedPlayer.statusEffects);\r\n      \r\n      return {\r\n        ...state,\r\n        player: normalizedPlayer\r\n      };\r\n    \r\n    case ACTION_TYPES.EQUIP_ITEM:\r\n      console.log('Экипировка предмета:', action.payload);\r\n      \r\n      // Проверяем, что получили корректный предмет\r\n      if (!action.payload || !action.payload.id) {\r\n        console.error('Ошибка: некорректные данные для экипировки предмета', action.payload);\r\n        return state;\r\n      }\r\n      \r\n      // Убедимся, что предмет имеет предрассчитанные бонусы\r\n      const itemToEquip = ensureItemHasCalculatedBonuses(action.payload);\r\n      console.log('Предмет с бонусами для экипировки:', itemToEquip);\r\n      \r\n      // Обновляем инвентарь, помечая предмет как экипированный\r\n      const updatedInventoryItems = state.player.inventory.items.map(item => {\r\n        // Помечаем экипируемый предмет\r\n        if (item.id === itemToEquip.id) {\r\n          return { ...item, equipped: true };\r\n        }\r\n        \r\n        // Определяем тип брони для снятия других предметов того же типа\r\n        if (item.type === 'armor' && itemToEquip.type === 'armor' && item.id !== itemToEquip.id && item.equipped) {\r\n          // Получаем armorType для обоих предметов\r\n          const itemArmorType = item.properties?.armorType || item.armorType;\r\n          const newItemArmorType = itemToEquip.properties?.armorType || itemToEquip.armorType;\r\n          \r\n          // Если подтип брони не указан явно, определяем его по названию\r\n          const getArmorTypeFromName = (name) => {\r\n            if (!name) return 'body'; // По умолчанию\r\n            name = name.toLowerCase();\r\n            if (name.includes('шлем') || name.includes('шапка') || name.includes('капюшон')) {\r\n              return 'head';\r\n            } else if (name.includes('сапог') || name.includes('ботин') || name.includes('обувь')) {\r\n              return 'legs';\r\n            } else if (name.includes('перчат') || name.includes('рукав')) {\r\n              return 'hands';\r\n            } else {\r\n              return 'body'; // По умолчанию\r\n            }\r\n          };\r\n          \r\n          // Определяем окончательный тип для каждого предмета\r\n          const effectiveItemType = itemArmorType || getArmorTypeFromName(item.name);\r\n          const effectiveNewItemType = newItemArmorType || getArmorTypeFromName(itemToEquip.name);\r\n          \r\n          console.log(`Сравнение типов брони: ${item.name} (${effectiveItemType}) и ${itemToEquip.name} (${effectiveNewItemType})`);\r\n          \r\n          // Только если типы совпадают (например, оба \"head\"), снимаем старый предмет\r\n          if (effectiveItemType === effectiveNewItemType) {\r\n            console.log(`Снимаем предмет ${item.name}, т.к. экипируем предмет того же типа (${effectiveNewItemType})`);\r\n            return { ...item, equipped: false };\r\n          }\r\n          \r\n          // Предметы разных подтипов (например, \"head\" и \"legs\") остаются экипированными\r\n          return item;\r\n        }\r\n        \r\n        // Если это оружие и уже экипировано другое оружие, снимаем его\r\n        if (item.type === 'weapon' && itemToEquip.type === 'weapon' && item.id !== itemToEquip.id && item.equipped) {\r\n          return { ...item, equipped: false };\r\n        }\r\n        \r\n        // Для аксессуаров и артефактов особая логика - нужна информация о слоте\r\n        if ((item.type === 'accessory' && itemToEquip.type === 'accessory') || \r\n            (item.type === 'artifact' && itemToEquip.type === 'artifact')) {\r\n          // Здесь можно добавить логику выбора слота, если это требуется\r\n          // Пока просто оставляем как есть, позволяя экипировать два аксессуара/артефакта\r\n        }\r\n        \r\n        return item;\r\n      });\r\n      \r\n      // Создаем обновленное состояние игрока\r\n      const updatedPlayer = {\r\n        ...state.player,\r\n        inventory: {\r\n          ...state.player.inventory,\r\n          items: updatedInventoryItems\r\n        }\r\n      };\r\n      \r\n      // Находим все экипированные предметы для применения бонусов\r\n      const equippedItems = {};\r\n      updatedInventoryItems\r\n        .filter(item => item.equipped)\r\n        .forEach(item => {\r\n          // Определяем слот для предмета\r\n          let slot = null;\r\n          \r\n          switch(item.type) {\r\n            case 'weapon':\r\n              slot = 'weapon';\r\n              break;\r\n            case 'armor':\r\n              const armorType = item.properties?.armorType || item.armorType;\r\n              if (armorType === 'head') slot = 'headArmor';\r\n              else if (armorType === 'body') slot = 'bodyArmor';\r\n              else if (armorType === 'legs') slot = 'legArmor';\r\n              else if (armorType === 'hands') slot = 'handArmor';\r\n              else {\r\n                // Определяем по названию, если тип не указан\r\n                const name = item.name.toLowerCase();\r\n                if (name.includes('шлем') || name.includes('шапка')) slot = 'headArmor';\r\n                else if (name.includes('сапог') || name.includes('ботин')) slot = 'legArmor';\r\n                else if (name.includes('перчат') || name.includes('рукав')) slot = 'handArmor';\r\n                else slot = 'bodyArmor'; // По умолчанию - броня для тела\r\n              }\r\n              break;\r\n            case 'accessory':\r\n              // Находим первый пустой слот для аксессуара\r\n              if (!equippedItems['accessory1']) slot = 'accessory1';\r\n              else slot = 'accessory2';\r\n              break;\r\n            case 'artifact':\r\n              // Находим первый пустой слот для артефакта\r\n              if (!equippedItems['artifact1']) slot = 'artifact1';\r\n              else slot = 'artifact2';\r\n              break;\r\n          }\r\n          \r\n          if (slot) {\r\n            equippedItems[slot] = ensureItemHasCalculatedBonuses(item);\r\n          }\r\n        });\r\n      \r\n      // Применяем бонусы от экипировки\r\n      console.log('Применение бонусов после экипировки:', equippedItems);\r\n      \r\n      // Вызываем обработчик APPLY_EQUIPMENT_BONUSES для применения бонусов\r\n      const stateWithItem = {\r\n        ...state,\r\n        player: updatedPlayer\r\n      };\r\n      \r\n      // Применяем бонусы экипировки напрямую\r\n      const equipBonusesState = playerReducer(stateWithItem, { \r\n        type: ACTION_TYPES.APPLY_EQUIPMENT_BONUSES, \r\n        payload: equippedItems \r\n      });\r\n      \r\n      return equipBonusesState;\r\n      \r\n    case ACTION_TYPES.UNEQUIP_ITEM:\r\n      console.log('Снятие предмета экипировки:', action.payload);\r\n      \r\n      // Проверяем, что получили корректный слот\r\n      if (!action.payload) {\r\n        console.error('Ошибка: не указан слот для снятия предмета');\r\n        return state;\r\n      }\r\n      \r\n      // Находим предмет в указанном слоте\r\n      const slotToUnequip = action.payload;\r\n      const itemsToUpdate = state.player.inventory.items.map(item => {\r\n        // Используем логику определения слота аналогичную экипировке\r\n        let itemSlot = null;\r\n        \r\n        if (item.equipped) {\r\n          switch(item.type) {\r\n            case 'weapon':\r\n              itemSlot = 'weapon';\r\n              break;\r\n            case 'armor':\r\n              const armorType = item.properties?.armorType || item.armorType;\r\n              if (armorType === 'head') itemSlot = 'headArmor';\r\n              else if (armorType === 'body') itemSlot = 'bodyArmor';\r\n              else if (armorType === 'legs') itemSlot = 'legArmor';\r\n              else if (armorType === 'hands') itemSlot = 'handArmor';\r\n              else {\r\n                // Определяем по названию, если тип не указан\r\n                const name = item.name.toLowerCase();\r\n                if (name.includes('шлем') || name.includes('шапка')) itemSlot = 'headArmor';\r\n                else if (name.includes('сапог') || name.includes('ботин')) itemSlot = 'legArmor';\r\n                else if (name.includes('перчат') || name.includes('рукав')) itemSlot = 'handArmor';\r\n                else itemSlot = 'bodyArmor'; // По умолчанию - броня для тела\r\n              }\r\n              break;\r\n          }\r\n          \r\n          // Если это тот слот, который нужно снять\r\n          if (itemSlot === slotToUnequip) {\r\n            return { ...item, equipped: false };\r\n          }\r\n        }\r\n        \r\n        return item;\r\n      });\r\n      \r\n      // Обновляем инвентарь\r\n      const playerAfterUnequip = {\r\n        ...state.player,\r\n        inventory: {\r\n          ...state.player.inventory,\r\n          items: itemsToUpdate\r\n        }\r\n      };\r\n      \r\n      // Находим все экипированные предметы для применения бонусов\r\n      const remainingEquippedItems = {};\r\n      itemsToUpdate\r\n        .filter(item => item.equipped)\r\n        .forEach(item => {\r\n          let slot = null;\r\n          \r\n          switch(item.type) {\r\n            case 'weapon':\r\n              slot = 'weapon';\r\n              break;\r\n            case 'armor':\r\n              // Та же логика, что и выше\r\n              const armorType = item.properties?.armorType || item.armorType;\r\n              if (armorType === 'head') slot = 'headArmor';\r\n              else if (armorType === 'body') slot = 'bodyArmor';\r\n              else if (armorType === 'legs') slot = 'legArmor';\r\n              else if (armorType === 'hands') slot = 'handArmor';\r\n              else {\r\n                const name = item.name.toLowerCase();\r\n                if (name.includes('шлем') || name.includes('шапка')) slot = 'headArmor';\r\n                else if (name.includes('сапог') || name.includes('ботин')) slot = 'legArmor';\r\n                else if (name.includes('перчат') || name.includes('рукав')) slot = 'handArmor';\r\n                else slot = 'bodyArmor';\r\n              }\r\n              break;\r\n            case 'accessory':\r\n              if (!remainingEquippedItems['accessory1']) slot = 'accessory1';\r\n              else slot = 'accessory2';\r\n              break;\r\n            case 'artifact':\r\n              if (!remainingEquippedItems['artifact1']) slot = 'artifact1';\r\n              else slot = 'artifact2';\r\n              break;\r\n          }\r\n          \r\n          if (slot) {\r\n            remainingEquippedItems[slot] = ensureItemHasCalculatedBonuses(item);\r\n          }\r\n        });\r\n      \r\n      // Применяем бонусы от оставшейся экипировки\r\n      console.log('Применение бонусов после снятия предмета:', remainingEquippedItems);\r\n      \r\n      const stateAfterUnequip = {\r\n        ...state,\r\n        player: playerAfterUnequip\r\n      };\r\n      \r\n      // Применяем бонусы экипировки напрямую\r\n      const unequipBonusesState = playerReducer(stateAfterUnequip, { \r\n        type: ACTION_TYPES.APPLY_EQUIPMENT_BONUSES, \r\n        payload: remainingEquippedItems \r\n      });\r\n      \r\n      return unequipBonusesState;\r\n      \r\n    case ACTION_TYPES.APPLY_EQUIPMENT_BONUSES:\r\n      console.log('Применение бонусов от экипировки:', action.payload);\r\n      \r\n      if (!action.payload || !Object.keys(action.payload).length) {\r\n        console.log('Нет данных о экипировке для применения бонусов');\r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            equipmentBonuses: {\r\n              stats: {},\r\n              combat: {},\r\n              cultivation: {},\r\n              elemental: {},\r\n              special: []\r\n            }\r\n          }\r\n        };\r\n      }\r\n      \r\n      // Убедимся, что у всех предметов экипировки есть предрассчитанные бонусы\r\n      const equippedItemsWithBonuses = ensureEquipmentHasCalculatedBonuses(action.payload);\r\n      console.log('Экипировка с гарантированными бонусами:', equippedItemsWithBonuses);\r\n      \r\n      // Проверяем наличие предрассчитанных бонусов в предметах\r\n      let equipmentBonuses;\r\n      const hasPreCalculatedBonuses = Object.values(equippedItemsWithBonuses).some(\r\n        item => item && item.calculatedBonuses\r\n      );\r\n      \r\n      if (hasPreCalculatedBonuses) {\r\n        console.log('✅ Используем предрассчитанные бонусы из предметов');\r\n        \r\n        // Объединяем все предрассчитанные бонусы\r\n        equipmentBonuses = {\r\n          stats: { strength: 0, dexterity: 0, vitality: 0, intelligence: 0, perception: 0, luck: 0 },\r\n          combat: { physicalDamage: 0, magicDamage: 0, physicalDefense: 0, magicDefense: 0, critChance: 0, critDamage: 0, dodgeChance: 0 },\r\n          cultivation: { energyMax: 0, energyRegen: 0, comprehensionRate: 0, breakthroughChance: 0 },\r\n          elemental: { fire: 0, water: 0, earth: 0, air: 0, light: 0, dark: 0 },\r\n          special: []\r\n        };\r\n        \r\n        // Суммируем бонусы из всех предметов\r\n        Object.values(action.payload).forEach(item => {\r\n          if (!item || !item.calculatedBonuses) return;\r\n          \r\n          const bonuses = item.calculatedBonuses;\r\n          \r\n          // Суммируем базовые статы\r\n          if (bonuses.stats) {\r\n            Object.entries(bonuses.stats).forEach(([stat, value]) => {\r\n              if (equipmentBonuses.stats[stat] !== undefined) {\r\n                equipmentBonuses.stats[stat] += value;\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Суммируем боевые характеристики\r\n          if (bonuses.combat) {\r\n            Object.entries(bonuses.combat).forEach(([stat, value]) => {\r\n              if (equipmentBonuses.combat[stat] !== undefined) {\r\n                equipmentBonuses.combat[stat] += value;\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Суммируем параметры культивации\r\n          if (bonuses.cultivation) {\r\n            Object.entries(bonuses.cultivation).forEach(([stat, value]) => {\r\n              if (equipmentBonuses.cultivation[stat] !== undefined) {\r\n                equipmentBonuses.cultivation[stat] += value;\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Суммируем стихийные бонусы\r\n          if (bonuses.elemental) {\r\n            Object.entries(bonuses.elemental).forEach(([element, value]) => {\r\n              if (equipmentBonuses.elemental[element] !== undefined) {\r\n                equipmentBonuses.elemental[element] += value;\r\n              }\r\n            });\r\n          }\r\n          \r\n          // Собираем особые эффекты\r\n          if (bonuses.special && Array.isArray(bonuses.special)) {\r\n            equipmentBonuses.special = [\r\n              ...equipmentBonuses.special,\r\n              ...bonuses.special\r\n            ];\r\n          }\r\n        });\r\n      } else {\r\n        // Если нет предрассчитанных бонусов, используем BonusService\r\n        console.log('⚠️ Предрассчитанные бонусы не найдены, используем BonusService');\r\n        equipmentBonuses = BonusService.getEquipmentTotalBonuses(action.payload);\r\n      }\r\n      \r\n      console.log('Итоговые бонусы от экипировки:', equipmentBonuses);\r\n      \r\n      // ВАЖНО: НЕ изменяем основные характеристики игрока\r\n      // Бонусы должны храниться отдельно и применяться только к вторичным характеристикам\r\n      \r\n      // Получаем текущие вторичные характеристики\r\n      const baseSecondaryStats = CharacterStatsService.calculateSecondaryStats(\r\n        state.player.stats, \r\n        state.player.cultivation\r\n      );\r\n      \r\n      // Применяем бонусы от экипировки к вторичным характеристикам\r\n      const secondaryWithBonuses = {\r\n        ...baseSecondaryStats,\r\n        // Применяем боевые бонусы\r\n        physicalAttack: (baseSecondaryStats.physicalAttack || 0) + (equipmentBonuses.combat.physicalDamage || 0),\r\n        magicalAttack: (baseSecondaryStats.magicalAttack || 0) + (equipmentBonuses.combat.magicDamage || 0),\r\n        physicalDefense: (baseSecondaryStats.physicalDefense || 0) + (equipmentBonuses.combat.physicalDefense || 0),\r\n        magicDefense: (baseSecondaryStats.magicDefense || 0) + (equipmentBonuses.combat.magicDefense || 0),\r\n        critChance: (baseSecondaryStats.critChance || 0) + (equipmentBonuses.combat.critChance || 0),\r\n        critDamage: (baseSecondaryStats.critDamage || 0) + (equipmentBonuses.combat.critDamage || 0),\r\n        evasion: (baseSecondaryStats.evasion || 0) + (equipmentBonuses.combat.dodgeChance || 0)\r\n      };\r\n      \r\n      console.log('Вторичные характеристики после применения бонусов:', secondaryWithBonuses);\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          // Сохраняем базовые статы без изменений\r\n          // stats: state.player.stats, \r\n          // Применяем обновленные вторичные статы с бонусами\r\n          secondaryStats: secondaryWithBonuses,\r\n          // Сохраняем данные о бонусах для отображения в интерфейсе\r\n          equipmentBonuses: equipmentBonuses\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.LEARN_TECHNIQUE:\r\n      // Получаем технику из payload\r\n      const technique = action.payload;\r\n      \r\n      // Проверяем, есть ли уже эта техника в списке изученных\r\n      const existingTechnique = state.player.techniques.find(t => t.id === technique.id);\r\n      \r\n      if (existingTechnique) {\r\n        // Если техника уже изучена, ничего не делаем\r\n        return state;\r\n      }\r\n      \r\n      // Вычитаем опыт и валюту\r\n      const learnCost = technique.upgradeCost ? technique.upgradeCost(1) : { experience: 50, currency: 20 };\r\n      const currentExperience = state.player.cultivation.experience || 0;\r\n      const newExperience = Math.max(0, currentExperience - learnCost.experience);\r\n      \r\n      // Обновляем валюту\r\n      const currentCurrency = state.player.inventory.currency || {};\r\n      let learnCurrencyUpdate = { ...currentCurrency };\r\n      \r\n      // Обрабатываем разные типы валют\r\n      if (typeof learnCost.currency === 'object') {\r\n        // Если указаны конкретные типы валют\r\n        Object.entries(learnCost.currency).forEach(([type, amount]) => {\r\n          learnCurrencyUpdate[type] = (learnCurrencyUpdate[type] || 0) - amount;\r\n        });\r\n      } else {\r\n        // Если указана просто общая стоимость, считаем как золото\r\n        learnCurrencyUpdate.gold = (learnCurrencyUpdate.gold || 0) - learnCost.currency;\r\n      }\r\n      \r\n      // Если техники нет в списке, добавляем её со всеми необходимыми данными\r\n      console.log(\"Изучена новая техника:\", technique);\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          techniques: [\r\n            ...state.player.techniques,\r\n            {\r\n              id: technique.id,\r\n              name: technique.name,\r\n              description: technique.description,\r\n              type: technique.type,\r\n              icon: technique.icon,\r\n              damage: technique.damage,\r\n              damageType: technique.damageType,\r\n              energyCost: technique.energyCost,\r\n              cooldown: technique.cooldown,\r\n              effects: technique.effects,\r\n              level: 1,\r\n              experience: 0,\r\n              maxLevel: technique.maxLevel,\r\n              requiredLevel: technique.requiredLevel,\r\n              learnedAt: new Date().toISOString()\r\n            }\r\n          ],\r\n          // Обновляем опыт\r\n          cultivation: {\r\n            ...state.player.cultivation,\r\n            experience: newExperience\r\n          },\r\n          // Обновляем валюту\r\n          inventory: {\r\n            ...state.player.inventory,\r\n            currency: learnCurrencyUpdate\r\n          }\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.UPGRADE_TECHNIQUE:\r\n      // Извлекаем ID техники и новые данные из payload\r\n      const { techniqueId, cost } = action.payload;\r\n      \r\n      // Находим технику в списке изученных\r\n      const techniqueToUpgrade = state.player.techniques.find(t => t.id === techniqueId);\r\n      \r\n      // Если техника не найдена или достигнут максимальный уровень, ничего не делаем\r\n      if (!techniqueToUpgrade) {\r\n        console.error(`Техника с ID ${techniqueId} не найдена и не может быть улучшена`);\r\n        return state;\r\n      }\r\n      \r\n      // Обновляем опыт\r\n      const currentExp = state.player.cultivation.experience || 0;\r\n      const updatedExperience = Math.max(0, currentExp - cost.experience);\r\n      \r\n      // Обновляем валюту\r\n      const currentCurr = state.player.inventory.currency || {};\r\n      let upgradeCurrencyUpdate = { ...currentCurr };\r\n      \r\n      // Обрабатываем разные типы валют\r\n      if (typeof cost.currency === 'object') {\r\n        // Если указаны конкретные типы валют\r\n        Object.entries(cost.currency).forEach(([type, amount]) => {\r\n          upgradeCurrencyUpdate[type] = (upgradeCurrencyUpdate[type] || 0) - amount;\r\n        });\r\n      } else {\r\n        // Если указана просто общая стоимость, считаем как золото\r\n        upgradeCurrencyUpdate.gold = (upgradeCurrencyUpdate.gold || 0) - cost.currency;\r\n      }\r\n      \r\n      // Получаем данные об исходной технике из импорта\r\n      const { getTechniqueById } = require('../../data/techniques');\r\n      \r\n      // Находим базовые данные о технике\r\n      const baseTechnique = getTechniqueById(techniqueId);\r\n      console.log(\"Базовая техника для апгрейда:\", baseTechnique);\r\n      \r\n      // Обновляем уровень техники и все зависящие от уровня параметры\r\n      const updatedTechniques = state.player.techniques.map(t => {\r\n        if (t.id === techniqueId) {\r\n          // Рассчитываем новые значения, зависящие от уровня\r\n          const newLevel = t.level + 1;\r\n          const levelMultiplier = 1 + (newLevel - 1) * 0.2; // +20% за каждый уровень\r\n          \r\n          // Увеличиваем урон и другие параметры в соответствии с уровнем\r\n          const updatedTechnique = {\r\n            ...t,\r\n            level: newLevel,\r\n            // Увеличиваем параметры если они существуют\r\n            damage: t.damage ? Math.floor(t.damage * levelMultiplier) : t.damage,\r\n            healing: t.healing ? Math.floor(t.healing * levelMultiplier) : t.healing,\r\n            energyCost: t.energyCost ? Math.floor(t.energyCost * (1 + (newLevel - 1) * 0.1)) : t.energyCost,\r\n          };\r\n          \r\n          // Обновляем эффекты если они есть\r\n          if (t.effects && Array.isArray(t.effects)) {\r\n            updatedTechnique.effects = t.effects.map(effect => {\r\n              const updatedEffect = { ...effect };\r\n              \r\n              // Увеличиваем урон эффекта если он есть\r\n              if (updatedEffect.damage) {\r\n                updatedEffect.damage = Math.floor(updatedEffect.damage * levelMultiplier);\r\n              }\r\n              \r\n              // Увеличиваем исцеление эффекта если оно есть\r\n              if (updatedEffect.healing) {\r\n                updatedEffect.healing = Math.floor(updatedEffect.healing * levelMultiplier);\r\n              }\r\n              \r\n              // Можно добавить и другие параметры, зависящие от уровня\r\n              \r\n              return updatedEffect;\r\n            });\r\n          }\r\n          \r\n          console.log(\"Обновлена техника:\", updatedTechnique);\r\n          return updatedTechnique;\r\n        }\r\n        return t;\r\n      });\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          techniques: updatedTechniques,\r\n          // Обновляем опыт\r\n          cultivation: {\r\n            ...state.player.cultivation,\r\n            experience: updatedExperience\r\n          },\r\n          // Обновляем валюту\r\n          inventory: {\r\n            ...state.player.inventory,\r\n            currency: upgradeCurrencyUpdate\r\n          }\r\n        }\r\n      };\r\n    \r\n    case ACTION_TYPES.UPDATE_RELATIONSHIP:\r\n      const character = action.payload;\r\n      \r\n      // Дефолтные данные отношений (скопированы из SocialTab.js)\r\n      const defaultRelationships = [\r\n        { id: 1, name: 'Мастер Ли', role: 'Наставник', level: 80, events: ['Вы получили урок от Мастера Ли', 'Мастер Ли похвалил ваш прогресс'] },\r\n        { id: 2, name: 'Старейшина Чжан', role: 'Старейшина секты', level: 60, events: ['Вы помогли Старейшине Чжану собрать травы'] },\r\n        { id: 3, name: 'Ученик Ван', role: 'Соученик', level: 45, events: ['Вы тренировались вместе с Ваном', 'Вы одолжили Вану духовный камень'] },\r\n        { id: 4, name: 'Ученица Мэй', role: 'Соученица', level: 40, events: ['Мэй поделилась с вами техникой культивации'] },\r\n        { id: 5, name: 'Торговец Чен', role: 'Торговец', level: 30, events: ['Вы купили товары у Чена', 'Чен дал вам скидку'] },\r\n        { id: 6, name: 'Глава клана Сюй', role: 'Глава враждебного клана', level: 10, events: ['Глава клана Сюй угрожал вам', 'Вы избежали ловушки клана Сюй'] }\r\n      ];\r\n      \r\n      // Проверяем, существует ли relationships как объект или массив\r\n      let relationships = state.player.relationships || [...defaultRelationships];\r\n      \r\n      // Преобразуем объект в массив, если он является объектом\r\n      if (!Array.isArray(relationships)) {\r\n        // Если это объект с IDшниками в качестве ключей, преобразуем его в массив\r\n        relationships = Object.values(relationships);\r\n      }\r\n      \r\n      // Ищем персонажа по ID\r\n      const existingCharIndex = relationships.findIndex(rel => rel.id === character.id);\r\n      \r\n      let updatedRelationships;\r\n      if (existingCharIndex !== -1) {\r\n        // Обновляем существующий\r\n        updatedRelationships = [...relationships];\r\n        updatedRelationships[existingCharIndex] = character;\r\n      } else {\r\n        // Добавляем нового\r\n        updatedRelationships = [...relationships, character];\r\n      }\r\n      \r\n      console.log(`Обновлены отношения с ${character.name} до уровня ${character.level}`);\r\n      \r\n      // Обновляем relationships в двух местах для обратной совместимости:\r\n      // 1. В player.relationships (откуда их считывает SocialTab.js)\r\n      // 2. В player.social.relationships (согласно структуре initialState.js)\r\n      // Проверяем существование social перед обновлением\r\n      const social = state.player.social || {};\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          relationships: updatedRelationships,\r\n          social: {\r\n            ...social,\r\n            relationships: updatedRelationships\r\n          }\r\n        }\r\n      };\r\n    \r\n    case 'UPDATE_SOCIAL_FRIENDS':\r\n      console.log('Обновление списка друзей:', action.payload);\r\n      \r\n      // Проверяем payload\r\n      if (!Array.isArray(action.payload)) {\r\n        console.error('Ошибка: payload не является массивом:', action.payload);\r\n        return state;\r\n      }\r\n      \r\n      // Проверяем существование social перед обновлением\r\n      const socialObj = state.player.social || {};\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          social: {\r\n            ...socialObj,\r\n            friends: action.payload\r\n          }\r\n        }\r\n      };\r\n    \r\n    case ACTION_TYPES.REPAIR_TECHNIQUES:\r\n      console.log('🔧 Запущен процесс восстановления техник');\r\n      \r\n      // Проверяем, есть ли у нас массив техник для восстановления\r\n      if (!Array.isArray(state.player.techniques) || state.player.techniques.length === 0) {\r\n        console.log('🔧 Нет техник для восстановления');\r\n        return state;\r\n      }\r\n      \r\n      // Восстанавливаем техники, беря данные из определений в techniques.js\r\n      try {\r\n        // Получаем базовые определения техник\r\n        const { techniques } = require('../../data/techniques');\r\n        \r\n        // Для каждой техники игрока ищем соответствующее базовое определение\r\n        const repairedTechniques = state.player.techniques.map(playerTechnique => {\r\n          // Сохраняем важные игровые данные\r\n          const level = playerTechnique.level || 1;\r\n          const experience = playerTechnique.experience || 0;\r\n          const masteryLevel = playerTechnique.masteryLevel || 0;\r\n          const lastUsed = playerTechnique.lastUsed || null;\r\n          const id = playerTechnique.id;\r\n          \r\n          // Ищем базовое определение техники\r\n          const baseTechnique = techniques.find(t => t.id === id);\r\n          \r\n          if (!baseTechnique) {\r\n            console.warn(`⚠️ Не найдено базовое определение для техники с ID: ${id}`);\r\n            return playerTechnique; // Если не нашли - возвращаем оригинал\r\n          }\r\n          \r\n          // Вычисляем множитель урона на основе уровня\r\n          const levelMultiplier = 1 + (level - 1) * 0.2;\r\n          \r\n          // Создаем восстановленную технику с полными данными\r\n          const repairedTechnique = {\r\n            ...baseTechnique,\r\n            id,\r\n            level,\r\n            experience,\r\n            masteryLevel,\r\n            lastUsed,\r\n            // Масштабируем параметры в соответствии с уровнем\r\n            damage: Math.floor((baseTechnique.damage || 0) * levelMultiplier),\r\n            healing: Math.floor((baseTechnique.healing || 0) * levelMultiplier),\r\n            energyCost: Math.floor((baseTechnique.energyCost || 10) * (1 + (level - 1) * 0.1))\r\n          };\r\n          \r\n          console.log(`✅ Восстановлена техника ${repairedTechnique.name} (ID: ${id}, Урон: ${repairedTechnique.damage})`);\r\n          return repairedTechnique;\r\n        });\r\n        \r\n        console.log(`🔧 Восстановлено ${repairedTechniques.length} техник`);\r\n        \r\n        // Сохраняем состояние с восстановленными техниками\r\n        try {\r\n          // Сохраняем обновленное состояние в localStorage вместе с восстановленными техниками\r\n          const updatedState = {\r\n            ...state,\r\n            player: {\r\n              ...state.player,\r\n              techniques: repairedTechniques\r\n            }\r\n          };\r\n          \r\n          if (typeof localStorage !== 'undefined') {\r\n            localStorage.setItem('gameState', JSON.stringify(updatedState));\r\n            console.log('💾 Состояние с восстановленными техниками сохранено в localStorage');\r\n          }\r\n        } catch (saveError) {\r\n          console.error('❌ Ошибка при сохранении состояния:', saveError);\r\n        }\r\n        \r\n        // Возвращаем обновленное состояние\r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            techniques: repairedTechniques\r\n          }\r\n        };\r\n      } catch (error) {\r\n        console.error('❌ Ошибка при восстановлении техник:', error);\r\n        return state; // В случае ошибки возвращаем исходное состояние\r\n      }\r\n    \r\n    case ACTION_TYPES.UPDATE_COMBAT_STATE: {\r\n      return {\r\n        ...state,\r\n        combat: {\r\n          ...state.combat,\r\n          ...action.payload\r\n        }\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.USE_TECHNIQUE: {\r\n      const { techniqueId } = action.payload;\r\n      console.log(`🔄 Использование техники с ID: ${techniqueId}`);\r\n      \r\n      // Находим технику в списке\r\n      const techniqueIndex = state.player.techniques.findIndex(t => t.id === techniqueId);\r\n      \r\n      if (techniqueIndex === -1) {\r\n        console.error(`❌ Техника с ID ${techniqueId} не найдена`);\r\n        return state;\r\n      }\r\n      \r\n      // Обновляем время последнего использования и опыт техники\r\n      const updatedTechniques = [...state.player.techniques];\r\n      const technique = updatedTechniques[techniqueIndex];\r\n      \r\n      // Обновляем lastUsed и experience\r\n      updatedTechniques[techniqueIndex] = {\r\n        ...technique,\r\n        lastUsed: new Date().toISOString(),\r\n        experience: (technique.experience || 0) + 1\r\n      };\r\n      \r\n      // Проверяем, достигнут ли порог опыта для повышения мастерства\r\n      const masteryThreshold = 100 * ((technique.masteryLevel || 0) + 1);\r\n      if ((updatedTechniques[techniqueIndex].experience || 0) >= masteryThreshold) {\r\n        updatedTechniques[techniqueIndex].masteryLevel = (updatedTechniques[techniqueIndex].masteryLevel || 0) + 1;\r\n        updatedTechniques[techniqueIndex].experience -= masteryThreshold;\r\n        \r\n        console.log(`🌟 Повышен уровень мастерства техники ${technique.name} до ${updatedTechniques[techniqueIndex].masteryLevel}`);\r\n      }\r\n      \r\n      // Обновляем состояние с новыми техниками\r\n      const newState = {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          techniques: updatedTechniques\r\n        }\r\n      };\r\n      \r\n      // Запускаем автосохранение после использования техники\r\n      try {\r\n        // Используем localStorage напрямую для сохранения полного состояния\r\n        localStorage.setItem('gameState', JSON.stringify(newState));\r\n        console.log('💾 Автосохранение после использования техники выполнено');\r\n      } catch (error) {\r\n        console.error('❌ Ошибка при автосохранении после использования техники:', error);\r\n      }\r\n      \r\n      return newState;\r\n    }\r\n    \r\n    case ACTION_TYPES.ADD_COMBAT_HISTORY: {\r\n      console.log('📝 Добавление записи в историю боев:', action.payload);\r\n      \r\n      // Проверяем, что получили корректные данные\r\n      if (!action.payload || typeof action.payload !== 'object') {\r\n        console.error('❌ Некорректные данные для добавления в историю боев:', action.payload);\r\n        return state;\r\n      }\r\n      \r\n      // Получаем текущую историю боев или создаем пустой массив, если ее нет\r\n      const currentHistory = Array.isArray(state.player.combatHistory) \r\n        ? state.player.combatHistory \r\n        : [];\r\n      \r\n      // Добавляем новую запись в начало массива (чтобы последние бои были сверху)\r\n      const updatedHistory = [\r\n        {\r\n          ...action.payload,\r\n          timestamp: action.payload.timestamp || Date.now() // Добавляем timestamp, если его нет\r\n        },\r\n        ...currentHistory\r\n      ];\r\n      \r\n      // Ограничиваем размер истории до 50 записей, чтобы не перегружать хранилище\r\n      const limitedHistory = updatedHistory.slice(0, 50);\r\n      \r\n      console.log(`📊 История боев обновлена: ${limitedHistory.length} записей`);\r\n      \r\n      // Запускаем автосохранение после добавления записи в историю боев\r\n      try {\r\n        const newState = {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            combatHistory: limitedHistory\r\n          }\r\n        };\r\n        \r\n        localStorage.setItem('gameState', JSON.stringify(newState));\r\n        console.log('💾 Автосохранение после обновления истории боев выполнено');\r\n        \r\n        return newState;\r\n      } catch (error) {\r\n        console.error('❌ Ошибка при автосохранении после обновления истории боев:', error);\r\n        \r\n        // Возвращаем обновленное состояние даже при ошибке сохранения\r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            combatHistory: limitedHistory\r\n          }\r\n        };\r\n      }\r\n    }\r\n    \r\n    // Синхронизация лояльности секты с социальными отношениями\r\n    case ACTION_TYPES.SYNC_SECT_TO_SOCIAL: {\r\n      console.log('🔄 Синхронизация лояльности секты с социальными отношениями');\r\n      \r\n      if (!state.sect || !state.sect.sect || state.sect.sect.loyalty === undefined) {\r\n        console.warn('⚠️ Невозможно синхронизировать: данные о секте отсутствуют или неполные');\r\n        return state;\r\n      }\r\n      \r\n      // Получаем текущие отношения\r\n      const sectLoyalty = state.sect.sect.loyalty;\r\n      \r\n      // Используем утилиту синхронизации\r\n      const updatedRelationships = syncSectRelationshipToSocial(\r\n        state.player.relationships || [],\r\n        state.sect.sect,\r\n        sectLoyalty\r\n      );\r\n      \r\n      console.log(`✅ Обновлены социальные отношения на основе лояльности секты (${sectLoyalty})`);\r\n      \r\n      // Обновляем social и relationships\r\n      const updatedSocial = state.player.social || {};\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          relationships: updatedRelationships,\r\n          social: {\r\n            ...updatedSocial,\r\n            relationships: updatedRelationships\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    // Синхронизация социальных отношений с лояльностью секты\r\n    case ACTION_TYPES.SYNC_SOCIAL_TO_SECT: {\r\n      console.log('🔄 Синхронизация социальных отношений с лояльностью секты');\r\n      \r\n      if (!state.player.relationships && (!state.player.social || !state.player.social.relationships)) {\r\n        console.warn('⚠️ Невозможно синхронизировать: данные о социальных отношениях отсутствуют');\r\n        return state;\r\n      }\r\n      \r\n      // Получаем отношения из правильного места (предпочитаем player.relationships)\r\n      const relationships = state.player.relationships || \r\n                          (state.player.social && state.player.social.relationships) || \r\n                          [];\r\n      \r\n      // Используем утилиту синхронизации для получения нового значения лояльности\r\n      const newLoyalty = syncSocialToSectRelationship(relationships, state.sect && state.sect.sect);\r\n      \r\n      // Проверяем, нужно ли обновлять лояльность\r\n      if (newLoyalty === null || newLoyalty === undefined) {\r\n        console.warn('⚠️ Не удалось рассчитать новое значение лояльности секты');\r\n        return state;\r\n      }\r\n      \r\n      console.log(`✅ Рассчитана лояльность секты (${newLoyalty}) на основе социальных отношений`);\r\n      \r\n      // Возвращаем обновленное состояние без фактического изменения\r\n      // Фактическое обновление должно происходить через отдельное действие UPDATE_SECT_LOYALTY\r\n      return {\r\n        ...state,\r\n        calculatedSectLoyalty: newLoyalty // Временное хранение для последующего обновления\r\n      };\r\n    }\r\n    \r\n    // Обработчик для обновления социальных отношений (используется sectRelationshipSyncer.js)\r\n    case ACTION_TYPES.UPDATE_SOCIAL_RELATIONSHIPS: {\r\n      console.log('🔄 Обновление социальных отношений');\r\n      \r\n      if (!action.payload || !Array.isArray(action.payload)) {\r\n        console.warn('⚠️ Невозможно обновить: неверный формат данных о социальных отношениях');\r\n        return state;\r\n      }\r\n      \r\n      console.log(`✅ Обновлены социальные отношения (${action.payload.length} записей)`);\r\n      \r\n      // Обновляем social и relationships\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          relationships: action.payload,\r\n          social: {\r\n            ...(state.player.social || {}),\r\n            relationships: action.payload\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    // Обработчик для одновременного обновления отношений и лояльности\r\n    case ACTION_TYPES.UPDATE_RELATIONSHIP_AND_LOYALTY: {\r\n      console.log('🔄 Одновременное обновление отношений и лояльности');\r\n      \r\n      if (!action.payload || !action.payload.name || action.payload.value === undefined) {\r\n        console.warn('⚠️ Невозможно обновить: неполные данные', action.payload);\r\n        return state;\r\n      }\r\n      \r\n      const { name, value } = action.payload;\r\n      console.log(`📊 Обновление отношений с \"${name}\" до уровня ${value}`);\r\n      \r\n      // Используем функцию для прямого обновления обоих значений\r\n      const updatedState = updateRelationshipAndLoyalty(state, name, value);\r\n      \r\n      return updatedState;\r\n    }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// Экшены для погодной системы\r\nimport ACTION_TYPES from './actionTypes';\r\n\r\n// Экспортируем константы для экшенов погоды\r\nexport const UPDATE_WEATHER = 'UPDATE_WEATHER';\r\nexport const SET_TIME_OF_DAY = 'SET_TIME_OF_DAY';\r\nexport const WEATHER_SPECIAL_EVENT = 'WEATHER_SPECIAL_EVENT';\r\nexport const UPDATE_GAME_TIME = 'UPDATE_GAME_TIME';\r\nexport const FORCE_WEATHER_CHANGE = 'FORCE_WEATHER_CHANGE';\r\nexport const INITIALIZE_WEATHER = ACTION_TYPES.INITIALIZE_WEATHER;\r\n\r\n/**\r\n * Обновление состояния погоды\r\n * @param {Object} weatherData - Новые данные о погоде\r\n * @returns {Object} - Объект действия Redux\r\n */\r\nexport const updateWeather = (weatherData) => {\r\n  console.log('🌦️ Создание экшена updateWeather с данными:', weatherData);\r\n  return {\r\n    type: UPDATE_WEATHER,\r\n    payload: weatherData\r\n  };\r\n};\r\n\r\n// Установка времени суток\r\nexport const setTimeOfDay = (timeOfDay) => ({\r\n  type: SET_TIME_OF_DAY,\r\n  payload: {\r\n    timeOfDay\r\n  }\r\n});\r\n\r\n// Особое погодное событие\r\nexport const triggerWeatherEvent = (eventType, eventData) => ({\r\n  type: WEATHER_SPECIAL_EVENT,\r\n  payload: {\r\n    eventType,\r\n    eventData\r\n  }\r\n});\r\n\r\n// Обновление игрового времени (вызывается по таймеру)\r\n/**\r\n * Создает действие для обновления игрового времени\r\n * @param {number} minutesToAdd - Количество реальных минут, прошедших с последнего обновления\r\n * @param {boolean} isManual - Флаг, указывающий на ручное обновление (кнопками)\r\n * @returns {Object} - Объект действия Redux\r\n */\r\nexport const updateGameTime = (minutesToAdd = 1, isManual = false) => {\r\n  // Убедимся, что minutesToAdd - число\r\n  const minutes = typeof minutesToAdd === 'number' ? minutesToAdd : 1;\r\n  \r\n  console.log(`🕒 Создание экшена updateGameTime с ${minutes} минутами (ручное: ${isManual ? 'да' : 'нет'})`);\r\n  \r\n  // Возвращаем правильно сформированный экшен\r\n  return {\r\n    type: UPDATE_GAME_TIME,\r\n    payload: {\r\n      minutesToAdd: minutes, // Количество реальных минут, которые нужно добавить\r\n      isManual: isManual,    // Флаг ручного обновления\r\n      timestamp: Date.now()  // Добавляем временную метку для более точного отслеживания\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Принудительно меняет текущую погоду на новую случайную\r\n * @returns {Object} - Объект действия Redux\r\n */\r\nexport const forceWeatherChange = () => {\r\n  console.log('🌦️ Принудительная смена погоды (вызвано через отладочную панель)');\r\n  return {\r\n    type: FORCE_WEATHER_CHANGE,\r\n    payload: {\r\n      timestamp: Date.now()  // Временная метка для отслеживания\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Инициализирует погоду с прогнозом\r\n * @returns {Object} - Объект действия Redux\r\n */\r\nexport const initializeWeather = () => {\r\n  console.log('🌦️ Запуск полной инициализации погоды с прогнозом');\r\n  return {\r\n    type: INITIALIZE_WEATHER,\r\n    payload: {\r\n      timestamp: Date.now()  // Временная метка для отслеживания\r\n    }\r\n  };\r\n};\r\n\r\n// Middleware вынесен в отдельный файл src/context/middleware/weatherMiddleware.js\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\nimport { \r\n  UPDATE_WEATHER, \r\n  SET_TIME_OF_DAY, \r\n  WEATHER_SPECIAL_EVENT,\r\n  UPDATE_GAME_TIME,\r\n  INITIALIZE_WEATHER\r\n} from '../actions/weather-actions';\r\n\r\n// Константы для управления сезонами\r\nconst SEASON_LENGTH = 30; // Длина сезона в днях\r\nconst SEASON_ORDER = ['spring', 'summer', 'autumn', 'winter']; // Порядок сезонов\r\n\r\n/**\r\n * Вычисляет текущий день сезона на основе общего дня мира\r\n * @param {Number} worldDay - Общий день мира\r\n * @returns {Number} - День в рамках текущего сезона (1-30)\r\n */\r\nconst calculateSeasonDay = (worldDay) => {\r\n  return ((worldDay - 1) % SEASON_LENGTH) + 1;\r\n};\r\n\r\n/**\r\n * Вычисляет текущий сезон на основе общего дня мира\r\n * @param {Number} worldDay - Общий день мира\r\n * @returns {String} - Ключ текущего сезона ('spring', 'summer', etc.)\r\n */\r\nconst calculateSeason = (worldDay) => {\r\n  const seasonIndex = Math.floor((worldDay - 1) / SEASON_LENGTH) % SEASON_ORDER.length;\r\n  return SEASON_ORDER[seasonIndex];\r\n};\r\n\r\n// Начальное состояние погоды\r\nconst initialWeatherState = {\r\n  currentTime: 720, // 12:00\r\n  timeOfDay: 'день',\r\n  formattedTime: '12:00',\r\n  weatherType: 'ясно', \r\n  weatherIntensity: 5,\r\n  weatherEffects: {\r\n    combat: {\r\n      damageModifiers: {},\r\n      hitChanceModifier: 1.0,\r\n      dodgeChanceModifier: 1.0,\r\n      critChanceModifier: 1.0,\r\n      enemySpawnRateModifier: 1.0\r\n    },\r\n    cultivation: {\r\n      elementModifiers: {},\r\n      meditationEfficiencyModifier: 1.0,\r\n      breakthroughChanceModifier: 1.0,\r\n      bottleneckProgressModifier: 3.0\r\n    },\r\n    exploration: {\r\n      movementEnergyCostModifier: 1.0,\r\n      resourceFindRateModifier: 1.0,\r\n      resourceQualityModifier: 1.0,\r\n      hiddenLocationChanceModifier: 1.0,\r\n      visibilityModifier: 1.0\r\n    },\r\n    crafting: {\r\n      alchemySuccessRateModifier: 1.0,\r\n      alchemyQualityModifier: 1.0,\r\n      spiritEnergyConsumptionModifier: 1.0\r\n    },\r\n    system: {\r\n      specialEncounterChance: 0.0,\r\n      uniqueResourceSpawnChance: 0.0\r\n    }\r\n  },\r\n  activeSpecialEvent: null\r\n};\r\n\r\n// Редуктор для обработки действий, связанных с игровым миром\r\nexport const worldReducer = (state, action) => {\r\n  switch (action.type) {\r\n    // Обработчик для полной инициализации погоды с прогнозом\r\n    case INITIALIZE_WEATHER:\r\n      console.log('🔍🔍 worldReducer: Получен INITIALIZE_WEATHER');\r\n      // В случае обработки через middleware, это действие не должно менять состояние здесь\r\n      // Middleware сам вызовет updateWeather с нужными данными\r\n      return state;\r\n      \r\n    case ACTION_TYPES.UPDATE_TIME:\r\n      console.log('🔎🔎🔎 КРИТИЧЕСКАЯ ОТЛАДКА - ПОЛУЧЕН UPDATE_TIME:', {\r\n        raw_payload: action.payload, // Сырые данные из действия\r\n        raw_day_value: action.payload.day, // Необработанное значение дня\r\n        raw_day_type: typeof action.payload.day, // Тип значения дня\r\n        raw_state_day: state.world?.time?.day, // Текущее значение дня в состоянии\r\n        raw_state_day_type: typeof state.world?.time?.day, // Тип текущего значения дня \r\n      });\r\n      \r\n      // world.time является основным источником правды о времени\r\n      // Получаем и преобразуем все временные значения для надежности\r\n      const newDay = action.payload.day !== undefined ? Number(action.payload.day) : (state.world?.time?.day || 1);\r\n      const newHour = action.payload.hour !== undefined ? Number(action.payload.hour) : (state.world?.time?.hour || 0);\r\n      const newMinute = action.payload.minute !== undefined ? Number(action.payload.minute) : (state.world?.time?.minute || 0);\r\n      // Используем let вместо const, так как значение может измениться при расчете сезона\r\n      let newSeason = action.payload.season || state.world?.time?.season || 'spring';\r\n      \r\n      // Текущий день для логов\r\n      const currentDay = state.world?.time?.day !== undefined ? Number(state.world.time.day) : 1;\r\n      \r\n      console.log('🕒 UPDATE_TIME в редьюсере - ПОСЛЕ ПРЕОБРАЗОВАНИЯ:', {\r\n        currentDay,\r\n        newDay,\r\n        parsedNewDay: Number(action.payload.day), // Явное преобразование\r\n        newHour,\r\n        newMinute,\r\n        newSeason,\r\n        diff: newDay - currentDay,\r\n        actionPayload: action.payload,\r\n        currentValues: state.world?.time || 'time отсутствует',\r\n        conversion_details: {\r\n          raw: action.payload.day,\r\n          after_number: Number(action.payload.day),\r\n          after_parse_int: parseInt(action.payload.day),\r\n          after_force_num_check: parseFloat(String(action.payload.day).replace(/[^0-9.-]+/g, ''))\r\n        }\r\n      });\r\n      \r\n      // Расширенная проверка на смену дня с подробной информацией\r\n      let dayChangedFlag = false;\r\n      if (newDay > currentDay) {\r\n        console.log('📅📅📅 ДЕНЬ ИЗМЕНИЛСЯ: ' + currentDay + ' -> ' + newDay);\r\n        dayChangedFlag = true;\r\n      } else if (action.payload.day !== undefined && Number(action.payload.day) <= currentDay) {\r\n        console.log('⚠️ ВНИМАНИЕ: день не изменился или уменьшился:', {\r\n          currentDay, \r\n          newDay: Number(action.payload.day)\r\n        });\r\n      }\r\n      \r\n      // КЛЮЧЕВОЕ ИЗМЕНЕНИЕ: Синхронизируем все значения, не только dayCount\r\n      const newHourInMinutes = newHour * 60 + newMinute;\r\n      const formattedTimeValue = `${String(newHour).padStart(2, '0')}:${String(newMinute).padStart(2, '0')}`;\r\n      const timeOfDayValue = \r\n        (newHour >= 5 && newHour < 7) ? 'рассвет' :\r\n        (newHour >= 7 && newHour < 11) ? 'утро' :\r\n        (newHour >= 11 && newHour < 14) ? 'полдень' :\r\n        (newHour >= 14 && newHour < 17) ? 'день' :\r\n        (newHour >= 17 && newHour < 20) ? 'вечер' :\r\n        (newHour >= 20 && newHour < 23) ? 'ночь' : 'глубокая ночь';\r\n      \r\n      console.log('🕒 ЖЕСТКАЯ СИНХРОНИЗАЦИЯ В UPDATE_TIME: world.time → weather', {\r\n        hour: newHour,\r\n        minute: newMinute,\r\n        day: newDay,\r\n        season: newSeason\r\n      });\r\n      \r\n      // УЛУЧШЕННАЯ СИНХРОНИЗАЦИЯ СЕЗОННОГО ДНЯ С УЧЕТОМ ПЕРЕХОДА ЧЕРЕЗ МАКСИМАЛЬНУЮ ДЛИНУ СЕЗОНА\r\n      \r\n      // Вычисляем правильный день сезона и сезон на основе мирового дня\r\n      let calculatedSeasonDay, calculatedSeason;\r\n      \r\n      // Проверяем, превышает ли день длину сезона\r\n      if (newDay > SEASON_LENGTH) {\r\n        calculatedSeasonDay = calculateSeasonDay(newDay);\r\n        calculatedSeason = calculateSeason(newDay);\r\n        \r\n        console.log('🌈 РАСЧЕТ СЕЗОНА ПРИ ПЕРЕХОДЕ ЧЕРЕЗ МАКСИМАЛЬНУЮ ДЛИНУ:', {\r\n          мировой_день: newDay,\r\n          вычисленный_день_сезона: calculatedSeasonDay,\r\n          текущий_сезон: newSeason,\r\n          вычисленный_сезон: calculatedSeason,\r\n          длина_сезона: SEASON_LENGTH\r\n        });\r\n        \r\n        // Если день сезона вычислен корректно, используем его\r\n        if (calculatedSeasonDay) {\r\n          // Используем вычисленный сезон, если он отличается от текущего\r\n          if (calculatedSeason !== newSeason) {\r\n            console.log(`🌈🌈 СМЕНА СЕЗОНА: ${newSeason} -> ${calculatedSeason} (день сезона: ${calculatedSeasonDay})`);\r\n            newSeason = calculatedSeason;\r\n          }\r\n        } else {\r\n          // Если что-то пошло не так, предохранитель - используем день сезона = 1\r\n          calculatedSeasonDay = 1;\r\n          console.warn('⚠️ Невозможно вычислить день сезона, используем значение по умолчанию = 1');\r\n        }\r\n      } else {\r\n        // Если день в пределах длины сезона, день сезона = мировому дню\r\n        calculatedSeasonDay = newDay;\r\n      }\r\n      \r\n      console.log('📅 ИТОГОВЫЕ ЗНАЧЕНИЯ ПОСЛЕ СИНХРОНИЗАЦИИ СЕЗОНА:', {\r\n        мировой_день: newDay,\r\n        день_сезона: calculatedSeasonDay,\r\n        сезон: newSeason\r\n      });\r\n      \r\n      // УЛУЧШЕНИЕ: Пересчет времени до смены погоды на основе weatherChangeAt\r\n      let updatedNextWeatherChange = state.weather?.nextWeatherChange;\r\n      const weatherChangeAt = state.weather?.weatherChangeAt;\r\n      \r\n      // Пересчитываем nextWeatherChange, если weatherChangeAt доступен\r\n      if (weatherChangeAt !== undefined) {\r\n        // Получаем текущее абсолютное время в минутах\r\n        const currentAbsoluteMinutes = newHour * 60 + newMinute;\r\n        \r\n        // Вычисляем разницу между временем смены погоды и текущим временем\r\n        const remainingMinutes = weatherChangeAt - currentAbsoluteMinutes;\r\n        \r\n        // Обновляем nextWeatherChange с учетом нового времени\r\n        updatedNextWeatherChange = Math.max(0, remainingMinutes);\r\n        \r\n        console.log('⏱️ UPDATE_TIME: Пересчет nextWeatherChange:', {\r\n          weatherChangeAt,\r\n          currentAbsoluteMinutes,\r\n          разница: remainingMinutes,\r\n          новое_значение: updatedNextWeatherChange\r\n        });\r\n        \r\n        // Если время до смены равно 0, но погода не менялась, записываем в лог\r\n        if (updatedNextWeatherChange === 0) {\r\n          console.log('⚠️ UPDATE_TIME: Время до смены погоды равно 0, необходимо сменить погоду');\r\n        }\r\n      } else {\r\n        console.log('⚠️ UPDATE_TIME: weatherChangeAt отсутствует, nextWeatherChange не обновлен');\r\n      }\r\n      \r\n      // Обновленный weather с ПОЛНОЙ синхронизацией всех временных значений и обновленным nextWeatherChange\r\n      const updatedWeather = {\r\n        ...state.weather,\r\n        currentTime: newHourInMinutes,\r\n        formattedTime: formattedTimeValue,\r\n        hour: newHour,\r\n        minute: newMinute,\r\n        dayCount: newDay,\r\n        seasonDay: calculatedSeasonDay, // Используем вычисленный день сезона\r\n        currentSeason: newSeason, // Используем вычисленный сезон\r\n        timeOfDay: timeOfDayValue,\r\n        isDayTime: newHour >= 6 && newHour < 20,\r\n        nextWeatherChange: updatedNextWeatherChange // Обновляем время до смены погоды\r\n      };\r\n      \r\n      // Возвращаем обновленное состояние с синхронизированными значениями\r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          time: {\r\n            ...state.world.time,\r\n            ...action.payload,\r\n            hour: newHour, // Гарантируем, что все значения имеют правильный тип\r\n            minute: newMinute,\r\n            day: newDay,\r\n            season: newSeason\r\n          },\r\n        },\r\n        weather: updatedWeather // Полностью синхронизированный weather\r\n      };\r\n      \r\n    // Обработка старого типа действия для обновления погоды\r\n    case ACTION_TYPES.UPDATE_WEATHER:\r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          weather: action.payload,\r\n        },\r\n      };\r\n      \r\n    // Обработка нового типа действия для нашей расширенной системы погоды\r\n    case UPDATE_WEATHER:\r\n      // Логгируем получаемые значения для отладки\r\n      console.log('🌤️ UPDATE_WEATHER в редьюсере получил:', {\r\n        текущая_погода: action.payload.currentWeather,\r\n        интенсивность: action.payload.weatherIntensity,\r\n        время_до_смены: action.payload.nextWeatherChange,\r\n        есть_прогноз: Boolean(action.payload.forecast)\r\n      });\r\n      \r\n      // Гарантируем, что nextWeatherChange будет числом\r\n      let cleanedNextWeatherChange = action.payload.nextWeatherChange;\r\n      \r\n      // Проверяем, что nextWeatherChange существует и является числом\r\n      if (action.payload.nextWeatherChange !== undefined && \r\n          (typeof action.payload.nextWeatherChange !== 'number' || isNaN(action.payload.nextWeatherChange))) {\r\n        console.warn('⚠️ nextWeatherChange не является числом:', action.payload.nextWeatherChange);\r\n        // Конвертируем в число или устанавливаем значение по умолчанию\r\n        cleanedNextWeatherChange = parseInt(action.payload.nextWeatherChange, 10);\r\n        if (isNaN(cleanedNextWeatherChange)) {\r\n          cleanedNextWeatherChange = 60; // Значение по умолчанию, если не удалось преобразовать\r\n        }\r\n      }\r\n      \r\n      // НОВОЕ: Синхронизируем день сезона с мировым днем\r\n      let correctSeasonDay = state.weather?.seasonDay || 1;\r\n      const worldDay = state.world?.time?.day;\r\n      \r\n      // Проверяем, есть ли world.time.day и нужно ли обновить день сезона\r\n      if (worldDay !== undefined) {\r\n        if (worldDay > SEASON_LENGTH) {\r\n          // Если мировой день превышает длину сезона, вычисляем день сезона по формуле\r\n          correctSeasonDay = ((worldDay - 1) % SEASON_LENGTH) + 1;\r\n          console.log('🌈 UPDATE_WEATHER: Синхронизация дня сезона при длине > SEASON_LENGTH:', {\r\n            worldDay,\r\n            correctSeasonDay,\r\n            формула: `((${worldDay} - 1) % ${SEASON_LENGTH}) + 1`\r\n          });\r\n        } else {\r\n          // Иначе день сезона равен мировому дню\r\n          correctSeasonDay = worldDay;\r\n          console.log('🌈 UPDATE_WEATHER: Синхронизация дня сезона в пределах сезона:', {\r\n            worldDay,\r\n            correctSeasonDay\r\n          });\r\n        }\r\n      }\r\n      \r\n      // ВАЖНОЕ ИСПРАВЛЕНИЕ: Гарантируем, что день сезона никогда не будет равен 0\r\n      if (correctSeasonDay <= 0) {\r\n        console.log('⚠️ UPDATE_WEATHER: Обнаружен нулевой или отрицательный день сезона, исправляем на 1');\r\n        correctSeasonDay = 1;\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        weather: {\r\n          ...state.weather,\r\n          ...action.payload,\r\n          // Явно устанавливаем nextWeatherChange как число\r\n          nextWeatherChange: cleanedNextWeatherChange,\r\n          // Устанавливаем корректный день сезона\r\n          seasonDay: correctSeasonDay\r\n        }\r\n      };\r\n      \r\n    case SET_TIME_OF_DAY:\r\n      return {\r\n        ...state,\r\n        weather: {\r\n          ...state.weather,\r\n          timeOfDay: action.payload.timeOfDay\r\n        }\r\n      };\r\n      \r\n    case WEATHER_SPECIAL_EVENT:\r\n      return {\r\n        ...state,\r\n        weather: {\r\n          ...state.weather,\r\n          activeSpecialEvent: {\r\n            type: action.payload.eventType,\r\n            data: action.payload.eventData\r\n          }\r\n        }\r\n      };\r\n      \r\n    case UPDATE_GAME_TIME:\r\n      // Этот кейс обрабатывается через middleware, который вызывает сервис погоды\r\n      return state;\r\n    \r\n    // Обработчик для прямого обновления времени в weather (синхронизация с worldTime)\r\n    case 'DIRECT_UPDATE_WEATHER_TIME':\r\n      console.log('⚡ Редьюсер обрабатывает DIRECT_UPDATE_WEATHER_TIME:', {\r\n        ...action.payload,\r\n        dayCountType: typeof action.payload.dayCount,\r\n        currentDayType: typeof state.weather?.dayCount\r\n      });\r\n      \r\n      // Убедимся, что dayCount всегда является числом\r\n      const dayCount = action.payload.dayCount !== undefined \r\n        ? Number(action.payload.dayCount) \r\n        : (state.weather?.dayCount || 1);\r\n      \r\n      // Явно обрабатываем сезон, важно для полной синхронизации\r\n      const providedSeason = action.payload.currentSeason || state.weather?.currentSeason || 'spring';\r\n      \r\n      // Вычисляем правильный день сезона и сезон на основе мирового дня\r\n      let directUpdateSeasonDay, directUpdateSeason = providedSeason;\r\n      \r\n      // Проверяем, превышает ли день длину сезона\r\n      if (dayCount > SEASON_LENGTH) {\r\n        directUpdateSeasonDay = calculateSeasonDay(dayCount);\r\n        directUpdateSeason = calculateSeason(dayCount);\r\n        \r\n        console.log('🌈 DIRECT_UPDATE_WEATHER_TIME: РАСЧЕТ СЕЗОНА:', {\r\n          мировой_день: dayCount,\r\n          вычисленный_день_сезона: directUpdateSeasonDay,\r\n          текущий_сезон: providedSeason,\r\n          вычисленный_сезон: directUpdateSeason\r\n        });\r\n        \r\n        // Если вычисленный сезон отличается от переданного, логируем изменение\r\n        if (directUpdateSeason !== providedSeason) {\r\n          console.log(`🌈🌈 DIRECT_UPDATE_WEATHER_TIME: КОРРЕКЦИЯ СЕЗОНА: ${providedSeason} -> ${directUpdateSeason}`);\r\n        }\r\n      } else {\r\n        // Если день в пределах длины сезона\r\n        directUpdateSeasonDay = dayCount;\r\n      }\r\n      \r\n      console.log('🔄 DIRECT_UPDATE_WEATHER_TIME - Полная синхронизация weather с worldTime:', {\r\n        hour: action.payload.hour,\r\n        minute: action.payload.minute,\r\n        dayCount,\r\n        seasonDay: directUpdateSeasonDay,\r\n        season: directUpdateSeason\r\n      });\r\n      \r\n      // Обновляем и world.time.season, если сезон был изменен\r\n      if (directUpdateSeason !== providedSeason && state.world?.time) {\r\n        console.log(`🌈 DIRECT_UPDATE_WEATHER_TIME: Обновляем сезон в world.time: ${providedSeason} -> ${directUpdateSeason}`);\r\n        \r\n        return {\r\n          ...state,\r\n          world: {\r\n            ...state.world,\r\n            time: {\r\n              ...state.world.time,\r\n              season: directUpdateSeason // Синхронизируем сезон в world.time\r\n            }\r\n          },\r\n          weather: {\r\n            ...state.weather,\r\n            currentTime: action.payload.currentTime,\r\n            formattedTime: action.payload.formattedTime,\r\n            hour: action.payload.hour, // Важно гарантировать, что это число\r\n            minute: action.payload.minute, // Важно гарантировать, что это число\r\n            dayCount: dayCount, // Явно устанавливаем dayCount как число\r\n            seasonDay: directUpdateSeasonDay, // Используем вычисленный день сезона\r\n            currentSeason: directUpdateSeason, // Используем вычисленный сезон\r\n            // Определяем период суток на основе часа\r\n            timeOfDay: \r\n              (action.payload.hour >= 5 && action.payload.hour < 7) ? 'рассвет' :\r\n              (action.payload.hour >= 7 && action.payload.hour < 11) ? 'утро' :\r\n              (action.payload.hour >= 11 && action.payload.hour < 14) ? 'полдень' :\r\n              (action.payload.hour >= 14 && action.payload.hour < 17) ? 'день' :\r\n              (action.payload.hour >= 17 && action.payload.hour < 20) ? 'вечер' :\r\n              (action.payload.hour >= 20 && action.payload.hour < 23) ? 'ночь' : 'глубокая ночь',\r\n            // Обновляем флаг дневного времени\r\n            isDayTime: action.payload.hour >= 6 && action.payload.hour < 20\r\n          }\r\n        };\r\n      } else {\r\n        // Если сезон не изменился, обновляем только weather\r\n        return {\r\n          ...state,\r\n          weather: {\r\n            ...state.weather,\r\n            currentTime: action.payload.currentTime,\r\n            formattedTime: action.payload.formattedTime,\r\n            hour: action.payload.hour, // Важно гарантировать, что это число\r\n            minute: action.payload.minute, // Важно гарантировать, что это число\r\n            dayCount: dayCount, // Явно устанавливаем dayCount как число\r\n            seasonDay: directUpdateSeasonDay, // Используем вычисленный день сезона\r\n            currentSeason: directUpdateSeason, // Используем вычисленный сезон\r\n            // Определяем период суток на основе часа\r\n            timeOfDay: \r\n              (action.payload.hour >= 5 && action.payload.hour < 7) ? 'рассвет' :\r\n              (action.payload.hour >= 7 && action.payload.hour < 11) ? 'утро' :\r\n              (action.payload.hour >= 11 && action.payload.hour < 14) ? 'полдень' :\r\n              (action.payload.hour >= 14 && action.payload.hour < 17) ? 'день' :\r\n              (action.payload.hour >= 17 && action.payload.hour < 20) ? 'вечер' :\r\n              (action.payload.hour >= 20 && action.payload.hour < 23) ? 'ночь' : 'глубокая ночь',\r\n            // Обновляем флаг дневного времени\r\n            isDayTime: action.payload.hour >= 6 && action.payload.hour < 20\r\n          }\r\n        };\r\n      }\r\n      \r\n    // Принудительная синхронизация времени из world.time в weather\r\n    case 'DIRECT_FORCE_SYNC_WEATHER_TIME':\r\n      // Только если оба объекта существуют\r\n      if (!state.world?.time || !state.weather) {\r\n        console.log('⚠️ Невозможно выполнить DIRECT_FORCE_SYNC_WEATHER_TIME: отсутствуют world.time или weather');\r\n        return state;\r\n      }\r\n      \r\n      console.log('🔄🔄 ПРИНУДИТЕЛЬНАЯ СИНХРОНИЗАЦИЯ weather ⟸ world.time');\r\n      \r\n      // Получаем значения из worldTime с приведением типов для надежности\r\n      const worldTimeHour = Number(state.world.time.hour);\r\n      const worldTimeMinute = Number(state.world.time.minute);\r\n      const worldTimeDay = Number(state.world.time.day);\r\n      const worldTimeSeason = state.world.time.season;\r\n      \r\n      // Вычисляем значения на основе этих данных\r\n      const syncTotalMinutes = worldTimeHour * 60 + worldTimeMinute;\r\n      const syncFormattedTime = `${String(worldTimeHour).padStart(2, '0')}:${String(worldTimeMinute).padStart(2, '0')}`;\r\n      \r\n      // Определяем период суток\r\n      const syncTimeOfDay = \r\n        (worldTimeHour >= 5 && worldTimeHour < 7) ? 'рассвет' :\r\n        (worldTimeHour >= 7 && worldTimeHour < 11) ? 'утро' :\r\n        (worldTimeHour >= 11 && worldTimeHour < 14) ? 'полдень' :\r\n        (worldTimeHour >= 14 && worldTimeHour < 17) ? 'день' :\r\n        (worldTimeHour >= 17 && worldTimeHour < 20) ? 'вечер' :\r\n        (worldTimeHour >= 20 && worldTimeHour < 23) ? 'ночь' : 'глубокая ночь';\r\n      \r\n      // Используем вычисления как в UPDATE_TIME для корректной обработки переходов сезона\r\n      \r\n      // Вычисляем правильный день сезона и сезон\r\n      let syncSeasonDay, syncSeason = worldTimeSeason;\r\n      \r\n      // Проверяем, превышает ли день длину сезона\r\n      if (worldTimeDay > SEASON_LENGTH) {\r\n        syncSeasonDay = calculateSeasonDay(worldTimeDay);\r\n        syncSeason = calculateSeason(worldTimeDay);\r\n        \r\n        console.log('🌈 FORCE_SYNC: РАСЧЕТ СЕЗОНА ПРИ ПЕРЕХОДЕ ЧЕРЕЗ МАКСИМАЛЬНУЮ ДЛИНУ:', {\r\n          мировой_день: worldTimeDay,\r\n          вычисленный_день_сезона: syncSeasonDay,\r\n          текущий_сезон: worldTimeSeason,\r\n          вычисленный_сезон: syncSeason,\r\n          длина_сезона: SEASON_LENGTH\r\n        });\r\n        \r\n        // Если сезон вычислен и отличается от переданного, обновляем\r\n        if (syncSeason && syncSeason !== worldTimeSeason) {\r\n          console.log(`🌈🌈 FORCE_SYNC: ОБНАРУЖЕНО НЕСООТВЕТСТВИЕ СЕЗОНА: ${worldTimeSeason} -> ${syncSeason}`);\r\n          \r\n          // Здесь мы НЕ обновляем worldTimeSeason, так как это влияет на world.time,\r\n          // вместо этого просто отмечаем, что будем использовать syncSeason\r\n        }\r\n      } else {\r\n        // Если день в пределах длины сезона\r\n        syncSeasonDay = worldTimeDay;\r\n      }\r\n      \r\n      console.log('🔄 FORCE_SYNC: Синхронизация данных:', {\r\n        from: {\r\n          hour: worldTimeHour,\r\n          minute: worldTimeMinute,\r\n          day: worldTimeDay,\r\n          season: worldTimeSeason\r\n        },\r\n        to: {\r\n          currentTime: syncTotalMinutes,\r\n          formattedTime: syncFormattedTime,\r\n          hour: worldTimeHour,\r\n          minute: worldTimeMinute,\r\n          dayCount: worldTimeDay,\r\n          seasonDay: syncSeasonDay,\r\n          timeOfDay: syncTimeOfDay,\r\n          isDayTime: worldTimeHour >= 6 && worldTimeHour < 20,\r\n          currentSeason: syncSeason\r\n        }\r\n      });\r\n      \r\n      // Возвращаем новое состояние с синхронизированными значениями и обновлением world.time\r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          time: {\r\n            ...state.world.time,\r\n            season: syncSeason // Обновляем сезон на основе вычислений\r\n          }\r\n        },\r\n        weather: {\r\n          ...state.weather,\r\n          currentTime: syncTotalMinutes,\r\n          formattedTime: syncFormattedTime,\r\n          hour: worldTimeHour,\r\n          minute: worldTimeMinute,\r\n          dayCount: worldTimeDay,\r\n          seasonDay: syncSeasonDay, // Используем вычисленный день сезона\r\n          timeOfDay: syncTimeOfDay,\r\n          isDayTime: worldTimeHour >= 6 && worldTimeHour < 20,\r\n          currentSeason: syncSeason // Используем вычисленный сезон\r\n        }\r\n      };\r\n      \r\n    // ОБРАБОТЧИК: Правильная синхронизация дня сезона с мировым днем\r\n    case 'SYNC_SEASON_DAY':\r\n      // Только если оба объекта существуют\r\n      if (!state.world?.time || !state.weather) {\r\n        console.log('⚠️ Невозможно выполнить SYNC_SEASON_DAY: отсутствуют world.time или weather');\r\n        return state;\r\n      }\r\n      \r\n      const worldDaySync = Number(state.world.time.day);\r\n      const currentSeasonDaySync = state.weather.seasonDay || 1;\r\n      \r\n      // Важное исправление: вычисляем правильный день сезона, если мировой день превышает длину сезона\r\n      let calculatedSeasonDaySync;\r\n      \r\n      if (worldDaySync > SEASON_LENGTH) {\r\n        // Используем ту же формулу, что и в calculateSeasonDay\r\n        calculatedSeasonDaySync = ((worldDaySync - 1) % SEASON_LENGTH) + 1;\r\n        \r\n        console.log('🔄 SYNC_SEASON_DAY: Корректировка дня сезона для дня > SEASON_LENGTH:', {\r\n          worldDay: worldDaySync,\r\n          currentSeasonDay: currentSeasonDaySync,\r\n          вычисленныйДеньСезона: calculatedSeasonDaySync,\r\n          формула: `((${worldDaySync} - 1) % ${SEASON_LENGTH}) + 1 = ${calculatedSeasonDaySync}`\r\n        });\r\n      } else {\r\n        // Если день в пределах длины сезона, день сезона = мировому дню\r\n        calculatedSeasonDaySync = worldDaySync;\r\n        \r\n        console.log('🔄 SYNC_SEASON_DAY: День в пределах сезона:', {\r\n          worldDay: worldDaySync,\r\n          currentSeasonDay: currentSeasonDaySync\r\n        });\r\n      }\r\n      \r\n      // Возвращаем новое состояние с правильно вычисленным днем сезона\r\n      return {\r\n        ...state,\r\n        weather: {\r\n          ...state.weather,\r\n          seasonDay: calculatedSeasonDaySync // Используем вычисленный день сезона\r\n        }\r\n      };\r\n    \r\n    // Обработчик для принудительной смены погоды\r\n    case 'FORCE_WEATHER_CHANGE':\r\n      console.log('🌤️ Reducer: получен FORCE_WEATHER_CHANGE');\r\n      \r\n      // Проверяем, что погода существует\r\n      if (!state.weather) {\r\n        console.error('❌ FORCE_WEATHER_CHANGE: state.weather отсутствует');\r\n        return state;\r\n      }\r\n      \r\n      try {\r\n        // Создаем экземпляр сервиса погоды\r\n        const weatherService = new (require('../../services/weather-service').default)();\r\n        \r\n        // Получаем текущее время из world.time для правильного расчета weatherChangeAt\r\n        const currentHour = state.world?.time?.hour || state.weather.hour || 0;\r\n        const currentMinute = state.world?.time?.minute || state.weather.minute || 0;\r\n        const currentAbsoluteMinutes = currentHour * 60 + currentMinute;\r\n        \r\n        // Вызываем метод для принудительной смены погоды\r\n        const updatedWeather = weatherService.forceWeatherChange(state.weather, state.world?.currentLocation);\r\n        \r\n        // УЛУЧШЕНИЕ: Проверяем и логируем weatherChangeAt и nextWeatherChange\r\n        if (updatedWeather.weatherChangeAt === undefined && updatedWeather.nextWeatherChange !== undefined) {\r\n          // Если weatherChangeAt отсутствует, но есть nextWeatherChange, вычисляем weatherChangeAt\r\n          updatedWeather.weatherChangeAt = currentAbsoluteMinutes + updatedWeather.nextWeatherChange;\r\n          console.log('⚠️ FORCE_WEATHER_CHANGE: weatherChangeAt отсутствует, вычисляем:', {\r\n            currentAbsoluteMinutes,\r\n            nextWeatherChange: updatedWeather.nextWeatherChange,\r\n            weatherChangeAt: updatedWeather.weatherChangeAt\r\n          });\r\n        } else if (updatedWeather.weatherChangeAt !== undefined && updatedWeather.nextWeatherChange === undefined) {\r\n          // Если weatherChangeAt есть, но nextWeatherChange отсутствует, вычисляем nextWeatherChange\r\n          updatedWeather.nextWeatherChange = Math.max(0, updatedWeather.weatherChangeAt - currentAbsoluteMinutes);\r\n          console.log('⚠️ FORCE_WEATHER_CHANGE: nextWeatherChange отсутствует, вычисляем:', {\r\n            currentAbsoluteMinutes,\r\n            weatherChangeAt: updatedWeather.weatherChangeAt,\r\n            nextWeatherChange: updatedWeather.nextWeatherChange\r\n          });\r\n        }\r\n        \r\n        // Проверяем корректность значений\r\n        const validNextWeatherChange = typeof updatedWeather.nextWeatherChange === 'number' && \r\n                                    !isNaN(updatedWeather.nextWeatherChange);\r\n        const validWeatherChangeAt = typeof updatedWeather.weatherChangeAt === 'number' && \r\n                                   !isNaN(updatedWeather.weatherChangeAt);\r\n        \r\n        if (!validNextWeatherChange || !validWeatherChangeAt) {\r\n          console.error('⚠️ FORCE_WEATHER_CHANGE: Некорректные значения счетчиков погоды:', {\r\n            nextWeatherChange: updatedWeather.nextWeatherChange,\r\n            weatherChangeAt: updatedWeather.weatherChangeAt\r\n          });\r\n          \r\n          // Устанавливаем безопасные значения по умолчанию\r\n          if (!validNextWeatherChange) updatedWeather.nextWeatherChange = 60;\r\n          if (!validWeatherChangeAt) updatedWeather.weatherChangeAt = currentAbsoluteMinutes + 60;\r\n        }\r\n        \r\n        console.log('✅ FORCE_WEATHER_CHANGE: погода успешно обновлена', {\r\n          новая_погода: updatedWeather.currentWeather,\r\n          интенсивность: updatedWeather.weatherIntensity,\r\n          время_до_следующей_смены: updatedWeather.nextWeatherChange,\r\n          абсолютное_время_смены: updatedWeather.weatherChangeAt\r\n        });\r\n        \r\n        // Возвращаем обновленное состояние\r\n        return {\r\n          ...state,\r\n          weather: updatedWeather\r\n        };\r\n      } catch (error) {\r\n        console.error('❌ FORCE_WEATHER_CHANGE: ошибка при обновлении погоды', error);\r\n        return state;\r\n      }\r\n      \r\n    // Специальный обработчик для исправления ТОЛЬКО минут\r\n    // Обработчик для обновления множителя времени\r\n    case 'UPDATE_TIME_MULTIPLIER':\r\n      console.log('⏱️ Reducer: получен UPDATE_TIME_MULTIPLIER с multiplier =', action.payload?.multiplier);\r\n      \r\n      // Обновляем только UI, не меняя состояние\r\n      // Это просто сигнал, что множитель изменился, и нужно обновить интерфейс\r\n      \r\n      return state;\r\n      \r\n    case 'FIX_WEATHER_MINUTES':\r\n      // Проверяем, есть ли необходимые данные\r\n      if (!state.weather || action.payload?.minute === undefined) {\r\n        console.log('⚠️ FIX_WEATHER_MINUTES: невозможно обновить минуты, отсутствуют данные');\r\n        return state;\r\n      }\r\n      \r\n      console.log('🔧 Выполняется FIX_WEATHER_MINUTES: исправление минут', {\r\n        currentMinute: state.weather.minute,\r\n        newMinute: action.payload.minute,\r\n        minuteType: typeof action.payload.minute\r\n      });\r\n      \r\n      // Конвертируем минуту в число для надежности\r\n      const fixedMinute = parseInt(action.payload.minute, 10);\r\n      \r\n      if (isNaN(fixedMinute)) {\r\n        console.error('⚠️ FIX_WEATHER_MINUTES: невозможно преобразовать minute в число', action.payload.minute);\r\n        return state;\r\n      }\r\n      \r\n      // Пересчитываем значение currentTime с учетом обновленных минут\r\n      const hour = state.weather.hour !== undefined ? parseInt(state.weather.hour, 10) : 0;\r\n      const newTotalMinutes = hour * 60 + fixedMinute;\r\n      \r\n      // Форматированное время тоже обновляем\r\n      const newFormattedTime = `${String(hour).padStart(2, '0')}:${String(fixedMinute).padStart(2, '0')}`;\r\n      \r\n      console.log('✅ FIX_WEATHER_MINUTES: успешно обновляем минуты', {\r\n        hour,\r\n        newMinute: fixedMinute,\r\n        newTotalMinutes,\r\n        newFormattedTime\r\n      });\r\n      \r\n      // Возвращаем обновленное состояние\r\n      return {\r\n        ...state,\r\n        weather: {\r\n          ...state.weather,\r\n          minute: fixedMinute, // Обновляем минуту напрямую\r\n          currentTime: newTotalMinutes, // Также обновляем общее время в минутах\r\n          formattedTime: newFormattedTime // И форматированное время\r\n        }\r\n      };\r\n      \r\n    // Прямое добавление игровых часов\r\n    case 'DIRECT_ADD_GAME_HOURS':\r\n      // Проверяем, что world.time существует\r\n      if (!state.world?.time) {\r\n        console.error('❌ DIRECT_ADD_GAME_HOURS: state.world.time отсутствует');\r\n        return state;\r\n      }\r\n      \r\n      console.log(`🕒 DIRECT_ADD_GAME_HOURS: Добавление ${action.payload.hours} игровых часов`);\r\n      \r\n      // Получаем текущие значения времени с приведением типов\r\n      const gameCurrentHour = Number(state.world.time.hour);\r\n      const gameCurrentMinute = Number(state.world.time.minute);\r\n      const gameCurrentDay = Number(state.world.time.day);\r\n      const gameCurrentSeason = state.world.time.season;\r\n      \r\n      // Рассчитываем новое время\r\n      let gameNewHour = gameCurrentHour + action.payload.hours;\r\n      let gameNewMinute = gameCurrentMinute;\r\n      let gameNewDay = gameCurrentDay;\r\n      \r\n      // Обрабатываем переход на новый день\r\n      while (gameNewHour >= 24) {\r\n        gameNewHour -= 24;\r\n        gameNewDay += 1;\r\n      }\r\n      \r\n      // Обновляем время\r\n      const gameNewHourInMinutes = gameNewHour * 60 + gameNewMinute;\r\n      const gameFormattedTimeValue = `${String(gameNewHour).padStart(2, '0')}:${String(gameNewMinute).padStart(2, '0')}`;\r\n      const gameTimeOfDayValue = \r\n        (gameNewHour >= 5 && gameNewHour < 7) ? 'рассвет' :\r\n        (gameNewHour >= 7 && gameNewHour < 11) ? 'утро' :\r\n        (gameNewHour >= 11 && gameNewHour < 14) ? 'полдень' :\r\n        (gameNewHour >= 14 && gameNewHour < 17) ? 'день' :\r\n        (gameNewHour >= 17 && gameNewHour < 20) ? 'вечер' :\r\n        (gameNewHour >= 20 && gameNewHour < 23) ? 'ночь' : 'глубокая ночь';\r\n      \r\n      // Логируем изменение дня, если произошло\r\n      if (gameNewDay > gameCurrentDay) {\r\n        console.log(`📅📅📅 ДЕНЬ ИЗМЕНИЛСЯ при добавлении часов: ${gameCurrentDay} -> ${gameNewDay}`);\r\n      }\r\n      \r\n      // Вычисляем правильный день сезона и сезон при добавлении часов\r\n      let gameCalculatedSeasonDay, gameCalculatedSeason = gameCurrentSeason;\r\n      \r\n      // Проверяем, превышает ли новый день длину сезона\r\n      if (gameNewDay > SEASON_LENGTH) {\r\n        gameCalculatedSeasonDay = calculateSeasonDay(gameNewDay);\r\n        gameCalculatedSeason = calculateSeason(gameNewDay);\r\n        \r\n        console.log('🌈 DIRECT_ADD_GAME_HOURS: РАСЧЕТ СЕЗОНА ПРИ ПЕРЕХОДЕ ЧЕРЕЗ МАКСИМАЛЬНУЮ ДЛИНУ:', {\r\n          мировой_день: gameNewDay,\r\n          вычисленный_день_сезона: gameCalculatedSeasonDay,\r\n          текущий_сезон: gameCurrentSeason,\r\n          вычисленный_сезон: gameCalculatedSeason,\r\n          длина_сезона: SEASON_LENGTH\r\n        });\r\n        \r\n        // Если вычисленный сезон отличается от текущего, логируем изменение\r\n        if (gameCalculatedSeason !== gameCurrentSeason) {\r\n          console.log(`🌈🌈 DIRECT_ADD_GAME_HOURS: СМЕНА СЕЗОНА: ${gameCurrentSeason} -> ${gameCalculatedSeason}`);\r\n        }\r\n      } else {\r\n        // Если день в пределах длины сезона\r\n        gameCalculatedSeasonDay = gameNewDay;\r\n      }\r\n      \r\n      // Обновляем weather синхронно с учетом вычисленных значений сезона\r\n      const gameUpdatedWeather = {\r\n        ...state.weather,\r\n        currentTime: gameNewHourInMinutes,\r\n        formattedTime: gameFormattedTimeValue,\r\n        hour: gameNewHour,\r\n        minute: gameNewMinute,\r\n        dayCount: gameNewDay,\r\n        seasonDay: gameCalculatedSeasonDay, // Используем вычисленный день сезона\r\n        currentSeason: gameCalculatedSeason, // Используем вычисленный сезон\r\n        timeOfDay: gameTimeOfDayValue,\r\n        isDayTime: gameNewHour >= 6 && gameNewHour < 20\r\n      };\r\n      \r\n      console.log('✅ DIRECT_ADD_GAME_HOURS: Новые значения времени:', {\r\n        час: gameNewHour,\r\n        минута: gameNewMinute,\r\n        день: gameNewDay,\r\n        сезон: gameCalculatedSeason, // Используем вычисленный сезон для логов\r\n        период_суток: gameTimeOfDayValue\r\n      });\r\n      \r\n      // Возвращаем обновленное состояние\r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          time: {\r\n            ...state.world.time,\r\n            hour: gameNewHour,\r\n            minute: gameNewMinute,\r\n            day: gameNewDay,\r\n            season: gameCalculatedSeason // Обновляем сезон и в world.time тоже!\r\n          },\r\n        },\r\n        weather: gameUpdatedWeather\r\n      };\r\n      \r\n    case ACTION_TYPES.ADD_EVENT:\r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          events: [...state.world.events, action.payload],\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.REMOVE_EVENT:\r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          events: state.world.events.filter(event => event.id !== action.payload),\r\n        },\r\n      };\r\n    \r\n    case ACTION_TYPES.CACHE_GENERATED_ENEMY:\r\n      const { areaId, enemyId, enemy } = action.payload;\r\n      const key = `${areaId}_${enemyId}`;\r\n      \r\n      console.log(`🎮 Кэширование противника: ${key}`, {\r\n        уровень: enemy.level,\r\n        requiredLevel: enemy.requiredLevel\r\n      });\r\n      \r\n      return {\r\n        ...state,\r\n        world: {\r\n          ...state.world,\r\n          generatedEnemies: {\r\n            ...(state.world.generatedEnemies || {}),\r\n            [key]: enemy\r\n          }\r\n        }\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Инициализация начального состояния погоды\r\nexport const initializeWeatherState = (state) => {\r\n  // Если weather полностью отсутствует\r\n  if (!state.weather) {\r\n    console.log('🔄 initializeWeatherState: state.weather отсутствует, создаем новый объект');\r\n    return {\r\n      ...state,\r\n      weather: initialWeatherState\r\n    };\r\n  }\r\n  \r\n  // Если weather существует, но нужно синхронизировать данные с world.time\r\n  if (state.weather && state.world && state.world.time) {\r\n    // Создаем обновленный объект weather с синхронизированными данными\r\n    let updatedWeather = {...state.weather};\r\n    let wasUpdated = false;\r\n    \r\n    // Синхронизируем время, если есть hour и minute в world.time\r\n    if (typeof state.world.time.hour === 'number' && typeof state.world.time.minute === 'number') {\r\n      const hour = state.world.time.hour;\r\n      const minute = state.world.time.minute;\r\n      const currentTime = hour * 60 + minute;\r\n      \r\n      // Обновляем все поля, связанные со временем\r\n      updatedWeather = {\r\n        ...updatedWeather,\r\n        currentTime,\r\n        hour,\r\n        minute,\r\n        formattedTime: `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`,\r\n        timeOfDay: \r\n          (hour >= 5 && hour < 7) ? 'рассвет' :\r\n          (hour >= 7 && hour < 11) ? 'утро' :\r\n          (hour >= 11 && hour < 14) ? 'полдень' :\r\n          (hour >= 14 && hour < 17) ? 'день' :\r\n          (hour >= 17 && hour < 20) ? 'вечер' :\r\n          (hour >= 20 && hour < 23) ? 'ночь' : 'глубокая ночь',\r\n        isDayTime: hour >= 6 && hour < 20\r\n      };\r\n      \r\n      wasUpdated = true;\r\n      console.log(`🔄 initializeWeatherState: Синхронизируем время: ${hour}:${minute} -> ${currentTime}`);\r\n    }\r\n    \r\n    // Синхронизируем день и сезон, если он есть в world.time\r\n    if (typeof state.world.time.day === 'number') {\r\n      const worldDay = state.world.time.day;\r\n      let seasonDay, calculatedSeason;\r\n      \r\n      updatedWeather.dayCount = worldDay;\r\n      \r\n      // Проверяем, превышает ли день длину сезона\r\n      if (worldDay > SEASON_LENGTH) {\r\n        // Вычисляем день сезона и сезон по формуле\r\n        seasonDay = calculateSeasonDay(worldDay);\r\n        calculatedSeason = calculateSeason(worldDay);\r\n        \r\n        console.log('🌈 initializeWeatherState: РАСЧЕТ СЕЗОНА ПРИ ИНИЦИАЛИЗАЦИИ:', {\r\n          мировой_день: worldDay,\r\n          вычисленный_день_сезона: seasonDay,\r\n          вычисленный_сезон: calculatedSeason\r\n        });\r\n        \r\n        // Если сезон в state.world.time отличается от вычисленного, используем вычисленный\r\n        if (state.world.time.season && calculatedSeason !== state.world.time.season) {\r\n          console.log(`🌈🌈 initializeWeatherState: КОРРЕКЦИЯ СЕЗОНА: ${state.world.time.season} -> ${calculatedSeason}`);\r\n        }\r\n        \r\n        // Устанавливаем вычисленные значения\r\n        updatedWeather.seasonDay = seasonDay;\r\n        updatedWeather.currentSeason = calculatedSeason;\r\n      } else {\r\n        // Если день в пределах длины сезона\r\n        updatedWeather.seasonDay = worldDay;\r\n        \r\n        // Если сезон задан, используем его, иначе рассчитываем\r\n        if (state.world.time.season) {\r\n          updatedWeather.currentSeason = state.world.time.season;\r\n        } else {\r\n          // Если сезон не задан, вычисляем его\r\n          updatedWeather.currentSeason = 'spring'; // По умолчанию весна\r\n        }\r\n      }\r\n      \r\n      wasUpdated = true;\r\n      console.log(`🔄 initializeWeatherState: Синхронизируем день и сезон:`, {\r\n        мировой_день: worldDay,\r\n        день_сезона: updatedWeather.seasonDay,\r\n        сезон: updatedWeather.currentSeason\r\n      });\r\n    }\r\n    \r\n    // Возвращаем обновленное состояние, если были изменения\r\n    if (wasUpdated) {\r\n      // Обновляем также world.time.season, если день превышает длину сезона\r\n      // и вычисленный сезон отличается от текущего сезона в world.time\r\n      if (typeof state.world.time.day === 'number' && \r\n          state.world.time.day > SEASON_LENGTH && \r\n          state.world.time.season && \r\n          updatedWeather.currentSeason !== state.world.time.season) {\r\n        \r\n        console.log(`🌈 initializeWeatherState: СИНХРОНИЗАЦИЯ СЕЗОНА В WORLD.TIME:`, {\r\n          текущий_сезон_world_time: state.world.time.season,\r\n          вычисленный_сезон: updatedWeather.currentSeason,\r\n          день: state.world.time.day\r\n        });\r\n        \r\n        return {\r\n          ...state,\r\n          world: {\r\n            ...state.world,\r\n            time: {\r\n              ...state.world.time,\r\n              season: updatedWeather.currentSeason // Обновляем сезон в world.time\r\n            }\r\n          },\r\n          weather: updatedWeather\r\n        };\r\n      }\r\n      \r\n      // Если не нужно обновлять world.time.season, просто обновляем weather\r\n      return {\r\n        ...state,\r\n        weather: updatedWeather\r\n      };\r\n    }\r\n  }\r\n  \r\n  return state;\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\nimport initialState from '../state/initialState';\r\nimport { repairTechniques } from '../../utils/techniqueUtils';\r\n\r\n// Редуктор для обработки действий, связанных с сохранением и загрузкой игры\r\nexport const gameStateReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SAVE_GAME: {\r\n      try {\r\n        // Создаем глубокую копию состояния для сохранения\r\n        const stateToSave = JSON.parse(JSON.stringify(state));\r\n        \r\n        // Подготавливаем техники перед сохранением, чтобы гарантировать сохранение всех свойств\r\n        if (stateToSave.player && Array.isArray(stateToSave.player.techniques)) {\r\n          // Проверяем и подготавливаем каждую технику\r\n          stateToSave.player.techniques = stateToSave.player.techniques.map(technique => {\r\n            // Проверяем, что все необходимые поля присутствуют\r\n            const validatedTechnique = {\r\n              id: technique.id,\r\n              name: technique.name || '',\r\n              description: technique.description || '',\r\n              type: technique.type || 'attack',\r\n              element: technique.element || 'fire',\r\n              icon: technique.icon || '',\r\n              level: technique.level || 1,\r\n              experience: technique.experience || 0,\r\n              masteryLevel: technique.masteryLevel || 0,\r\n              energyCost: technique.energyCost || 10,\r\n              damage: technique.damage || 0,\r\n              damageType: technique.damageType || 'physical',\r\n              healing: technique.healing || 0,\r\n              cooldown: technique.cooldown || 0,\r\n              maxLevel: technique.maxLevel || 10,\r\n              lastUsed: technique.lastUsed || null,\r\n              effects: Array.isArray(technique.effects) ? technique.effects : [],\r\n              requiredLevel: technique.requiredLevel || 1\r\n            };\r\n            \r\n            return validatedTechnique;\r\n          });\r\n          \r\n          console.log(`Подготовлено ${stateToSave.player.techniques.length} техник для сохранения`);\r\n        }\r\n        \r\n        // Сохраняем игру в localStorage и на сервере\r\n        localStorage.setItem('gameState', JSON.stringify(stateToSave));\r\n        console.log('Игра успешно сохранена в localStorage');\r\n        \r\n        // Если передан колбэк для обработки результата сохранения\r\n        if (action.payload && typeof action.payload.onSuccess === 'function') {\r\n          action.payload.onSuccess();\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при сохранении игры:', error);\r\n        \r\n        // Если передан колбэк для обработки ошибки\r\n        if (action.payload && typeof action.payload.onError === 'function') {\r\n          action.payload.onError(error);\r\n        }\r\n      }\r\n      \r\n      return state;\r\n    }\r\n    \r\n    case ACTION_TYPES.LOAD_GAME: {\r\n      const loadedState = action.payload;\r\n      console.log('Загрузка состояния:', loadedState);\r\n      \r\n      // Логгируем техники перед валидацией для отладки\r\n      if (Array.isArray(loadedState?.player?.techniques) && loadedState.player.techniques.length > 0) {\r\n        console.log('Загружаемые техники до валидации:', loadedState.player.techniques);\r\n      }\r\n      \r\n      // Проверяем и восстанавливаем структуру состояния\r\n      const validatedState = {\r\n        ...initialState,\r\n        ...loadedState,\r\n        player: {\r\n          ...initialState.player,\r\n          ...(loadedState?.player || {}),\r\n          social: {\r\n            ...initialState.player.social,\r\n            ...(loadedState?.player?.social || {}),\r\n            relationships: loadedState?.player?.social?.relationships || {}\r\n          },\r\n          progress: {\r\n            ...initialState.player.progress,\r\n            ...(loadedState?.player?.progress || {}),\r\n            discoveries: loadedState?.player?.progress?.discoveries || {},\r\n            quests: {\r\n              ...initialState.player.progress.quests,\r\n              ...(loadedState?.player?.progress?.quests || {}),\r\n              active: Array.isArray(loadedState?.player?.progress?.quests?.active) \r\n                ? loadedState.player.progress.quests.active \r\n                : [],\r\n              available: Array.isArray(loadedState?.player?.progress?.quests?.available) \r\n                ? loadedState.player.progress.quests.available \r\n                : [],\r\n              completed: Array.isArray(loadedState?.player?.progress?.quests?.completed) \r\n                ? loadedState.player.progress.quests.completed \r\n                : []\r\n            }\r\n          },\r\n          inventory: {\r\n            ...initialState.player.inventory,\r\n            ...(loadedState?.player?.inventory || {}),\r\n            items: Array.isArray(loadedState?.player?.inventory?.items) \r\n              ? loadedState.player.inventory.items \r\n              : [],\r\n            equipment: loadedState?.player?.inventory?.equipment || {},\r\n            currency: loadedState?.player?.inventory?.currency || 0\r\n          },\r\n          cultivation: {\r\n            ...initialState.player.cultivation,\r\n            ...(loadedState?.player?.cultivation || {})\r\n          },\r\n      // Загружаем техники без сложной логики восстановления\r\n      techniques: Array.isArray(loadedState?.player?.techniques) \r\n        ? loadedState.player.techniques \r\n        : [],\r\n          spiritPets: {\r\n            ...initialState.player.spiritPets,\r\n            ...(loadedState?.player?.spiritPets || {}),\r\n            pets: Array.isArray(loadedState?.player?.spiritPets?.pets)\r\n              ? loadedState.player.spiritPets.pets\r\n              : [],\r\n            activePetId: loadedState?.player?.spiritPets?.activePetId || null\r\n          }\r\n        },\r\n        achievements: {\r\n          ...initialState.achievements,\r\n          ...(loadedState?.achievements || {}),\r\n          completed: Array.isArray(loadedState?.achievements?.completed) \r\n            ? loadedState.achievements.completed \r\n            : []\r\n        },\r\n        isLoading: loadedState?.isLoading !== undefined ? loadedState.isLoading : false,\r\n        error: loadedState?.error || null,\r\n        isInitialized: loadedState?.isInitialized !== undefined ? loadedState.isInitialized : false\r\n      };\r\n      \r\n      console.log('Валидированное состояние:', validatedState);\r\n      \r\n      // Логгируем техники после валидации для проверки\r\n      if (Array.isArray(validatedState?.player?.techniques) && validatedState.player.techniques.length > 0) {\r\n        console.log('Техники после валидации:', validatedState.player.techniques);\r\n      }\r\n      \r\n      return validatedState;\r\n    }\r\n    \r\n    case ACTION_TYPES.SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        isInitialized: action.payload\r\n      };\r\n      \r\n    case ACTION_TYPES.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\n\r\n/**\r\n * Редуктор для обработки действий, связанных с рынком и торговлей\r\n * @param {Object} state Текущее состояние рынка\r\n * @param {Object} action Действие для обработки\r\n * @returns {Object} Новое состояние рынка\r\n */\r\nconst marketReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.ADD_MARKET_ITEM:\r\n      return {\r\n        ...state,\r\n        marketItems: [...state.marketItems, action.payload]\r\n      };\r\n      \r\n    case ACTION_TYPES.REMOVE_MARKET_ITEM:\r\n      return {\r\n        ...state,\r\n        marketItems: state.marketItems.filter(item => item.id !== action.payload.id)\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_MARKET_ITEM:\r\n      return {\r\n        ...state,\r\n        marketItems: state.marketItems.map(item => \r\n          item.id === action.payload.id ? { ...item, ...action.payload } : item\r\n        )\r\n      };\r\n      \r\n    case ACTION_TYPES.BUY_MARKET_ITEM:\r\n      // Обработка покупки предмета с рынка\r\n      // Удаляем предмет из списка рыночных предметов\r\n      return {\r\n        ...state,\r\n        marketItems: state.marketItems.filter(item => item.id !== action.payload.id),\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n      \r\n    case ACTION_TYPES.SELL_MARKET_ITEM:\r\n      // Обработка продажи предмета на рынок\r\n      // Добавляем предмет в список рыночных предметов\r\n      return {\r\n        ...state,\r\n        playerItems: [...state.playerItems, action.payload],\r\n        lastUpdated: new Date().toISOString()\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_MERCHANT_REPUTATION:\r\n      // Обновление репутации игрока у торговца\r\n      return {\r\n        ...state,\r\n        merchantReputation: {\r\n          ...state.merchantReputation,\r\n          [action.payload.merchantId]: action.payload.reputation\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_MARKET_STATE:\r\n      // Обновление всего состояния рынка c сохранением информации о скидках\r\n      if (action.payload.marketItems) {\r\n        // Если есть маркетные товары в payload, обеспечиваем сохранение информации о скидках\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n          marketItems: (action.payload.marketItems || []).map(newItem => {\r\n            // Сохраняем оригинальную цену и скидку, если они есть в payload\r\n            if (newItem.originalPrice && newItem.discount !== undefined) {\r\n              return newItem;\r\n            }\r\n\r\n            // Ищем соответствующий предмет в старом состоянии\r\n            const oldItem = state.marketItems ? \r\n              state.marketItems.find(item => item.itemId === newItem.itemId && item.itemType === newItem.itemType) : null;\r\n\r\n            // Если нашли старый предмет и у него есть информация о скидке, сохраняем ее\r\n            if (oldItem && oldItem.originalPrice && oldItem.discount !== undefined) {\r\n              return {\r\n                ...newItem,\r\n                originalPrice: oldItem.originalPrice,\r\n                discount: oldItem.discount\r\n              };\r\n            }\r\n            \r\n            return newItem;\r\n          }),\r\n          lastUpdated: new Date().toISOString()\r\n        };\r\n      } else {\r\n        // Если нет маркетных товаров, просто обновляем состояние\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n          lastUpdated: new Date().toISOString()\r\n        };\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default marketReducer;\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\nimport { \r\n  normalizeSectBenefits, \r\n  normalizeSectData, \r\n  createNormalizedSectData, \r\n  collectAllSectBenefits \r\n} from '../../utils/sectUtils';\r\nimport { updateRelationshipAndLoyalty } from '../../utils/sectRelationshipSyncer.js';\r\n\r\n/**\r\n * Начальное состояние секты\r\n */\r\nconst initialState = {\r\n  // Информация о секте\r\n  sect: null,\r\n  // Загрузка данных\r\n  loading: false,\r\n  // Ошибка\r\n  error: null,\r\n  // Информация о ранге пользователя в секте\r\n  userRank: null,\r\n  // Привилегии пользователя в секте\r\n  privileges: [],\r\n  // Бонусы от секты\r\n  benefits: [\r\n    {type: 'cultivation_speed', modifier: 0},\r\n    {type: 'resource_gathering', modifier: 0},\r\n    {type: 'energy_regen', modifier: 0},\r\n    {type: 'technique_discount', modifier: 0},\r\n    {type: 'max_energy', modifier: 0}\r\n  ],\r\n  // Выбранный член секты для взаимодействия\r\n  selectedMember: null\r\n};\r\n\r\n/**\r\n * Редуктор для работы с сектами\r\n * @param {Object} state Текущее состояние\r\n * @param {Object} action Действие для обработки\r\n * @returns {Object} Новое состояние\r\n */\r\nconst sectReducer = (state = initialState, action) => {\r\n  // Нормализуем текущее состояние перед каждой операцией\r\n  // Это обеспечит консистентный формат данных\r\n  let safeState = normalizeSectData(state);\r\n  \r\n  switch (action.type) {\r\n    // Нормализация данных секты\r\n    case ACTION_TYPES.NORMALIZE_SECT_DATA:\r\n      console.log('Выполняется нормализация данных секты');\r\n      return normalizeSectData(safeState);\r\n    // Установка информации о секте\r\n    case ACTION_TYPES.SET_SECT:\r\n      if (!action.payload) {\r\n        return state;\r\n      }\r\n      \r\n      // Создаем копию payload с нормализованными бонусами\r\n      const normalizedPayload = {\r\n        ...action.payload,\r\n        benefits: normalizeSectBenefits(action.payload.benefits)\r\n      };\r\n      \r\n      // Создаем новое состояние\r\n      const setSectState = {\r\n        ...state,\r\n        sect: normalizedPayload,\r\n        benefits: normalizedPayload.benefits || state.benefits,\r\n        loading: false,\r\n        error: null\r\n      };\r\n      \r\n      // Проводим полную нормализацию нового состояния\r\n      return normalizeSectData(setSectState);\r\n    \r\n    // Обновление информации о секте\r\n    case ACTION_TYPES.UPDATE_SECT:\r\n      return {\r\n        ...state,\r\n        sect: {\r\n          ...state.sect,\r\n          ...action.payload\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    // Вступление в секту\r\n    case ACTION_TYPES.JOIN_SECT:\r\n      return {\r\n        ...state,\r\n        sect: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    // Выход из секты\r\n    case ACTION_TYPES.LEAVE_SECT:\r\n      return {\r\n        ...initialState\r\n      };\r\n    \r\n    // Вклад в секту\r\n    case ACTION_TYPES.CONTRIBUTE_TO_SECT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    // Обновление информации о секте после вклада (вызывается в результате успешного вклада)\r\n    case `${ACTION_TYPES.CONTRIBUTE_TO_SECT}_SUCCESS`:\r\n      return {\r\n        ...state,\r\n        sect: {\r\n          ...state.sect,\r\n          level: action.payload.newLevel,\r\n          rank: action.payload.sectRank,\r\n          experience: action.payload.sectExperience,\r\n          requiredExperience: action.payload.sectRequiredExperience,\r\n          influence: action.payload.sectInfluence\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    // Ошибка при вкладе в секту\r\n    case `${ACTION_TYPES.CONTRIBUTE_TO_SECT}_ERROR`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    // Тренировка с членом секты\r\n    case ACTION_TYPES.TRAIN_SECT_MEMBER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    // Обновление информации о члене секты после тренировки\r\n    case `${ACTION_TYPES.TRAIN_SECT_MEMBER}_SUCCESS`:\r\n      // Находим и обновляем информацию о члене секты\r\n      const updatedMembers = state.sect.members.map(member => \r\n        member.id === action.payload.memberId \r\n          ? {\r\n              ...member,\r\n              level: action.payload.memberLevel,\r\n              experience: action.payload.memberExperience,\r\n              requiredExperience: action.payload.memberRequiredExperience,\r\n              role: action.payload.memberRole,\r\n              loyalty: action.payload.memberLoyalty\r\n            }\r\n          : member\r\n      );\r\n      \r\n      return {\r\n        ...state,\r\n        sect: {\r\n          ...state.sect,\r\n          members: updatedMembers\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    // Ошибка при тренировке члена секты\r\n    case `${ACTION_TYPES.TRAIN_SECT_MEMBER}_ERROR`:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    // Обновление информации о члене секты\r\n    case ACTION_TYPES.UPDATE_SECT_MEMBER:\r\n      // Находим и обновляем информацию о члене секты\r\n      const updatedMembersArray = state.sect.members.map(member => \r\n        member.id === action.payload.id \r\n          ? {\r\n              ...member,\r\n              ...action.payload\r\n            }\r\n          : member\r\n      );\r\n      \r\n      return {\r\n        ...state,\r\n        sect: {\r\n          ...state.sect,\r\n          members: updatedMembersArray\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n// Обновление бонусов от секты\r\n    case ACTION_TYPES.UPDATE_SECT_BENEFITS:\r\n      // Используем функцию нормализации из sectUtils\r\n      const normalizedBenefits = normalizeSectBenefits(action.payload);\r\n      \r\n      console.log('Обновление бонусов секты. Нормализованные бонусы:', normalizedBenefits);\r\n      \r\n      // Обновляем также benefits в sect, если она существует\r\n      const updatedSect = state.sect ? {\r\n        ...state.sect,\r\n        benefits: normalizedBenefits\r\n      } : null;\r\n      \r\n      // Создаем новое состояние с нормализованными бонусами\r\n      const newState = {\r\n        ...state,\r\n        benefits: normalizedBenefits,\r\n        sect: updatedSect,\r\n        // Пересчитываем массив эффектов напрямую\r\n        effectsArray: normalizeSectBenefits(normalizedBenefits)\r\n      };\r\n      \r\n      // Проводим полную нормализацию данных\r\n      const normalizedState = normalizeSectData(newState);\r\n      \r\n      console.log('Результат нормализации данных секты:', normalizedState);\r\n      \r\n      return normalizedState;\r\n    \r\n    // Обновление ранга пользователя в секте\r\n    case ACTION_TYPES.UPDATE_SECT_RANK:\r\n      return {\r\n        ...state,\r\n        userRank: action.payload.role,\r\n        privileges: action.payload.privileges\r\n      };\r\n    \r\n    // Выбор члена секты для взаимодействия\r\n    case 'SELECT_SECT_MEMBER':\r\n      return {\r\n        ...state,\r\n        selectedMember: action.payload\r\n      };\r\n    \r\n    // Синхронизация лояльности секты с социальными отношениями\r\n    case ACTION_TYPES.SYNC_SECT_TO_SOCIAL:\r\n      return state; // Этот редуктор не меняет состояние, обработка в playerReducer\r\n    \r\n    // Синхронизация социальных отношений с лояльностью секты\r\n    case ACTION_TYPES.SYNC_SOCIAL_TO_SECT:\r\n      // Находим соответствующий персонаж в социальных отношениях\r\n      return state; // Этот редуктор не меняет состояние, обработка в playerReducer\r\n    \r\n    // Обновление лояльности секты\r\n    case ACTION_TYPES.UPDATE_SECT_LOYALTY:\r\n      if (!state.sect) {\r\n        console.warn('Попытка обновить лояльность секты, но секта не найдена');\r\n        return state;\r\n      }\r\n      \r\n      console.log(`Обновление лояльности секты с ${state.sect.loyalty} на ${action.payload.loyalty}`);\r\n      \r\n      return {\r\n        ...state,\r\n        sect: {\r\n          ...state.sect,\r\n          loyalty: action.payload.loyalty\r\n        }\r\n      };\r\n    \r\n    // Обновление полных данных секты\r\n    case ACTION_TYPES.UPDATE_SECT_DATA:\r\n      if (!state.sect || !action.payload) {\r\n        console.warn('Попытка обновить данные секты, но секта не найдена или данные некорректны');\r\n        return state;\r\n      }\r\n      \r\n      console.log('Обновление данных секты:', action.payload);\r\n      \r\n      // Создаем копию данных с нормализованными бонусами, если они есть\r\n      const dataWithNormalizedBenefits = action.payload.benefits \r\n        ? {\r\n            ...action.payload,\r\n            benefits: normalizeSectBenefits(action.payload.benefits)\r\n          }\r\n        : action.payload;\r\n      \r\n      // Создаем новое состояние\r\n      const updatedSectState = {\r\n        ...state,\r\n        sect: {\r\n          ...state.sect,\r\n          ...dataWithNormalizedBenefits\r\n        }\r\n      };\r\n      \r\n      // Проводим полную нормализацию данных\r\n      return normalizeSectData(updatedSectState);\r\n    \r\n    // Одновременное обновление отношений и лояльности\r\n    case ACTION_TYPES.UPDATE_RELATIONSHIP_AND_LOYALTY:\r\n      if (!action.payload || !action.payload.name || action.payload.value === undefined) {\r\n        console.warn('⚠️ Невозможно обновить отношения и лояльность: неполные данные', action.payload);\r\n        return state;\r\n      }\r\n      \r\n      // Этот обработчик необходим, чтобы sectReducer тоже реагировал на действие\r\n      // updateRelationshipAndLoyalty, хотя основная обработка происходит \r\n      // в playerReducer. Это позволяет уведомить оба редуктора об изменении.\r\n      console.log(`🔄 Получено уведомление об обновлении отношений с \"${action.payload.name}\" до уровня ${action.payload.value}`);\r\n      \r\n      // Возвращаем текущее состояние, т.к. обновление через playerReducer\r\n      // также влияет на общее состояние приложения\r\n      return state;\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sectReducer;\r\n","/**\r\n * Редуктор для системы репутации\r\n */\r\nimport * as types from '../actions/reputationActionTypes';\r\n\r\n// Начальное состояние\r\nconst initialState = {\r\n  // Данные о репутации\r\n  data: {\r\n    cities: [],\r\n    factions: [],\r\n    global: null\r\n  },\r\n  // Доступные возможности\r\n  features: [],\r\n  // Уведомления\r\n  notifications: [],\r\n  // Статус загрузки\r\n  loading: false,\r\n  // Флаг изменения репутации\r\n  changing: false,\r\n  // Ошибка\r\n  error: null\r\n};\r\n\r\n/**\r\n * Редуктор для обработки действий, связанных с репутацией\r\n * @param {Object} state - Текущее состояние\r\n * @param {Object} action - Действие\r\n * @returns {Object} - Новое состояние\r\n */\r\nconst reputationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // Загрузка репутации\r\n    case types.LOAD_REPUTATION_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    case types.LOAD_REPUTATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload.reputationData,\r\n        features: action.payload.availableFeatures,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case types.LOAD_REPUTATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    \r\n    // Изменение репутации\r\n    case types.CHANGE_REPUTATION_REQUEST:\r\n      return {\r\n        ...state,\r\n        changing: true,\r\n        error: null\r\n      };\r\n    \r\n    case types.CHANGE_REPUTATION_SUCCESS: {\r\n      const { userId, entityType, entityId, sphere, reputation, relatedChanges } = action.payload;\r\n      \r\n      // Обновляем данные о репутации в зависимости от типа сущности\r\n      let updatedData = { ...state.data };\r\n      \r\n      if (entityType === 'city') {\r\n        updatedData.cities = state.data.cities.map(city => {\r\n          if (city.id === entityId) {\r\n            return {\r\n              ...city,\r\n              spheres: city.spheres.map(s => {\r\n                if (s.name === sphere) {\r\n                  return {\r\n                    ...s,\r\n                    value: reputation.value,\r\n                    level: reputation.level,\r\n                    title: reputation.title\r\n                  };\r\n                }\r\n                return s;\r\n              })\r\n            };\r\n          }\r\n          return city;\r\n        });\r\n      } else if (entityType === 'faction') {\r\n        updatedData.factions = state.data.factions.map(faction => {\r\n          if (faction.id === entityId) {\r\n            return {\r\n              ...faction,\r\n              spheres: faction.spheres.map(s => {\r\n                if (s.name === sphere) {\r\n                  return {\r\n                    ...s,\r\n                    value: reputation.value,\r\n                    level: reputation.level,\r\n                    title: reputation.title\r\n                  };\r\n                }\r\n                return s;\r\n              })\r\n            };\r\n          }\r\n          return faction;\r\n        });\r\n      } else if (entityType === 'global') {\r\n        if (updatedData.global) {\r\n          updatedData.global = {\r\n            ...updatedData.global,\r\n            spheres: updatedData.global.spheres.map(s => {\r\n              if (s.name === sphere) {\r\n                return {\r\n                  ...s,\r\n                  value: reputation.value,\r\n                  level: reputation.level,\r\n                  title: reputation.title\r\n                };\r\n              }\r\n              return s;\r\n            })\r\n          };\r\n        }\r\n      }\r\n      \r\n      // Обновляем данные о связанных репутациях, если есть\r\n      if (relatedChanges && relatedChanges.length > 0) {\r\n        for (const change of relatedChanges) {\r\n          if (change.entityType === 'city') {\r\n            updatedData.cities = updatedData.cities.map(city => {\r\n              if (city.id === change.entityId) {\r\n                return {\r\n                  ...city,\r\n                  spheres: city.spheres.map(s => {\r\n                    if (s.name === change.sphere) {\r\n                      return {\r\n                        ...s,\r\n                        // Обновляем значение на основе изменения\r\n                        value: s.value + change.amount,\r\n                        // Уровень обновится при следующей загрузке\r\n                      };\r\n                    }\r\n                    return s;\r\n                  })\r\n                };\r\n              }\r\n              return city;\r\n            });\r\n          } else if (change.entityType === 'faction') {\r\n            updatedData.factions = updatedData.factions.map(faction => {\r\n              if (faction.id === change.entityId) {\r\n                return {\r\n                  ...faction,\r\n                  spheres: faction.spheres.map(s => {\r\n                    if (s.name === change.sphere) {\r\n                      return {\r\n                        ...s,\r\n                        value: s.value + change.amount,\r\n                      };\r\n                    }\r\n                    return s;\r\n                  })\r\n                };\r\n              }\r\n              return faction;\r\n            });\r\n          } else if (change.entityType === 'global' && updatedData.global) {\r\n            updatedData.global = {\r\n              ...updatedData.global,\r\n              spheres: updatedData.global.spheres.map(s => {\r\n                if (s.name === change.sphere) {\r\n                  return {\r\n                    ...s,\r\n                    value: s.value + change.amount,\r\n                  };\r\n                }\r\n                return s;\r\n              })\r\n            };\r\n          }\r\n        }\r\n      }\r\n      \r\n      return {\r\n        ...state,\r\n        data: updatedData,\r\n        changing: false,\r\n        error: null\r\n      };\r\n    }\r\n    \r\n    case types.CHANGE_REPUTATION_FAILURE:\r\n      return {\r\n        ...state,\r\n        changing: false,\r\n        error: action.payload.error\r\n      };\r\n    \r\n    // Проверка возможностей\r\n    case types.CHECK_REPUTATION_FEATURES_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    case types.CHECK_REPUTATION_FEATURES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        features: action.payload.availableFeatures,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case types.CHECK_REPUTATION_FEATURES_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    \r\n    // Уведомления\r\n    case types.ADD_REPUTATION_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: [\r\n          ...state.notifications,\r\n          action.payload.notification\r\n        ]\r\n      };\r\n    \r\n    case types.REMOVE_REPUTATION_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n          notification => notification.id !== action.payload.id\r\n        )\r\n      };\r\n    \r\n    case types.CLEAR_REPUTATION_NOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        notifications: []\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reputationReducer;\r\n","/**\r\n * Типы действий для системы репутации\r\n */\r\n\r\n// Загрузка репутации\r\nexport const LOAD_REPUTATION_REQUEST = 'LOAD_REPUTATION_REQUEST';\r\nexport const LOAD_REPUTATION_SUCCESS = 'LOAD_REPUTATION_SUCCESS';\r\nexport const LOAD_REPUTATION_FAILURE = 'LOAD_REPUTATION_FAILURE';\r\n\r\n// Изменение репутации\r\nexport const CHANGE_REPUTATION_REQUEST = 'CHANGE_REPUTATION_REQUEST';\r\nexport const CHANGE_REPUTATION_SUCCESS = 'CHANGE_REPUTATION_SUCCESS';\r\nexport const CHANGE_REPUTATION_FAILURE = 'CHANGE_REPUTATION_FAILURE';\r\n\r\n// Проверка новых возможностей\r\nexport const CHECK_REPUTATION_FEATURES_REQUEST = 'CHECK_REPUTATION_FEATURES_REQUEST';\r\nexport const CHECK_REPUTATION_FEATURES_SUCCESS = 'CHECK_REPUTATION_FEATURES_SUCCESS';\r\nexport const CHECK_REPUTATION_FEATURES_FAILURE = 'CHECK_REPUTATION_FEATURES_FAILURE';\r\n\r\n// Уведомления об изменении репутации\r\nexport const ADD_REPUTATION_NOTIFICATION = 'ADD_REPUTATION_NOTIFICATION';\r\nexport const REMOVE_REPUTATION_NOTIFICATION = 'REMOVE_REPUTATION_NOTIFICATION';\r\nexport const CLEAR_REPUTATION_NOTIFICATIONS = 'CLEAR_REPUTATION_NOTIFICATIONS';\r\n","/**\r\n * Редьюсер для управления состоянием групп и групповых активностей\r\n */\r\nimport ACTION_TYPES from '../actions/actionTypes';\r\n\r\n// Начальное состояние\r\nconst initialState = {\r\n  list: [], // Список групп пользователя\r\n  currentGroup: null, // Текущая активная группа\r\n  activities: [], // Доступные типы активностей\r\n  currentActivity: null, // Текущая активная групповая активность\r\n  activityInstances: [], // Экземпляры активностей текущей группы\r\n  invitations: [], // Приглашения в группы\r\n  rewards: [], // Полученные, но не забранные награды\r\n  loading: false, // Флаг загрузки данных\r\n  error: null // Ошибка, если есть\r\n};\r\n\r\n/**\r\n * Редьюсер для управления состоянием групп\r\n * @param {Object} state - Текущее состояние\r\n * @param {Object} action - Действие для обработки\r\n * @returns {Object} - Новое состояние\r\n */\r\nconst groupReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_GROUPS:\r\n      return {\r\n        ...state,\r\n        list: action.payload\r\n      };\r\n      \r\n    case ACTION_TYPES.SET_CURRENT_GROUP:\r\n      return {\r\n        ...state,\r\n        currentGroup: action.payload\r\n      };\r\n      \r\n    case ACTION_TYPES.CREATE_GROUP:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n        currentGroup: action.payload\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_GROUP:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(group => \r\n          group.id === action.payload.id ? action.payload : group\r\n        ),\r\n        currentGroup: state.currentGroup && state.currentGroup.id === action.payload.id \r\n          ? action.payload \r\n          : state.currentGroup\r\n      };\r\n      \r\n    case ACTION_TYPES.DELETE_GROUP:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(group => group.id !== action.payload),\r\n        currentGroup: state.currentGroup && state.currentGroup.id === action.payload \r\n          ? null \r\n          : state.currentGroup\r\n      };\r\n      \r\n    case ACTION_TYPES.JOIN_GROUP: {\r\n      const { groupId, member } = action.payload;\r\n      \r\n      // Находим группу и добавляем нового участника\r\n      return {\r\n        ...state,\r\n        list: state.list.map(group => {\r\n          if (group.id === groupId) {\r\n            return {\r\n              ...group,\r\n              members: [...group.members, member]\r\n            };\r\n          }\r\n          return group;\r\n        })\r\n      };\r\n    }\r\n      \r\n    case ACTION_TYPES.LEAVE_GROUP: {\r\n      const { groupId, userId } = action.payload;\r\n      \r\n      // Находим группу и удаляем участника\r\n      return {\r\n        ...state,\r\n        list: state.list.map(group => {\r\n          if (group.id === groupId) {\r\n            return {\r\n              ...group,\r\n              members: group.members.filter(member => member.userId !== userId)\r\n            };\r\n          }\r\n          return group;\r\n        })\r\n      };\r\n    }\r\n      \r\n    case ACTION_TYPES.SET_GROUP_ACTIVITIES:\r\n      return {\r\n        ...state,\r\n        activities: action.payload\r\n      };\r\n      \r\n    case ACTION_TYPES.SET_CURRENT_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        currentActivity: action.payload\r\n      };\r\n      \r\n    case ACTION_TYPES.CREATE_ACTIVITY_INSTANCE:\r\n      return {\r\n        ...state,\r\n        activityInstances: [...state.activityInstances, action.payload],\r\n        currentActivity: action.payload\r\n      };\r\n      \r\n    case ACTION_TYPES.FETCH_GROUP_ACTIVITY_INSTANCES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n      \r\n    case ACTION_TYPES.SET_GROUP_ACTIVITY_INSTANCES:\r\n      return {\r\n        ...state,\r\n        activityInstances: action.payload,\r\n        loading: false\r\n      };\r\n    \r\n    case ACTION_TYPES.UPDATE_ACTIVITY_INSTANCE:\r\n      return {\r\n        ...state,\r\n        activityInstances: state.activityInstances.map(instance => \r\n          instance.id === action.payload.id ? action.payload : instance\r\n        ),\r\n        currentActivity: state.currentActivity && state.currentActivity.id === action.payload.id \r\n          ? action.payload \r\n          : state.currentActivity\r\n      };\r\n      \r\n    case ACTION_TYPES.START_ACTIVITY:\r\n    case ACTION_TYPES.UPDATE_ACTIVITY_PROGRESS:\r\n    case ACTION_TYPES.COMPLETE_ACTIVITY:\r\n    case ACTION_TYPES.FAIL_ACTIVITY:\r\n    case ACTION_TYPES.ABANDON_ACTIVITY:\r\n      // Все эти действия обрабатываются одинаково - обновляем экземпляр активности\r\n      return {\r\n        ...state,\r\n        activityInstances: state.activityInstances.map(instance => \r\n          instance.id === action.payload.id ? action.payload : instance\r\n        )\r\n      };\r\n    \r\n    case ACTION_TYPES.ADD_ACTIVITY_PARTICIPANT: {\r\n      const { instanceId, participant } = action.payload;\r\n      \r\n      return {\r\n        ...state,\r\n        activityInstances: state.activityInstances.map(instance => {\r\n          if (instance.id === instanceId) {\r\n            return {\r\n              ...instance,\r\n              participants: [...instance.participants, participant]\r\n            };\r\n          }\r\n          return instance;\r\n        })\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.REMOVE_ACTIVITY_PARTICIPANT: {\r\n      const { instanceId, userId } = action.payload;\r\n      \r\n      return {\r\n        ...state,\r\n        activityInstances: state.activityInstances.map(instance => {\r\n          if (instance.id === instanceId) {\r\n            return {\r\n              ...instance,\r\n              participants: instance.participants.filter(p => p.userId !== userId)\r\n            };\r\n          }\r\n          return instance;\r\n        })\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.UPDATE_ACTIVITY_REWARDS: {\r\n      const { instanceId, rewards } = action.payload;\r\n      \r\n      return {\r\n        ...state,\r\n        activityInstances: state.activityInstances.map(instance => {\r\n          if (instance.id === instanceId) {\r\n            return {\r\n              ...instance,\r\n              rewards: rewards\r\n            };\r\n          }\r\n          return instance;\r\n        })\r\n      };\r\n    }\r\n      \r\n    case ACTION_TYPES.ADD_REWARDS:\r\n      // Добавляем награды в список необработанных наград\r\n      return {\r\n        ...state,\r\n        rewards: [...state.rewards, ...action.payload.filter(reward => !reward.isClaimed)]\r\n      };\r\n    \r\n    case ACTION_TYPES.SET_USER_INVITATIONS:\r\n      return {\r\n        ...state,\r\n        invitations: action.payload,\r\n        loading: false\r\n      };\r\n      \r\n    case ACTION_TYPES.FETCH_USER_INVITATIONS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n      \r\n    case ACTION_TYPES.RESPOND_TO_INVITATION:\r\n      return {\r\n        ...state,\r\n        invitations: state.invitations.filter(invite => \r\n          invite.id !== action.payload.invitationId\r\n        )\r\n      };\r\n      \r\n    case ACTION_TYPES.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default groupReducer;\r\n","import { playerReducer } from './playerReducer';\r\nimport { uiReducer } from './uiReducer';\r\nimport { worldReducer } from './worldReducer';\r\nimport { combatReducer } from './combatReducer';\r\nimport { questsReducer } from './questsReducer';\r\nimport { achievementsReducer } from './achievementsReducer';\r\nimport { spiritPetsReducer } from './spiritPetsReducer';\r\nimport { gameStateReducer } from './gameStateReducer';\r\nimport marketReducer from './marketReducer';\r\nimport sectReducer from './sectReducer';\r\nimport reputationReducer from './reputationReducer';\r\nimport groupReducer from './groupReducer';\r\n\r\n// Корневой редуктор, объединяющий все остальные редукторы\r\nexport const rootReducer = (state, action) => {\r\n  // Применяем каждый редуктор последовательно\r\n  let newState = state;\r\n  \r\n  // Обработка состояния игры (сохранение/загрузка)\r\n  newState = gameStateReducer(newState, action);\r\n  \r\n  // Специальная обработка для инициализации состояния погоды\r\n  if (action.type === 'INITIALIZE_WEATHER_STATE' && action.payload) {\r\n    console.log('🔄 rootReducer: Применяем INITIALIZE_WEATHER_STATE');\r\n    newState = action.payload;\r\n  }\r\n  \r\n  // Обработка игрока\r\n  newState = playerReducer(newState, action);\r\n  \r\n  // Обработка мира\r\n  newState = worldReducer(newState, action);\r\n  \r\n  // Обработка интерфейса\r\n  newState = uiReducer(newState, action);\r\n  \r\n  // Обработка боевой системы\r\n  newState = combatReducer(newState, action);\r\n  \r\n  // Обработка квестов\r\n  newState = questsReducer(newState, action);\r\n  \r\n  // Обработка достижений\r\n  newState = achievementsReducer(newState, action);\r\n  \r\n  // Обработка духовных питомцев\r\n  newState = spiritPetsReducer(newState, action);\r\n  \r\n  // Обработка рынка и торговли\r\n  newState = {\r\n    ...newState,\r\n    market: marketReducer(newState.market, action)\r\n  };\r\n  \r\n  // Обработка сект\r\n  newState = {\r\n    ...newState,\r\n    sect: sectReducer(newState.sect, action)\r\n  };\r\n  \r\n  // Обработка репутации\r\n  newState = {\r\n    ...newState,\r\n    reputation: reputationReducer(newState.reputation, action)\r\n  };\r\n  \r\n  // Обработка групп и групповых активностей\r\n  newState = {\r\n    ...newState,\r\n    groups: groupReducer(newState.groups, action)\r\n  };\r\n  \r\n  return newState;\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\n\r\n// Редуктор для обработки действий, связанных с интерфейсом\r\nexport const uiReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.CHANGE_SCREEN:\r\n      return {\r\n        ...state,\r\n        ui: {\r\n          ...state.ui,\r\n          currentScreen: action.payload,\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.ADD_NOTIFICATION:\r\n      // Generate a unique ID for the notification if one isn't provided\r\n      const currentTime = Date.now();\r\n      const notificationWithId = {\r\n        ...action.payload,\r\n        id: action.payload.id || `notification_${currentTime}_${Math.random().toString(36).substr(2, 9)}`,\r\n        timestamp: currentTime\r\n      };\r\n      \r\n      // Check if a notification with the same message exists within the last 3 seconds\r\n      const isDuplicate = state.ui.notifications.some(\r\n        notification => \r\n          notification.message === notificationWithId.message && \r\n          notification.timestamp && \r\n          (currentTime - notification.timestamp < 3000)\r\n      );\r\n      \r\n      // If it's a duplicate, don't add it\r\n      if (isDuplicate) {\r\n        return state;\r\n      }\r\n      \r\n      // Limit to the most recent 10 notifications\r\n      const updatedNotifications = [...state.ui.notifications, notificationWithId]\r\n        .slice(-10);\r\n      \r\n      return {\r\n        ...state,\r\n        ui: {\r\n          ...state.ui,\r\n          notifications: updatedNotifications,\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.REMOVE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        ui: {\r\n          ...state.ui,\r\n          notifications: state.ui.notifications.filter(\r\n            notification => notification.id !== action.payload\r\n          ),\r\n        },\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_SETTINGS:\r\n      return {\r\n        ...state,\r\n        ui: {\r\n          ...state.ui,\r\n          settings: {\r\n            ...state.ui.settings,\r\n            ...action.payload,\r\n          },\r\n        },\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\n\r\n// Редуктор для обработки действий, связанных с боевой системой\r\nexport const combatReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.START_COMBAT:\r\n      return {\r\n        ...state,\r\n        combat: {\r\n          inCombat: true,\r\n          enemy: action.payload,\r\n          log: [],\r\n          turn: 1\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.END_COMBAT:\r\n      return {\r\n        ...state,\r\n        combat: {\r\n          ...state.combat,\r\n          inCombat: false,\r\n          enemy: null\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_COMBAT:\r\n      return {\r\n        ...state,\r\n        combat: {\r\n          ...state.combat,\r\n          ...action.payload\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.ADD_COMBAT_LOG:\r\n      return {\r\n        ...state,\r\n        combat: {\r\n          ...state.combat,\r\n          log: [...state.combat.log, action.payload]\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.USE_TECHNIQUE:\r\n      // Логика использования техники в бою\r\n      // Обычно здесь будет сложная логика с вычислением урона, применением эффектов и т.д.\r\n      return {\r\n        ...state,\r\n        combat: {\r\n          ...state.combat,\r\n          log: [...state.combat.log, {\r\n            message: `Использована техника: ${action.payload.name}`,\r\n            timestamp: new Date().toISOString()\r\n          }]\r\n        }\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\n\r\n// Редуктор для обработки действий, связанных с квестами\r\nexport const questsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.ACCEPT_QUEST: {\r\n      const quest = state.player.progress.quests.available.find(q => q.id === action.payload);\r\n      if (!quest) return state;\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          progress: {\r\n            ...state.player.progress,\r\n            quests: {\r\n              ...state.player.progress.quests,\r\n              available: state.player.progress.quests.available.filter(q => q.id !== action.payload),\r\n              active: [...state.player.progress.quests.active, { ...quest, status: 'active', startedAt: new Date().toISOString() }]\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.COMPLETE_QUEST: {\r\n      const quest = state.player.progress.quests.active.find(q => q.id === action.payload);\r\n      if (!quest) return state;\r\n      \r\n      // Проверяем, все ли цели выполнены\r\n      if (!quest.objectives.every(obj => obj.completed)) return state;\r\n      \r\n      // Выдаем награды\r\n      const rewardsPromise = quest.rewards.reduce(async (accPromise, reward) => {\r\n        const acc = await accPromise;\r\n        \r\n        switch (reward.type) {\r\n          case 'experience':\r\n            return {\r\n              ...acc,\r\n              player: {\r\n                ...acc.player,\r\n                cultivation: {\r\n                  ...acc.player.cultivation,\r\n                  experience: acc.player.cultivation.experience + reward.amount\r\n                }\r\n              }\r\n            };\r\n          case 'currency':\r\n            // Обрабатываем разные форматы валюты\r\n            let updatedCurrency = { ...(acc.player.inventory.currency || {}) };\r\n            \r\n            console.log('Получение награды валютой:', reward.amount);\r\n            \r\n            if (typeof reward.amount === 'number') {\r\n              // Обратная совместимость: если reward.amount это число, преобразуем его в золото\r\n              updatedCurrency.gold = (updatedCurrency.gold || 0) + reward.amount;\r\n            } else if (typeof reward.amount === 'object') {\r\n              // Если reward.amount это объект с разными типами валют\r\n              Object.entries(reward.amount).forEach(([currency, amount]) => {\r\n                if (typeof amount === 'number') {\r\n                  updatedCurrency[currency] = (updatedCurrency[currency] || 0) + amount;\r\n                }\r\n              });\r\n            }\r\n            \r\n            return {\r\n              ...acc,\r\n              player: {\r\n                ...acc.player,\r\n                inventory: {\r\n                  ...acc.player.inventory,\r\n                  currency: updatedCurrency\r\n                }\r\n              }\r\n            };\r\n          case 'item':\r\n            return {\r\n              ...acc,\r\n              player: {\r\n                ...acc.player,\r\n                inventory: {\r\n                  ...acc.player.inventory,\r\n                  items: [...acc.player.inventory.items, reward]\r\n                }\r\n              }\r\n            };\r\n          case 'technique':\r\n            try {\r\n              // Получаем технику из базы данных по названию\r\n              const techniqueService = require('../../services/technique-service');\r\n              const technique = await techniqueService.getTechniqueByName(reward.name);\r\n              \r\n              // Проверяем, не изучена ли уже техника\r\n              const isAlreadyLearned = acc.player.techniques.some(t => t.id === technique.techniqueId);\r\n              \r\n              if (isAlreadyLearned) {\r\n                return acc;\r\n              }\r\n              \r\n              // Добавляем технику в список изученных\r\n              return {\r\n                ...acc,\r\n                player: {\r\n                  ...acc.player,\r\n                  techniques: [\r\n                    ...acc.player.techniques,\r\n                    {\r\n                      id: technique.techniqueId,\r\n                      level: 1,\r\n                      experience: 0\r\n                    }\r\n                  ]\r\n                },\r\n                ui: {\r\n                  ...acc.ui,\r\n                  notifications: [\r\n                    ...acc.ui.notifications,\r\n                    {\r\n                      id: Date.now() + Math.random(),\r\n                      message: `Вы изучили технику \"${technique.name}\"!`,\r\n                      type: 'success'\r\n                    }\r\n                  ]\r\n                }\r\n              };\r\n            } catch (error) {\r\n              console.error(`Ошибка при получении техники \"${reward.name}\":`, error);\r\n              return acc;\r\n            }\r\n          default:\r\n            return acc;\r\n        }\r\n      }, Promise.resolve(state));\r\n      \r\n      // Ожидаем завершения всех асинхронных операций\r\n      const rewards = async () => await rewardsPromise;\r\n      \r\n      return {\r\n        ...rewards(),\r\n        player: {\r\n          ...state.player,\r\n          progress: {\r\n            ...state.player.progress,\r\n            quests: {\r\n              ...state.player.progress.quests,\r\n              active: state.player.progress.quests.active.filter(q => q.id !== action.payload),\r\n              completed: [...state.player.progress.quests.completed, { ...quest, status: 'completed', completedAt: new Date().toISOString() }]\r\n            }\r\n          },\r\n          ui: {\r\n            ...state.ui,\r\n            notifications: [\r\n              ...state.ui.notifications,\r\n              {\r\n                id: Date.now(),\r\n                message: `Задание \"${quest.title}\" выполнено!`,\r\n                type: 'success'\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.UPDATE_QUEST_OBJECTIVE: {\r\n      const { questId, objectiveId } = action.payload;\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          progress: {\r\n            ...state.player.progress,\r\n            quests: {\r\n              ...state.player.progress.quests,\r\n              active: state.player.progress.quests.active.map(quest => \r\n                quest.id === questId\r\n                  ? {\r\n                      ...quest,\r\n                      objectives: quest.objectives.map(obj =>\r\n                        obj.id === objectiveId\r\n                          ? { ...obj, completed: true }\r\n                          : obj\r\n                      )\r\n                    }\r\n                  : quest\r\n              )\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\n\r\n// Редуктор для обработки действий, связанных с достижениями\r\nexport const achievementsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.CHECK_ACHIEVEMENTS: {\r\n      // Определяем браузер\r\n      const userAgent = navigator.userAgent;\r\n      const isChrome = userAgent.match(/chrome|chromium|crios/i) && !userAgent.match(/opr\\//i) && !userAgent.match(/edg/i);\r\n      console.log('Проверка достижений в редьюсере, браузер Chrome:', isChrome);\r\n      \r\n      const { achievements } = action.payload;\r\n      console.log('Начало проверки достижений в редьюсере:', { achievements });\r\n      \r\n      if (!Array.isArray(achievements)) {\r\n        console.error('Достижения не являются массивом:', achievements);\r\n        return state;\r\n      }\r\n      \r\n      try {\r\n        // Проверяем структуру состояния перед проверкой достижений\r\n        if (!state?.player) {\r\n          console.error('Отсутствует объект player в состоянии');\r\n          return state;\r\n        }\r\n        \r\n        // Создаем безопасную копию состояния для проверки достижений\r\n        // Для Chrome используем более глубокое копирование\r\n        let safeState;\r\n        if (isChrome) {\r\n          // Для Chrome создаем полностью новый объект\r\n          safeState = {\r\n            ...state,\r\n            player: {\r\n              ...state.player,\r\n              social: {\r\n                ...state.player.social || {},\r\n                relationships: state.player.social?.relationships ? \r\n                  {...state.player.social.relationships} : {}\r\n              },\r\n              progress: {\r\n                ...state.player.progress || {},\r\n                discoveries: state.player.progress?.discoveries ? \r\n                  {...state.player.progress.discoveries} : {}\r\n              },\r\n              inventory: {\r\n                ...state.player.inventory || {},\r\n                currency: state.player.inventory?.currency || { copper: 0, silver: 0, gold: 0, spiritStones: 0 }\r\n              }\r\n            }\r\n          };\r\n        } else {\r\n          // Для других браузеров используем JSON.parse/stringify\r\n          safeState = {\r\n            ...state,\r\n            player: {\r\n              ...state.player,\r\n              social: {\r\n                ...state.player.social || {},\r\n                relationships: state.player.social?.relationships || {}\r\n              },\r\n              progress: {\r\n                ...state.player.progress || {},\r\n                discoveries: state.player.progress?.discoveries || {}\r\n              },\r\n              inventory: {\r\n                ...state.player.inventory || {},\r\n                currency: state.player.inventory?.currency || { copper: 0, silver: 0, gold: 0, spiritStones: 0 }\r\n              }\r\n            }\r\n          };\r\n        }\r\n        \r\n        console.log('Безопасное состояние для проверки в редьюсере создано');\r\n        \r\n        const newAchievements = [];\r\n        \r\n        // Проверяем каждое достижение по отдельности с подробным логированием\r\n        for (let i = 0; i < achievements.length; i++) {\r\n          const achievement = achievements[i];\r\n          \r\n          console.log(`Проверка достижения #${i}:`, {\r\n            id: achievement?.id,\r\n            title: achievement?.title\r\n          });\r\n          \r\n          try {\r\n            if (!achievement || typeof achievement !== 'object') {\r\n              console.warn('Некорректное достижение:', achievement);\r\n              continue;\r\n            }\r\n            \r\n            const hasCondition = typeof achievement.condition === 'function';\r\n            if (!hasCondition) {\r\n              console.warn('У достижения отсутствует функция condition:', achievement);\r\n              continue;\r\n            }\r\n            \r\n            console.log(`Вызов функции condition для достижения ${achievement.id}`);\r\n            const conditionResult = achievement.condition(safeState);\r\n            console.log(`Результат проверки условия для достижения ${achievement.id}:`, conditionResult);\r\n            \r\n            const isNotCompleted = !state.achievements.completed.find(a => a.id === achievement.id);\r\n            \r\n            console.log('Результаты проверки:', {\r\n              id: achievement?.id,\r\n              hasCondition,\r\n              conditionResult,\r\n              isNotCompleted\r\n            });\r\n            \r\n            if (hasCondition && conditionResult && isNotCompleted) {\r\n              newAchievements.push(achievement);\r\n            }\r\n          } catch (error) {\r\n            console.error(`Ошибка при проверке достижения ${achievement?.id}:`, error);\r\n          }\r\n        }\r\n        \r\n        console.log('Новые достижения:', newAchievements);\r\n        \r\n        if (newAchievements.length === 0) {\r\n          console.log('Нет новых достижений');\r\n          return state;\r\n        }\r\n        \r\n        // Выдаем награды за новые достижения\r\n        const rewards = newAchievements.reduce((acc, achievement) => {\r\n          if (!achievement?.rewards || !Array.isArray(achievement.rewards)) {\r\n            console.warn('У достижения отсутствуют награды:', achievement);\r\n            return acc;\r\n          }\r\n          \r\n          // Добавляем уведомления о получении достижений\r\n          acc.ui.notifications.push({\r\n            id: Date.now() + Math.random(),\r\n            message: `Получено достижение: ${achievement.title || 'Неизвестное достижение'}!`,\r\n            type: 'achievement'\r\n          });\r\n          \r\n          // Обрабатываем награды\r\n          achievement.rewards.forEach(reward => {\r\n            if (!reward?.type) {\r\n              console.warn('Некорректная награда:', reward);\r\n              return;\r\n            }\r\n            \r\n            try {\r\n              switch (reward.type) {\r\n                case 'experience':\r\n                  acc.player.cultivation.experience += reward.amount || 0;\r\n                  break;\r\n                case 'currency':\r\n                  if (typeof acc.player.inventory.currency === 'number') {\r\n                    acc.player.inventory.currency += reward.amount || 0;\r\n                  } else if (typeof acc.player.inventory.currency === 'object' && acc.player.inventory.currency !== null) {\r\n                    // Определяем, какой тип валюты использовать в зависимости от размера награды\r\n                    const currencyAmount = reward.amount || 0;\r\n                    \r\n                    // Для разных типов наград используем разные типы валюты\r\n                    if (reward.currencyType) {\r\n                      // Если явно указан тип валюты, используем его\r\n                      acc.player.inventory.currency[reward.currencyType] = \r\n                        (acc.player.inventory.currency[reward.currencyType] || 0) + currencyAmount;\r\n                    } else if (currencyAmount >= 1000) {\r\n                      // Для крупных сумм используем золото\r\n                      acc.player.inventory.currency.gold = \r\n                        (acc.player.inventory.currency.gold || 0) + currencyAmount;\r\n                    } else if (currencyAmount >= 10) {\r\n                      // Для средних сумм используем серебро\r\n                      acc.player.inventory.currency.silver = \r\n                        (acc.player.inventory.currency.silver || 0) + currencyAmount;\r\n                    } else {\r\n                      // Для малых сумм используем медь\r\n                      acc.player.inventory.currency.copper = \r\n                        (acc.player.inventory.currency.copper || 0) + currencyAmount;\r\n                    }\r\n                    \r\n                    console.log('Добавлена валюта за достижение:', {\r\n                      тип: reward.currencyType || (currencyAmount >= 1000 ? 'gold' : (currencyAmount >= 10 ? 'silver' : 'copper')),\r\n                      количество: currencyAmount,\r\n                      итоговоеСостояние: acc.player.inventory.currency\r\n                    });\r\n                  }\r\n                  break;\r\n                case 'item':\r\n                  if (reward.name) {\r\n                    acc.player.inventory.items.push(reward);\r\n                  }\r\n                  break;\r\n                case 'reputation':\r\n                  acc.player.reputation = (acc.player.reputation || 0) + (reward.amount || 0);\r\n                  break;\r\n                case 'technique':\r\n                  if (reward.name) {\r\n                    acc.player.techniques.push(reward);\r\n                  }\r\n                  break;\r\n              }\r\n            } catch (error) {\r\n              console.error(`Ошибка при обработке награды ${reward.type}:`, error);\r\n            }\r\n          });\r\n          \r\n          return acc;\r\n        }, {\r\n          ...state,\r\n          achievements: {\r\n            ...state.achievements,\r\n            completed: [...state.achievements.completed, ...newAchievements],\r\n            points: state.achievements.points + newAchievements.reduce((sum, ach) => \r\n              sum + (ach.rewards || []).reduce((total, reward) => total + (reward?.amount || 0), 0), 0\r\n            )\r\n          },\r\n          ui: {\r\n            ...state.ui,\r\n            notifications: [...state.ui.notifications]\r\n          }\r\n        });\r\n        \r\n        return rewards;\r\n      } catch (error) {\r\n        console.error('Критическая ошибка при проверке достижений:', error);\r\n        return state;\r\n      }\r\n    }\r\n    \r\n    case ACTION_TYPES.COMPLETE_ACHIEVEMENT: {\r\n      const achievement = action.payload;\r\n      \r\n      if (state.achievements.completed.find(a => a.id === achievement.id)) {\r\n        return state;\r\n      }\r\n      \r\n      // Выдаем награды за достижение\r\n      const rewardsPromise = achievement.rewards.reduce(async (accPromise, reward) => {\r\n        const acc = await accPromise;\r\n        \r\n        switch (reward.type) {\r\n          case 'experience':\r\n            return {\r\n              ...acc,\r\n              player: {\r\n                ...acc.player,\r\n                cultivation: {\r\n                  ...acc.player.cultivation,\r\n                  experience: acc.player.cultivation.experience + reward.amount\r\n                }\r\n              }\r\n            };\r\n          case 'currency':\r\n            return {\r\n              ...acc,\r\n              player: {\r\n                ...acc.player,\r\n                inventory: {\r\n                  ...acc.player.inventory,\r\n                  currency: typeof acc.player.inventory.currency === 'number'\r\n                    ? acc.player.inventory.currency + reward.amount\r\n                    : {\r\n                        ...acc.player.inventory.currency,\r\n                        ...(\r\n                          // Определяем, какой тип валюты использовать в зависимости от размера награды\r\n                          reward.currencyType ? \r\n                            // Если явно указан тип валюты, используем его\r\n                            { [reward.currencyType]: (acc.player.inventory.currency[reward.currencyType] || 0) + (reward.amount || 0) } :\r\n                            // Иначе выбираем в зависимости от суммы\r\n                            (reward.amount >= 1000) ? \r\n                              { gold: (acc.player.inventory.currency.gold || 0) + (reward.amount || 0) } :\r\n                              (reward.amount >= 10) ?\r\n                                { silver: (acc.player.inventory.currency.silver || 0) + (reward.amount || 0) } :\r\n                                { copper: (acc.player.inventory.currency.copper || 0) + (reward.amount || 0) }\r\n                        )\r\n                      }\r\n                }\r\n              }\r\n            };\r\n          case 'item':\r\n            return {\r\n              ...acc,\r\n              player: {\r\n                ...acc.player,\r\n                inventory: {\r\n                  ...acc.player.inventory,\r\n                  items: [...acc.player.inventory.items, reward]\r\n                }\r\n              }\r\n            };\r\n          case 'technique':\r\n            try {\r\n              // Получаем технику из базы данных по названию\r\n              const techniqueService = require('../../services/technique-service');\r\n              const technique = await techniqueService.getTechniqueByName(reward.name);\r\n              \r\n              // Проверяем, не изучена ли уже техника\r\n              const isAlreadyLearned = acc.player.techniques.some(t => t.id === technique.techniqueId);\r\n              \r\n              if (isAlreadyLearned) {\r\n                return acc;\r\n              }\r\n              \r\n              // Добавляем технику в список изученных\r\n              return {\r\n                ...acc,\r\n                player: {\r\n                  ...acc.player,\r\n                  techniques: [\r\n                    ...acc.player.techniques,\r\n                    {\r\n                      id: technique.techniqueId,\r\n                      level: 1,\r\n                      experience: 0\r\n                    }\r\n                  ]\r\n                },\r\n                ui: {\r\n                  ...acc.ui,\r\n                  notifications: [\r\n                    ...acc.ui.notifications,\r\n                    {\r\n                      id: Date.now() + Math.random(),\r\n                      message: `Вы изучили технику \"${technique.name}\"!`,\r\n                      type: 'success'\r\n                    }\r\n                  ]\r\n                }\r\n              };\r\n            } catch (error) {\r\n              console.error(`Ошибка при получении техники \"${reward.name}\":`, error);\r\n              return acc;\r\n            }\r\n          default:\r\n            return acc;\r\n        }\r\n      }, Promise.resolve({\r\n        ...state,\r\n        achievements: {\r\n          ...state.achievements,\r\n          completed: [...state.achievements.completed, achievement],\r\n          points: state.achievements.points + achievement.rewards.reduce(\r\n            (total, reward) => total + (reward.amount || 0), 0\r\n          )\r\n        },\r\n        ui: {\r\n          ...state.ui,\r\n          notifications: [\r\n            ...state.ui.notifications,\r\n            {\r\n              id: Date.now() + Math.random(),\r\n              message: `Получено достижение: ${achievement.title}!`,\r\n              type: 'achievement'\r\n            }\r\n          ]\r\n        }\r\n      }));\r\n      \r\n      // Ожидаем завершения всех асинхронных операций\r\n      const rewards = async () => await rewardsPromise;\r\n      return rewards();\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\n\r\n// Редуктор для обработки действий, связанных с духовными питомцами\r\nexport const spiritPetsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.ADD_SPIRIT_PET:\r\n      // Проверяем, инициализирована ли структура spiritPets\r\n      const currentPets = state.player?.spiritPets?.pets || [];\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: [...currentPets, action.payload]\r\n          }\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.REMOVE_SPIRIT_PET:\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: (state.player?.spiritPets?.pets || []).filter(pet => pet.id !== action.payload),\r\n            // Если удаляемый питомец был активным, сбрасываем активного питомца\r\n            activePetId: state.player?.spiritPets?.activePetId === action.payload \r\n              ? null \r\n              : state.player?.spiritPets?.activePetId\r\n          }\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.UPDATE_SPIRIT_PET:\r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: (state.player?.spiritPets?.pets || []).map(pet => \r\n              pet.id === action.payload.id \r\n                ? { ...pet, ...action.payload.updates } \r\n                : pet\r\n            )\r\n          }\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.SET_ACTIVE_SPIRIT_PET:\r\n      // Также устанавливаем isActive для всех питомцев\r\n      const updatedPets = (state.player?.spiritPets?.pets || []).map(pet => ({\r\n        ...pet,\r\n        isActive: pet.id === action.payload\r\n      }));\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: updatedPets,\r\n            activePetId: action.payload\r\n          }\r\n        }\r\n      };\r\n      \r\n    case ACTION_TYPES.FEED_SPIRIT_PET: {\r\n      // Проверяем структуру payload\r\n      const petId = action.payload.petId || action.payload.id;\r\n      const foodItemId = action.payload.foodItemId;\r\n      const foodItem = action.payload.foodItem; // Для обратной совместимости\r\n      \r\n      if (!petId) return state;\r\n      \r\n      // Получаем список питомцев\r\n      const pets = state.player?.spiritPets?.pets || [];\r\n      \r\n      // Находим питомца\r\n      const pet = pets.find(p => p.id === petId);\r\n      if (!pet) return state;\r\n      \r\n      // Проверяем наличие предмета питания в инвентаре, если указан foodItemId\r\n      if (foodItemId) {\r\n        const playerInventory = state.player?.inventory?.items || [];\r\n        const foodItemInInventory = playerInventory.find(item => \r\n          item.id === foodItemId && item.type === 'pet_food' && item.quantity > 0\r\n        );\r\n        \r\n        // Если предмет не найден в инвентаре, возвращаем состояние без изменений\r\n        if (!foodItemInInventory) {\r\n          console.log(`Предмет питания с ID ${foodItemId} не найден в инвентаре`);\r\n          return state;\r\n        }\r\n        \r\n        // Обновляем питомца с учетом характеристик предмета\r\n        const updatedPet = {\r\n          ...pet,\r\n          hunger: Math.min(pet.hunger + (foodItemInInventory.nutritionValue !== undefined ? foodItemInInventory.nutritionValue : 25), 100),\r\n          loyalty: Math.min(pet.loyalty + (foodItemInInventory.loyaltyBonus !== undefined ? foodItemInInventory.loyaltyBonus : 5), 100),\r\n          lastFed: new Date()\r\n        };\r\n        \r\n        // Обновляем питомца в списке питомцев\r\n        const updatedPets = pets.map(p => p.id === petId ? updatedPet : p);\r\n        \r\n        // Удаляем предмет из инвентаря (уменьшаем количество на 1)\r\n        const updatedInventory = playerInventory.map(item => {\r\n          if (item.id === foodItemId) {\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity - 1\r\n            };\r\n          }\r\n          return item;\r\n        }).filter(item => item.quantity > 0); // Удаляем предметы с количеством 0\r\n        \r\n        // Возвращаем обновленное состояние с обновленным инвентарем\r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            spiritPets: {\r\n              ...state.player.spiritPets || {},\r\n              pets: updatedPets\r\n            },\r\n            inventory: {\r\n              ...state.player.inventory,\r\n              items: updatedInventory\r\n            }\r\n          }\r\n        };\r\n      } \r\n      // Для обратной совместимости обрабатываем случай, когда передан объект foodItem\r\n      else if (foodItem) {\r\n        // Обновляем питомца с учетом значений foodItem\r\n        const updatedPet = {\r\n          ...pet,\r\n          hunger: Math.min(pet.hunger + (foodItem.nutritionValue !== undefined ? foodItem.nutritionValue : 25), 100),\r\n          loyalty: Math.min(pet.loyalty + (foodItem.loyaltyBonus !== undefined ? foodItem.loyaltyBonus : 5), 100),\r\n          lastFed: new Date()\r\n        };\r\n        \r\n        // Обновляем питомца в списке питомцев\r\n        const updatedPets = pets.map(p => p.id === petId ? updatedPet : p);\r\n        \r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            spiritPets: {\r\n              ...state.player.spiritPets || {},\r\n              pets: updatedPets\r\n            }\r\n          }\r\n        };\r\n      } \r\n      // Если ни foodItemId, ни foodItem не указаны, используем дефолтные значения\r\n      else {\r\n        console.log('Использование дефолтных значений для кормления питомца (обратная совместимость)');\r\n        // Обновляем питомца с дефолтными значениями\r\n        const updatedPet = {\r\n          ...pet,\r\n          hunger: Math.min(pet.hunger + 20, 100),\r\n          loyalty: Math.min(pet.loyalty + 5, 100),\r\n          lastFed: new Date()\r\n        };\r\n        \r\n        // Обновляем питомца в списке питомцев\r\n        const updatedPets = pets.map(p => p.id === petId ? updatedPet : p);\r\n        \r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            spiritPets: {\r\n              ...state.player.spiritPets || {},\r\n              pets: updatedPets\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n    \r\n    case ACTION_TYPES.TRAIN_SPIRIT_PET: {\r\n      // Проверяем структуру payload\r\n      const petId = action.payload.petId || action.payload.id;\r\n      const statToTrain = action.payload.trainingType || action.payload.statToTrain;\r\n      \r\n      if (!petId || !statToTrain) return state;\r\n      \r\n      // Получаем список питомцев\r\n      const pets = state.player?.spiritPets?.pets || [];\r\n      \r\n      // Находим питомца\r\n      const pet = pets.find(p => p.id === petId);\r\n      if (!pet) return state;\r\n      \r\n      // Проверяем, достаточно ли голоден питомец\r\n      if (pet.hunger < 30) return state;\r\n      \r\n      // Обновляем питомца в зависимости от типа тренировки\r\n      let updatedPet = { ...pet };\r\n      \r\n      // Уменьшаем голод всегда\r\n      updatedPet.hunger = Math.max(pet.hunger - 15, 0);\r\n      \r\n      // Обновляем дату тренировки\r\n      updatedPet.lastTrained = new Date();\r\n      \r\n      // Даем опыт\r\n      updatedPet.experience = (pet.experience || 0) + 10;\r\n      \r\n      // Проверяем, достаточно ли опыта для повышения уровня\r\n      const expForNextLevel = state.player?.spiritPets?.expForNextLevel || 100;\r\n      if (updatedPet.experience >= expForNextLevel) {\r\n        updatedPet.level = (pet.level || 1) + 1;\r\n        updatedPet.experience = updatedPet.experience - expForNextLevel;\r\n      }\r\n      \r\n      // Обновляем конкретную характеристику\r\n      switch (statToTrain) {\r\n        case 'strength':\r\n          updatedPet.strength = Math.min((pet.strength || 1) + 1, 100);\r\n          break;\r\n        case 'intelligence':\r\n          updatedPet.intelligence = Math.min((pet.intelligence || 1) + 1, 100);\r\n          break;\r\n        case 'agility':\r\n          updatedPet.agility = Math.min((pet.agility || 1) + 1, 100);\r\n          break;\r\n        case 'vitality':\r\n          updatedPet.vitality = Math.min((pet.vitality || 1) + 1, 100);\r\n          break;\r\n        case 'spirit':\r\n          updatedPet.spirit = Math.min((pet.spirit || 1) + 1, 100);\r\n          break;\r\n        default:\r\n          // Неизвестный тип тренировки\r\n          break;\r\n      }\r\n      \r\n      // Обновляем питомца в списке питомцев\r\n      const updatedPets = pets.map(p => p.id === petId ? updatedPet : p);\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: updatedPets\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.USE_PET_ABILITY: {\r\n      const { petId, abilityId } = action.payload;\r\n      \r\n      // Получаем список питомцев\r\n      const pets = state.player?.spiritPets?.pets || [];\r\n      \r\n      // Находим питомца\r\n      const pet = pets.find(p => p.id === petId);\r\n      if (!pet) return state;\r\n      \r\n      // Находим способность\r\n      const ability = pet.abilities.find(a => a.id === abilityId);\r\n      if (!ability) return state;\r\n      \r\n      // Проверяем, достаточно ли сытости для использования способности\r\n      const hungerCost = 20; // Каждая способность тратит 20% сытости\r\n      if (pet.hunger < hungerCost) {\r\n        console.log(`Недостаточно сытости для использования способности: ${pet.hunger}% < ${hungerCost}%`);\r\n        return state;\r\n      }\r\n      \r\n      console.log(`Питомец ${pet.name} (ID: ${pet.id}) использует способность ${abilityId}:`);\r\n      console.log(`- До: сытость ${pet.hunger}%, лояльность ${pet.loyalty}%`);\r\n      \r\n      // Проверяем лояльность питомца\r\n      // Расчет снижения лояльности обратно пропорционально сытости и умноженное на 5\r\n      // Чем ниже сытость, тем больше снижение лояльности\r\n      const loyaltyCost = Math.round(5 * (100 / Math.max(pet.hunger, 1)));\r\n      console.log(`Питомец ${pet.name} теряет ${loyaltyCost}% лояльности (сытость: ${pet.hunger}%, множитель: 5)`);\r\n      console.log(`ФОРМУЛА: 5 * (100 / ${pet.hunger}) = ${loyaltyCost}`);\r\n      \r\n      if (pet.loyalty <= 25) {\r\n        console.log(`Питомец ${pet.name} отказывается помогать и убегает (лояльность слишком низкая: ${pet.loyalty}%)!`);\r\n        \r\n        // Если лояльность слишком низкая, питомец убегает - используем REMOVE_FLEEING_PET\r\n        const remainingPets = pets.filter(p => p.id !== petId);\r\n        \r\n        return {\r\n          ...state,\r\n          player: {\r\n            ...state.player,\r\n            spiritPets: {\r\n              ...state.player.spiritPets || {},\r\n              pets: remainingPets,\r\n              // Если активный питомец убегает, сбрасываем activePetId\r\n              activePetId: pet.id === state.player.spiritPets.activePetId ? null : state.player.spiritPets.activePetId\r\n            }\r\n          }\r\n        };\r\n      }\r\n      \r\n      // Обновляем питомца - уменьшаем сытость и лояльность\r\n      const updatedPet = {\r\n        ...pet,\r\n        hunger: Math.max(0, pet.hunger - hungerCost),\r\n        loyalty: Math.max(0, pet.loyalty - loyaltyCost),\r\n        lastUsedAbility: new Date()\r\n      };\r\n      \r\n      console.log(`- После: сытость ${updatedPet.hunger}%, лояльность ${updatedPet.loyalty}%`);\r\n      console.log(`- Изменения: сытость -${hungerCost}%, лояльность -${loyaltyCost}%`);\r\n      \r\n      // Обновляем питомца в списке питомцев\r\n      const updatedPets = pets.map(p => p.id === petId ? updatedPet : p);\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: updatedPets\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.REMOVE_FLEEING_PET: {\r\n      const petId = action.payload;\r\n      \r\n      // Получаем список питомцев\r\n      const pets = state.player?.spiritPets?.pets || [];\r\n      \r\n      // Удаляем сбежавшего питомца\r\n      const remainingPets = pets.filter(p => p.id !== petId);\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: remainingPets,\r\n            // Если активный питомец убегает, сбрасываем activePetId\r\n            activePetId: petId === state.player.spiritPets.activePetId ? null : state.player.spiritPets.activePetId\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    case ACTION_TYPES.UPDATE_PETS_STATE: {\r\n      // Обновление состояния всех питомцев (например, при смене времени)\r\n      // Получаем список питомцев\r\n      const pets = state.player?.spiritPets?.pets || [];\r\n      \r\n      // Обновляем всех питомцев\r\n      const updatedPets = pets.map(pet => {\r\n        // Уменьшаем голод и восстанавливаем энергию\r\n        return {\r\n          ...pet,\r\n          hunger: Math.max((pet.hunger || 100) - 1, 0),\r\n          energy: Math.min((pet.energy || 0) + 2, 100),\r\n          // Если питомец голоден, уменьшаем лояльность\r\n          loyalty: (pet.hunger || 100) < 20 \r\n            ? Math.max((pet.loyalty || 100) - 1, 0) \r\n            : (pet.loyalty || 100)\r\n        };\r\n      });\r\n      \r\n      return {\r\n        ...state,\r\n        player: {\r\n          ...state.player,\r\n          spiritPets: {\r\n            ...state.player.spiritPets || {},\r\n            pets: updatedPets\r\n          }\r\n        }\r\n      };\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import ACTION_TYPES from '../actions/actionTypes';\r\nimport { \r\n  UPDATE_GAME_TIME,\r\n  FORCE_WEATHER_CHANGE,\r\n  INITIALIZE_WEATHER,\r\n  updateWeather \r\n} from '../actions/weather-actions';\r\n\r\n// Флаг для отслеживания процесса обновления погоды\r\nlet isUpdatingWeather = false;\r\n// Инстанс WeatherService (будет загружен асинхронно)\r\nlet weatherServiceInstance = null;\r\n// Последнее обработанное ручное обновление времени\r\nlet lastManualUpdateTime = 0; \r\n\r\n// Временно включаем логи в консоль для отладки\r\n// Установите в true чтобы включить отладочные логи\r\nconst ENABLE_LOGS = true;\r\n\r\n// Middleware для обновления погоды в зависимости от времени\r\nexport const weatherMiddleware = store => next => action => {\r\n  // ДОБАВЛЕНО: Подробное логирование всех входящих действий\r\n  /*console.log(`🔍🔍🔍 MIDDLEWARE ПОЛУЧИЛ ДЕЙСТВИЕ: ${action.type}`, {\r\n    действие: action.type,\r\n    параметры: action.payload,\r\n    время: new Date().toLocaleTimeString(),\r\n    состояние_weatherInstance: weatherServiceInstance ? 'существует' : 'не существует'\r\n  });*/\r\n  \r\n  // Обработка изменения множителя времени\r\n  if (action.type === 'UPDATE_TIME_MULTIPLIER') {\r\n    //console.log('⏱️ WeatherMiddleware: обработка UPDATE_TIME_MULTIPLIER', action.payload);\r\n    \r\n    // Убедимся, что WeatherService глобально доступен\r\n    if (typeof WeatherService !== 'undefined') {\r\n      //console.log(`✅ WeatherMiddleware: множитель времени установлен на ${action.payload.multiplier}`);\r\n    } else {\r\n      //console.log('⚠️ WeatherMiddleware: WeatherService не доступен глобально');\r\n      // Пробуем обновить множитель через импорт\r\n      import('../../services/weather-service').then(module => {\r\n        const WeatherService = module.default;\r\n        if (WeatherService) {\r\n          WeatherService.TIME_MULTIPLIER = action.payload.multiplier;\r\n          //console.log(`✅ WeatherMiddleware: множитель времени установлен на ${action.payload.multiplier} через импорт`);\r\n        }\r\n      }).catch(error => {\r\n        //console.error('❌ Ошибка при импорте weather-service в middleware:', error);\r\n      });\r\n    }\r\n    \r\n    // Вызываем следующий обработчик для этого типа экшена\r\n    return next(action);\r\n  }\r\n  \r\n  // Сначала вызываем следующий обработчик для других типов экшенов\r\n  const result = next(action);\r\n  \r\n  // Обработка инициализации погоды с прогнозом\r\n  if (action.type === INITIALIZE_WEATHER) {\r\n    /*console.log('🌦️🌦️🌦️ ВЫЗВАНА ИНИЦИАЛИЗАЦИЯ ПОГОДЫ (INITIALIZE_WEATHER)');\r\n    console.log('📋📋 ПОДРОБНОСТИ ИНИЦИАЛИЗАЦИИ:', {\r\n      время_вызова: new Date().toLocaleTimeString(),\r\n      payload: action.payload,\r\n      weatherServiceInstance: weatherServiceInstance ? 'существует' : 'не существует'\r\n    });*/\r\n    \r\n    // Получаем текущее состояние\r\n    const state = store.getState();\r\n    const { dispatch } = store;\r\n    \r\n    // Загружаем WeatherService, если он еще не загружен\r\n    if (!weatherServiceInstance) {\r\n      //console.log('🔄🔄 weatherServiceInstance НЕ СУЩЕСТВУЕТ, выполняем импорт и инициализацию');\r\n      \r\n      import('../../services/weather-service').then(module => {\r\n        //console.log('✅✅ МОДУЛЬ УСПЕШНО ИМПОРТИРОВАН для инициализации погоды');\r\n        const WeatherService = module.default;\r\n        weatherServiceInstance = new WeatherService();\r\n        \r\n        // Получаем worldTime для правильной инициализации\r\n        const worldTime = state.world?.time;\r\n        const currentLocation = state.world?.currentLocation || null;\r\n  \r\n        \r\n        // Вызываем initWeather с полными данными времени\r\n        const initializedWeather = weatherServiceInstance.initWeather(currentLocation, worldTime);\r\n        \r\n        \r\n        // Отправляем обновленное состояние погоды в Redux\r\n        dispatch(updateWeather(initializedWeather));\r\n        \r\n      }).catch(error => {\r\n        console.error('❌ Ошибка при импорте weather-service для инициализации погоды:', error);\r\n      });\r\n    } else {\r\n      // WeatherService уже загружен\r\n      console.log('✅✅ weatherServiceInstance УЖЕ СУЩЕСТВУЕТ, используем его для инициализации погоды');\r\n      \r\n      try {\r\n        // Получаем worldTime для правильной инициализации\r\n        const worldTime = state.world?.time;\r\n        const currentLocation = state.world?.currentLocation || null;\r\n        \r\n        dispatch(updateWeather(initializedWeather));\r\n        \r\n        // Проверяем, применились ли изменения в состоянии\r\n        setTimeout(() => {\r\n          const afterDispatchState = store.getState();\r\n        }, 10);\r\n      } catch (error) {\r\n        console.error('❌ Ошибка при инициализации погоды:', error);\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n  \r\n  // Обработка принудительной смены погоды\r\n  if (action.type === FORCE_WEATHER_CHANGE) {\r\n   \r\n    \r\n    // Получаем текущее состояние\r\n    const state = store.getState();\r\n    const { dispatch } = store;\r\n    \r\n    // Загружаем WeatherService, если он еще не загружен\r\n    if (!weatherServiceInstance) {\r\n\r\n      \r\n      import('../../services/weather-service').then(module => {\r\n   \r\n        const WeatherService = module.default;\r\n        weatherServiceInstance = new WeatherService();\r\n        \r\n        // Вызываем forceWeatherChange в WeatherService\r\n        const currentWeatherState = state.weather || {};\r\n        const currentLocation = state.world?.currentLocation || null;\r\n        \r\n        // Принудительно меняем погоду\r\n        const updatedWeatherState = weatherServiceInstance.forceWeatherChange(\r\n          currentWeatherState,\r\n          currentLocation\r\n        );\r\n        \r\n        // Отправляем обновленное состояние погоды в Redux\r\n        dispatch(updateWeather(updatedWeatherState));\r\n        \r\n        \r\n      }).catch(error => {\r\n        console.error('❌ Ошибка при импорте weather-service для смены погоды:', error);\r\n      });\r\n    } else {\r\n      // WeatherService уже загружен\r\n      \r\n      \r\n      try {\r\n        // Принудительно меняем погоду\r\n        const currentWeatherState = state.weather || {};\r\n        const currentLocation = state.world?.currentLocation || null;\r\n        \r\n        const updatedWeatherState = weatherServiceInstance.forceWeatherChange(\r\n          currentWeatherState,\r\n          currentLocation\r\n        );\r\n        \r\n        // Отправляем обновленное состояние погоды в Redux\r\n        dispatch(updateWeather(updatedWeatherState));\r\n        \r\n        \r\n      } catch (error) {\r\n        console.error('❌ Ошибка при смене погоды:', error);\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n  \r\n  // Затем проверяем, нужно ли обновить погоду для UPDATE_GAME_TIME\r\n  if (action.type === UPDATE_GAME_TIME) {\r\n   \r\n    \r\n    // Извлекаем количество реальных минут для добавления и флаг ручного обновления\r\n    const minutesToAdd = action.payload?.minutesToAdd || 1;\r\n    const isManual = action.payload?.isManual || false;\r\n    \r\n    // Только один лог при ручном обновлении\r\n\r\n    // Для ручных обновлений принудительно игнорируем флаг isUpdatingWeather\r\n    if (isUpdatingWeather && !isManual) {\r\n      return result;\r\n    }\r\n    \r\n    // Отмечаем время последнего ручного обновления\r\n    if (isManual) {\r\n      lastManualUpdateTime = Date.now();\r\n    } \r\n    // Для автоматических обновлений проверяем, не было ли недавно ручного обновления\r\n    else {\r\n      const timeSinceLastManual = Date.now() - lastManualUpdateTime;\r\n      // Если прошло менее 1 секунды с момента ручного обновления, пропускаем автоматическое\r\n      if (timeSinceLastManual < 1000) {\r\n        return result;\r\n      }\r\n    }\r\n    \r\n    isUpdatingWeather = true; // Устанавливаем флаг, что обновление в процессе\r\n    \r\n    const { dispatch } = store;\r\n    \r\n    // Используем setTimeout для предотвращения блокировки UI\r\n    setTimeout(() => {\r\n      try {\r\n\r\n        // Важно: получаем состояние здесь, а не раньше, чтобы получить самые свежие данные\r\n        const state = store.getState();\r\n\r\n        \r\n        // Загружаем и инициализируем сервис погоды, если он еще не загружен\r\n        if (!weatherServiceInstance) {\r\n\r\n          \r\n          import('../../services/weather-service').then(module => {\r\n            const WeatherService = module.default;\r\n            weatherServiceInstance = new WeatherService();\r\n            updateWeatherState();\r\n          }).catch(error => {\r\n\r\n            isUpdatingWeather = false; // Сбрасываем флаг при ошибке\r\n          });\r\n        } else {\r\n\r\n          updateWeatherState();\r\n        }\r\n      } catch (outerError) {\r\n        isUpdatingWeather = false; // Сбрасываем флаг при неожиданной ошибке\r\n      }\r\n      \r\n      // Функция обновления состояния погоды\r\n      function updateWeatherState() {\r\n        try {\r\n\r\n          \r\n          // Убедимся, что обновление все еще актуально (для автоматических)\r\n          if (!isManual) {\r\n            const timeSinceLastManual = Date.now() - lastManualUpdateTime;\r\n           \r\n            \r\n            if (timeSinceLastManual < 1000) {\r\n\r\n              isUpdatingWeather = false;\r\n              return;\r\n            }\r\n          }\r\n          \r\n          // Важно: получаем самое последнее состояние снова внутри updateWeatherState\r\n          const freshState = store.getState();\r\n          \r\n    // Получаем текущее состояние погоды из свежего состояния\r\n    let currentWeatherState = freshState.weather || {};\r\n    const currentLocation = freshState.world?.currentLocation || null;\r\n    \r\n\r\n    \r\n    // Проверяем, нужно ли инициализировать прогноз погоды\r\n    // НОВОЕ: Если прогноз отсутствует, принудительно инициализируем его\r\n    if (!currentWeatherState.forecast || currentWeatherState.forecast.length === 0) {\r\n\r\n      \r\n      // Инициализируем прогноз, если есть инстанс weatherServiceInstance\r\n      if (weatherServiceInstance) {\r\n        try {\r\n          // Инициализируем погоду с текущими данными из состояния\r\n          const worldTime = freshState.world?.time;\r\n          if (worldTime) {\r\n            // Полная инициализация погоды с использованием worldTime\r\n            const initializedWeather = weatherServiceInstance.initWeather(currentLocation, worldTime);\r\n            \r\n            // Обновляем текущее состояние, сохраняя текущую погоду если она уже существует\r\n            currentWeatherState = {\r\n              ...initializedWeather,\r\n              // Сохраняем текущую погоду и интенсивность, если они уже установлены\r\n              currentWeather: currentWeatherState.currentWeather || initializedWeather.currentWeather,\r\n              weatherIntensity: currentWeatherState.weatherIntensity || initializedWeather.weatherIntensity\r\n            };\r\n            \r\n            console.log('🌤️ Погода инициализирована с прогнозом:', initializedWeather.forecast);\r\n            \r\n            // Принудительное обновление погоды в состоянии\r\n            dispatch(updateWeather(currentWeatherState));\r\n          }\r\n        } catch (error) {\r\n          console.error('❌ Ошибка при инициализации прогноза погоды:', error);\r\n        }\r\n      } else {\r\n        console.log('⏳ weatherServiceInstance еще не готов для инициализации прогноза, ожидаем следующего цикла обновления');\r\n        \r\n        // Загружаем weather-service при следующем обновлении\r\n        import('../../services/weather-service').then(module => {\r\n          console.log('✅ Модуль weather-service успешно импортирован для прогноза');\r\n          const WeatherService = module.default;\r\n          weatherServiceInstance = new WeatherService();\r\n        }).catch(error => {\r\n          console.error('❌ Ошибка при импорте weather-service для прогноза:', error);\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Проверяем формат состояния погоды и адаптируем его для weather-service\r\n    // В Redux у нас хранится currentTime: 720 (12:00), но сервису нужны hour и minute\r\n    if (currentWeatherState.currentTime !== undefined && \r\n        (currentWeatherState.hour === undefined || currentWeatherState.minute === undefined)) {\r\n      // Конвертируем currentTime (в минутах) в hour и minute\r\n      const totalMinutes = currentWeatherState.currentTime || 0;\r\n      const hour = Math.floor(totalMinutes / 60);\r\n      const minute = totalMinutes % 60;\r\n      \r\n      // Создаем новое состояние в нужном формате\r\n      currentWeatherState = {\r\n        ...currentWeatherState,\r\n        hour: hour,\r\n        minute: minute,\r\n        dayCount: currentWeatherState.dayCount || 1,\r\n        seasonDay: currentWeatherState.seasonDay || 1,\r\n        currentSeason: currentWeatherState.currentSeason || 'spring',\r\n        currentWeather: currentWeatherState.weatherType || 'clear',\r\n        weatherIntensity: currentWeatherState.weatherIntensity || 1,\r\n        isDayTime: hour >= 6 && hour < 20\r\n      };\r\n      \r\n      console.log('🔄 Преобразованное состояние погоды:', {\r\n        hour,\r\n        minute,\r\n        dayCount: currentWeatherState.dayCount,\r\n        currentWeather: currentWeatherState.currentWeather\r\n      });\r\n    }\r\n          \r\n          console.log(`🔄 Вызов weatherServiceInstance.updateTime с worldTime и minutesToAdd=${minutesToAdd}`);\r\n          \r\n          // Проверяем, что экземпляр weatherServiceInstance существует\r\n          if (!weatherServiceInstance) {\r\n            console.error('❌ weatherServiceInstance не существует!');\r\n            isUpdatingWeather = false;\r\n            return;\r\n          }\r\n          \r\n          // Проверяем, что метод updateTime существует\r\n          if (typeof weatherServiceInstance.updateTime !== 'function') {\r\n            console.error('❌ Метод updateTime не существует:', weatherServiceInstance);\r\n            isUpdatingWeather = false;\r\n            return;\r\n          }\r\n          \r\n          // Получаем данные из world.time как единственный источник истины\r\n          const worldTime = freshState.world?.time || {};\r\n          \r\n          // Улучшенное логирование перед обновлением времени\r\n          console.log('📋 Детальное состояние перед обновлением:', {\r\n            worldTime: {\r\n              hour: worldTime.hour,\r\n              minute: worldTime.minute,\r\n              day: worldTime.day,\r\n              season: worldTime.season\r\n            },\r\n            weatherState: {\r\n              hour: currentWeatherState.hour,\r\n              minute: currentWeatherState.minute,\r\n              dayCount: currentWeatherState.dayCount,\r\n              seasonDay: currentWeatherState.seasonDay,\r\n              currentWeather: currentWeatherState.currentWeather\r\n            },\r\n            timeMultiplier: WeatherService.TIME_MULTIPLIER,\r\n            gameMinutesToAdd: minutesToAdd * WeatherService.TIME_MULTIPLIER\r\n          });\r\n          \r\n          // Обновляем время, передавая текущее worldTime и прошедшие минуты\r\n          const updatedWeatherState = weatherServiceInstance.updateTime(\r\n            currentWeatherState,\r\n            currentLocation,\r\n            {  // Передаем объект worldTime с данными из state.world.time\r\n              hour: worldTime.hour,\r\n              minute: worldTime.minute,\r\n              day: worldTime.day,\r\n              season: worldTime.season\r\n            },\r\n            minutesToAdd // Передаем реальные минуты для расчета погоды\r\n          );\r\n          \r\n          console.log('✅ Обновленное состояние погоды:', {\r\n            hour: updatedWeatherState.hour,\r\n            minute: updatedWeatherState.minute,\r\n            dayCount: updatedWeatherState.dayCount,\r\n            seasonDay: updatedWeatherState.seasonDay,\r\n            currentWeather: updatedWeatherState.currentWeather,\r\n            totalGameMinutes: updatedWeatherState.hour * 60 + updatedWeatherState.minute\r\n          });\r\n          \r\n          // РАДИКАЛЬНЫЙ ПОДХОД: state.world.time - единственный источник правды\r\n          \r\n          // 1. СНАЧАЛА обновляем worldTime НЕ из weather, а напрямую\r\n          // Рассчитываем прошедшее время исходя из minutesToAdd и множителя\r\n          const realMinutes = minutesToAdd;\r\n          const gameMinutes = realMinutes * WeatherService.TIME_MULTIPLIER;\r\n          \r\n          // Извлекаем текущее worldTime\r\n          const worldHour = freshState.world?.time?.hour || 0;\r\n          const worldMinute = freshState.world?.time?.minute || 0;\r\n          \r\n          // Более точный расчет нового времени с учетом возможных переходов через полночь\r\n          const totalOldMinutes = worldHour * 60 + worldMinute; // Общее количество минут текущего времени\r\n          \r\n          // Определяем, сколько минут добавилось\r\n          const minutesToAddTotal = gameMinutes;\r\n          \r\n          // Вычисляем общее количество минут в новых сутках (0-1439)\r\n          let newTotalMinutesOfDay = (totalOldMinutes + minutesToAddTotal) % (24 * 60);\r\n          \r\n          // Определяем количество полных суток, которое прошло\r\n          // Учитываем особый случай перехода через полночь, когда новое время меньше старого\r\n          let daysToAdd;\r\n          \r\n          // РАСШИРЕННАЯ ОТЛАДКА: проверяем все условия подробно\r\n          console.log('🔍 ОТЛАДКА перехода через полночь:', {\r\n            totalOldMinutes, // текущее время в минутах (например 23:50 = 1430)\r\n            newTotalMinutesOfDay, // новое время в минутах (например 00:10 = 10)\r\n            isTransition: newTotalMinutesOfDay < totalOldMinutes, // ключевое условие перехода\r\n            minutesToAddTotal, // сколько минут добавляем\r\n            oldTime: `${worldHour}:${worldMinute}`,\r\n            newTime: `${Math.floor(newTotalMinutesOfDay/60)}:${newTotalMinutesOfDay%60}`,\r\n            check1: (worldHour === 23 && Math.floor(newTotalMinutesOfDay/60) === 0), // еще одна проверка перехода\r\n            check2: (totalOldMinutes > 1380 && newTotalMinutesOfDay < 60) // еще одна проверка (23:00+ → 00:xx)\r\n          });\r\n          \r\n          // РАДИКАЛЬНО НОВЫЙ АЛГОРИТМ ОБНАРУЖЕНИЯ ПОЛУНОЧИ:\r\n          // Если переход от позднего времени к раннему - это всегда переход через полночь\r\n          const oldHour = worldHour;\r\n          const newHour = Math.floor(newTotalMinutesOfDay/60);\r\n          \r\n          // Явно обрабатываем переход через полночь (даже без учета добавленных минут)\r\n          // Например: 23:50 → 00:10 ВСЕГДА означает переход через полночь\r\n          const isMidnightTransition = \r\n            (oldHour >= 23 && newHour < 1) || // Между 23:00-23:59 → 00:00-00:59 \r\n            (totalOldMinutes > 1380 && newTotalMinutesOfDay < 60); // То же самое, в минутах\r\n            \r\n          // Дополнительная проверка на случай, если переход добавляет больше суток \r\n          // (например, +2000 минут от 23:00 может дать 09:40 через 1 день)\r\n          const explicitFullDays = Math.floor(minutesToAddTotal / (24 * 60));\r\n          \r\n          if (isMidnightTransition) {\r\n            // Обнаружен переход через полночь! \r\n            // ALWAYS прибавляем 1 день в этом случае + дополнительные полные сутки\r\n            \r\n            // Важно: не 1 + explicitFullDays, а прямой +1!\r\n            // Это потому что сам переход через полночь уже означает +1 день\r\n            daysToAdd = 1 + explicitFullDays;\r\n            \r\n            console.log('🌙🌙🌙🌙 ПЕРЕХОД ЧЕРЕЗ ПОЛНОЧЬ!', {\r\n              oldTime: `${oldHour}:${worldMinute}`, \r\n              newTime: `${newHour}:${newTotalMinutesOfDay%60}`,\r\n              criteriaMatched: 'Явный переход из позднего часа (23+) в ранний час (0-1)',\r\n              explicitFullDays,\r\n              totalDaysToAdd: daysToAdd\r\n            });\r\n          } else if (newTotalMinutesOfDay < totalOldMinutes) {\r\n            // Если общее количество минут уменьшилось - это тоже переход через полночь\r\n            // Например: 1430 минут (23:50) → 10 минут (00:10) означает -1420 минут и переход через полночь\r\n            \r\n            daysToAdd = 1 + explicitFullDays; // Аналогично, +1 день за переход через полночь\r\n            \r\n            console.log('🌙🌙🌙 ПЕРЕХОД ЧЕРЕЗ ПОЛНОЧЬ (уменьшение минут)!', {\r\n              oldTime: `${oldHour}:${worldMinute}`,\r\n              newTime: `${newHour}:${newTotalMinutesOfDay%60}`,\r\n              oldTotalMinutes: totalOldMinutes,\r\n              newTotalMinutes: newTotalMinutesOfDay,\r\n              minutesDiff: newTotalMinutesOfDay - totalOldMinutes,\r\n              explicitFullDays,\r\n              totalDaysToAdd: daysToAdd\r\n            });\r\n          } else {\r\n            // Стандартный случай - только полные сутки (если есть)\r\n            daysToAdd = explicitFullDays;\r\n            \r\n            if (daysToAdd > 0) {\r\n              console.log('📅 Добавлено дней:', daysToAdd, '(полных суток)');\r\n            }\r\n          }\r\n          \r\n          // РАДИКАЛЬНАЯ ПРОВЕРКА на граничные случаи перехода через полночь\r\n          // Это критически важно для обнаружения всех возможных переходов\r\n          if (oldHour === 23 && newHour === 0 && daysToAdd === 0) {\r\n            console.log('⚠️⚠️⚠️ ВНИМАНИЕ! КРИТИЧЕСКАЯ СИТУАЦИЯ: переход 23:xx → 00:xx, но daysToAdd = 0!');\r\n            console.log('🛠️ ПРИНУДИТЕЛЬНОЕ ИСПРАВЛЕНИЕ: устанавливаем daysToAdd = 1');\r\n            daysToAdd = 1;\r\n          }\r\n          // Дополнительный случай: позднее время + прибавление времени больше 60 минут -> раннее время \r\n          else if (oldHour >= 22 && newHour <= 5 && minutesToAddTotal >= 60 && daysToAdd === 0) {\r\n            console.log('⚠️⚠️ ОБНАРУЖЕН СЛОЖНЫЙ ПЕРЕХОД ЧЕРЕЗ ПОЛНОЧЬ: позднее время + прибавление большого количества минут!');\r\n            console.log('🛠️ ПРИНУДИТЕЛЬНОЕ ИСПРАВЛЕНИЕ: устанавливаем daysToAdd = 1');\r\n            daysToAdd = 1;\r\n          }\r\n          // Полночный граничный случай - если текущее время 23:30+ и новое время 00:30-\r\n          else if ((oldHour * 60 + worldMinute >= 1410) && \r\n                  (newHour * 60 + (newTotalMinutesOfDay % 60) <= 30) && \r\n                  daysToAdd === 0) {\r\n            console.log('⚠️⚠️ ОБНАРУЖЕН СПЕЦИАЛЬНЫЙ ГРАНИЧНЫЙ СЛУЧАЙ ПОЛУНОЧИ (23:30+ → 00:30-)');\r\n            console.log('🛠️ ПРИНУДИТЕЛЬНОЕ ИСПРАВЛЕНИЕ: устанавливаем daysToAdd = 1');\r\n            daysToAdd = 1;\r\n          }\r\n          \r\n          // Рассчитываем новый час и минуту из количества минут в текущих сутках\r\n          let newWorldHour = Math.floor(newTotalMinutesOfDay / 60);\r\n          let newWorldMinute = newTotalMinutesOfDay % 60;\r\n          \r\n          console.log('🕒 ВАЖНО! ПРЯМОЕ обновление worldTime:', {\r\n            oldWorldTime: `${worldHour}:${worldMinute}`,\r\n            newWorldTime: `${newWorldHour}:${newWorldMinute}`,\r\n            totalOldMinutes,\r\n            newTotalMinutesOfDay,\r\n            minutesAdded: gameMinutes,\r\n            minutesToAddTotal,\r\n            daysToAdd\r\n          });\r\n          \r\n          // Получаем текущее значение day из state.world.time - это ЕДИНСТВЕННЫЙ источник правды\r\n          const currentWorldDay = freshState.world?.time?.day || 1;\r\n          \r\n          // Увеличиваем день на количество полных суток, которое прошло\r\n          const newDay = currentWorldDay + daysToAdd;\r\n          \r\n          console.log('📅 ИСПРАВЛЕННОЕ определение переходов через полночь:', {\r\n            oldTime: `${oldHour}:${worldMinute}`,\r\n            newTime: `${newHour}:${newTotalMinutesOfDay%60}`,\r\n            totalOldMinutes,\r\n            newTotalMinutesOfDay,\r\n            minutesToAddTotal,\r\n            daysToAdd,\r\n            currentWorldDay,\r\n            newDay\r\n          });\r\n          \r\n          console.log('🌙 Проверка перехода через полночь:', {\r\n            oldTime: `${worldHour}:${worldMinute}`,\r\n            newTime: `${newWorldHour}:${newWorldMinute}`,\r\n            gameMinutes,\r\n            daysToAdd,\r\n            totalOldMinutes,\r\n            newTotalMinutesOfDay,\r\n            currentWorldDay,\r\n            newDay\r\n          });\r\n          \r\n          console.log('📅 Обновление дня:', {\r\n            currentWorldDay,\r\n            newDay,\r\n            debug: {\r\n              worldTimeDayType: typeof freshState.world?.time?.day\r\n            }\r\n          });\r\n          \r\n          // ЭКСТРЕМАЛЬНАЯ ОТЛАДКА: подробный лог данных перед dispatch\r\n          console.log('🚀🚀 КРИТИЧЕСКИЙ ЛОГ - ДАННЫЕ ПЕРЕД ОТПРАВКОЙ ЭКШЕНА:', {\r\n            hour: newWorldHour, \r\n            minute: newWorldMinute, \r\n            day: newDay, // Это новое значение дня, которое должно увеличиться при переходе через полночь\r\n            currentWorldDay, // Предыдущее значение дня\r\n            daysToAdd, // Сколько дней должно быть добавлено\r\n            isMidnightCrossing: isMidnightTransition, // Был ли обнаружен переход через полночь\r\n            time_values: {\r\n              oldHour,\r\n              newHour,\r\n              oldMinutes: totalOldMinutes,\r\n              newMinutes: newTotalMinutesOfDay\r\n            },\r\n            // Детализация действий системы\r\n            actions_taken: {\r\n              condition1: (oldHour >= 23 && newHour < 1),\r\n              condition2: (newTotalMinutesOfDay < totalOldMinutes),\r\n              explicit_days: explicitFullDays\r\n            },\r\n            state_world_time: freshState.world?.time || 'отсутствует'\r\n          });\r\n          \r\n          console.log(`🔬 ОТЛАДКА ПРОБЛЕМЫ С ДНЕМ: текущий день=${currentWorldDay}, новый день=${newDay}, daysToAdd=${daysToAdd}`);\r\n          \r\n          // Обновляем state.world.time, который виден в TimeDebugPanel\r\n          // Используем ТОЛЬКО значения, рассчитанные выше, НЕ из weatherService\r\n          const updateTimeAction = {\r\n            type: ACTION_TYPES.UPDATE_TIME,\r\n            payload: {\r\n              hour: newWorldHour,\r\n              minute: newWorldMinute,\r\n              day: newDay, // Используем рассчитанное значение дня\r\n              season: updatedWeatherState.currentSeason || 'spring'\r\n            }\r\n          };\r\n          \r\n          console.log('🚀 ОТПРАВЛЯЕМ ЭКШЕН UPDATE_TIME:', updateTimeAction);\r\n          \r\n          // Важное дополнение: обеспечить гарантированное преобразование типов\r\n          // перед отправкой для предотвращения проблем с обработкой дня\r\n          const cleanedUpdateTimeAction = {\r\n            type: ACTION_TYPES.UPDATE_TIME,\r\n            payload: {\r\n              hour: Number(newWorldHour),\r\n              minute: Number(newWorldMinute),\r\n              day: Number(newDay), // Гарантированно число\r\n              season: updatedWeatherState.currentSeason || 'spring'\r\n            }\r\n          };\r\n          \r\n          console.log('🎯🎯 КРИТИЧЕСКОЕ ПРЕОБРАЗОВАНИЕ UPDATE_TIME:', {\r\n            исходное_действие: updateTimeAction,\r\n            итоговое_значение_дня: Number(newDay),\r\n            тип_значения_дня: typeof Number(newDay),\r\n            очищенное_действие: cleanedUpdateTimeAction\r\n          });\r\n          \r\n          // Отправляем очищенное действие\r\n          dispatch(cleanedUpdateTimeAction);\r\n          \r\n          // После диспатча - запрашиваем свежее состояние чтобы убедиться, что изменения применились\r\n          setTimeout(() => {\r\n            const afterDispatchState = store.getState();\r\n            console.log('📊 СОСТОЯНИЕ ПОСЛЕ ДИСПАТЧА:', {\r\n              world_time: afterDispatchState.world?.time,\r\n              weather_dayCount: afterDispatchState.weather?.dayCount,\r\n            });\r\n          }, 0);\r\n          \r\n          // ВАЖНОЕ ИСПРАВЛЕНИЕ: Проверяем, стал ли nextWeatherChange равным 0 после обновления\r\n          // Если да, немедленно инициируем смену погоды\r\n          if (updatedWeatherState.nextWeatherChange === 0) {\r\n            console.log('⚠️⚠️⚠️ ОБНАРУЖЕН НУЛЕВОЙ nextWeatherChange! Немедленно меняем погоду!');\r\n            \r\n            // Сначала обновляем текущее состояние\r\n            dispatch(updateWeather({\r\n              currentWeather: updatedWeatherState.currentWeather,\r\n              weatherIntensity: updatedWeatherState.weatherIntensity,\r\n              weatherEffects: updatedWeatherState.weatherEffects,\r\n              dayCount: newDay, // Используем то же значение дня, что и в UPDATE_TIME для синхронизации\r\n              currentSeason: worldTime.season || updatedWeatherState.currentSeason, // Приоритет season из worldTime\r\n              nextWeatherChange: updatedWeatherState.nextWeatherChange, // ВАЖНОЕ ИСПРАВЛЕНИЕ: Передаем nextWeatherChange\r\n              forecast: updatedWeatherState.forecast // Передаем обновленный прогноз погоды\r\n            }));\r\n            \r\n            // Затем немедленно диспатчим FORCE_WEATHER_CHANGE для смены погоды\r\n            setTimeout(() => {\r\n              console.log('🌤️🌤️ Вызываем принудительную смену погоды из-за нулевого nextWeatherChange');\r\n              dispatch({ type: FORCE_WEATHER_CHANGE });\r\n            }, 100);\r\n          } else {\r\n            // Обычное обновление погоды\r\n            dispatch(updateWeather({\r\n              currentWeather: updatedWeatherState.currentWeather,\r\n              weatherIntensity: updatedWeatherState.weatherIntensity,\r\n              weatherEffects: updatedWeatherState.weatherEffects,\r\n              dayCount: newDay, // Используем то же значение дня, что и в UPDATE_TIME для синхронизации\r\n              currentSeason: worldTime.season || updatedWeatherState.currentSeason, // Приоритет season из worldTime\r\n              nextWeatherChange: updatedWeatherState.nextWeatherChange, // ВАЖНОЕ ИСПРАВЛЕНИЕ: Передаем nextWeatherChange\r\n              forecast: updatedWeatherState.forecast // Передаем обновленный прогноз погоды\r\n            }));\r\n          }\r\n\r\n          // Подробное логирование nextWeatherChange для отладки\r\n          console.log('⏳ Передано новое значение nextWeatherChange:', {\r\n            получено_от_сервиса: updatedWeatherState.nextWeatherChange,\r\n            предыдущее_значение: currentWeatherState.nextWeatherChange,\r\n            изменение: updatedWeatherState.nextWeatherChange - (currentWeatherState.nextWeatherChange || 0)\r\n          });\r\n          \r\n          // ЖЕСТКАЯ СИНХРОНИЗАЦИЯ: Принудительно устанавливаем все значения времени в weather из worldTime\r\n          // Это необходимо для корректной работы TimedebugPanel\r\n          const newHourInMinutes = newWorldHour * 60 + newWorldMinute;\r\n          \r\n          // РАДИКАЛЬНО УЛУЧШЕННАЯ синхронизация дня сезона \r\n          const currentSeasonDay = freshState.weather?.seasonDay || 1;\r\n          \r\n          // Всегда устанавливаем день сезона равным мировому дню для устранения рассинхронизации\r\n          let seasonDay = newDay;\r\n          \r\n          if (currentSeasonDay !== newDay) {\r\n            console.log(`📅 ПОЛНАЯ СИНХРОНИЗАЦИЯ ДНЯ СЕЗОНА с мировым днем: ${currentSeasonDay} → ${newDay}`, {\r\n              причина: daysToAdd > 0 ? 'смена дня' : 'принудительная синхронизация',\r\n              dayDiff: Math.abs(newDay - currentSeasonDay)\r\n            });\r\n          }\r\n          \r\n          // Используем тип, который гарантированно обрабатывается напрямую в редьюсере\r\n          dispatch({\r\n            type: 'DIRECT_UPDATE_WEATHER_TIME',\r\n            payload: {\r\n              currentTime: newHourInMinutes,\r\n              formattedTime: `${String(newWorldHour).padStart(2, '0')}:${String(newWorldMinute).padStart(2, '0')}`,\r\n              hour: newWorldHour,\r\n              minute: newWorldMinute,\r\n              dayCount: newDay,  // Явная синхронизация счетчика дня\r\n              seasonDay: seasonDay, // ИСПРАВЛЕНИЕ: Явная синхронизация дня сезона\r\n              currentSeason: worldTime.season || updatedWeatherState.currentSeason, // Приоритет season из worldTime\r\n              // Определяем период суток для отображения в интерфейсе\r\n              timeOfDay: \r\n                (newWorldHour >= 5 && newWorldHour < 7) ? 'рассвет' :\r\n                (newWorldHour >= 7 && newWorldHour < 11) ? 'утро' :\r\n                (newWorldHour >= 11 && newWorldHour < 14) ? 'полдень' :\r\n                (newWorldHour >= 14 && newWorldHour < 17) ? 'день' :\r\n                (newWorldHour >= 17 && newWorldHour < 20) ? 'вечер' :\r\n                (newWorldHour >= 20 && newWorldHour < 23) ? 'ночь' : 'глубокая ночь',\r\n              isDayTime: newWorldHour >= 6 && newWorldHour < 20\r\n            }\r\n          });\r\n          \r\n          // Принудительно проверяем, что синхронизация прошла успешно\r\n          setTimeout(() => {\r\n            const syncCheckState = store.getState();\r\n            if (\r\n              syncCheckState.weather?.hour !== newWorldHour || \r\n              syncCheckState.weather?.minute !== newWorldMinute || \r\n              syncCheckState.weather?.dayCount !== newDay\r\n            ) {\r\n              console.error('⚠️ ОШИБКА СИНХРОНИЗАЦИИ! Время в weather не соответствует world_time:', {\r\n                worldTime: { hour: newWorldHour, minute: newWorldMinute, day: newDay },\r\n                weather: { \r\n                  hour: syncCheckState.weather?.hour, \r\n                  minute: syncCheckState.weather?.minute, \r\n                  dayCount: syncCheckState.weather?.dayCount\r\n                }\r\n              });\r\n            } else {\r\n              console.log('✅ Синхронизация завершена успешно!');\r\n            }\r\n          }, 50);\r\n          \r\n          console.log('🔄 Синхронизированные данные времени:', {\r\n            worldTime: { hour: newWorldHour, minute: newWorldMinute, day: newDay },\r\n            weatherTime: { hour: newWorldHour, minute: newWorldMinute, dayCount: newDay, totalMinutes: newHourInMinutes }\r\n          });\r\n          \r\n          console.log('✅ Время успешно обновлено в state.world.time И state.weather');\r\n          \r\n          // Только один лог результатов для ручных обновлений\r\n          if (isManual) {\r\n            const hoursBefore = currentWeatherState.hour || 0;\r\n            const minutesBefore = currentWeatherState.minute || 0;\r\n            const hoursAfter = updatedWeatherState.hour || 0;\r\n            const minutesAfter = updatedWeatherState.minute || 0;\r\n            \r\n            const gameMinutesBefore = hoursBefore * 60 + minutesBefore;\r\n            const gameMinutesAfter = hoursAfter * 60 + minutesAfter;\r\n            const gameMinutesAdded = \r\n              (gameMinutesAfter >= gameMinutesBefore) \r\n                ? gameMinutesAfter - gameMinutesBefore \r\n                : (24 * 60 - gameMinutesBefore) + gameMinutesAfter;\r\n            \r\n            console.log(`✓ Результат: ${hoursBefore}:${minutesBefore.toString().padStart(2, '0')} → ${hoursAfter}:${minutesAfter.toString().padStart(2, '0')} (+${gameMinutesAdded} игр.мин)`);\r\n          }\r\n          \r\n        } catch (error) {\r\n          // Никаких логов ошибок, кроме критических\r\n          isUpdatingWeather = false;\r\n        } finally {\r\n          // Всегда сбрасываем флаг обновления, даже при ошибке\r\n          isUpdatingWeather = false;\r\n        }\r\n      }\r\n    }, isManual ? 0 : 100); // Для ручных обновлений запускаем сразу, для автоматических - с небольшой задержкой\r\n  }\r\n  \r\n  return result;\r\n};\r\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport apiService from '../services/api';\r\nimport SectService from '../services/sect-service';\r\nimport { Sect, SectMember } from '../models';\r\nimport initialState from './state/initialState';\r\nimport { rootReducer } from './reducers/rootReducer';\r\nimport { initializeWeatherState } from './reducers/worldReducer';\r\nimport ACTION_TYPES from './actions/actionTypes';\r\nimport { weatherMiddleware } from './middleware/weatherMiddleware';\r\nimport { checkAndNormalizeSectData } from '../utils/sectUtils';\r\nimport { normalizePlayerEffects } from '../utils/effectsNormalizer';\r\nimport { initRelationshipSync } from '../utils/sectRelationshipSyncer';\r\nimport { \r\n  updateWeather, \r\n  setTimeOfDay, \r\n  triggerWeatherEvent,\r\n  updateGameTime \r\n} from './actions/weather-actions';\r\n\r\n// Создаем контекст\r\nexport const GameContext = createContext();\r\n\r\n// Хук для использования контекста\r\nexport const useGameContext = () => useContext(GameContext);\r\n\r\n// Создаем экземпляр сервиса сект с моделями\r\nconst sectService = new SectService({ Sect, SectMember });\r\n\r\n// Провайдер контекста\r\nexport const GameContextProvider = ({ children }) => {\r\n  // Используем useReducer с корневым редуктором и начальным состоянием\r\n  const [state, dispatchBase] = useReducer(rootReducer, initialState);\r\n  \r\n  // Инициализируем состояние погоды при первой загрузке\r\n  useEffect(() => {\r\n    if (state) {\r\n      const initialProcessedState = initializeWeatherState(state);\r\n      // Если state был изменен функцией инициализации погоды, применяем это изменение\r\n      if (initialProcessedState !== state) {\r\n        dispatchBase({ type: 'INITIALIZE_WEATHER_STATE', payload: initialProcessedState });\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  // Экспорт состояния игры в глобальные переменные для доступа из отладочных инструментов\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      // Экспортируем состояние и контекст в глобальные переменные\r\n      window.__GAME_STATE__ = state;\r\n      // Для инициализации - экспортируем пустой объект actions\r\n      if (!window.__GAME_CONTEXT__) {\r\n        window.__GAME_CONTEXT__ = { state, actions: {} };\r\n      } else {\r\n        // Если контекст уже был создан, обновляем только состояние\r\n        window.__GAME_CONTEXT__.state = state;\r\n      }\r\n      \r\n      // Создаем или обновляем data-атрибут на body для доступа из DOM\r\n      try {\r\n        // Вместо сохранения всего состояния в DOM (что может быть избыточно),\r\n        // создаем атрибут-индикатор для отладочных инструментов\r\n        document.body.setAttribute('data-gamestate-available', 'true');\r\n        \r\n        // Сохраняем основные метрики в data-атрибуты для быстрого доступа\r\n        if (state.player) {\r\n          document.body.setAttribute('data-player-health', \r\n            `${state.player.stats?.health || 0}/${state.player.stats?.maxHealth || 100}`);\r\n          document.body.setAttribute('data-player-level', \r\n            state.player.cultivation?.level || 1);\r\n        }\r\n      } catch (error) {\r\n        // Безопасно игнорируем ошибки DOM-операций\r\n        console.debug('Не удалось обновить DOM-атрибуты:', error);\r\n      }\r\n      \r\n      // Отправляем событие для уведомления отладочных инструментов об обновлении состояния\r\n      try {\r\n        const stateUpdateEvent = new CustomEvent('game-state-updated', { \r\n          detail: { timestamp: Date.now() } \r\n        });\r\n        window.dispatchEvent(stateUpdateEvent);\r\n      } catch (error) {\r\n        // Безопасно игнорируем ошибки событий\r\n        console.debug('Не удалось отправить событие об обновлении состояния:', error);\r\n      }\r\n    }\r\n  }, [state]); // Выполняем при каждом изменении состояния\r\n  \r\n  // Создаем промежуточное ПО (middleware) для обработки действий\r\n  const middlewareEnhancer = next => action => {\r\n    // ⚠️ КРИТИЧЕСКИ ВАЖНО: Передаем актуальный state при каждом вызове middleware\r\n    const middlewareAPI = {\r\n      getState: () => state, // Теперь всегда актуальный state, а не замороженный processedState\r\n      dispatch: dispatchBase\r\n    };\r\n    \r\n    // Вызываем middleware и получаем результат\r\n    const middlewareResult = weatherMiddleware(middlewareAPI)(next)(action);\r\n    \r\n    return middlewareResult;\r\n  };\r\n  \r\n  // Создаем dispatch с применением middleware\r\n  const dispatch = action => {\r\n    return middlewareEnhancer(dispatchBase)(action);\r\n  };\r\n  \r\n  // Эффект для инициализации игры при загрузке\r\n  useEffect(() => {\r\n    const initializeGame = async () => {\r\n      try {\r\n        // Пытаемся загрузить сохраненное состояние из localStorage\r\n        const savedState = localStorage.getItem('gameState');\r\n        \r\n        if (savedState) {\r\n          // Если есть сохраненное состояние, загружаем его\r\n          dispatch({\r\n            type: ACTION_TYPES.LOAD_GAME,\r\n            payload: JSON.parse(savedState)\r\n          });\r\n        } else {\r\n          // Если нет сохраненного состояния, инициализируем новую игру\r\n          // Здесь можно загрузить начальные данные с сервера, если нужно\r\n          const userData = await apiService.getCurrentUser();\r\n          \r\n          if (userData) {\r\n            dispatch({\r\n              type: ACTION_TYPES.UPDATE_PLAYER,\r\n              payload: userData\r\n            });\r\n          }\r\n        }\r\n        \r\n        // Устанавливаем флаг инициализации\r\n        dispatch({\r\n          type: ACTION_TYPES.SET_INITIALIZED,\r\n          payload: true\r\n        });\r\n        \r\n        console.log('🔄 Инициализация игры завершена');\r\n      } catch (error) {\r\n        console.error('Ошибка при инициализации игры:', error);\r\n        \r\n        // Устанавливаем ошибку\r\n        dispatch({\r\n          type: ACTION_TYPES.SET_ERROR,\r\n          payload: error.message\r\n        });\r\n      }\r\n    };\r\n    \r\n    // Вызываем функцию инициализации\r\n    initializeGame();\r\n  }, []);\r\n  \r\n  // Эффект для принудительного восстановления техник после полной инициализации игры\r\n  useEffect(() => {\r\n    // Запускаем восстановление техник только после полной инициализации игры\r\n    if (state.isInitialized && Array.isArray(state.player?.techniques) && state.player.techniques.length > 0) {\r\n      // Небольшая задержка для гарантии, что все компоненты уже загружены\r\n      const timer = setTimeout(() => {\r\n        console.log('🛠️ Запуск автоматического восстановления техник после инициализации...');\r\n        try {\r\n          // Запускаем восстановление техник\r\n          dispatch({\r\n            type: ACTION_TYPES.REPAIR_TECHNIQUES\r\n          });\r\n          console.log('✅ Автоматическое восстановление техник выполнено');\r\n        } catch (error) {\r\n          console.error('❌ Ошибка при автоматическом восстановлении техник:', error);\r\n        }\r\n      }, 1000);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [state.isInitialized, state.player?.techniques]);\r\n  \r\n  // Создаем объект с действиями для использования в компонентах\r\n  // Функция для нормализации данных секты\r\n  const normalizeSectDataAction = () => {\r\n    console.log('🧹 Запуск нормализации данных секты...');\r\n    \r\n    // Выполняем нормализацию через редуктор\r\n    dispatch({ type: ACTION_TYPES.NORMALIZE_SECT_DATA });\r\n    \r\n    // Добавляем уведомление в интерфейс\r\n    dispatch({ \r\n      type: ACTION_TYPES.ADD_NOTIFICATION, \r\n      payload: { \r\n        message: 'Структура данных секты была нормализована', \r\n        type: 'info' \r\n      } \r\n    });\r\n    \r\n    // Для удобства отладки показываем обновленные данные\r\n    setTimeout(() => {\r\n      console.log('✅ Данные секты после нормализации:', state.sect);\r\n    }, 100);\r\n    \r\n    return state.sect;\r\n  };\r\n  \r\n  // Функция для нормализации эффектов персонажа\r\n  const normalizeEffectsAction = () => {\r\n    console.log('🧹 Запуск нормализации эффектов персонажа...');\r\n    \r\n    // Выполняем нормализацию через редуктор\r\n    dispatch({ type: ACTION_TYPES.NORMALIZE_EFFECTS });\r\n    \r\n    // Добавляем уведомление в интерфейс\r\n    dispatch({ \r\n      type: ACTION_TYPES.ADD_NOTIFICATION, \r\n      payload: { \r\n        message: 'Структура данных эффектов была нормализована', \r\n        type: 'info' \r\n      } \r\n    });\r\n    \r\n    // Для удобства отладки показываем обновленные данные\r\n    setTimeout(() => {\r\n      console.log('✅ Эффекты персонажа после нормализации:', state.player.statusEffects);\r\n    }, 100);\r\n    \r\n    return state.player.statusEffects;\r\n  };\r\n  \r\n  // Дополняем эффект инициализации - добавляем код нормализации секты и эффектов\r\n  useEffect(() => {\r\n    if (state.isInitialized) {\r\n      // После инициализации игры выполняем проверку и нормализацию данных\r\n      setTimeout(() => {\r\n        try {\r\n          // 1. Проверка и нормализация данных секты\r\n          const sectCheckResult = checkAndNormalizeSectData(state);\r\n          \r\n          // Если данные были изменены в результате проверки, выполняем обновление\r\n          if (sectCheckResult !== state) {\r\n            console.log('🔍 Обнаружены проблемы в данных секты, выполняем автоматическую нормализацию...');\r\n            normalizeSectDataAction();\r\n          }\r\n          \r\n          // Инициализируем синхронизацию отношений между сектой и социальными отношениями\r\n          console.log('🔄 Инициализация синхронизации отношений секты и социальных отношений...');\r\n          initRelationshipSync({\r\n            getState: () => state,\r\n            dispatch\r\n          });\r\n          \r\n          // 2. Проверка и нормализация эффектов персонажа\r\n          if (state.player && state.player.statusEffects) {\r\n            // Проверяем, является ли statusEffects массивом\r\n            if (!Array.isArray(state.player.statusEffects)) {\r\n              console.log('🔍 Обнаружен неправильный формат эффектов (объект вместо массива), выполняем автоматическую нормализацию...');\r\n              normalizeEffectsAction();\r\n            } else {\r\n              // Также проверяем, если statusEffects пустой массив, но есть бонусы секты\r\n              if (state.player.statusEffects.length === 0 && \r\n                  state.player.sect && \r\n                  state.player.sect.benefits && \r\n                  state.player.sect.benefits.length > 0) {\r\n                console.log('🔍 Эффекты секты не включены в список эффектов персонажа, выполняем нормализацию...');\r\n                normalizeEffectsAction();\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('❌ Ошибка при проверке данных секты или эффектов:', error);\r\n        }\r\n      }, 1500); // Даем небольшую задержку, чтобы игра успела полностью инициализироваться\r\n    }\r\n  }, [state.isInitialized]);\r\n\r\nconst actions = {\r\n    // Добавляем dispatch в actions, чтобы он был доступен компонентам\r\n    dispatch,\r\n    \r\n    // Действие для нормализации эффектов\r\n    normalizeEffects: () => {\r\n      console.log('🧹 Ручной запуск нормализации эффектов персонажа...');\r\n      return normalizeEffectsAction();\r\n    },\r\n    \r\n    // Действия для игрока\r\n    updatePlayer: (data) => dispatch({ type: ACTION_TYPES.UPDATE_PLAYER, payload: data }),\r\n    updatePlayerStats: (stats) => dispatch({ type: ACTION_TYPES.UPDATE_PLAYER_STATS, payload: stats }),\r\n    updateCultivation: (data) => dispatch({ type: ACTION_TYPES.UPDATE_CULTIVATION, payload: data }),\r\n    \r\n    // Действия для инвентаря\r\n    addItem: (item) => dispatch({ type: ACTION_TYPES.ADD_ITEM, payload: item }),\r\n    removeItem: (itemId) => {\r\n      // Ensure we're passing an object with id property as payload as expected by the reducer\r\n      const payload = typeof itemId === 'object' ? itemId : { id: itemId };\r\n      console.log('Removing item with payload:', payload);\r\n      dispatch({ type: ACTION_TYPES.REMOVE_ITEM, payload });\r\n    },\r\n    equipItem: (item) => dispatch({ type: ACTION_TYPES.EQUIP_ITEM, payload: item }),\r\n    unequipItem: (slot) => dispatch({ type: ACTION_TYPES.UNEQUIP_ITEM, payload: slot }),\r\n    updateCurrency: (currency, isAdditive = false) => dispatch({ \r\n      type: ACTION_TYPES.UPDATE_CURRENCY, \r\n      payload: currency,\r\n      isAdditive: isAdditive \r\n    }),\r\n    // Метод для добавления валюты к существующей\r\n    addCurrency: (currency) => {\r\n      console.log('Добавление валюты в инвентарь:', currency);\r\n      \r\n      // Передаем валюту с явным флагом isAdditive=true, указывая что нужно добавить, а не заменить\r\n      dispatch({ \r\n        type: ACTION_TYPES.UPDATE_CURRENCY, \r\n        payload: currency,\r\n        isAdditive: true\r\n      });\r\n    },\r\n    \r\n    // Действия для мира\r\n    updateLocation: (location) => dispatch({ type: ACTION_TYPES.UPDATE_LOCATION, payload: location }),\r\n    updateTime: (time) => dispatch({ type: ACTION_TYPES.UPDATE_TIME, payload: time }),\r\n    updateWeather: (weather) => dispatch({ type: ACTION_TYPES.UPDATE_WEATHER, payload: weather }),\r\n    addEvent: (event) => dispatch({ type: ACTION_TYPES.ADD_EVENT, payload: event }),\r\n    removeEvent: (eventId) => dispatch({ type: ACTION_TYPES.REMOVE_EVENT, payload: eventId }),\r\n    cacheGeneratedEnemy: (areaId, enemyId, enemy) => \r\n      dispatch({ \r\n        type: ACTION_TYPES.CACHE_GENERATED_ENEMY, \r\n        payload: { areaId, enemyId, enemy } \r\n      }),\r\n    \r\n    // Действия для интерфейса\r\n    changeScreen: (screen) => dispatch({ type: ACTION_TYPES.CHANGE_SCREEN, payload: screen }),\r\n    addNotification: (notification) => dispatch({ type: ACTION_TYPES.ADD_NOTIFICATION, payload: notification }),\r\n    removeNotification: (notificationId) => dispatch({ type: ACTION_TYPES.REMOVE_NOTIFICATION, payload: notificationId }),\r\n    updateSettings: (settings) => dispatch({ type: ACTION_TYPES.UPDATE_SETTINGS, payload: settings }),\r\n    \r\n    // Действия для сохранения/загрузки\r\n    saveGame: (callbacks) => dispatch({ type: ACTION_TYPES.SAVE_GAME, payload: callbacks }),\r\n    loadGame: (state) => dispatch({ type: ACTION_TYPES.LOAD_GAME, payload: state }),\r\n    \r\n    // Действия для квестов\r\n    acceptQuest: (questId) => dispatch({ type: ACTION_TYPES.ACCEPT_QUEST, payload: questId }),\r\n    completeQuest: (questId) => dispatch({ type: ACTION_TYPES.COMPLETE_QUEST, payload: questId }),\r\n    updateQuestObjective: (data) => dispatch({ type: ACTION_TYPES.UPDATE_QUEST_OBJECTIVE, payload: data }),\r\n    \r\n    // Действия для достижений\r\n    checkAchievements: (achievements) => dispatch({ type: ACTION_TYPES.CHECK_ACHIEVEMENTS, payload: { achievements } }),\r\n    completeAchievement: (achievement) => dispatch({ type: ACTION_TYPES.COMPLETE_ACHIEVEMENT, payload: achievement }),\r\n    \r\n    // Действия для техник\r\n    learnTechnique: (technique) => dispatch({ type: ACTION_TYPES.LEARN_TECHNIQUE, payload: technique }),\r\n    upgradeTechnique: (data) => dispatch({ type: ACTION_TYPES.UPGRADE_TECHNIQUE, payload: data }),\r\n    useTechnique: (data) => dispatch({ type: ACTION_TYPES.USE_TECHNIQUE, payload: data }),\r\n    repairTechniques: () => {\r\n      console.log('🔧 Запуск ручного восстановления техник');\r\n      dispatch({ type: ACTION_TYPES.REPAIR_TECHNIQUES });\r\n      // Добавляем уведомление о восстановлении техник\r\n      dispatch({ \r\n        type: ACTION_TYPES.ADD_NOTIFICATION, \r\n        payload: { \r\n          message: 'Техники были восстановлены', \r\n          type: 'success' \r\n        } \r\n      });\r\n    },\r\n    \r\n    // Действия для боя\r\n    startCombat: (enemy) => dispatch({ type: ACTION_TYPES.START_COMBAT, payload: enemy }),\r\n    endCombat: () => dispatch({ type: ACTION_TYPES.END_COMBAT }),\r\n    updateCombat: (data) => dispatch({ type: ACTION_TYPES.UPDATE_COMBAT, payload: data }),\r\n    updateCombatState: (state) => dispatch({ type: ACTION_TYPES.UPDATE_COMBAT_STATE, payload: state }),\r\n    addCombatLog: (log) => dispatch({ type: ACTION_TYPES.ADD_COMBAT_LOG, payload: log }),\r\n    // Новое действие для сохранения истории боев\r\n    addCombatHistory: (combatResult) => {\r\n      console.log('Сохранение результата боя в историю:', combatResult);\r\n      dispatch({ type: ACTION_TYPES.ADD_COMBAT_HISTORY, payload: combatResult });\r\n    },\r\n    \r\n    // Действия для эффектов статуса\r\n    addStatusEffect: (effect) => dispatch({ type: ACTION_TYPES.ADD_STATUS_EFFECT, payload: effect }),\r\n    updateStatusEffect: (effect) => dispatch({ type: ACTION_TYPES.UPDATE_STATUS_EFFECT, payload: effect }),\r\n    removeStatusEffect: (effectId) => dispatch({ type: ACTION_TYPES.REMOVE_STATUS_EFFECT, payload: effectId }),\r\n    \r\n    // Действия для духовных питомцев\r\n    addSpiritPet: (pet) => dispatch({ type: ACTION_TYPES.ADD_SPIRIT_PET, payload: pet }),\r\n    removeSpiritPet: (petId) => dispatch({ type: ACTION_TYPES.REMOVE_SPIRIT_PET, payload: petId }),\r\n    updateSpiritPet: (data) => dispatch({ type: ACTION_TYPES.UPDATE_SPIRIT_PET, payload: data }),\r\n    setActiveSpiritPet: (petId) => dispatch({ type: ACTION_TYPES.SET_ACTIVE_SPIRIT_PET, payload: petId }),\r\n    feedSpiritPet: (data) => dispatch({ type: ACTION_TYPES.FEED_SPIRIT_PET, payload: data }),\r\n    trainSpiritPet: (data) => dispatch({ type: ACTION_TYPES.TRAIN_SPIRIT_PET, payload: data }),\r\n    usePetAbility: (data) => dispatch({ type: ACTION_TYPES.USE_PET_ABILITY, payload: data }),\r\n    removeFleePet: (petId) => dispatch({ type: ACTION_TYPES.REMOVE_FLEEING_PET, payload: petId }),\r\n    updatePetsState: () => dispatch({ type: ACTION_TYPES.UPDATE_PETS_STATE }),\r\n    \r\n    // Действие для применения бонусов от экипировки\r\n    applyEquipmentBonuses: (equippedItems) => {\r\n      console.log('===== ПРИМЕНЕНИЕ БОНУСОВ ЭКИПИРОВКИ =====');\r\n      console.log('Запрос на применение бонусов от экипировки:', equippedItems);\r\n      \r\n      // Проверяем, есть ли предметы для применения бонусов\r\n      if (!equippedItems || typeof equippedItems !== 'object') {\r\n        console.error('Ошибка: некорректные данные equippedItems', equippedItems);\r\n        return;\r\n      }\r\n      \r\n      // Фильтруем null и undefined значения для безопасности\r\n      const validEquippedItems = {};\r\n      Object.entries(equippedItems).forEach(([key, item]) => {\r\n        if (item) {\r\n          validEquippedItems[key] = item;\r\n          \r\n          // Проверяем наличие предрассчитанных бонусов и получаем их если возможно\r\n          if (!item.calculatedBonuses && item.itemId) {\r\n            try {\r\n              // Попытка получить предрассчитанные бонусы из equipment-items.js\r\n              const { getEquipmentItemById } = require('../data/equipment-items');\r\n              const detailedItem = getEquipmentItemById(parseInt(item.itemId));\r\n              if (detailedItem && detailedItem.calculatedBonuses) {\r\n                console.log(`🔍 Получены предрассчитанные бонусы для предмета ${item.name} (ID: ${item.itemId})`);\r\n                validEquippedItems[key] = {\r\n                  ...item,\r\n                  calculatedBonuses: detailedItem.calculatedBonuses\r\n                };\r\n              }\r\n            } catch (error) {\r\n              console.error(`❌ Ошибка при получении детальной информации о предмете ${item.name}:`, error);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      \r\n      console.log('Отправка экипировки для применения бонусов:', validEquippedItems);\r\n      \r\n      // Используем мгновенное обновление для лучшей синхронизации \r\n      // (незамедлительно вызывает редюсер)\r\n      dispatchBase({ \r\n        type: ACTION_TYPES.APPLY_EQUIPMENT_BONUSES, \r\n        payload: validEquippedItems \r\n      });\r\n      \r\n      // Для отладки показываем обновленные бонусы\r\n      setTimeout(() => {\r\n        console.log('🔄 Обновленные бонусы:', state.player.equipmentBonuses);\r\n      }, 100);\r\n    },\r\n    \r\n    // Действие для обновления отношений с персонажами\r\n    updateRelationship: (character) => {\r\n      console.log('Обновление отношений с персонажем:', character);\r\n      \r\n      if (!character || !character.id || !character.name || character.level === undefined) {\r\n        console.error('Ошибка: некорректные данные персонажа', character);\r\n        return;\r\n      }\r\n      \r\n      // Используем централизованную функцию синхронизации для обновления\r\n      // сразу и социальных отношений, и лояльности в секте\r\n      dispatch({ \r\n        type: ACTION_TYPES.UPDATE_RELATIONSHIP_AND_LOYALTY, \r\n        payload: {\r\n          name: character.name,\r\n          value: character.level\r\n        }\r\n      });\r\n      \r\n      // После обновления отношений, синхронизируем массив friends\r\n      try {\r\n        setTimeout(() => {\r\n          if (state.player && state.player.social) {\r\n            let relationships = state.player.social.relationships || [];\r\n            \r\n            // Проверка, что relationships - это массив\r\n            if (!Array.isArray(relationships)) {\r\n              console.warn('Отношения не являются массивом, преобразуем их:', relationships);\r\n              relationships = typeof relationships === 'object' && relationships !== null \r\n                ? Object.values(relationships) \r\n                : [];\r\n            }\r\n            \r\n            // Создаем массив friends из отношений с уровнем >= 75\r\n            let friends = [];\r\n            try {\r\n              friends = relationships\r\n                .filter(relation => relation && typeof relation === 'object' && typeof relation.level === 'number' && relation.level >= 75)\r\n                .map(relation => relation.id);\r\n            } catch (filterError) {\r\n              console.error('Ошибка при фильтрации отношений для друзей:', filterError);\r\n              // Ручная фильтрация в случае ошибки\r\n              friends = [];\r\n              for (let i = 0; i < relationships.length; i++) {\r\n                const relation = relationships[i];\r\n                if (relation && typeof relation === 'object' && typeof relation.level === 'number' && relation.level >= 75) {\r\n                  friends.push(relation.id);\r\n                }\r\n              }\r\n            }\r\n            \r\n            // Обновляем массив friends\r\n            if (friends.length > 0) {\r\n              console.log('👫 Автоматическое обновление списка друзей:', friends);\r\n              dispatch({\r\n                type: 'UPDATE_SOCIAL_FRIENDS',\r\n                payload: friends\r\n              });\r\n              \r\n              // Также проверяем достижение \"Социальные связи\"\r\n              actions.checkAchievements(['ach8']);\r\n            }\r\n          }\r\n        }, 100);\r\n      } catch (error) {\r\n        console.error('Ошибка при синхронизации друзей:', error);\r\n      }\r\n    },\r\n    \r\n    // Действия для сект\r\n    loadUserSect: async () => {\r\n      try {\r\n        // Получаем информацию о секте пользователя\r\n        const sectData = await sectService.getUserSect(state.player.id);\r\n        \r\n        if (sectData) {\r\n          // Проверяем формат benefits в sectData и преобразуем при необходимости\r\n          if (sectData.benefits && !Array.isArray(sectData.benefits)) {\r\n            console.warn('Бонусы секты не в формате массива, преобразуем в массив');\r\n            const benefitsObj = sectData.benefits;\r\n            sectData.benefits = [\r\n              {type: 'cultivation_speed', modifier: Math.round((benefitsObj.cultivationSpeedBonus || 0) * 100)},\r\n              {type: 'resource_gathering', modifier: Math.round((benefitsObj.resourceGatheringBonus || 0) * 100)},\r\n              {type: 'energy_regen', modifier: benefitsObj.energyRegenBonus || 0},\r\n              {type: 'technique_discount', modifier: Math.round((benefitsObj.techniqueDiscountPercent || 0) * 100)},\r\n              {type: 'max_energy', modifier: benefitsObj.maxEnergyBonus || 0}\r\n            ];\r\n          }\r\n          \r\n          // Если пользователь состоит в секте, загружаем информацию с преобразованными бонусами\r\n          dispatch({ type: ACTION_TYPES.SET_SECT, payload: sectData });\r\n          \r\n          // Загружаем бонусы от секты через отдельный метод\r\n          const benefits = await sectService.getSectBenefits(state.player.id);\r\n          \r\n          // Бонусы уже должны быть в формате массива после обновления sect-service.js\r\n          // но на всякий случай проверяем формат и преобразуем, если нужно\r\n          let processedBenefits = benefits;\r\n          if (benefits && !Array.isArray(benefits)) {\r\n            console.warn('Полученные бонусы не в формате массива, преобразуем');\r\n            const benefitsObj = benefits;\r\n            processedBenefits = [\r\n              {type: 'cultivation_speed', modifier: Math.round((benefitsObj.cultivationSpeedBonus || 0) * 100)},\r\n              {type: 'resource_gathering', modifier: Math.round((benefitsObj.resourceGatheringBonus || 0) * 100)},\r\n              {type: 'energy_regen', modifier: benefitsObj.energyRegenBonus || 0},\r\n              {type: 'technique_discount', modifier: Math.round((benefitsObj.techniqueDiscountPercent || 0) * 100)},\r\n              {type: 'max_energy', modifier: benefitsObj.maxEnergyBonus || 0}\r\n            ];\r\n          }\r\n          \r\n          // Отправляем обработанные бонусы\r\n          dispatch({ type: ACTION_TYPES.UPDATE_SECT_BENEFITS, payload: processedBenefits });\r\n          \r\n          // Загружаем ранг пользователя в секте\r\n          const rankInfo = await sectService.getUserSectRank(state.player.id);\r\n          dispatch({ type: ACTION_TYPES.UPDATE_SECT_RANK, payload: rankInfo });\r\n        }\r\n        \r\n        return sectData;\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке информации о секте:', error);\r\n        dispatch({ \r\n          type: ACTION_TYPES.ADD_NOTIFICATION, \r\n          payload: { \r\n            message: 'Не удалось загрузить информацию о секте', \r\n            type: 'error' \r\n          } \r\n        });\r\n        return null;\r\n      }\r\n    },\r\n    \r\n    contributeToSect: async (userId, sectId, energyAmount) => {\r\n      try {\r\n        // Вносим вклад в секту\r\n        const result = await sectService.contributeToSect(userId, sectId, energyAmount);\r\n        \r\n        // Обновляем энергию пользователя\r\n        dispatch({ \r\n          type: ACTION_TYPES.UPDATE_CULTIVATION, \r\n          payload: { energy: state.player.cultivation.energy - energyAmount } \r\n        });\r\n        \r\n        // Обновляем информацию о секте\r\n        dispatch({ \r\n          type: `${ACTION_TYPES.CONTRIBUTE_TO_SECT}_SUCCESS`, \r\n          payload: result \r\n        });\r\n        \r\n        return result;\r\n      } catch (error) {\r\n        console.error('Ошибка при внесении вклада в секту:', error);\r\n        dispatch({ \r\n          type: `${ACTION_TYPES.CONTRIBUTE_TO_SECT}_ERROR`, \r\n          payload: error.message \r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    trainSectMember: async (userId, memberId, duration) => {\r\n      try {\r\n        // Тренируем члена секты\r\n        const result = await sectService.trainWithMember(userId, memberId, duration);\r\n        \r\n        // Обновляем энергию пользователя\r\n        dispatch({ \r\n          type: ACTION_TYPES.UPDATE_CULTIVATION, \r\n          payload: { \r\n            energy: state.player.cultivation.energy - result.energySpent,\r\n            experience: state.player.cultivation.experience + result.userGainedXP\r\n          } \r\n        });\r\n        \r\n        // Находим текущее значение лояльности\r\n        const sectData = state.sect?.sect;\r\n        let currentLoyalty = 0;\r\n        \r\n        if (sectData && Array.isArray(sectData.members)) {\r\n          const member = sectData.members.find(m => m.id === memberId);\r\n          if (member) {\r\n            currentLoyalty = member.loyalty || 0;\r\n          }\r\n        }\r\n        \r\n        // Ограничиваем прирост лояльности до максимального значения 10\r\n        const loyaltyIncrease = result.memberLoyalty - currentLoyalty;\r\n        const cappedLoyaltyIncrease = Math.min(10, loyaltyIncrease);\r\n        const cappedLoyalty = currentLoyalty + cappedLoyaltyIncrease;\r\n        \r\n        console.log(`✅ Лояльность ограничена: Текущая=${currentLoyalty}, Прирост=${loyaltyIncrease}, Макс.прирост=10, Новая=${cappedLoyalty}`);\r\n        \r\n        // Обновляем информацию о члене секты с ограниченной лояльностью\r\n        dispatch({ \r\n          type: `${ACTION_TYPES.TRAIN_SECT_MEMBER}_SUCCESS`, \r\n          payload: {\r\n            memberId,\r\n            memberLevel: result.memberLevel,\r\n            memberExperience: result.memberExperience,\r\n            memberRequiredExperience: result.memberRequiredExperience,\r\n            memberRole: result.memberRole,\r\n            memberLoyalty: cappedLoyalty // Используем ограниченное значение лояльности\r\n          } \r\n        });\r\n        \r\n        // Синхронизируем лояльность секты с социальными отношениями\r\n        // Находим члена секты в данных секты\r\n        if (sectData && Array.isArray(sectData.members)) {\r\n          const member = sectData.members.find(m => m.id === memberId);\r\n          if (member && member.name) {\r\n            console.log(`🔄 Синхронизация лояльности -> отношения для ${member.name}: ${cappedLoyalty}`);\r\n            // Используем централизованную функцию синхронизации с ограниченным значением лояльности\r\n            dispatch({ \r\n              type: ACTION_TYPES.UPDATE_RELATIONSHIP_AND_LOYALTY, \r\n              payload: {\r\n                name: member.name,\r\n                value: cappedLoyalty\r\n              }\r\n            });\r\n          }\r\n        }\r\n        \r\n        // Возвращаем результат с ограниченной лояльностью\r\n        return {\r\n          ...result,\r\n          memberLoyalty: cappedLoyalty\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка при тренировке члена секты:', error);\r\n        dispatch({ \r\n          type: `${ACTION_TYPES.TRAIN_SECT_MEMBER}_ERROR`, \r\n          payload: error.message \r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    joinSect: async (userId, sectId) => {\r\n      try {\r\n        // Присоединяемся к секте\r\n        const result = await sectService.joinSect(userId, sectId);\r\n        \r\n        // Загружаем информацию о секте\r\n        const sectData = await sectService.getSectById(sectId);\r\n        \r\n        // Обновляем информацию о секте\r\n        dispatch({ type: ACTION_TYPES.JOIN_SECT, payload: sectData });\r\n        \r\n        return result;\r\n      } catch (error) {\r\n        console.error('Ошибка при присоединении к секте:', error);\r\n        dispatch({ \r\n          type: ACTION_TYPES.ADD_NOTIFICATION, \r\n          payload: { \r\n            message: 'Не удалось присоединиться к секте: ' + error.message, \r\n            type: 'error' \r\n          } \r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    leaveSect: async (userId) => {\r\n      try {\r\n        // В реальной реализации здесь должен быть метод для выхода из секты\r\n        // await sectService.leaveSect(userId);\r\n        \r\n        // Очищаем информацию о секте\r\n        dispatch({ type: ACTION_TYPES.LEAVE_SECT });\r\n        \r\n        return true;\r\n      } catch (error) {\r\n        console.error('Ошибка при выходе из секты:', error);\r\n        dispatch({ \r\n          type: ACTION_TYPES.ADD_NOTIFICATION, \r\n          payload: { \r\n            message: 'Не удалось выйти из секты: ' + error.message, \r\n            type: 'error' \r\n          } \r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    // Для выбора члена секты для взаимодействия\r\n    selectSectMember: (member) => {\r\n      dispatch({ type: 'SELECT_SECT_MEMBER', payload: member });\r\n    }\r\n  };\r\n  \r\n  // Экспортируем actions в глобальную переменную\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      // Обновляем actions в глобальном контексте, если контекст уже создан\r\n      if (window.__GAME_CONTEXT__) {\r\n        window.__GAME_CONTEXT__.actions = actions;\r\n      }\r\n      \r\n      // Также экспортируем dispatch отдельно для прямого доступа\r\n      window.__GAME_DISPATCH__ = dispatch;\r\n      \r\n      // Создаём глобальную функцию для принудительного обновления состояния игры\r\n      window.refreshGameState = () => {\r\n        console.log('🔄 Принудительное обновление состояния игры');\r\n        try {\r\n          const stateUpdateEvent = new CustomEvent('game-state-updated', { \r\n            detail: { timestamp: Date.now(), forced: true } \r\n          });\r\n          window.dispatchEvent(stateUpdateEvent);\r\n          \r\n          // Возвращаем текущее состояние для удобства\r\n          return window.__GAME_STATE__;\r\n        } catch (error) {\r\n          console.error('Ошибка при обновлении состояния:', error);\r\n          return null;\r\n        }\r\n      };\r\n    }\r\n  }, [actions, dispatch]); // Выполняем при изменении actions или dispatch\r\n  \r\n  // Возвращаем провайдер с состоянием и действиями\r\n  return (\r\n    <GameContext.Provider value={{ state, actions }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n","import { Sect, SectMember } from '../models';\r\nimport CultivationService from './cultivation-service';\r\nimport ResourceService from './resource-service';\r\nimport { updateRelationshipAndLoyalty } from '../utils/sectRelationshipSyncer';\r\n\r\n/**\r\n * Сервис для работы с сектами и их членами\r\n */\r\nexport default class SectService {\r\n  constructor(models) {\r\n    this.models = models;\r\n    this.cultivationService = new CultivationService(models);\r\n    this.resourceService = new ResourceService(models);\r\n  }\r\n\r\n  /**\r\n   * Получает информацию о секте по ID\r\n   * @param {number} sectId ID секты\r\n   * @returns {Promise<Sect>} Информация о секте\r\n   */\r\n  async getSectById(sectId) {\r\n    try {\r\n      let sect;\r\n      \r\n      try {\r\n        sect = await this.models.Sect.findByPk(sectId, {\r\n          include: [{\r\n            model: this.models.SectMember,\r\n            as: 'members'\r\n          }]\r\n        });\r\n      } catch (error) {\r\n        console.warn('Ошибка поиска секты в БД, используем мок-данные:', error);\r\n      }\r\n      \r\n      // Если секту не нашли, но мы в браузере, можем вернуть демо-секту\r\n      if (!sect && typeof window !== 'undefined') {\r\n        // Проверяем, есть ли сохраненные данные о секте в localStorage\r\n        const savedSectData = localStorage.getItem(`sect_${sectId}`);\r\n        let level = 1;\r\n        let experience = 0;\r\n        let rank = 'Начальная';\r\n        let requiredExperience = 100;\r\n        \r\n        // Если есть сохраненные данные, используем их\r\n        if (savedSectData) {\r\n          try {\r\n            const parsedData = JSON.parse(savedSectData);\r\n            level = parsedData.level || 1;\r\n            experience = parsedData.experience || 0;\r\n            rank = parsedData.rank || 'Начальная';\r\n            requiredExperience = parsedData.requiredExperience || 100;\r\n          } catch (e) {\r\n            console.error('Ошибка при чтении данных секты из localStorage:', e);\r\n          }\r\n        }\r\n        \r\n        // Создаем демо-секту, подобную той, что у нас в getUserSect\r\n        sect = {\r\n          id: sectId,\r\n          name: 'Секта Восходящего Облака',\r\n          rank: rank,\r\n          level: level,\r\n          experience: experience,\r\n          requiredExperience: requiredExperience,\r\n          influence: 100,\r\n          resources: 50,\r\n          territories: 1,\r\n          benefits: [\r\n            {type: 'cultivation_speed', modifier: 5},\r\n            {type: 'resource_gathering', modifier: 3},\r\n            {type: 'energy_regen', modifier: 1},\r\n            {type: 'technique_discount', modifier: 2},\r\n            {type: 'max_energy', modifier: 10}\r\n          ],\r\n          members: [\r\n            { id: 1, name: 'Мастер Ли', role: 'Глава секты', cultivationLevel: 30, level: 8, experience: 200, requiredExperience: 300, loyalty: 100 },\r\n            { id: 2, name: 'Старейшина Чжан', role: 'Старейшина', cultivationLevel: 25, level: 6, experience: 150, requiredExperience: 250, loyalty: 95 },\r\n            { id: 3, name: 'Ученик Ван', role: 'Внутренний ученик', cultivationLevel: 15, level: 4, experience: 80, requiredExperience: 150, loyalty: 70 },\r\n            { id: 4, name: 'Ученица Мэй', role: 'Внутренний ученик', cultivationLevel: 12, level: 3, experience: 50, requiredExperience: 120, loyalty: 65 },\r\n            { id: 5, name: 'Ученик Чен', role: 'Внешний ученик', cultivationLevel: 8, level: 2, experience: 30, requiredExperience: 100, loyalty: 40 }\r\n          ],\r\n          // Методы для мок-объекта\r\n          calculateRequiredExperience: function() {\r\n            this.requiredExperience = Math.floor(100 * Math.pow(1.2, this.level - 1));\r\n            return this.requiredExperience;\r\n          },\r\n          updateRank: function() {\r\n            if (this.level >= 10) this.rank = 'Высшая';\r\n            else if (this.level >= 5) this.rank = 'Средняя';\r\n            else this.rank = 'Начальная';\r\n            return this.rank;\r\n          },\r\n          updateBenefits: function() {\r\n            this.benefits = [\r\n              {type: 'cultivation_speed', modifier: Math.round((0.05 + (this.level * 0.01)) * 100)},\r\n              {type: 'resource_gathering', modifier: Math.round((0.03 + (this.level * 0.01)) * 100)},\r\n              {type: 'energy_regen', modifier: 1 + Math.floor(this.level / 2)},\r\n              {type: 'technique_discount', modifier: Math.round((0.02 + (this.level * 0.005)) * 100)},\r\n              {type: 'max_energy', modifier: 10 + (this.level * 5)}\r\n            ];\r\n            return this.benefits;\r\n          },\r\n          save: async function() {\r\n            return this;\r\n          }\r\n        };\r\n        \r\n        return sect;\r\n      }\r\n      \r\n      if (!sect) {\r\n        throw new Error('Секта не найдена');\r\n      }\r\n      \r\n      return sect;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении секты:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает информацию о секте игрока\r\n   * @param {number} userId ID пользователя\r\n   * @returns {Promise<Sect>} Информация о секте\r\n   */\r\n  async getUserSect(userId) {\r\n    try {\r\n      let sectMember;\r\n      \r\n      try {\r\n        // Находим члена секты связанного с пользователем\r\n        sectMember = await this.models.SectMember.findOne({\r\n          where: { userId },\r\n          include: [{\r\n            model: this.models.Sect,\r\n            as: 'sect',\r\n            include: [{\r\n              model: this.models.SectMember,\r\n              as: 'members'\r\n            }]\r\n          }]\r\n        });\r\n      } catch (error) {\r\n        console.warn('Ошибка поиска члена секты в БД, используем мок-данные:', error);\r\n      }\r\n      \r\n      if (!sectMember || !sectMember.sect) {\r\n        // В режиме браузера, возвращаем демо-секту\r\n        if (typeof window !== 'undefined') {\r\n          // Проверяем, есть ли сохраненные данные о секте в localStorage\r\n          const savedSectData = localStorage.getItem(`sect_1`); // используем фиксированный ID 1 для демо-секты\r\n          let level = 1;\r\n          let experience = 0;\r\n          let rank = 'Начальная';\r\n          let requiredExperience = 100;\r\n          \r\n          // Если есть сохраненные данные, используем их\r\n          if (savedSectData) {\r\n            try {\r\n              const parsedData = JSON.parse(savedSectData);\r\n              level = parsedData.level || 1;\r\n              experience = parsedData.experience || 0;\r\n              rank = parsedData.rank || 'Начальная';\r\n              requiredExperience = parsedData.requiredExperience || 100;\r\n            } catch (e) {\r\n              console.error('Ошибка при чтении данных секты из localStorage:', e);\r\n            }\r\n          }\r\n          \r\n          // Создаем демо-секту, подобную defaultSect в SectTab.js\r\n          const demoSect = {\r\n            id: 1,\r\n            name: 'Секта Восходящего Облака',\r\n            rank: rank,\r\n            level: level,\r\n            experience: experience,\r\n            requiredExperience: requiredExperience,\r\n            influence: 100,\r\n            resources: 50,\r\n            territories: 1,\r\n            benefits: [\r\n              {type: 'cultivation_speed', modifier: 5},\r\n              {type: 'resource_gathering', modifier: 3},\r\n              {type: 'energy_regen', modifier: 1},\r\n              {type: 'technique_discount', modifier: 2},\r\n              {type: 'max_energy', modifier: 10}\r\n            ],\r\n            members: [\r\n              { id: 1, name: 'Мастер Ли', role: 'Глава секты', cultivationLevel: 30, level: 8, experience: 200, requiredExperience: 300, loyalty: 100 },\r\n              { id: 2, name: 'Старейшина Чжан', role: 'Старейшина', cultivationLevel: 25, level: 6, experience: 150, requiredExperience: 250, loyalty: 95 },\r\n              { id: 3, name: 'Ученик Ван', role: 'Внутренний ученик', cultivationLevel: 15, level: 4, experience: 80, requiredExperience: 150, loyalty: 70 },\r\n              { id: 4, name: 'Ученица Мэй', role: 'Внутренний ученик', cultivationLevel: 12, level: 3, experience: 50, requiredExperience: 120, loyalty: 65 },\r\n              { id: 5, name: 'Ученик Чен', role: 'Внешний ученик', cultivationLevel: 8, level: 2, experience: 30, requiredExperience: 100, loyalty: 40 }\r\n            ]\r\n          };\r\n          \r\n          // Добавляем методы для мок-объекта\r\n          demoSect.calculateRequiredExperience = function() {\r\n            this.requiredExperience = Math.floor(100 * Math.pow(1.2, this.level - 1));\r\n            return this.requiredExperience;\r\n          };\r\n          \r\n          demoSect.updateRank = function() {\r\n            if (this.level >= 10) this.rank = 'Высшая';\r\n            else if (this.level >= 5) this.rank = 'Средняя';\r\n            else this.rank = 'Начальная';\r\n            return this.rank;\r\n          };\r\n          \r\n          demoSect.updateBenefits = function() {\r\n            this.benefits = [\r\n              {type: 'cultivation_speed', modifier: Math.round((0.05 + (this.level * 0.01)) * 100)},\r\n              {type: 'resource_gathering', modifier: Math.round((0.03 + (this.level * 0.01)) * 100)},\r\n              {type: 'energy_regen', modifier: 1 + Math.floor(this.level / 2)},\r\n              {type: 'technique_discount', modifier: Math.round((0.02 + (this.level * 0.005)) * 100)},\r\n              {type: 'max_energy', modifier: 10 + (this.level * 5)}\r\n            ];\r\n            return this.benefits;\r\n          };\r\n          \r\n          demoSect.save = async function() {\r\n            return this;\r\n          };\r\n          \r\n          return demoSect;\r\n        }\r\n        \r\n        return null; // Пользователь не состоит в секте\r\n      }\r\n      \r\n      return sectMember.sect;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении секты пользователя:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Создает секту с пользователем в качестве лидера\r\n   * @param {number} userId ID пользователя\r\n   * @param {string} sectName Название секты\r\n   * @returns {Promise<Sect>} Созданная секта\r\n   */\r\n  async createSect(userId, sectName) {\r\n    try {\r\n      // Проверяем, состоит ли пользователь уже в секте\r\n      const userSect = await this.getUserSect(userId);\r\n      if (userSect) {\r\n        throw new Error('Пользователь уже состоит в секте');\r\n      }\r\n      \r\n      // Получаем информацию о пользователе\r\n      const user = await this.models.User.findByPk(userId);\r\n      if (!user) {\r\n        throw new Error('Пользователь не найден');\r\n      }\r\n      \r\n      // Создаем секту\r\n      const sect = await this.models.Sect.create({\r\n        name: sectName,\r\n        leaderId: userId\r\n      });\r\n      \r\n      // Создаем члена секты для лидера\r\n      await this.models.SectMember.create({\r\n        name: user.name || 'Лидер секты',\r\n        role: 'Глава секты',\r\n        userId,\r\n        sectId: sect.id,\r\n        cultivationLevel: user.cultivation?.level || 1,\r\n      });\r\n      \r\n      // Обновляем данные секты с членами\r\n      return await this.getSectById(sect.id);\r\n    } catch (error) {\r\n      console.error('Ошибка при создании секты:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Присоединяет пользователя к секте\r\n   * @param {number} userId ID пользователя\r\n   * @param {number} sectId ID секты\r\n   * @returns {Promise<SectMember>} Созданный член секты\r\n   */\r\n  async joinSect(userId, sectId) {\r\n    try {\r\n      // Проверяем, состоит ли пользователь уже в секте\r\n      const userSect = await this.getUserSect(userId);\r\n      if (userSect) {\r\n        throw new Error('Пользователь уже состоит в секте');\r\n      }\r\n      \r\n      // Получаем информацию о пользователе\r\n      const user = await this.models.User.findByPk(userId);\r\n      if (!user) {\r\n        throw new Error('Пользователь не найден');\r\n      }\r\n      \r\n      // Проверяем существование секты\r\n      const sect = await this.getSectById(sectId);\r\n      if (!sect) {\r\n        throw new Error('Секта не найдена');\r\n      }\r\n      \r\n      // Создаем члена секты для пользователя\r\n      const sectMember = await this.models.SectMember.create({\r\n        name: user.name || 'Новый член секты',\r\n        role: 'Внешний ученик',\r\n        userId,\r\n        sectId,\r\n        cultivationLevel: user.cultivation?.level || 1,\r\n      });\r\n      \r\n      return sectMember;\r\n    } catch (error) {\r\n      console.error('Ошибка при присоединении к секте:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Вносит вклад в секту, повышая её уровень\r\n   * @param {number} userId ID пользователя\r\n   * @param {number} sectId ID секты\r\n   * @param {number} energyAmount Количество энергии для вклада\r\n   * @returns {Promise<Object>} Результат вклада\r\n   */\r\n  async contributeToSect(userId, sectId, energyAmount) {\r\n    try {\r\n      // Получаем секту\r\n      const sect = await this.getSectById(sectId);\r\n      if (!sect) {\r\n        throw new Error('Секта не найдена');\r\n      }\r\n      \r\n      // Проверяем, является ли пользователь членом секты\r\n      let sectMember;\r\n      \r\n      try {\r\n        sectMember = await this.models.SectMember.findOne({\r\n          where: { \r\n            userId,\r\n            sectId\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.warn('Ошибка поиска члена секты в БД при внесении вклада, используем мок-данные:', error);\r\n      }\r\n      \r\n      // Если члена секты не найдено, и мы в браузере, создаем мок-члена\r\n      if (!sectMember && typeof window !== 'undefined') {\r\n        // Предполагаем, что пользователь является членом этой секты\r\n        sectMember = {\r\n          userId,\r\n          sectId\r\n        };\r\n      }\r\n      \r\n      if (!sectMember) {\r\n        throw new Error('Пользователь не является членом этой секты');\r\n      }\r\n      \r\n      // Получаем данные культивации пользователя\r\n      const cultivation = await CultivationService.getCultivationProgress(userId);\r\n      \r\n      // Проверяем, достаточно ли у пользователя энергии\r\n      if (cultivation.energy < energyAmount) {\r\n        throw new Error('Недостаточно энергии');\r\n      }\r\n      \r\n      // Вычитаем энергию у пользователя\r\n      cultivation.energy -= energyAmount;\r\n      await CultivationService.updateCultivationProgress(userId, { energy: cultivation.energy });\r\n      \r\n      // Добавляем опыт и влияние секте\r\n      const contributionXP = energyAmount * 5; // 1 единица энергии = 5 единиц опыта секты\r\n      const influenceGain = Math.floor(energyAmount / 2); // 1 единица энергии = 0.5 единиц влияния\r\n      \r\n      sect.experience += contributionXP;\r\n      sect.influence += influenceGain;\r\n      \r\n      // Проверяем возможность повышения уровня\r\n      const oldLevel = sect.level;\r\n      \r\n      // Форсированно увеличиваем уровень секты, если уровень всё еще 1 или 2\r\n      if (sect.level <= 2) {\r\n        sect.level += 1;\r\n        sect.experience = 0;\r\n        sect.calculateRequiredExperience();\r\n        sect.updateRank();\r\n        sect.updateBenefits();\r\n      } else {\r\n        // Обычный процесс повышения уровня для более высоких уровней\r\n        while (sect.experience >= sect.requiredExperience) {\r\n          sect.level += 1;\r\n          sect.experience -= sect.requiredExperience;\r\n          sect.calculateRequiredExperience();\r\n          sect.updateRank();\r\n          sect.updateBenefits();\r\n        }\r\n      }\r\n      \r\n      await sect.save();\r\n      \r\n      // В режиме браузера, сохраняем обновленные данные в localStorage для сохранения прогресса\r\n      if (typeof window !== 'undefined') {\r\n        try {\r\n          localStorage.setItem(`sect_${sectId}`, JSON.stringify({\r\n            level: sect.level,\r\n            experience: sect.experience,\r\n            rank: sect.rank,\r\n            requiredExperience: sect.requiredExperience\r\n          }));\r\n        } catch (e) {\r\n          console.error('Ошибка при сохранении данных секты в localStorage:', e);\r\n        }\r\n      }\r\n      \r\n      // Возвращаем обновленную информацию о секте и результаты вклада\r\n      return {\r\n        leveledUp: sect.level > oldLevel,\r\n        oldLevel,\r\n        newLevel: sect.level,\r\n        sectRank: sect.rank,\r\n        sectExperience: sect.experience,\r\n        sectRequiredExperience: sect.requiredExperience,\r\n        sectInfluence: sect.influence,\r\n        influenceGain,\r\n        message: `Вклад успешно внесен! Секта получила ${contributionXP} опыта и ${influenceGain} влияния.`\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при внесении вклада в секту:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Тренирует члена секты, повышая его уровень\r\n   * @param {number} userId ID тренирующего пользователя\r\n   * @param {number} memberId ID тренируемого члена секты\r\n   * @param {number} duration Продолжительность тренировки (влияет на затраты энергии и получаемый опыт)\r\n   * @returns {Promise<Object>} Результат тренировки\r\n   */\r\n  async trainWithMember(userId, memberId, duration) {\r\n    try {\r\n      // Получаем тренируемого члена секты\r\n      let member;\r\n      \r\n      try {\r\n        member = await this.models.SectMember.findByPk(memberId);\r\n      } catch (error) {\r\n        console.warn('Ошибка поиска члена секты в БД, используем мок-данные:', error);\r\n      }\r\n      \r\n      // Если члена не найдено в БД, пробуем получить из мок-данных или localStorage\r\n      if (!member) {\r\n        // Сначала проверяем, есть ли сохраненные данные в localStorage\r\n        let savedMemberData = null;\r\n        if (typeof window !== 'undefined') {\r\n          try {\r\n            const savedData = localStorage.getItem(`sect_member_${memberId}`);\r\n            if (savedData) {\r\n              savedMemberData = JSON.parse(savedData);\r\n              console.log(`Загружены данные члена секты из localStorage:`, savedMemberData);\r\n            }\r\n          } catch (e) {\r\n            console.error('Ошибка при загрузке данных члена секты из localStorage:', e);\r\n          }\r\n        }\r\n        \r\n        // Затем пробуем получить из секты\r\n        const sect = await this.getUserSect(userId);\r\n        if (sect && sect.members) {\r\n          member = sect.members.find(m => m.id === memberId);\r\n          \r\n          // Если есть сохраненные данные в localStorage, обновляем ими найденного члена\r\n          if (savedMemberData && member) {\r\n            member = {\r\n              ...member,\r\n              level: savedMemberData.level || member.level || 1,\r\n              experience: savedMemberData.experience || member.experience || 0,\r\n              requiredExperience: savedMemberData.requiredExperience || member.requiredExperience || 100,\r\n              loyalty: savedMemberData.loyalty || member.loyalty || 50\r\n            };\r\n          }\r\n          \r\n          // Добавляем необходимые методы мок-объекту\r\n          if (member) {\r\n            member.canTrainToday = () => true;\r\n            member.addExperience = (amount) => {\r\n              console.log(`[DEBUG] Добавление опыта члену ${member.name}. Текущий опыт:`, member.experience, \"Добавляем:\", amount);\r\n              \r\n              // Проверяем, что experience - число, иначе устанавливаем в 0\r\n              if (typeof member.experience !== 'number') {\r\n                console.log(`[DEBUG] Опыт не является числом, сбрасываем в 0`);\r\n                member.experience = 0;\r\n              }\r\n              \r\n              member.experience = (member.experience || 0) + amount;\r\n              const oldLevel = member.level || 1;\r\n              const requiredExp = member.requiredExperience || 100;\r\n              let leveledUp = false;\r\n              \r\n              console.log(`[DEBUG] После добавления: Опыт=${member.experience}, Требуется=${requiredExp}`);\r\n              \r\n              if (member.experience >= requiredExp) {\r\n                member.level = (member.level || 1) + 1;\r\n                member.experience -= requiredExp;\r\n                member.requiredExperience = Math.floor(requiredExp * 1.2);\r\n                leveledUp = true;\r\n                console.log(`[DEBUG] Повышение уровня! Новый уровень=${member.level}, Остаток опыта=${member.experience}`);\r\n              }\r\n              \r\n              return {\r\n                leveledUp,\r\n                oldLevel,\r\n                newLevel: member.level\r\n              };\r\n            };\r\n            member.updateRole = () => member.role;\r\n            member.save = async () => {\r\n              // Сохраняем данные в localStorage\r\n              if (typeof window !== 'undefined') {\r\n                try {\r\n                  const dataToSave = {\r\n                    id: member.id,\r\n                    level: member.level,\r\n                    experience: member.experience,\r\n                    requiredExperience: member.requiredExperience,\r\n                    loyalty: member.loyalty,\r\n                    role: member.role\r\n                  };\r\n                  \r\n                  console.log(`[DEBUG] Сохраняем данные члена секты в localStorage:`, JSON.stringify(dataToSave));\r\n                  localStorage.setItem(`sect_member_${memberId}`, JSON.stringify(dataToSave));\r\n                } catch (e) {\r\n                  console.error('Ошибка при сохранении данных члена секты в localStorage:', e);\r\n                }\r\n              }\r\n              return member;\r\n            };\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Если члена все равно не найдено, выбрасываем ошибку\r\n      if (!member) {\r\n        throw new Error('Член секты не найден');\r\n      }\r\n      \r\n      // Проверяем, можно ли тренироваться с этим членом сегодня\r\n      if (!member.canTrainToday()) {\r\n        throw new Error('С этим членом секты уже проводилась тренировка сегодня');\r\n      }\r\n      \r\n      // Получаем данные культивации тренирующего\r\n      const cultivation = await CultivationService.getCultivationProgress(userId);\r\n      \r\n      // Получаем информацию о тренирующем пользователе\r\n      let userMember;\r\n      \r\n      try {\r\n        userMember = await this.models.SectMember.findOne({\r\n          where: { userId, sectId: member.sectId }\r\n        });\r\n      } catch (error) {\r\n        console.warn('Ошибка поиска пользователя в БД, используем мок-данные:', error);\r\n      }\r\n      \r\n      // Если пользователя нет в БД, считаем его членом секты в режиме мок-данных\r\n      if (!userMember) {\r\n        const sect = await this.getUserSect(userId);\r\n        if (sect && sect.members) {\r\n          userMember = sect.members.find(m => m.userId === userId);\r\n        }\r\n        \r\n        // Если мы в браузере с тестовыми данными, создаем фиктивного члена секты для пользователя\r\n        if (!userMember && typeof window !== 'undefined') {\r\n          userMember = {\r\n            userId,\r\n            sectId: member.sectId\r\n          };\r\n        }\r\n      }\r\n      \r\n      if (!userMember) {\r\n        throw new Error('Пользователь не является членом этой секты');\r\n      }\r\n      \r\n      // Проверка энергии\r\n      const energyCost = duration * 5; // 5 единиц энергии за каждую единицу времени\r\n      if (cultivation.energy < energyCost) {\r\n        throw new Error('Недостаточно энергии для тренировки');\r\n      }\r\n      \r\n      // Вычитаем энергию\r\n      cultivation.energy -= energyCost;\r\n      await CultivationService.updateCultivationProgress(userId, { energy: cultivation.energy });\r\n      \r\n      // Вычисляем опыт для члена секты (зависит от уровня культивации тренирующего)\r\n      const memberXPGain = Math.floor(duration * 10 * (1 + cultivation.level / 10));\r\n      \r\n      // Обновляем дату последней тренировки\r\n      member.lastTrainingDate = new Date();\r\n      \r\n      // Добавляем опыт члену секты и проверяем повышение уровня\r\n      console.log(`[DEBUG] Начинаем тренировку с членом секты ${member.name}. Текущее состояние:`, \r\n        { уровень: member.level, опыт: member.experience, требуется: member.requiredExperience, лояльность: member.loyalty });\r\n      \r\n      const levelUpResult = member.addExperience(memberXPGain);\r\n      \r\n      // Увеличиваем лояльность члена секты (максимум +10 за тренировку)\r\n      // Уменьшаем коэффициент с 2 до 1, чтобы не давать слишком большие значения\r\n      const loyaltyIncrease = Math.min(10, Math.floor(duration));\r\n      const newLoyalty = Math.min(100, member.loyalty + loyaltyIncrease);\r\n      member.loyalty = newLoyalty;\r\n      \r\n      console.log(`[DEBUG] После тренировки:`, \r\n        { уровень: member.level, опыт: member.experience, требуется: member.requiredExperience, лояльность: member.loyalty });\r\n      \r\n      // Одновременно обновляем лояльность в sect.members.loyalty и в social.relationships\r\n      // для синхронизации обоих источников данных\r\n      if (typeof window !== 'undefined' && window.__gameContext) {\r\n        try {\r\n          const state = window.__gameContext.getState();\r\n          // Обновляем значение лояльности и в секте, и в социальных отношениях\r\n          window.__gameContext.dispatch({\r\n            type: 'UPDATE_RELATIONSHIP_AND_LOYALTY',\r\n            payload: {\r\n              name: member.name,\r\n              value: newLoyalty\r\n            }\r\n          });\r\n          console.log(`✅ Обновлена лояльность и социальные отношения для \"${member.name}\" до уровня ${newLoyalty}`);\r\n        } catch (error) {\r\n          console.warn('⚠️ Не удалось обновить социальные отношения:', error);\r\n        }\r\n      }\r\n      \r\n      // Обновляем роль если необходимо\r\n      member.updateRole();\r\n      \r\n      // Сохраняем изменения\r\n      await member.save();\r\n      \r\n      // Игрок также получает опыт культивации от тренировки\r\n      const userXPGain = Math.floor(duration * 5 * (1 + member.level / 20));\r\n      const userLevelBefore = cultivation.level;\r\n      \r\n      // Обновляем опыт игрока\r\n      cultivation.experience += userXPGain;\r\n      \r\n      // Проверяем возможность прорыва у игрока\r\n      let userLevelUp = false;\r\n      if (cultivation.experience >= cultivation.requiredExperience) {\r\n        // В реальной реализации здесь должна быть проверка возможности прорыва\r\n        // и процесс трибуляции из cultivation-service\r\n        userLevelUp = true;\r\n      }\r\n      \r\n      await CultivationService.updateCultivationProgress(userId, { \r\n        experience: cultivation.experience \r\n      });\r\n      \r\n      return {\r\n        memberName: member.name,\r\n        memberLevel: member.level,\r\n        memberExperience: member.experience,\r\n        memberRequiredExperience: member.requiredExperience,\r\n        memberLeveledUp: levelUpResult.leveledUp,\r\n        memberOldLevel: levelUpResult.oldLevel,\r\n        memberNewLevel: levelUpResult.newLevel,\r\n        memberRole: member.role,\r\n        memberLoyalty: member.loyalty,\r\n        userGainedXP: userXPGain,\r\n        userLevelUp,\r\n        userLevel: cultivation.level,\r\n        userLevelBefore,\r\n        energySpent: energyCost,\r\n        message: levelUpResult.leveledUp \r\n          ? `Тренировка успешна! ${member.name} получил ${memberXPGain} опыта и повысил уровень до ${member.level}!`\r\n          : `Тренировка успешна! ${member.name} получил ${memberXPGain} опыта и теперь имеет ${member.experience}/${member.requiredExperience} опыта.`\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при тренировке члена секты:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает преимущества, которые дает секта игроку\r\n   * @param {number} userId ID пользователя\r\n   * @returns {Promise<Object>} Бонусы от секты\r\n   */\r\n  async getSectBenefits(userId) {\r\n    try {\r\n      const sect = await this.getUserSect(userId);\r\n      if (!sect) {\r\n        return [\r\n          {type: 'cultivation_speed', modifier: 0},\r\n          {type: 'resource_gathering', modifier: 0},\r\n          {type: 'energy_regen', modifier: 0},\r\n          {type: 'technique_discount', modifier: 0},\r\n          {type: 'max_energy', modifier: 0}\r\n        ];\r\n      }\r\n      \r\n      // Убеждаемся, что benefits всегда массив\r\n      if (!Array.isArray(sect.benefits)) {\r\n        console.warn('Бонусы секты не являются массивом, конвертируем в массив');\r\n        // Конвертируем старый формат объекта в новый формат массива, если необходимо\r\n        return [\r\n          {type: 'cultivation_speed', modifier: Math.round((sect.benefits.cultivationSpeedBonus || 0) * 100)},\r\n          {type: 'resource_gathering', modifier: Math.round((sect.benefits.resourceGatheringBonus || 0) * 100)},\r\n          {type: 'energy_regen', modifier: sect.benefits.energyRegenBonus || 0},\r\n          {type: 'technique_discount', modifier: Math.round((sect.benefits.techniqueDiscountPercent || 0) * 100)},\r\n          {type: 'max_energy', modifier: sect.benefits.maxEnergyBonus || 0}\r\n        ];\r\n      }\r\n      \r\n      return sect.benefits;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении бонусов секты:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получает ранг пользователя в секте и связанные с ним привилегии\r\n   * @param {number} userId ID пользователя\r\n   * @returns {Promise<Object>} Информация о ранге и привилегиях\r\n   */\r\n  async getUserSectRank(userId) {\r\n    try {\r\n      let sectMember;\r\n      \r\n      try {\r\n        // Находим пользователя в секте\r\n        sectMember = await this.models.SectMember.findOne({\r\n          where: { userId },\r\n          include: [{\r\n            model: this.models.Sect,\r\n            as: 'sect'\r\n          }]\r\n        });\r\n      } catch (error) {\r\n        console.warn('Ошибка поиска члена секты в БД для ранга, используем мок-данные:', error);\r\n      }\r\n      \r\n      // Если пользователя нет в БД или у него нет секты, и мы в режиме браузера\r\n      if ((!sectMember || !sectMember.sect) && typeof window !== 'undefined') {\r\n        const sect = await this.getUserSect(userId);\r\n        \r\n        if (sect && sect.members) {\r\n          // Ищем члена секты, который соответствует пользователю\r\n          // В демо-режиме предположим, что пользователь является первым членом секты\r\n          sectMember = {\r\n            role: 'Внутренний ученик',\r\n            level: 5,\r\n            loyalty: 75,\r\n            sect: sect\r\n          };\r\n        } else {\r\n          return {\r\n            inSect: false,\r\n            rank: null,\r\n            privileges: []\r\n          };\r\n        }\r\n      } else if (!sectMember || !sectMember.sect) {\r\n        return {\r\n          inSect: false,\r\n          rank: null,\r\n          privileges: []\r\n        };\r\n      }\r\n      \r\n      // Определяем ранг на основе роли\r\n      let privileges = [];\r\n      \r\n      switch (sectMember.role) {\r\n        case 'Глава секты':\r\n          privileges = [\r\n            'Полный контроль над сектой',\r\n            'Доступ ко всем ресурсам секты',\r\n            'Управление членами секты',\r\n            'Возможность сбора налогов (20%)',\r\n            'Доступ к особым техникам секты'\r\n          ];\r\n          break;\r\n        case 'Старейшина':\r\n          privileges = [\r\n            'Доступ к продвинутым техникам',\r\n            'Ежедневные ресурсы высокого качества',\r\n            'Возможность сбора налогов (10%)',\r\n            'Доступ к территориям секты'\r\n          ];\r\n          break;\r\n        case 'Внутренний ученик':\r\n          privileges = [\r\n            'Доступ к средним техникам',\r\n            'Ежедневные ресурсы среднего качества',\r\n            'Доступ к тренировочным площадкам секты'\r\n          ];\r\n          break;\r\n        case 'Внешний ученик':\r\n          privileges = [\r\n            'Доступ к базовым техникам',\r\n            'Базовая защита секты'\r\n          ];\r\n          break;\r\n      }\r\n      \r\n      return {\r\n        inSect: true,\r\n        sectName: sectMember.sect.name,\r\n        sectRank: sectMember.sect.rank,\r\n        memberName: sectMember.name,\r\n        role: sectMember.role,\r\n        level: sectMember.level,\r\n        loyalty: sectMember.loyalty,\r\n        privileges\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при получении ранга пользователя в секте:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","// Этот файл теперь просто реэкспортирует все из GameContextProvider\r\n// для обратной совместимости с существующим кодом\r\n\r\nimport { GameContext, useGameContext, GameContextProvider } from './GameContextProvider';\r\n\r\nexport { GameContext, useGameContext, GameContextProvider };\r\n// Добавляем алиас useGame для обратной совместимости\r\nexport const useGame = useGameContext;\r\nexport default GameContext;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { updateGameTime } from '../../context/actions/weather-actions';\r\nimport WeatherService from '../../services/weather-service';\r\nimport { connectDebugTools } from '../../utils/debugTools';\r\n\r\n// Отключаем избыточные логи в консоль для улучшения производительности\r\nconst ENABLE_LOGS = false;\r\n\r\n// Стилизованные компоненты для отладочной панели\r\nconst DebugPanel = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  color: #fff;\r\n  font-family: monospace;\r\n  min-width: 300px;\r\n  z-index: 9999;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst PanelTitle = styled.h3`\r\n  margin: 0 0 15px 0;\r\n  color: #ffd700;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  padding: 0;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst TimeInfo = styled.div`\r\n  margin-bottom: 10px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 5px;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  color: #fff;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-top: 15px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst SliderContainer = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst SliderRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Slider = styled.input`\r\n  width: 100%;\r\n  -webkit-appearance: none;\r\n  height: 8px;\r\n  border-radius: 4px;\r\n  background: #333;\r\n  outline: none;\r\n  \r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    appearance: none;\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 50%;\r\n    background: #ffd700;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  &::-moz-range-thumb {\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 50%;\r\n    background: #ffd700;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: #333;\r\n  border: 1px solid #555;\r\n  border-radius: 3px;\r\n  color: #fff;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n  \r\n  &:hover {\r\n    background-color: #444;\r\n  }\r\n  \r\n  &:active {\r\n    background-color: #555;\r\n  }\r\n`;\r\n\r\n/**\r\n * Компонент отладочной панели для работы с временем\r\n * Позволяет наблюдать и контролировать течение игрового времени\r\n */\r\nfunction TimeDebugPanel({ onClose }) {\r\n  const { state, actions } = useGame();\r\n  const [timeInfo, setTimeInfo] = useState(null);\r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [customMultiplier, setCustomMultiplier] = useState(WeatherService.TIME_MULTIPLIER);\r\n  const [clickedButton, setClickedButton] = useState(null);\r\n  const refreshTimerRef = useRef(null);\r\n  \r\n  // Функция получения информации о времени\r\n  const fetchTimeInfo = useCallback(() => {\r\n      console.log('📊 TimeDebugPanel - fetchTimeInfo, полное состояние:', {\r\n        world_time: state.world?.time,\r\n        weather: state.weather\r\n      });\r\n      \r\n      // Для отладки показываем полное состояние world.time\r\n      if (state.world?.time) {\r\n        console.log('⭐⭐ ЕДИНСТВЕННЫЙ ИСТОЧНИК ПРАВДЫ: state.world.time =', state.world.time);\r\n      }\r\n  \r\n      // ПРИНУДИТЕЛЬНО используем ТОЛЬКО state.world.time, игнорируя weather\r\n      const worldTime = state.world?.time || {};\r\n      \r\n      // ВАЖНО: Явно извлекаем все значения из worldTime с дефолтами\r\n      const hour = worldTime.hour !== undefined ? Number(worldTime.hour) : 12;\r\n      const minute = worldTime.minute !== undefined ? Number(worldTime.minute) : 0;\r\n      const day = worldTime.day !== undefined ? Number(worldTime.day) : 1;\r\n      const season = worldTime.season || 'spring';\r\n      \r\n      // Отладочный лог, чтобы точно знать откуда взяты данные\r\n      console.log('🔍 ИЗВЛЕЧЕННЫЕ ДАННЫЕ ИЗ state.world.time:', { \r\n        hour, \r\n        minute, \r\n        day,\r\n        season\r\n      });\r\n      \r\n      // Вычисляем дополнительные параметры на основе hour/minute\r\n      const isDayTime = hour >= 6 && hour < 20;\r\n      const formattedTime = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\r\n      const currentTime = hour * 60 + minute;\r\n      \r\n      // Определяем период суток напрямую, без зависимости от сервиса\r\n      const daytimePeriod = \r\n        (hour >= 5 && hour < 7) ? 'dawn' :\r\n        (hour >= 7 && hour < 11) ? 'morning' :\r\n        (hour >= 11 && hour < 14) ? 'noon' :\r\n        (hour >= 14 && hour < 17) ? 'afternoon' :\r\n        (hour >= 17 && hour < 20) ? 'evening' :\r\n        (hour >= 20 && hour < 23) ? 'night' : 'deepNight';\r\n      \r\n      const daytimeName = {\r\n        dawn: 'Рассвет',\r\n        morning: 'Утро',\r\n        noon: 'Полдень',\r\n        afternoon: 'День',\r\n        evening: 'Вечер',\r\n        night: 'Ночь',\r\n        deepNight: 'Глубокая ночь'\r\n      }[daytimePeriod] || 'Неизвестно';\r\n      \r\n      // ИСПРАВЛЕНИЕ: Принудительно синхронизируем день сезона с мировым днем\r\n      const synchronizedSeasonDay = day; // Всегда берем день сезона = мировой день\r\n      \r\n      // Если день сезона отличается, исправляем его\r\n      if (state.weather?.seasonDay !== day) {\r\n        console.log('🔄 TimeDebugPanel: исправление несоответствия дня сезона', {\r\n          текущий_день_сезона: state.weather?.seasonDay,\r\n          мировой_день: day,\r\n          действие: 'принудительная синхронизация'\r\n        });\r\n        \r\n        // Вызываем диспетчер для принудительной синхронизации (только если оба значения определены)\r\n        if (day !== undefined && actions && actions.dispatch) {\r\n          setTimeout(() => {\r\n            actions.dispatch({ type: 'SYNC_SEASON_DAY' });\r\n          }, 100);\r\n        }\r\n      }\r\n      \r\n      // Собираем финальный объект с данными о времени\r\n      const computedTimeInfo = {\r\n        hour,\r\n        minute,\r\n        dayCount: day,\r\n        formattedTime,\r\n        isDayTime,\r\n        daytimePeriod,\r\n        daytimeName,\r\n        currentTime,\r\n        currentSeason: season,\r\n        seasonDay: synchronizedSeasonDay, // Используем синхронизированное значение\r\n        \r\n        // Эти поля только для совместимости с существующим кодом\r\n        currentWeather: state.weather?.currentWeather || 'clear',\r\n        nextWeatherChange: state.weather?.nextWeatherChange || 60\r\n      };\r\n      \r\n      console.log('⏰⏰ TimeDebugPanel - ИТОГОВАЯ информация о времени:', computedTimeInfo);\r\n      \r\n      setTimeInfo(computedTimeInfo);\r\n    }, [state]);\r\n  // Для отслеживания изменений дня\r\n  const prevDayRef = useRef(null);\r\n\r\n  // Отправляем ссылку на состояние в отладочные инструменты\r\n  useEffect(() => {\r\n    // Подключаем состояние к отладочным инструментам\r\n    connectDebugTools({ context: { state } });\r\n    \r\n    // Получаем информацию о времени\r\n    fetchTimeInfo();\r\n    \r\n    // Устанавливаем интервал обновления данных о времени (реже - каждые 3 секунды)\r\n    refreshTimerRef.current = setInterval(fetchTimeInfo, 3000);\r\n    \r\n    // Очищаем интервал при размонтировании\r\n    return () => {\r\n      if (refreshTimerRef.current) {\r\n        clearInterval(refreshTimerRef.current);\r\n      }\r\n    };\r\n  }, [state, fetchTimeInfo]);\r\n\r\n  // Отдельный эффект для отслеживания изменений дня\r\n  useEffect(() => {\r\n    const currentDay = state.world?.time?.day;\r\n    \r\n    // Проверяем, инициализировано ли предыдущее значение\r\n    if (prevDayRef.current === null) {\r\n      prevDayRef.current = currentDay;\r\n      return;\r\n    }\r\n    \r\n    // Если день изменился, логируем это событие\r\n    if (currentDay !== prevDayRef.current) {\r\n      console.log('🎯🎯🎯 ДЕНЬ ИЗМЕНИЛСЯ В UI КОМПОНЕНТЕ:', {\r\n        prevDay: prevDayRef.current,\r\n        newDay: currentDay,\r\n        worldTimeObject: {...state.world?.time},\r\n        timeInfo: timeInfo,\r\n        detectedChange: true\r\n      });\r\n      \r\n      // Обновляем ссылку на предыдущий день\r\n      prevDayRef.current = currentDay;\r\n    }\r\n  }, [state.world?.time?.day, timeInfo]);\r\n  \r\n  // Обработчик для обновления времени (старая версия для реального времени)\r\n  const advanceTime = useCallback((minutes) => {\r\n    try {\r\n      console.log('🔍 advanceTime вызван с параметром:', minutes);\r\n      \r\n      // Проверяем, что actions и dispatch существуют\r\n      if (!actions) {\r\n        console.error('🚫 actions не существует');\r\n        return;\r\n      }\r\n      \r\n      if (!actions.dispatch) {\r\n        console.error('🚫 actions.dispatch не существует. actions:', actions);\r\n        return;\r\n      }\r\n      \r\n      console.log('✅ actions и dispatch существуют и готовы к использованию');\r\n      \r\n      // ВАЖНО: Отдельный лог для diag, чтобы видеть состояние перед обновлением\r\n      console.log('🔬 DIAG: Исходные значения перед обновлением:', {\r\n        worldTime: state.world?.time, \r\n        weather: {\r\n          hour: state.weather?.hour,\r\n          minute: state.weather?.minute,\r\n          dayCount: state.weather?.dayCount\r\n        }\r\n      });\r\n      \r\n      console.log('⚡⚡ Используем updateGameTime для СИНХРОННОГО обновления времени');\r\n      \r\n      // Создаем экшен с явным флагом ручного обновления\r\n      const action = updateGameTime(minutes, true);\r\n      \r\n      // ВАЖНО: явно маркируем как отправку для отладки\r\n      console.log('📌 ОТПРАВЛЯЕМ updateGameTime:', {\r\n        minutes,\r\n        isManual: true,\r\n        action\r\n      });\r\n      \r\n      // Отправляем в диспетчер \r\n      actions.dispatch(action);\r\n      \r\n      // Отправляем пользовательское событие о ручном обновлении времени\r\n      window.dispatchEvent(new CustomEvent('manual_time_update', {\r\n        detail: { type: 'manual_time_update', minutes, timestamp: Date.now() }\r\n      }));\r\n      \r\n      // Отправляем диспетчерам принудительное обновление\r\n      window.__forceSyncWeatherTime = true;\r\n\r\n      // Запрашиваем принудительное обновление с интервалом для гарантии синхронизации\r\n      const checkTimestamps = [100, 500, 1500]; // Проверки через 0.1, 0.5 и 1.5 секунды\r\n      \r\n      // Создаем функцию для планирования проверок\r\n      const scheduleChecks = () => {\r\n        checkTimestamps.forEach((timestamp, index) => {\r\n          setTimeout(() => {\r\n            console.log(`🔄 Проверка #${index + 1} (${timestamp} мс)...`);\r\n            \r\n            // Сперва запрашиваем свежую информацию\r\n            fetchTimeInfo();\r\n            \r\n            // ⚠️⚠️ ОЧЕНЬ ВАЖНО! Мы отправляем ПРЯМУЮ команду синхронизации\r\n            // Это обходное решение для гарантии синхронизации между состояниями\r\n            if (index === checkTimestamps.length - 1) { // Только на последней проверке\r\n              console.log('🔄 ПРИНУДИТЕЛЬНАЯ СИНХРОНИЗАЦИЯ');\r\n              \r\n              // Используем существующий метод dispatch для принудительной синхронизации\r\n              if (actions && actions.dispatch) {\r\n                console.log('🔄 Отправляем DIRECT_FORCE_SYNC_WEATHER_TIME');\r\n                actions.dispatch({\r\n                  type: 'DIRECT_FORCE_SYNC_WEATHER_TIME',\r\n                  payload: {} // Параметры не нужны, редьюсер сам получит актуальные значения\r\n                });\r\n              }\r\n            }\r\n            \r\n            // Обновляем информацию еще раз после синхронизации\r\n            setTimeout(() => {\r\n              fetchTimeInfo();\r\n              \r\n              // Проверка синхронизации между world.time и weather - ТОЛЬКО если есть оба объекта\r\n              if (state.world?.time && state.weather) {\r\n                // Подробная отладка типов данных до преобразования\r\n                console.log('🔍 АНАЛИЗ ТИПОВ ДАННЫХ ДЛЯ СРАВНЕНИЯ:', {\r\n                  worldHour: {\r\n                    value: state.world.time.hour,\r\n                    type: typeof state.world.time.hour,\r\n                    isNumber: !isNaN(Number(state.world.time.hour))\r\n                  },\r\n                  worldMinute: {\r\n                    value: state.world.time.minute,\r\n                    type: typeof state.world.time.minute,\r\n                    isNumber: !isNaN(Number(state.world.time.minute))\r\n                  },\r\n                  weatherHour: {\r\n                    value: state.weather.hour,\r\n                    type: typeof state.weather.hour,\r\n                    isNumber: !isNaN(Number(state.weather.hour))\r\n                  },\r\n                  weatherMinute: {\r\n                    value: state.weather.minute,\r\n                    type: typeof state.weather.minute,\r\n                    isNumber: !isNaN(Number(state.weather.minute))\r\n                  }\r\n                });\r\n                \r\n                // КРИТИЧЕСКИ ВАЖНО: не просто Number(), а parseInt() с проверкой на NaN\r\n                // Это гарантирует, что строки и числа будут корректно сравниваться\r\n                const worldHour = parseInt(state.world.time.hour, 10);\r\n                const worldMinute = parseInt(state.world.time.minute, 10);\r\n                const weatherHour = parseInt(state.weather.hour, 10);\r\n                const weatherMinute = parseInt(state.weather.minute, 10);\r\n                \r\n                // ДОПОЛНИТЕЛЬНО выполним проверку, что все значения являются числами\r\n                const valuesAreValid = \r\n                  !isNaN(worldHour) && \r\n                  !isNaN(worldMinute) && \r\n                  !isNaN(weatherHour) && \r\n                  !isNaN(weatherMinute);\r\n                \r\n                // СТРОГАЯ ПРОВЕРКА: ещё и на равенство строковых представлений для минут\r\n                // Это страховка на случай, если изменяются только строковые значения\r\n                const minuteStringsEqual = String(state.world.time.minute) === String(state.weather.minute);\r\n                \r\n                // ОСНОВНАЯ ПРОВЕРКА на синхронизацию всех значений\r\n                const isHourSynced = worldHour === weatherHour;\r\n                // Двойная проверка для минут - по числам И по строкам\r\n                const isMinuteSynced = (worldMinute === weatherMinute) || minuteStringsEqual;\r\n                const isDaySynced = parseInt(state.world.time.day, 10) === parseInt(state.weather.dayCount, 10);\r\n                const isSeasonSynced = state.world.time.season === state.weather.currentSeason;\r\n                \r\n                if (!isHourSynced || !isMinuteSynced || !isDaySynced || !isSeasonSynced || !valuesAreValid) {\r\n                  console.error('⚠️ ОШИБКА СИНХРОНИЗАЦИИ между world.time и weather:', {\r\n                    hourSynced: isHourSynced,\r\n                    minuteSynced: isMinuteSynced,\r\n                    minuteStringsEqual, // Дополнительная проверка на равенство строк\r\n                    daySynced: isDaySynced,\r\n                    seasonSynced: isSeasonSynced,\r\n                    valuesAreValid, // Все ли значения являются числами\r\n                    worldTime: {\r\n                      hour: worldHour,\r\n                      minute: worldMinute,\r\n                      hourRaw: state.world.time.hour,\r\n                      minuteRaw: state.world.time.minute,\r\n                      day: state.world.time.day,\r\n                      season: state.world.time.season,\r\n                    },\r\n                    weather: {\r\n                      hour: weatherHour,\r\n                      minute: weatherMinute,\r\n                      hourRaw: state.weather.hour,\r\n                      minuteRaw: state.weather.minute,\r\n                      dayCount: state.weather.dayCount,\r\n                      currentSeason: state.weather.currentSeason\r\n                    }\r\n                  });\r\n                  \r\n                  // АВТОМАТИЧЕСКОЕ ИСПРАВЛЕНИЕ: если обнаружена проблема с минутами,\r\n                  // пробуем исправить её вручную\r\n                  if (!isMinuteSynced && actions && actions.dispatch) {\r\n                    console.log('🔧 РУЧНОЕ ИСПРАВЛЕНИЕ минут в weather: принудительно устанавливаем minute = ' + state.world.time.minute);\r\n                    // Отправляем экшен для исправления только минут\r\n                    actions.dispatch({\r\n                      type: 'FIX_WEATHER_MINUTES',\r\n                      payload: {\r\n                        minute: state.world.time.minute\r\n                      }\r\n                    });\r\n                  }\r\n                } else {\r\n                  console.log('✅ Синхронизация времени успешна!');\r\n                }\r\n              }\r\n            }, 200); // Небольшая задержка после синхронизации\r\n          }, timestamp);\r\n        });\r\n      };\r\n      \r\n      // Запускаем серию проверок\r\n      scheduleChecks();\r\n    } catch (error) {\r\n      console.error('❌ Ошибка в advanceTime:', error);\r\n      // Сохраняем только критические ошибки\r\n      if (error && error.toString().includes('TypeError')) {\r\n        console.error('Критическая ошибка:', error);\r\n      }\r\n    }\r\n  }, [actions, fetchTimeInfo]);\r\n  \r\n  // НОВАЯ ФУНКЦИЯ: Обработчик для прямого добавления игровых часов\r\n  const advanceGameHours = useCallback((hours) => {\r\n    try {\r\n      console.log(`🕒 Добавление ${hours} игровых часов напрямую`);\r\n      \r\n      // Проверяем, что actions и dispatch существуют\r\n      if (!actions) {\r\n        console.error('🚫 actions не существует');\r\n        return;\r\n      }\r\n      \r\n      if (!actions.dispatch) {\r\n        console.error('🚫 actions.dispatch не существует. actions:', actions);\r\n        return;\r\n      }\r\n      \r\n      console.log('✅ actions и dispatch существуют и готовы к использованию');\r\n      \r\n      // Отладочная информация перед обновлением\r\n      console.log('🔬 DIAG: Исходные значения перед добавлением часов:', {\r\n        worldTime: state.world?.time, \r\n        hours\r\n      });\r\n      \r\n      // Отправляем экшен для добавления игровых часов напрямую\r\n      actions.dispatch({\r\n        type: 'DIRECT_ADD_GAME_HOURS',\r\n        payload: {\r\n          hours: hours,\r\n          timestamp: Date.now()\r\n        }\r\n      });\r\n      \r\n      // Отправляем пользовательское событие о ручном обновлении времени\r\n      window.dispatchEvent(new CustomEvent('manual_time_update', {\r\n        detail: { type: 'manual_game_hours_update', hours, timestamp: Date.now() }\r\n      }));\r\n      \r\n      // Запрашиваем обновление информации после изменения\r\n      const checkTimestamps = [100, 500];\r\n      \r\n      checkTimestamps.forEach((timestamp, index) => {\r\n        setTimeout(() => {\r\n          // Запрашиваем свежую информацию\r\n          fetchTimeInfo();\r\n          \r\n          // Принудительная синхронизация для гарантии\r\n          if (index === checkTimestamps.length - 1) {\r\n            console.log('🔄 Принудительная синхронизация после добавления часов');\r\n            if (actions && actions.dispatch) {\r\n              actions.dispatch({\r\n                type: 'DIRECT_FORCE_SYNC_WEATHER_TIME',\r\n                payload: {}\r\n              });\r\n              \r\n              // Обновляем информацию еще раз после синхронизации\r\n              setTimeout(fetchTimeInfo, 200);\r\n            }\r\n          }\r\n        }, timestamp);\r\n      });\r\n    } catch (error) {\r\n      console.error('❌ Ошибка в advanceGameHours:', error);\r\n    }\r\n  }, [actions, fetchTimeInfo]);\r\n  \r\n  // Запускаем консольную функцию отладки\r\n  const showConsoleDebug = useCallback(() => {\r\n    if (typeof window !== 'undefined' && window.getGameTime) {\r\n      window.getGameTime({ state });\r\n    } else {\r\n      console.info('Функция getGameTime() недоступна. Возможно, нужно перезагрузить страницу.');\r\n    }\r\n  }, [state]);\r\n  \r\n  // Обработчик для изменения множителя времени\r\n  const updateTimeMultiplier = useCallback((newValue) => {\r\n    console.log('🔧 updateTimeMultiplier вызван с параметром:', newValue);\r\n    \r\n    const multiplier = parseInt(newValue, 10);\r\n    if (!isNaN(multiplier) && multiplier > 0) {\r\n      // Старое значение для сравнения\r\n      const oldMultiplier = WeatherService.TIME_MULTIPLIER;\r\n      \r\n      // Устанавливаем новое значение\r\n      WeatherService.TIME_MULTIPLIER = multiplier;\r\n      setCustomMultiplier(multiplier);\r\n      \r\n      console.log(`✅ TIME_MULTIPLIER изменен: ${oldMultiplier} → ${multiplier}`);\r\n      \r\n      // Сообщаем другим компонентам об изменении множителя через кастомное событие\r\n      window.dispatchEvent(new CustomEvent('time_multiplier_changed', {\r\n        detail: { timeMultiplier: multiplier }\r\n      }));\r\n      \r\n      // Принудительное обновление UI\r\n      try {\r\n        if (actions && actions.dispatch) {\r\n          // Отправляем специальный экшен для обновления интерфейса\r\n          actions.dispatch({\r\n            type: 'UPDATE_TIME_MULTIPLIER',\r\n            payload: { multiplier }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('❌ Ошибка при отправке UPDATE_TIME_MULTIPLIER:', error);\r\n      }\r\n    } else {\r\n      console.warn('⚠️ Недопустимое значение множителя:', newValue);\r\n    }\r\n  }, [actions]);\r\n  \r\n  // Скрываем панель при нажатии на кнопку закрытия\r\n  const handleClose = () => {\r\n    setIsVisible(false);\r\n    if (onClose) onClose();\r\n  };\r\n  \r\n  if (!isVisible || !timeInfo) return null;\r\n  \r\n  return (\r\n    <DebugPanel>\r\n      <PanelTitle>\r\n        Отладка игрового времени\r\n        <CloseButton onClick={handleClose}>×</CloseButton>\r\n      </PanelTitle>\r\n      \r\n      <TimeInfo>\r\n        <Label>Время:</Label>\r\n        <Value>{timeInfo.formattedTime}</Value>\r\n        \r\n        <Label>Период суток:</Label>\r\n        <Value>{timeInfo.daytimeName}</Value>\r\n        \r\n        <Label>День:</Label>\r\n        <Value>{timeInfo.dayCount}</Value>\r\n        \r\n        <Label>Сезон:</Label>\r\n        <Value>\r\n          {timeInfo.currentSeason} (день {timeInfo.seasonDay})\r\n          {(timeInfo.dayCount !== timeInfo.seasonDay) && \r\n            <span style={{ color: '#ff6666', marginLeft: '5px' }}>\r\n              ⚠️ Несоответствие!\r\n            </span>\r\n          }\r\n        </Value>\r\n        \r\n        <Label>Погода:</Label>\r\n        <Value>{timeInfo.currentWeather}</Value>\r\n        \r\n        <Label>До смены погоды:</Label>\r\n        <Value>\r\n          {timeInfo.nextWeatherChange \r\n            ? `${timeInfo.nextWeatherChange} мин. игр. / ${Math.ceil(timeInfo.nextWeatherChange / WeatherService.TIME_MULTIPLIER)} мин. реал.` \r\n            : 'Н/Д'}\r\n        </Value>\r\n        \r\n        <Label>Множитель времени:</Label>\r\n        <Value>1:{customMultiplier}</Value>\r\n      </TimeInfo>\r\n      \r\n      <SliderContainer>\r\n        <Label>Настройка множителя времени:</Label>\r\n        <SliderRow>\r\n          <span>1</span>\r\n          <Slider \r\n            type=\"range\" \r\n            min=\"1\" \r\n            max=\"240\" \r\n            value={customMultiplier}\r\n            onChange={(e) => {\r\n              console.log('🔧 Изменение ползунка множителя времени:', e.target.value);\r\n              updateTimeMultiplier(e.target.value);\r\n            }}\r\n            style={{\r\n              background: `linear-gradient(to right, #ffd700 0%, #ffd700 ${(customMultiplier/240)*100}%, #333 ${(customMultiplier/240)*100}%, #333 100%)`\r\n            }}\r\n          />\r\n          <span>240</span>\r\n        </SliderRow>\r\n        <Value style={{ textAlign: 'center', color: '#ffd700' }}>\r\n          1 мин. реального времени = {customMultiplier} мин. игрового времени\r\n        </Value>\r\n      </SliderContainer>\r\n      \r\n      <ButtonGroup>\r\n        <Button \r\n          onClick={() => {\r\n            // НОВАЯ ФУНКЦИЯ: принудительная синхронизация дня сезона с мировым днем\r\n            setClickedButton('sync_day');\r\n            \r\n            try {\r\n              if (actions && actions.dispatch) {\r\n                console.log('🔄 Запрос на принудительную синхронизацию дня сезона с мировым днем');\r\n                actions.dispatch({\r\n                  type: 'SYNC_SEASON_DAY'\r\n                });\r\n                \r\n                // Обновляем информацию после синхронизации\r\n                setTimeout(() => {\r\n                  fetchTimeInfo();\r\n                  console.log('✅ Синхронизация дня сезона завершена');\r\n                }, 300);\r\n              }\r\n            } catch (error) {\r\n              console.error('❌ Ошибка при синхронизации дня сезона:', error);\r\n            }\r\n            \r\n            setTimeout(() => setClickedButton(null), 1000);\r\n          }}\r\n          style={{\r\n            backgroundColor: clickedButton === 'sync_day' ? '#00663d' : '#006633',\r\n            transform: clickedButton === 'sync_day' ? 'scale(0.95)' : undefined,\r\n            boxShadow: clickedButton === 'sync_day' ? '0 0 10px #00cc66' : undefined,\r\n            borderColor: clickedButton === 'sync_day' ? '#00cc66' : undefined\r\n          }}\r\n        >\r\n          Синхр. день сезона\r\n        </Button>\r\n        \r\n        <Button \r\n          onClick={() => {\r\n            // НОВАЯ ФУНКЦИЯ: принудительная смена погоды\r\n            setClickedButton('change_weather');\r\n            \r\n            try {\r\n              if (actions && actions.dispatch) {\r\n                console.log('🌤️ Запрос на принудительную смену погоды');\r\n                actions.dispatch({\r\n                  type: 'FORCE_WEATHER_CHANGE'\r\n                });\r\n                \r\n                // Обновляем информацию после смены погоды\r\n                setTimeout(() => {\r\n                  fetchTimeInfo();\r\n                  console.log('✅ Погода принудительно изменена');\r\n                }, 300);\r\n              }\r\n            } catch (error) {\r\n              console.error('❌ Ошибка при смене погоды:', error);\r\n            }\r\n            \r\n            setTimeout(() => setClickedButton(null), 1000);\r\n          }}\r\n          style={{\r\n            backgroundColor: clickedButton === 'change_weather' ? '#1a538c' : '#0066cc',\r\n            transform: clickedButton === 'change_weather' ? 'scale(0.95)' : undefined,\r\n            boxShadow: clickedButton === 'change_weather' ? '0 0 10px #66aaff' : undefined,\r\n            borderColor: clickedButton === 'change_weather' ? '#66aaff' : undefined\r\n          }}\r\n        >\r\n          Сменить погоду\r\n        </Button>\r\n        \r\n        <Button \r\n          onClick={() => {\r\n            setClickedButton('1hour');\r\n            advanceGameHours(1);\r\n            // Сбросить выделение кнопки через 1 секунду\r\n            setTimeout(() => setClickedButton(null), 1000);\r\n          }}\r\n          style={{\r\n            backgroundColor: clickedButton === '1hour' ? '#7a5c00' : undefined,\r\n            transform: clickedButton === '1hour' ? 'scale(0.95)' : undefined,\r\n            boxShadow: clickedButton === '1hour' ? '0 0 10px #ffd700' : undefined,\r\n            borderColor: clickedButton === '1hour' ? '#ffd700' : undefined\r\n          }}\r\n        >\r\n          +1 час игр.\r\n        </Button>\r\n        <Button \r\n          onClick={() => {\r\n            setClickedButton('3hours');\r\n            advanceGameHours(3);\r\n            setTimeout(() => setClickedButton(null), 1000);\r\n          }}\r\n          style={{\r\n            backgroundColor: clickedButton === '3hours' ? '#7a5c00' : undefined,\r\n            transform: clickedButton === '3hours' ? 'scale(0.95)' : undefined,\r\n            boxShadow: clickedButton === '3hours' ? '0 0 10px #ffd700' : undefined,\r\n            borderColor: clickedButton === '3hours' ? '#ffd700' : undefined\r\n          }}\r\n        >\r\n          +3 часа игр.\r\n        </Button>\r\n        <Button \r\n          onClick={() => {\r\n            setClickedButton('6hours');\r\n            advanceGameHours(6);\r\n            setTimeout(() => setClickedButton(null), 1000);\r\n          }}\r\n          style={{\r\n            backgroundColor: clickedButton === '6hours' ? '#7a5c00' : undefined,\r\n            transform: clickedButton === '6hours' ? 'scale(0.95)' : undefined,\r\n            boxShadow: clickedButton === '6hours' ? '0 0 10px #ffd700' : undefined,\r\n            borderColor: clickedButton === '6hours' ? '#ffd700' : undefined\r\n          }}\r\n        >\r\n          +6 часов игр.\r\n        </Button>\r\n        <Button \r\n          onClick={() => {\r\n            setClickedButton('12hours');\r\n            advanceGameHours(12);\r\n            setTimeout(() => setClickedButton(null), 1000);\r\n          }}\r\n          style={{\r\n            backgroundColor: clickedButton === '12hours' ? '#7a5c00' : undefined,\r\n            transform: clickedButton === '12hours' ? 'scale(0.95)' : undefined,\r\n            boxShadow: clickedButton === '12hours' ? '0 0 10px #ffd700' : undefined,\r\n            borderColor: clickedButton === '12hours' ? '#ffd700' : undefined\r\n          }}\r\n        >\r\n          +12 часов игр.\r\n        </Button>\r\n        <Button \r\n          onClick={() => {\r\n            setClickedButton('console');\r\n            showConsoleDebug();\r\n            setTimeout(() => setClickedButton(null), 500);\r\n          }}\r\n          style={{\r\n            backgroundColor: clickedButton === 'console' ? '#666' : undefined,\r\n            transform: clickedButton === 'console' ? 'scale(0.95)' : undefined\r\n          }}\r\n        >\r\n          Консоль\r\n        </Button>\r\n      </ButtonGroup>\r\n    </DebugPanel>\r\n  );\r\n}\r\n\r\nexport default TimeDebugPanel;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport TimeDebugPanel from './TimeDebugPanel';\r\nimport { GameContext } from '../../context/GameContext';\r\nimport '../../utils/directConsoleCommands'; // Импортируем команды консоли\r\n\r\n// Стили для контейнера кнопки активации отладки\r\nconst DebugButtonContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 10px;\r\n  right: 10px;\r\n  z-index: 9999;\r\n`;\r\n\r\n// Стили для кнопки активации отладки\r\nconst DebugButton = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background-color: #333;\r\n  color: #ddd;\r\n  border: 1px solid #555;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 5px rgba(0,0,0,0.3);\r\n  transition: all 0.2s;\r\n  opacity: 0.7;\r\n  \r\n  &:hover {\r\n    opacity: 1;\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\n/**\r\n * Компонент для интеграции инструментов отладки в интерфейс игры\r\n * @param {Object} props - Свойства компонента\r\n * @param {boolean} props.enabled - Флаг активации отладки\r\n */\r\nfunction DebugTools({ enabled = false }) {\r\n  // Состояние для отслеживания видимости отладочных инструментов\r\n  const [showTools, setShowTools] = useState(false);\r\n  // Флаг активации кнопки отладки с клавиатуры\r\n  const [keyActivated, setKeyActivated] = useState(false);\r\n  \r\n  // Получаем доступ к контексту игры\r\n  const gameContext = useContext(GameContext);\r\n  \r\n  // Обработчик переключения видимости инструментов\r\n  const toggleTools = () => {\r\n    setShowTools(prev => !prev);\r\n    \r\n    // Информируем пользователя о доступных инструментах отладки\r\n    if (!showTools) {\r\n      console.info('🛠️ Отладочные инструменты активированы:');\r\n      console.info('• getGameTime() - получить информацию об игровом времени');\r\n      console.info('• showTimeHelp() - показать подсказки по использованию отладки времени');\r\n      console.info('• add1000Currency() - добавить 1000 единиц каждой валюты');\r\n      console.info('• дать1000Ресурсов() - то же самое на русском');\r\n    }\r\n    \r\n    // Сохраняем ссылку на контекст игры в глобальном объекте\r\n    if (typeof window !== 'undefined' && gameContext) {\r\n      window.__GAME_CONTEXT__ = gameContext;\r\n      window.__GAME_STATE__ = gameContext.state;\r\n      window.__GAME_DISPATCH__ = gameContext.actions.dispatch;\r\n    }\r\n  };\r\n  \r\n  // Функция для добавления 1000 единиц каждой валюты\r\n  const addCurrency = () => {\r\n    if (!gameContext || !gameContext.actions) {\r\n      console.error('Не удалось получить доступ к контексту игры');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Получаем текущие значения валют\r\n      const currentCurrency = gameContext.state.player.inventory.currency || {};\r\n      \r\n      // Добавляем 1000 единиц каждой валюты\r\n      const updatedCurrency = {\r\n        copper: (currentCurrency.copper || 0) + 1000,\r\n        silver: (currentCurrency.silver || 0) + 1000,\r\n        gold: (currentCurrency.gold || 0) + 1000,\r\n        spiritStones: (currentCurrency.spiritStones || 0) + 1000\r\n      };\r\n      \r\n      // Обновляем валюту в состоянии игры\r\n      gameContext.actions.updateCurrency(updatedCurrency);\r\n      \r\n      console.log('Добавлено по 1000 единиц каждой валюты!', updatedCurrency);\r\n    } catch (error) {\r\n      console.error('Ошибка при добавлении валюты:', error);\r\n    }\r\n  };\r\n  \r\n  // Обработчик нажатия клавиш для активации отладки\r\n  useEffect(() => {\r\n    if (!enabled) return;\r\n    \r\n    const handleKeyDown = (e) => {\r\n      // Комбинация Ctrl+Shift+D для активации отладки\r\n      if (e.ctrlKey && e.shiftKey && e.key === 'D') {\r\n        e.preventDefault();\r\n        setKeyActivated(true);\r\n        toggleTools();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [enabled, toggleTools]);\r\n  \r\n  // Если отладка не включена, не отображаем ничего\r\n  if (!enabled && !keyActivated) return null;\r\n  \r\n  return (\r\n    <>\r\n      {/* Кнопка активации отладочных инструментов */}\r\n      <DebugButtonContainer>\r\n        <DebugButton onClick={toggleTools} title=\"Отладочные инструменты (Ctrl+Shift+D)\">\r\n          🛠️\r\n        </DebugButton>\r\n      </DebugButtonContainer>\r\n      \r\n      {/* Отладочные панели (отображаются только при активации) */}\r\n      {showTools && (\r\n        <div style={{ position: 'fixed', top: '10px', right: '10px', zIndex: 9998, maxWidth: '350px' }}>\r\n          <TimeDebugPanel onClose={() => setShowTools(false)} />\r\n          \r\n          {/* Кнопка для добавления валюты */}\r\n          <div style={{ \r\n            marginTop: '10px', \r\n            padding: '10px', \r\n            backgroundColor: '#333', \r\n            borderRadius: '5px',\r\n            boxShadow: '0 2px 5px rgba(0,0,0,0.3)',\r\n            color: '#fff' \r\n          }}>\r\n            <h3 style={{ margin: '0 0 8px 0', fontSize: '14px' }}>Валюта</h3>\r\n            <button \r\n              onClick={addCurrency}\r\n              style={{\r\n                padding: '5px 10px',\r\n                backgroundColor: '#d4af37',\r\n                color: '#000',\r\n                border: 'none',\r\n                borderRadius: '3px',\r\n                cursor: 'pointer',\r\n                fontWeight: 'bold',\r\n                fontSize: '12px'\r\n              }}\r\n            >\r\n              Добавить 1000 всех валют\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DebugTools;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport apiService from '../../services/api';\r\n\r\nconst LoginContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);\r\n`;\r\n\r\nconst LoginPanel = styled.div`\r\n  width: 400px;\r\n  background: rgba(30, 30, 30, 0.9);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  box-shadow: 0 0 20px rgba(212, 175, 55, 0.5);\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: 'Ma Shan Zheng', cursive;\r\n  text-align: center;\r\n  color: #d4af37;\r\n  margin-bottom: 30px;\r\n  font-size: 2.5rem;\r\n  text-shadow: 0 0 5px rgba(212, 175, 55, 0.5);\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst InputGroup = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #d4af37;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #f0f0f0;\r\n  font-size: 1rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(212, 175, 55, 0.5);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px;\r\n  background: #d4af37;\r\n  color: #000;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n  \r\n  &:hover {\r\n    background: #f4cf47;\r\n    box-shadow: 0 0 10px rgba(212, 175, 55, 0.7);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #666;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst SwitchMode = styled.p`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #aaa;\r\n  \r\n  span {\r\n    color: #d4af37;\r\n    cursor: pointer;\r\n    \r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #ff6b6b;\r\n  margin-top: 15px;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoadingContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nconst LoadingText = styled.p`\r\n  color: #d4af37;\r\n  font-size: 1.2rem;\r\n  margin-top: 10px;\r\n`;\r\n\r\nfunction LoginPage() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isPageLoading, setIsPageLoading] = useState(true);\r\n  \r\n  const navigate = useNavigate();\r\n  const { state, actions } = useGame();\r\n  \r\n  useEffect(() => {\r\n    // Проверяем, авторизован ли пользователь\r\n    const checkAuth = async () => {\r\n      try {\r\n        const isAuthenticated = await apiService.checkAuth();\r\n        \r\n        if (isAuthenticated) {\r\n          // Если пользователь авторизован, загружаем его игровое состояние\r\n          const gameState = await apiService.loadGameState();\r\n          \r\n          if (gameState) {\r\n            // Загружаем сохраненное состояние\r\n            actions.loadGame(gameState);\r\n            \r\n            // Проверяем, создан ли персонаж\r\n            if (gameState.player && gameState.player.name) {\r\n              console.log('Персонаж найден, переход в игру:', gameState.player.name);\r\n              navigate('/game');\r\n            } else {\r\n              console.log('Персонаж не найден, переход к созданию персонажа');\r\n              navigate('/character-creation');\r\n            }\r\n          } else {\r\n            // Если нет сохраненного состояния, переходим к созданию персонажа\r\n            console.log('Нет сохраненного состояния, переход к созданию персонажа');\r\n            navigate('/character-creation');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при проверке авторизации:', error);\r\n      } finally {\r\n        setIsPageLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkAuth();\r\n  }, [navigate, actions]);\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    // Валидация\r\n    if (!username || !password) {\r\n      setError('Пожалуйста, заполните все поля');\r\n      return;\r\n    }\r\n    \r\n    if (!isLogin && password !== confirmPassword) {\r\n      setError('Пароли не совпадают');\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      if (isLogin) {\r\n        // Вход в систему\r\n        console.log('Выполняем вход в систему:', username);\r\n        await apiService.login(username, password);\r\n        \r\n        // Загружаем игровое состояние\r\n        console.log('Загружаем игровое состояние');\r\n        const gameState = await apiService.loadGameState();\r\n        \r\n        if (gameState) {\r\n          // Загружаем сохраненное состояние\r\n          console.log('Загружаем сохраненное состояние в контекст');\r\n          actions.loadGame(gameState);\r\n          \r\n          // Проверяем, создан ли персонаж\r\n          if (gameState.player && gameState.player.name) {\r\n            console.log('Персонаж найден, переход в игру:', gameState.player.name);\r\n            navigate('/game');\r\n          } else {\r\n            console.log('Персонаж не найден, переход к созданию персонажа');\r\n            navigate('/character-creation');\r\n          }\r\n        } else {\r\n          // Если нет сохраненного состояния, переходим к созданию персонажа\r\n          console.log('Нет сохраненного состояния, переход к созданию персонажа');\r\n          navigate('/character-creation');\r\n        }\r\n      } else {\r\n        // Регистрация\r\n        console.log('Выполняем регистрацию:', username);\r\n        await apiService.register(username, password);\r\n        \r\n        // Переходим к созданию персонажа\r\n        console.log('Переход к созданию персонажа после регистрации');\r\n        navigate('/character-creation');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при авторизации:', error);\r\n      setError(error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  if (isPageLoading) {\r\n    return (\r\n      <LoginContainer>\r\n        <LoginPanel>\r\n          <Title>Путь к Бессмертию</Title>\r\n          <LoadingContainer>\r\n            <LoadingText>Проверка авторизации...</LoadingText>\r\n          </LoadingContainer>\r\n        </LoginPanel>\r\n      </LoginContainer>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <LoginContainer>\r\n      <LoginPanel>\r\n        <Title>Путь к Бессмертию</Title>\r\n        <Form onSubmit={handleSubmit}>\r\n          <InputGroup>\r\n            <Label>Имя пользователя</Label>\r\n            <Input \r\n              type=\"text\" \r\n              value={username} \r\n              onChange={(e) => setUsername(e.target.value)}\r\n              placeholder=\"Введите имя пользователя\"\r\n              disabled={isLoading}\r\n            />\r\n          </InputGroup>\r\n          \r\n          <InputGroup>\r\n            <Label>Пароль</Label>\r\n            <Input \r\n              type=\"password\" \r\n              value={password} \r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Введите пароль\"\r\n              disabled={isLoading}\r\n            />\r\n          </InputGroup>\r\n          \r\n          {!isLogin && (\r\n            <InputGroup>\r\n              <Label>Подтвердите пароль</Label>\r\n              <Input \r\n                type=\"password\" \r\n                value={confirmPassword} \r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                placeholder=\"Повторите пароль\"\r\n                disabled={isLoading}\r\n              />\r\n            </InputGroup>\r\n          )}\r\n          \r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          \r\n          <Button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Загрузка...' : (isLogin ? 'Войти' : 'Зарегистрироваться')}\r\n          </Button>\r\n        </Form>\r\n        \r\n        <SwitchMode>\r\n          {isLogin ? 'Нет аккаунта? ' : 'Уже есть аккаунт? '}\r\n          <span onClick={() => !isLoading && setIsLogin(!isLogin)}>\r\n            {isLogin ? 'Зарегистрироваться' : 'Войти'}\r\n          </span>\r\n        </SwitchMode>\r\n      </LoginPanel>\r\n    </LoginContainer>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),\r\n              url('/assets/images/character-creation-bg.jpg');\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst CreationPanel = styled.div`\r\n  width: 800px;\r\n  min-height: 600px;\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  box-shadow: 0 0 20px rgba(212, 175, 55, 0.5);\r\n  color: #f0f0f0;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: 'Ma Shan Zheng', cursive;\r\n  text-align: center;\r\n  color: #d4af37;\r\n  margin-bottom: 30px;\r\n  font-size: 2rem;\r\n  text-shadow: 0 0 5px rgba(212, 175, 55, 0.5);\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: #d4af37;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #f0f0f0;\r\n  font-size: 1rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(212, 175, 55, 0.5);\r\n  }\r\n`;\r\n\r\nconst Select = styled.select`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #f0f0f0;\r\n  font-size: 1rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(212, 175, 55, 0.5);\r\n  }\r\n  \r\n  option {\r\n    background: #1a1a1a;\r\n  }\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StatRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StatLabel = styled.span`\r\n  width: 120px;\r\n  color: #d4af37;\r\n`;\r\n\r\nconst StatValue = styled.span`\r\n  width: 40px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StatButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  background: #d4af37;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: #000;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  \r\n  &:disabled {\r\n    background: #666;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: #f4cf47;\r\n  }\r\n`;\r\n\r\nconst Description = styled.textarea`\r\n  width: 100%;\r\n  height: 100px;\r\n  padding: 10px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #f0f0f0;\r\n  font-size: 1rem;\r\n  resize: none;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 5px rgba(212, 175, 55, 0.5);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px;\r\n  background: #d4af37;\r\n  color: #000;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n  \r\n  &:hover {\r\n    background: #f4cf47;\r\n    box-shadow: 0 0 10px rgba(212, 175, 55, 0.7);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #666;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: #ff6b6b;\r\n  text-align: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst PointsRemaining = styled.div`\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  color: #d4af37;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nfunction CharacterCreationPage() {\r\n  const navigate = useNavigate();\r\n  const { actions } = useGame();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    gender: 'male',\r\n    region: 'central',\r\n    background: 'commoner',\r\n    description: '',\r\n  });\r\n  \r\n  const [stats, setStats] = useState({\r\n    strength: 10,\r\n    intellect: 10,\r\n    spirit: 10,\r\n    agility: 10,\r\n    health: 10,\r\n  });\r\n  \r\n  const [error, setError] = useState('');\r\n  const [pointsRemaining, setPointsRemaining] = useState(10);\r\n  \r\n  const regions = {\r\n    central: 'Центральные равнины',\r\n    mountain: 'Горные хребты',\r\n    coastal: 'Прибрежные земли',\r\n    desert: 'Западная пустыня',\r\n    forest: 'Древние леса',\r\n  };\r\n  \r\n  const backgrounds = {\r\n    commoner: 'Простолюдин',\r\n    noble: 'Аристократ',\r\n    merchant: 'Торговец',\r\n    warrior: 'Воин',\r\n    scholar: 'Учёный',\r\n  };\r\n  \r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleStatChange = (stat, change) => {\r\n    const newValue = stats[stat] + change;\r\n    \r\n    if (change > 0 && pointsRemaining <= 0) return;\r\n    if (newValue < 10 || newValue > 20) return;\r\n    \r\n    setStats(prev => ({\r\n      ...prev,\r\n      [stat]: newValue\r\n    }));\r\n    \r\n    setPointsRemaining(prev => prev - change);\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    // Валидация\r\n    if (!formData.name.trim()) {\r\n      setError('Пожалуйста, введите имя персонажа');\r\n      return;\r\n    }\r\n    \r\n    if (pointsRemaining > 0) {\r\n      setError('Пожалуйста, распределите все очки характеристик');\r\n      return;\r\n    }\r\n    \r\n    // Создаем персонажа\r\n    actions.updatePlayer({\r\n      name: formData.name,\r\n      gender: formData.gender,\r\n      region: formData.region,\r\n      background: formData.background,\r\n      description: formData.description,\r\n    });\r\n    \r\n    actions.updatePlayerStats(stats);\r\n    \r\n    // Добавляем стартовые предметы в зависимости от происхождения\r\n    const startingItems = getStartingItems(formData.background);\r\n    startingItems.forEach(item => actions.addItem(item));\r\n    \r\n    // Переходим в игру\r\n    navigate('/game');\r\n  };\r\n  \r\n  const getStartingItems = (background) => {\r\n    const items = [\r\n      // Базовые предметы для всех\r\n      {\r\n        id: 'basic_cultivation_manual',\r\n        name: 'Базовое руководство по культивации',\r\n        type: 'book',\r\n        quality: 'common',\r\n        description: 'Простое руководство для начинающих культиваторов.'\r\n      },\r\n      {\r\n        id: 'qi_gathering_pill',\r\n        name: 'Пилюля сбора ци',\r\n        type: 'consumable',\r\n        quality: 'common',\r\n        quantity: 3,\r\n        description: 'Помогает в начальной культивации.'\r\n      }\r\n    ];\r\n    \r\n    // Дополнительные предметы в зависимости от происхождения\r\n    switch (background) {\r\n      case 'noble':\r\n        items.push({\r\n          id: 'jade_pendant',\r\n          name: 'Нефритовый кулон',\r\n          type: 'accessory',\r\n          quality: 'uncommon',\r\n          description: 'Фамильная реликвия, усиливающая духовную энергию.'\r\n        });\r\n        break;\r\n        \r\n      case 'warrior':\r\n        items.push({\r\n          id: 'training_sword',\r\n          name: 'Тренировочный меч',\r\n          type: 'weapon',\r\n          quality: 'common',\r\n          description: 'Простой, но надёжный меч для тренировок.'\r\n        });\r\n        break;\r\n        \r\n      case 'scholar':\r\n        items.push({\r\n          id: 'ancient_scroll',\r\n          name: 'Древний свиток',\r\n          type: 'book',\r\n          quality: 'uncommon',\r\n          description: 'Содержит забытые знания о культивации.'\r\n        });\r\n        break;\r\n        \r\n      case 'merchant':\r\n        items.push({\r\n          id: 'spirit_stones',\r\n          name: 'Духовные камни',\r\n          type: 'currency',\r\n          quality: 'common',\r\n          quantity: 10,\r\n          description: 'Базовая валюта мира культивации.'\r\n        });\r\n        break;\r\n    }\r\n    \r\n    return items;\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <CreationPanel>\r\n        <Title>Создание персонажа</Title>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Column>\r\n              <Label>Имя персонажа</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Введите имя\"\r\n              />\r\n              \r\n              <Label>Пол</Label>\r\n              <Select\r\n                name=\"gender\"\r\n                value={formData.gender}\r\n                onChange={handleInputChange}\r\n              >\r\n                <option value=\"male\">Мужской</option>\r\n                <option value=\"female\">Женский</option>\r\n              </Select>\r\n            </Column>\r\n            \r\n            <Column>\r\n              <Label>Регион происхождения</Label>\r\n              <Select\r\n                name=\"region\"\r\n                value={formData.region}\r\n                onChange={handleInputChange}\r\n              >\r\n                {Object.entries(regions).map(([key, value]) => (\r\n                  <option key={key} value={key}>{value}</option>\r\n                ))}\r\n              </Select>\r\n              \r\n              <Label>Происхождение</Label>\r\n              <Select\r\n                name=\"background\"\r\n                value={formData.background}\r\n                onChange={handleInputChange}\r\n              >\r\n                {Object.entries(backgrounds).map(([key, value]) => (\r\n                  <option key={key} value={key}>{value}</option>\r\n                ))}\r\n              </Select>\r\n            </Column>\r\n          </Row>\r\n          \r\n          <Label>Описание персонажа</Label>\r\n          <Description\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Расскажите историю вашего персонажа...\"\r\n          />\r\n          \r\n          <StatsContainer>\r\n            <PointsRemaining>\r\n              Очков характеристик осталось: {pointsRemaining}\r\n            </PointsRemaining>\r\n            \r\n            {Object.entries(stats).map(([stat, value]) => (\r\n              <StatRow key={stat}>\r\n                <StatLabel>\r\n                  {stat === 'strength' && 'Сила'}\r\n                  {stat === 'intellect' && 'Интеллект'}\r\n                  {stat === 'spirit' && 'Дух'}\r\n                  {stat === 'agility' && 'Ловкость'}\r\n                  {stat === 'health' && 'Здоровье'}\r\n                </StatLabel>\r\n                <StatButton\r\n                  type=\"button\"\r\n                  onClick={() => handleStatChange(stat, -1)}\r\n                  disabled={value <= 10}\r\n                >\r\n                  -\r\n                </StatButton>\r\n                <StatValue>{value}</StatValue>\r\n                <StatButton\r\n                  type=\"button\"\r\n                  onClick={() => handleStatChange(stat, 1)}\r\n                  disabled={value >= 20 || pointsRemaining <= 0}\r\n                >\r\n                  +\r\n                </StatButton>\r\n              </StatRow>\r\n            ))}\r\n          </StatsContainer>\r\n          \r\n          {error && <ErrorMessage>{error}</ErrorMessage>}\r\n          \r\n          <Button type=\"submit\">\r\n            Начать путь к бессмертию\r\n          </Button>\r\n        </Form>\r\n      </CreationPanel>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CharacterCreationPage; ","import { useState, useEffect, useRef } from 'react';\r\nimport { useGame } from '../context/GameContext';\r\n\r\n/**\r\n * Пользовательский хук для получения данных о времени и погоде\r\n * Обеспечивает синхронизацию между различными компонентами отображения\r\n * @returns {Object} Объект с данными о времени и погоде\r\n */\r\nfunction useTimeWeather() {\r\n  const { state } = useGame();\r\n  \r\n  // Состояние для отслеживания обновлений и анимации\r\n  const [updating, setUpdating] = useState(false);\r\n  const [lastTime, setLastTime] = useState(null);\r\n  const [lastWeather, setLastWeather] = useState(null);\r\n  \r\n  // Получаем данные\r\n  const weather = state.weather || {};\r\n  const worldTime = state.world?.time || {};\r\n  \r\n  // Используем ТОЛЬКО данные из worldTime для времени и дня\r\n  // Важно: если время не указано в worldTime, используем безопасные значения по умолчанию\r\n  const hour = worldTime.hour !== undefined ? worldTime.hour : 12; // Дефолт - полдень\r\n  const minute = worldTime.minute !== undefined ? worldTime.minute : 0; // Дефолт - 0 минут\r\n  \r\n  // Форматируем время\r\n  const formattedTime = `${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\r\n  \r\n  // Определяем другие параметры\r\n  const isDayTime = hour >= 6 && hour < 20;\r\n  \r\n  // Получаем время суток, вычисляем на основе hour (не используем weather.daytimePeriod)\r\n  const daytimePeriod = \r\n    (hour >= 5 && hour < 7) ? 'dawn' :\r\n    (hour >= 7 && hour < 11) ? 'morning' :\r\n    (hour >= 11 && hour < 14) ? 'noon' :\r\n    (hour >= 14 && hour < 17) ? 'afternoon' :\r\n    (hour >= 17 && hour < 20) ? 'evening' :\r\n    (hour >= 20 && hour < 23) ? 'night' : 'deepNight';\r\n  \r\n  // Получаем текущую погоду (тут можно использовать weather, так как это данные о погоде, а не времени)\r\n  const currentWeather = weather.currentWeather || weather.weatherType || 'clear';\r\n  \r\n  // Получаем интенсивность погоды\r\n  const weatherIntensity = weather.weatherIntensity || 1.0;\r\n  \r\n  // Получаем погодные эффекты\r\n  const weatherEffects = weather.weatherEffects || null;\r\n  \r\n  // Получаем время до следующей смены погоды\r\n  const nextWeatherChange = weather.nextWeatherChange || 60;\r\n  \r\n  // Получаем данные о сезоне\r\n  const seasonDay = weather.seasonDay || worldTime.seasonDay || 1;\r\n  const seasonLength = weather.seasonLength || worldTime.seasonLength || 30;\r\n  \r\n  // Данные о событиях\r\n  const activeEvent = weather.activeEvent || null;\r\n  const eventRemainingTime = weather.eventRemainingTime || 0;\r\n  \r\n  // Получаем день ТОЛЬКО из worldTime - это ЕДИНСТВЕННЫЙ источник правды о дне\r\n  const dayCount = worldTime.day !== undefined ? worldTime.day : 1;\r\n  \r\n  // Получаем сезон ТОЛЬКО из worldTime\r\n  const season = worldTime.season || 'spring';\r\n  \r\n  // ОТКЛЮЧАЕМ ПРОВЕРКУ: state.world.time - это единственный источник правды\r\n  // Предупреждения о несоответствии игнорируются, так как worldTime - единственный важный источник \r\n  /*\r\n  useEffect(() => {\r\n    if (weather.hour !== undefined && worldTime.hour !== undefined && weather.hour !== worldTime.hour) {\r\n      console.warn('⚠️ Несоответствие времени:', {\r\n        worldTime: `${worldTime.hour}:${worldTime.minute}`,\r\n        weather: `${weather.hour}:${weather.minute}`,\r\n        dayWorld: worldTime.day,\r\n        dayWeather: weather.dayCount\r\n      });\r\n    }\r\n  }, [weather.hour, worldTime.hour, weather.minute, worldTime.minute, weather.dayCount, worldTime.day]);\r\n  */\r\n  \r\n  // Используем useRef для отслеживания обновлений состояния\r\n  const prevStateRef = useRef({ hour, minute, worldTime });\r\n  \r\n  // Принудительное обновление для компонентов\r\n  const [forceUpdateCounter, setForceUpdateCounter] = useState(0);\r\n  \r\n  // Обработчик ручных обновлений времени\r\n  useEffect(() => {\r\n    // Функция обработки события ручного обновления времени\r\n    const handleManualTimeUpdate = () => {\r\n      // Принудительно обновляем счетчик для перерисовки компонентов\r\n      setForceUpdateCounter(prev => prev + 1);\r\n      console.log('🔄 useTimeWeather: Получено событие manual_time_update, обновляем компоненты');\r\n    };\r\n    \r\n    // Добавляем обработчик события\r\n    window.addEventListener('manual_time_update', handleManualTimeUpdate);\r\n    \r\n    // Очищаем обработчик при размонтировании\r\n    return () => {\r\n      window.removeEventListener('manual_time_update', handleManualTimeUpdate);\r\n    };\r\n  }, []);\r\n  \r\n  // Отслеживаем изменения времени и погоды\r\n  useEffect(() => {\r\n    // Сравниваем текущие значения с предыдущими\r\n    const prevState = prevStateRef.current;\r\n    const hasTimeChanged = prevState.hour !== hour || prevState.minute !== minute;\r\n    \r\n    // Улучшенная проверка изменения дня для отслеживания перехода через полночь\r\n    // и отладки проблем с обновлением счётчика дней\r\n    const prevDay = prevState.worldTime?.day !== undefined ? Number(prevState.worldTime.day) : 1;\r\n    const currentDay = worldTime.day !== undefined ? Number(worldTime.day) : 1;\r\n    const hasDayChanged = currentDay !== prevDay;\r\n    \r\n    // Отладочный лог для отслеживания изменений дня\r\n    if (hasDayChanged) {\r\n      console.log('📅📅 useTimeWeather: ОБНАРУЖЕНО ИЗМЕНЕНИЕ ДНЯ:', {\r\n        prevDay,\r\n        currentDay,\r\n        diff: currentDay - prevDay,\r\n        worldTime,\r\n        prevWorldTime: prevState.worldTime\r\n      });\r\n    }\r\n    \r\n    // Определяем текущую погоду\r\n    const currentWeatherValue = weather.currentWeather || weather.weatherType || 'clear';\r\n    \r\n    // Если время или день изменились, обновляем счетчик для принудительного обновления\r\n    if (hasTimeChanged || hasDayChanged) {\r\n      setForceUpdateCounter(prev => prev + 1);\r\n      \r\n      // Для отладки\r\n      console.log('⏰ useTimeWeather: ИЗМЕНЕНИЕ ВРЕМЕНИ или ДНЯ!', {\r\n        oldHour: prevState.hour,\r\n        newHour: hour,\r\n        oldMinute: prevState.minute,\r\n        newMinute: minute,\r\n        oldDay: prevState.worldTime?.day,\r\n        newDay: worldTime.day,\r\n        forceUpdateCounter: forceUpdateCounter + 1\r\n      });\r\n    }\r\n    \r\n    // Если есть предыдущие значения и они изменились, запускаем анимацию обновления\r\n    if (lastTime !== null && (lastTime !== formattedTime || lastWeather !== currentWeatherValue)) {\r\n      setUpdating(true);\r\n      setTimeout(() => setUpdating(false), 500);\r\n      \r\n      // Для отладки\r\n      console.log('🔄 useTimeWeather обновляется:', {\r\n        oldTime: lastTime,\r\n        newTime: formattedTime,\r\n        oldWeather: lastWeather,\r\n        newWeather: currentWeatherValue,\r\n        day: dayCount,\r\n        worldTime,\r\n        forceUpdateCounter\r\n      });\r\n    }\r\n    \r\n    // Обновляем предыдущее состояние\r\n    prevStateRef.current = { hour, minute, worldTime };\r\n    \r\n    // Сохраняем текущие значения для следующего сравнения\r\n    setLastTime(formattedTime);\r\n    setLastWeather(currentWeatherValue);\r\n  }, [hour, minute, formattedTime, weather, worldTime, dayCount, lastTime, lastWeather, forceUpdateCounter]);\r\n  \r\n  // Включаем forceUpdateCounter в возвращаемый объект, чтобы компоненты реагировали на его изменение\r\n  return {\r\n    hour,\r\n    minute,\r\n    formattedTime,\r\n    isDayTime,\r\n    daytimePeriod,\r\n    currentWeather,\r\n    weatherIntensity,\r\n    weatherEffects,\r\n    dayCount,\r\n    season,\r\n    seasonDay,\r\n    seasonLength,\r\n    activeEvent,\r\n    eventRemainingTime,\r\n    nextWeatherChange,\r\n    updating,\r\n    worldTime,\r\n    weather,\r\n    forceUpdateCounter // Добавляем счетчик для принудительного обновления компонентов\r\n  };\r\n}\r\n\r\nexport default useTimeWeather;\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport useTimeWeather from '../../hooks/useTimeWeather';\r\n\r\n// Стилизованные компоненты для виджета времени и погоды\r\nconst WidgetContainer = styled.div`\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  border: 1px solid #444;\r\n  border-radius: 6px;\r\n  padding: 10px 15px;\r\n  color: #fff;\r\n  font-family: 'Arial', sans-serif;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst TimeSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nconst TimeIcon = styled.div`\r\n  font-size: 1.2rem;\r\n  color: ${props => props.isDayTime ? '#FFD700' : '#8A97CD'};\r\n`;\r\n\r\nconst TimeText = styled.div`\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  color: #eee;\r\n`;\r\n\r\nconst WeatherSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nconst WeatherIcon = styled.div`\r\n  font-size: 1.2rem;\r\n  color: ${props => {\r\n    switch (props.type) {\r\n      case 'clear': return '#FFD700'; // Золотой\r\n      case 'cloudy': return '#B0C4DE'; // Светло-синий\r\n      case 'rain': return '#4682B4'; // Синий\r\n      case 'thunderstorm': return '#483D8B'; // Темно-синий\r\n      case 'fog': return '#D3D3D3'; // Светло-серый\r\n      case 'snow': return '#F0F8FF'; // Белый с оттенком синего\r\n      default: return '#FFD700';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst WeatherText = styled.div`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst SeasonIndicator = styled.div`\r\n  height: 8px;\r\n  width: 100%;\r\n  background: ${props => {\r\n    switch (props.season) {\r\n      case 'spring': return 'linear-gradient(to right, #C5E8B7, #ABE098, #83D475)'; // Зеленый\r\n      case 'summer': return 'linear-gradient(to right, #FFD700, #FFA500, #FF8C00)'; // Золотой\r\n      case 'autumn': return 'linear-gradient(to right, #D2691E, #CD853F, #B8860B)'; // Коричневый\r\n      case 'winter': return 'linear-gradient(to right, #B0E0E6, #87CEEB, #1E90FF)'; // Голубой\r\n      default: return 'linear-gradient(to right, #C5E8B7, #ABE098, #83D475)';\r\n    }\r\n  }};\r\n  border-radius: 4px;\r\n  margin-top: 8px;\r\n`;\r\n\r\n// Маппинг названий погоды на русский язык\r\nconst weatherNames = {\r\n  clear: 'Ясно',\r\n  cloudy: 'Облачно',\r\n  rain: 'Дождь',\r\n  thunderstorm: 'Гроза',\r\n  fog: 'Туман',\r\n  snow: 'Снег'\r\n};\r\n\r\n// Маппинг времени суток на русский язык\r\nconst daytimeNames = {\r\n  dawn: 'Рассвет',\r\n  morning: 'Утро',\r\n  noon: 'Полдень',\r\n  afternoon: 'День',\r\n  evening: 'Вечер',\r\n  night: 'Ночь',\r\n  deepNight: 'Глубокая ночь'\r\n};\r\n\r\n// Иконки для времени суток\r\nconst daytimeIcons = {\r\n  dawn: '🌅',\r\n  morning: '🌄',\r\n  noon: '☀️',\r\n  afternoon: '🌞',\r\n  evening: '🌇',\r\n  night: '🌙',\r\n  deepNight: '🌚'\r\n};\r\n\r\n// Иконки для погоды\r\nconst weatherIcons = {\r\n  clear: '☀️',\r\n  cloudy: '☁️',\r\n  rain: '🌧️',\r\n  thunderstorm: '⛈️',\r\n  fog: '🌫️',\r\n  snow: '❄️'\r\n};\r\n\r\n// Русские названия сезонов\r\nconst seasonNames = {\r\n  spring: 'Весна',\r\n  summer: 'Лето',\r\n  autumn: 'Осень',\r\n  winter: 'Зима'\r\n};\r\n\r\n/**\r\n * Компонент для отображения текущего времени, погоды и сезона\r\n */\r\nfunction WorldTimeWidget() {\r\n  // Используем хук useTimeWeather для получения синхронизированных данных\r\n  const timeWeather = useTimeWeather();\r\n  \r\n  // Используем useReducer для принудительного перерисовывания компонента\r\n  const [_, forceUpdate] = useReducer(x => x + 1, 0);\r\n  \r\n  // Извлекаем необходимые данные из хука\r\n  const { \r\n    hour, \r\n    minute, \r\n    formattedTime,\r\n    isDayTime,\r\n    daytimePeriod,\r\n    currentWeather, \r\n    dayCount, \r\n    season,\r\n    forceUpdateCounter\r\n  } = timeWeather;\r\n  \r\n  // Если нет данных о времени, возвращаем null\r\n  if (hour === undefined && minute === undefined) return null;\r\n  \r\n  // Принудительное обновление компонента при изменении счетчика в хуке\r\n  useEffect(() => {\r\n    forceUpdate();\r\n    console.log('🔄 WorldTimeWidget: Принудительное обновление', {\r\n      forceUpdateCounter, \r\n      time: formattedTime,\r\n      day: dayCount\r\n    });\r\n  }, [forceUpdateCounter, formattedTime, dayCount]);\r\n  \r\n  return (\r\n    <WidgetContainer>\r\n      <TimeSection>\r\n        <TimeIcon isDayTime={isDayTime}>\r\n          {daytimeIcons[daytimePeriod]}\r\n        </TimeIcon>\r\n        <TimeText>\r\n          {formattedTime} ({daytimeNames[daytimePeriod]})\r\n        </TimeText>\r\n      </TimeSection>\r\n      \r\n      <WeatherSection>\r\n        <WeatherIcon type={currentWeather}>\r\n          {weatherIcons[currentWeather]}\r\n        </WeatherIcon>\r\n        <WeatherText>\r\n          {weatherNames[currentWeather]}\r\n        </WeatherText>\r\n      </WeatherSection>\r\n      \r\n      <div>\r\n        <div>{seasonNames[season]} (день {dayCount})</div>\r\n        <SeasonIndicator season={season} />\r\n      </div>\r\n    </WidgetContainer>\r\n  );\r\n}\r\n\r\nexport default WorldTimeWidget;\r\n","import React, { useEffect, useState, useReducer } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport useTimeWeather from '../../hooks/useTimeWeather';\r\n\r\n// Стилизованные компоненты\r\nconst ForecastContainer = styled.div`\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  border: 1px solid #555;\r\n  border-radius: 8px;\r\n  padding: 10px 15px;\r\n  margin-bottom: 15px;\r\n  color: #fff;\r\n`;\r\n\r\nconst ForecastTitle = styled.h3`\r\n  font-size: 1.1rem;\r\n  color: #ffd700;\r\n  margin: 0 0 15px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 8px;\r\n  border-bottom: 1px solid rgba(255, 215, 0, 0.3);\r\n  \r\n  span {\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst ForecastCards = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  overflow-x: auto;\r\n  padding-bottom: 5px;\r\n  \r\n  /* Стилизация скроллбара */\r\n  &::-webkit-scrollbar {\r\n    height: 6px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(30, 30, 30, 0.6);\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(150, 150, 150, 0.6);\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n\r\nconst WeatherCard = styled.div`\r\n  flex: 0 0 auto;\r\n  min-width: 180px;\r\n  background-color: rgba(50, 50, 50, 0.6);\r\n  border-radius: 6px;\r\n  padding: 12px;\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 4px;\r\n    background: ${props => {\r\n      switch (props.weatherType) {\r\n        case 'clear': return 'linear-gradient(to right, #FFD700, #FFA500)'; // Золотой\r\n        case 'cloudy': return 'linear-gradient(to right, #B0C4DE, #778899)'; // Синевато-серый\r\n        case 'rain': return 'linear-gradient(to right, #4682B4, #1E90FF)'; // Синий\r\n        case 'thunderstorm': return 'linear-gradient(to right, #483D8B, #6A5ACD)'; // Пурпурный\r\n        case 'fog': return 'linear-gradient(to right, #D3D3D3, #A9A9A9)'; // Серый\r\n        case 'snow': return 'linear-gradient(to right, #F0F8FF, #B0E2FF)'; // Голубой\r\n        default: return 'linear-gradient(to right, #FFD700, #FFA500)';\r\n      }\r\n    }};\r\n    border-radius: 6px 6px 0 0;\r\n  }\r\n`;\r\n\r\nconst CardHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst WeatherType = styled.div`\r\n  font-weight: bold;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n`;\r\n\r\nconst WeatherIcon = styled.span`\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nconst Intensity = styled.div`\r\n  font-size: 0.85rem;\r\n  color: ${props => {\r\n    // Цвет в зависимости от интенсивности\r\n    return props.value > 100 ? '#FF7F7F' : '#7FFF7F';\r\n  }};\r\n`;\r\n\r\nconst TimeInfo = styled.div`\r\n  font-size: 0.85rem;\r\n  color: #ccc;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst CurrentWeatherFlag = styled.div`\r\n  position: absolute;\r\n  top: -8px;\r\n  right: -8px;\r\n  background-color: rgba(255, 215, 0, 0.8);\r\n  color: #000;\r\n  font-size: 0.7rem;\r\n  font-weight: bold;\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  transform: rotate(5deg);\r\n`;\r\n\r\n// Иконки для погоды\r\nconst weatherIcons = {\r\n  clear: '☀️',\r\n  cloudy: '☁️',\r\n  rain: '🌧️',\r\n  thunderstorm: '⛈️',\r\n  fog: '🌫️',\r\n  snow: '❄️'\r\n};\r\n\r\n// Русские названия погоды\r\nconst weatherNames = {\r\n  clear: 'Ясно',\r\n  cloudy: 'Облачно',\r\n  rain: 'Дождь',\r\n  thunderstorm: 'Гроза',\r\n  fog: 'Туман',\r\n  snow: 'Снег'\r\n};\r\n\r\n/**\r\n * Компонент для отображения прогноза погоды\r\n */\r\nfunction ForecastWidget() {\r\n  const { state } = useGame();\r\n  const timeWeather = useTimeWeather();\r\n  const [_, forceUpdate] = useReducer(x => x + 1, 0);\r\n  \r\n  // Данные о прогнозе берем СТРОГО из state.weather, чтобы учитывать правильно прогноз погоды\r\n  const weather = state.weather || {};\r\n  const forecast = weather.forecast || [];\r\n  \r\n  // Текущая погода\r\n  const currentWeather = timeWeather.currentWeather;\r\n  const weatherIntensity = timeWeather.weatherIntensity;\r\n  const nextWeatherChange = weather.nextWeatherChange || 0;\r\n  const { actions } = useGame();\r\n  \r\n  // Отслеживаем nextWeatherChange и принудительно меняем погоду, если он равен 0\r\n  useEffect(() => {\r\n    if (nextWeatherChange === 0 && currentWeather) {\r\n      console.log('⚠️ ForecastWidget: Обнаружен нулевой nextWeatherChange, инициируем смену погоды');\r\n      // Принудительно меняем погоду с небольшой задержкой\r\n      const timer = setTimeout(() => {\r\n        actions.dispatch({ type: 'FORCE_WEATHER_CHANGE' });\r\n        console.log('🌦️ ForecastWidget: Выполнена принудительная смена погоды из-за нулевого таймера');\r\n      }, 500);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [nextWeatherChange, currentWeather, actions]);\r\n  \r\n  // Обновление при получении нового прогноза погоды\r\n  useEffect(() => {\r\n    forceUpdate();\r\n    console.log('🔄 ForecastWidget: прогноз погоды обновлен', forecast);\r\n  }, [JSON.stringify(forecast)]); // Используем JSON.stringify для правильного отслеживания изменений в массиве\r\n  \r\n  // Если нет прогноза, или если погода инициализируется, возвращаем пустой div\r\n  // ВАЖНО: Возвращаем пустой div вместо null, чтобы количество хуков между рендерами не менялось\r\n  if (!forecast || forecast.length === 0) {\r\n    return <div></div>;\r\n  }\r\n  \r\n  return (\r\n    <ForecastContainer>\r\n      <ForecastTitle>\r\n        <span>🔮</span> Прогноз погоды\r\n      </ForecastTitle>\r\n      \r\n      <ForecastCards>\r\n        {/* Текущая погода */}\r\n        <WeatherCard weatherType={currentWeather}>\r\n          <CurrentWeatherFlag>Текущая погода</CurrentWeatherFlag>\r\n          <CardHeader>\r\n            <WeatherType>\r\n              <WeatherIcon>{weatherIcons[currentWeather]}</WeatherIcon>\r\n              {weatherNames[currentWeather]}\r\n            </WeatherType>\r\n            <Intensity value={Math.min(100, Math.round(weatherIntensity * 100))}>\r\n              {Math.min(100, Math.round(weatherIntensity * 100))}%\r\n            </Intensity>\r\n          </CardHeader>\r\n          <TimeInfo>\r\n            До смены: {nextWeatherChange} мин. игрового времени\r\n          </TimeInfo>\r\n        </WeatherCard>\r\n        \r\n        {/* Прогнозы */}\r\n        {forecast.map((item, index) => (\r\n          <WeatherCard key={index} weatherType={item.type}>\r\n            <CardHeader>\r\n              <WeatherType>\r\n                <WeatherIcon>{weatherIcons[item.type]}</WeatherIcon>\r\n                {weatherNames[item.type]}\r\n              </WeatherType>\r\n              <Intensity value={Math.min(100, Math.round(item.intensity * 100))}>\r\n                {Math.min(100, Math.round(item.intensity * 100))}%\r\n              </Intensity>\r\n            </CardHeader>\r\n            <TimeInfo>\r\n              Через {item.timeToOccur} мин. игрового времени\r\n            </TimeInfo>\r\n            <TimeInfo>\r\n              Продолжительность: {item.duration} мин.\r\n            </TimeInfo>\r\n          </WeatherCard>\r\n        ))}\r\n      </ForecastCards>\r\n    </ForecastContainer>\r\n  );\r\n}\r\n\r\nexport default ForecastWidget;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { collectAllEffects } from '../../utils/effectsUtils';\r\n\r\n// Стили для панели эффектов\r\nconst EffectsContainer = styled.div`\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  border: 1px solid #444;\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  color: #fff;\r\n  font-family: 'Arial', sans-serif;\r\n  margin-bottom: 10px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst PanelTitle = styled.div`\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  color: #ffd700;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst EffectsList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst EffectItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst EffectIcon = styled.div`\r\n  font-size: 1.2rem;\r\n  color: ${props => {\r\n    switch (props.type) {\r\n      case 'positive': return '#7FFF7F'; // Зеленый для положительных эффектов\r\n      case 'negative': return '#FF7F7F'; // Красный для отрицательных эффектов\r\n      case 'neutral': return '#FFFF7F'; // Желтый для нейтральных эффектов\r\n      default: return '#FFFFFF'; // Белый по умолчанию\r\n    }\r\n  }};\r\n`;\r\n\r\nconst EffectName = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst EffectValue = styled.div`\r\n  font-weight: bold;\r\n  color: ${props => {\r\n    const value = parseFloat(props.value);\r\n    if (isNaN(value)) return '#FFFFFF';\r\n    return value > 0 ? '#7FFF7F' : value < 0 ? '#FF7F7F' : '#FFFFFF';\r\n  }};\r\n`;\r\n\r\n/**\r\n * Компонент для отображения активных эффектов и бонусов\r\n */\r\nfunction ActiveEffectsPanel() {\r\n  const { state } = useGame();\r\n  \r\n  // Получаем данные о погоде, мире и секте\r\n  const weather = state.world?.weather || {};\r\n  const currentLocation = state.world?.currentLocation || {};\r\n  \r\n  // Получаем и обрабатываем активные эффекты\r\n  const activeEffects = useMemo(() => {\r\n    // Используем функцию из effectsUtils.js для получения всех эффектов\r\n    // Она уже включает логику для объединения эффектов и русификации названий\r\n    const effects = collectAllEffects(state);\r\n    \r\n    // Сортируем эффекты: сначала положительные, затем нейтральные, затем отрицательные\r\n    return effects.sort((a, b) => {\r\n      // Сначала сортируем по типу отображения\r\n      if (a.displayType !== b.displayType) {\r\n        if (a.displayType === 'positive') return -1;\r\n        if (a.displayType === 'negative') return 1;\r\n        if (a.displayType === 'neutral' && b.displayType === 'positive') return 1;\r\n        if (a.displayType === 'neutral' && b.displayType === 'negative') return -1;\r\n      }\r\n      // Затем по имени\r\n      return a.name.localeCompare(b.name);\r\n    }).map(effect => ({\r\n      // Преобразуем эффекты в формат для отображения\r\n      name: effect.name,\r\n      value: effect.displayValue,\r\n      icon: effect.icon || '✨',\r\n      type: effect.displayType,\r\n      source: effect.source\r\n    }));\r\n  }, [state]);\r\n  \r\n  // Проверяем наличие активных эффектов\r\n  if (activeEffects.length === 0) return null;\r\n  \r\n  return (\r\n    <EffectsContainer>\r\n      <PanelTitle>\r\n        Активные эффекты ({activeEffects.length})\r\n      </PanelTitle>\r\n      \r\n      <EffectsList>\r\n        {activeEffects.map((effect, index) => (\r\n          <EffectItem key={index}>\r\n            <EffectIcon type={effect.type}>{effect.icon}</EffectIcon>\r\n            <EffectName>{effect.name}</EffectName>\r\n            <EffectValue value={effect.value}>{effect.value}</EffectValue>\r\n          </EffectItem>\r\n        ))}\r\n      </EffectsList>\r\n    </EffectsContainer>\r\n  );\r\n}\r\n\r\nexport default ActiveEffectsPanel;\r\n","import React, { useMemo } from 'react';\r\nimport styled, { keyframes, css } from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\n// Анимации для эффектов погоды\r\nconst rainAnimation = keyframes`\r\n  0% {\r\n    background-position: 0% 0%;\r\n  }\r\n  100% {\r\n    background-position: 20% 100%;\r\n  }\r\n`;\r\n\r\nconst snowAnimation = keyframes`\r\n  0% {\r\n    background-position: 0px 0px;\r\n  }\r\n  100% {\r\n    background-position: 500px 1000px, 400px 400px;\r\n  }\r\n`;\r\n\r\nconst fogAnimation = keyframes`\r\n  0% {\r\n    opacity: 0.5;\r\n    transform: translateX(-5%) translateY(0);\r\n  }\r\n  50% {\r\n    opacity: 0.55;\r\n    transform: translateX(0) translateY(0);\r\n  }\r\n  100% {\r\n    opacity: 0.5;\r\n    transform: translateX(5%) translateY(0);\r\n  }\r\n`;\r\n\r\nconst thunderAnimation = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  10% {\r\n    opacity: 0.8;\r\n  }\r\n  20% {\r\n    opacity: 0;\r\n  }\r\n  30% {\r\n    opacity: 0;\r\n  }\r\n  40% {\r\n    opacity: 0.4;\r\n  }\r\n  50% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\n// Стилизованный контейнер с визуальными эффектами\r\nconst EffectsContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  z-index: 100;\r\n  transition: all 1s ease-in-out;\r\n  \r\n  /* Фильтры для времени суток и погоды */\r\n  ${props => {\r\n    let filter = '';\r\n    \r\n    // Применяем фильтры времени суток\r\n    switch (props.daytimePeriod) {\r\n      case 'dawn':\r\n        filter += 'brightness(0.9) sepia(0.2)';\r\n        break;\r\n      case 'morning':\r\n        filter += 'brightness(1.1) contrast(1.05)';\r\n        break;\r\n      case 'noon':\r\n        filter += 'brightness(1.2) contrast(1.1)';\r\n        break;\r\n      case 'afternoon':\r\n        filter += 'brightness(1.15) contrast(1.05)';\r\n        break;\r\n      case 'evening':\r\n        filter += 'brightness(0.9) sepia(0.15)';\r\n        break;\r\n      case 'night':\r\n        filter += 'brightness(0.7) contrast(1.2) saturate(0.8)';\r\n        break;\r\n      case 'deepNight':\r\n        filter += 'brightness(0.6) contrast(1.3) saturate(0.7)';\r\n        break;\r\n      default:\r\n        filter += 'brightness(1) contrast(1)';\r\n    }\r\n    \r\n    return `filter: ${filter};`;\r\n  }}\r\n`;\r\n\r\n// Компонент оверлея для эффектов погоды\r\nconst WeatherOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  \r\n  ${props => {\r\n    // Эффекты в зависимости от погоды\r\n    switch (props.weatherType) {\r\n      case 'rain':\r\n        return css`\r\n          background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"><line x1=\"20\" y1=\"0\" x2=\"10\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"30\" y1=\"10\" x2=\"20\" y2=\"40\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"40\" y1=\"0\" x2=\"30\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"50\" y1=\"5\" x2=\"40\" y2=\"35\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"60\" y1=\"0\" x2=\"50\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"70\" y1=\"10\" x2=\"60\" y2=\"40\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"80\" y1=\"0\" x2=\"70\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"90\" y1=\"5\" x2=\"80\" y2=\"35\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/></svg>');\r\n          background-repeat: repeat;\r\n          opacity: ${props.intensity * 0.7};\r\n          animation: ${rainAnimation} 0.5s linear infinite;\r\n        `;\r\n      case 'snow':\r\n        return css`\r\n          background-image: \r\n            radial-gradient(circle at 50% 50%, white 0.5px, transparent 1px),\r\n            radial-gradient(circle at 70% 30%, white 0.5px, transparent 1px);\r\n          background-size: 100px 100px, 150px 150px;\r\n          opacity: ${props.intensity * 0.5};\r\n          animation: ${snowAnimation} 20s linear infinite;\r\n        `;\r\n      case 'fog':\r\n        return css`\r\n          background: linear-gradient(to bottom, rgba(255, 255, 255, 0.1), rgba(200, 200, 200, 0.2));\r\n          opacity: ${props.intensity * 0.5};\r\n          animation: ${fogAnimation} 20s ease-in-out infinite;\r\n        `;\r\n      case 'thunderstorm':\r\n        return css`\r\n          background-color: rgba(255, 255, 255, 0);\r\n          box-shadow: inset 0 0 100vw 0 rgba(255, 255, 255, 0);\r\n          animation: ${thunderAnimation} ${10 + Math.random() * 20}s ease-out infinite;\r\n          opacity: ${props.intensity * 0.2};\r\n        `;\r\n      case 'cloudy':\r\n        return css`\r\n          background-image: \r\n            radial-gradient(circle at 30% 40%, rgba(220, 220, 220, 0.3) 20px, transparent 30px),\r\n            radial-gradient(circle at 70% 50%, rgba(220, 220, 220, 0.3) 30px, transparent 40px);\r\n          background-size: 200px 200px;\r\n          opacity: ${props.intensity * 0.3};\r\n        `;\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n`;\r\n\r\n// Компонент для особых эффектов\r\nconst SpecialEffectsOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  z-index: 101;\r\n  \r\n  ${props => {\r\n    // Особые эффекты в зависимости от события\r\n    if (props.specialEvent) {\r\n      switch (props.specialEvent) {\r\n        case 'bloom':\r\n          return css`\r\n            box-shadow: inset 0 0 100px rgba(255, 230, 230, 0.3);\r\n            background: \r\n              radial-gradient(circle at 30% 40%, rgba(255, 200, 200, 0.1) 0px, transparent 100px),\r\n              radial-gradient(circle at 70% 60%, rgba(255, 200, 200, 0.1) 0px, transparent 100px);\r\n          `;\r\n        case 'spirit_tide':\r\n          return css`\r\n            background: linear-gradient(to bottom, \r\n              rgba(100, 150, 255, 0.05) 0%, \r\n              rgba(100, 200, 255, 0.1) 50%, \r\n              rgba(100, 150, 255, 0.05) 100%);\r\n          `;\r\n        case 'solstice':\r\n          return css`\r\n            box-shadow: inset 0 0 150px rgba(255, 200, 100, 0.3);\r\n          `;\r\n        case 'meteor_shower':\r\n          return css`\r\n            background-image: linear-gradient(to bottom right, rgba(255, 255, 255, 0) 80%, rgba(255, 255, 255, 0.2) 80.5%, rgba(255, 255, 255, 0) 81%);\r\n            background-size: 200px 200px;\r\n            animation: ${rainAnimation} 1s linear infinite;\r\n          `;\r\n        case 'ice_tribulation':\r\n          return css`\r\n            background: radial-gradient(circle at center, rgba(200, 230, 255, 0.1) 0%, transparent 100%);\r\n            box-shadow: inset 0 0 100px rgba(200, 230, 255, 0.2);\r\n          `;\r\n        case 'blizzard':\r\n          return css`\r\n            background-image: \r\n              radial-gradient(circle at 50% 50%, white 1px, transparent 2px),\r\n              radial-gradient(circle at 70% 30%, white 1px, transparent 2px);\r\n            background-size: 50px 50px, 70px 70px;\r\n            opacity: 0.7;\r\n            animation: ${snowAnimation} 5s linear infinite;\r\n          `;\r\n        default:\r\n          return '';\r\n      }\r\n    }\r\n    return '';\r\n  }}\r\n`;\r\n\r\n// Компонент для сезонных визуальных эффектов\r\nconst SeasonalOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  opacity: 0.2;\r\n  \r\n  ${props => {\r\n    // Эффекты в зависимости от сезона\r\n    switch (props.season) {\r\n      case 'spring':\r\n        return css`\r\n          box-shadow: inset 0 0 200px rgba(150, 255, 150, 0.1);\r\n        `;\r\n      case 'summer':\r\n        return css`\r\n          box-shadow: inset 0 0 200px rgba(255, 200, 100, 0.1);\r\n        `;\r\n      case 'autumn':\r\n        return css`\r\n          box-shadow: inset 0 0 200px rgba(255, 150, 50, 0.1);\r\n        `;\r\n      case 'winter':\r\n        return css`\r\n          box-shadow: inset 0 0 200px rgba(200, 230, 255, 0.1);\r\n        `;\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n`;\r\n\r\n// Компонент для локационных эффектов\r\nconst LocationEffectsOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  \r\n  ${props => {\r\n    // Эффекты в зависимости от локации\r\n    if (props.location) {\r\n      const locationEffects = {\r\n        'lake_of_reflections': css`\r\n          background: linear-gradient(to bottom, rgba(100, 200, 255, 0.03) 0%, rgba(100, 150, 255, 0.05) 100%);\r\n        `,\r\n        'fire_mountain': css`\r\n          box-shadow: inset 0 0 200px rgba(255, 100, 50, 0.1);\r\n        `,\r\n        'wind_plains': css`\r\n          opacity: 0.1;\r\n          background-image: linear-gradient(to right, transparent 90%, rgba(200, 200, 255, 0.2) 100%);\r\n          background-size: 100px 100%;\r\n          animation: ${fogAnimation} 30s linear infinite;\r\n        `,\r\n        'spirit_forest': css`\r\n          background-image: \r\n            radial-gradient(circle at 30% 40%, rgba(150, 255, 150, 0.1) 0px, transparent 50px),\r\n            radial-gradient(circle at 70% 60%, rgba(150, 255, 150, 0.1) 0px, transparent 50px);\r\n        `,\r\n        'frozen_peaks': css`\r\n          box-shadow: inset 0 0 150px rgba(200, 230, 255, 0.1);\r\n        `,\r\n        'desert_of_trials': css`\r\n          background: linear-gradient(to bottom, rgba(255, 200, 100, 0.05) 0%, rgba(255, 150, 50, 0.03) 100%);\r\n        `\r\n      };\r\n      \r\n      // Получаем ID локации\r\n      const locationId = props.location.id || 'unknown';\r\n      \r\n      // Возвращаем стиль для локации или пустую строку, если эффекта нет\r\n      return locationEffects[locationId] || '';\r\n    }\r\n    return '';\r\n  }}\r\n`;\r\n\r\n/**\r\n * Компонент для визуальных эффектов погоды, времени суток и сезонов\r\n */\r\nfunction VisualEffectsLayer() {\r\n  const { state } = useGame();\r\n  \r\n  // Получаем данные о погоде и времени\r\n  const weather = state.weather || {};\r\n  const worldState = state.world || {};\r\n  const currentLocation = worldState.currentLocation || {};\r\n  \r\n  // Вычисляем период суток, если его нет\r\n  const daytimePeriod = useMemo(() => {\r\n    const hour = weather.hour !== undefined ? weather.hour : (worldState.time?.hour || 12);\r\n    \r\n    if (weather.daytimePeriod) return weather.daytimePeriod;\r\n    \r\n    if (hour >= 5 && hour < 7) return 'dawn';\r\n    if (hour >= 7 && hour < 11) return 'morning';\r\n    if (hour >= 11 && hour < 14) return 'noon';\r\n    if (hour >= 14 && hour < 17) return 'afternoon';\r\n    if (hour >= 17 && hour < 20) return 'evening';\r\n    if (hour >= 20 && hour < 23) return 'night';\r\n    return 'deepNight';\r\n  }, [weather, worldState.time]);\r\n  \r\n  // Получаем текущую погоду\r\n  const currentWeather = weather.currentWeather || 'clear';\r\n  \r\n  // Получаем интенсивность погоды\r\n  const weatherIntensity = weather.weatherIntensity || 1.0;\r\n  \r\n  // Получаем активное особое событие\r\n  const specialEvent = weather.activeEvent || null;\r\n  \r\n  // Получаем текущий сезон\r\n  const currentSeason = weather.currentSeason || 'spring';\r\n  \r\n  return (\r\n    <EffectsContainer daytimePeriod={daytimePeriod}>\r\n      {/* Наложение эффектов погоды */}\r\n      <WeatherOverlay \r\n        weatherType={currentWeather} \r\n        intensity={weatherIntensity} \r\n      />\r\n      \r\n      {/* Наложение сезонных эффектов */}\r\n      <SeasonalOverlay season={currentSeason} />\r\n      \r\n      {/* Наложение особых событий */}\r\n      {specialEvent && (\r\n        <SpecialEffectsOverlay specialEvent={specialEvent} />\r\n      )}\r\n      \r\n      {/* Наложение локационных эффектов */}\r\n      <LocationEffectsOverlay location={currentLocation} />\r\n    </EffectsContainer>\r\n  );\r\n}\r\n\r\nexport default VisualEffectsLayer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport useTimeWeather from '../../hooks/useTimeWeather';\r\n\r\n// Стили для детальной информации о погоде\r\nconst DetailContainer = styled.div`\r\n  background-color: rgba(20, 20, 20, 0.9);\r\n  border: 1px solid #555;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  color: #fff;\r\n  font-family: 'Arial', sans-serif;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst DetailTitle = styled.h2`\r\n  font-size: 1.4rem;\r\n  color: #ffd700;\r\n  margin: 0 0 20px 0;\r\n  text-align: center;\r\n  border-bottom: 1px solid rgba(255, 215, 0, 0.3);\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 20px;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h3`\r\n  font-size: 1.2rem;\r\n  color: #ddd;\r\n  margin: 0 0 10px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 15px;\r\n`;\r\n\r\n// Горизонтальный Grid для прогноза погоды\r\nconst ForecastGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow-x: auto;\r\n  gap: 15px;\r\n  padding-bottom: 10px;\r\n  \r\n  /* Стилизация скроллбара */\r\n  &::-webkit-scrollbar {\r\n    height: 6px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(30, 30, 30, 0.6);\r\n    border-radius: 3px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(150, 150, 150, 0.6);\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n\r\nconst InfoBox = styled.div`\r\n  background-color: rgba(50, 50, 50, 0.6);\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n`;\r\n\r\nconst InfoRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  padding: 5px 0;\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  color: #fff;\r\n  font-weight: bold;\r\n  \r\n  ${props => props.highlight && `\r\n    color: #ffd700;\r\n  `}\r\n  \r\n  ${props => props.type === 'positive' && `\r\n    color: #7FFF7F;\r\n  `}\r\n  \r\n  ${props => props.type === 'negative' && `\r\n    color: #FF7F7F;\r\n  `}\r\n`;\r\n\r\nconst ForecastItem = styled.div`\r\n  background-color: rgba(50, 50, 50, 0.6);\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  position: relative;\r\n  min-width: 250px;\r\n  max-width: 300px;\r\n  flex: 1;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 4px;\r\n    background: ${props => {\r\n      switch (props.weatherType) {\r\n        case 'clear': return 'linear-gradient(to right, #FFD700, #FFA500)'; // Золотой\r\n        case 'cloudy': return 'linear-gradient(to right, #B0C4DE, #778899)'; // Синевато-серый\r\n        case 'rain': return 'linear-gradient(to right, #4682B4, #1E90FF)'; // Синий\r\n        case 'thunderstorm': return 'linear-gradient(to right, #483D8B, #6A5ACD)'; // Пурпурный\r\n        case 'fog': return 'linear-gradient(to right, #D3D3D3, #A9A9A9)'; // Серый\r\n        case 'snow': return 'linear-gradient(to right, #F0F8FF, #B0E2FF)'; // Голубой\r\n        default: return 'linear-gradient(to right, #FFD700, #FFA500)';\r\n      }\r\n    }};\r\n    border-radius: 6px 6px 0 0;\r\n  }\r\n`;\r\n\r\nconst ForecastHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ForecastIcon = styled.span`\r\n  font-size: 1.4rem;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst ForecastTime = styled.div`\r\n  font-size: 0.9rem;\r\n  color: #aaa;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  background-color: rgba(30, 30, 30, 0.6);\r\n  height: 8px;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: ${props => props.progress || 0}%;\r\n    background: ${props => {\r\n      switch (props.type) {\r\n        case 'time': return 'linear-gradient(to right, #4682B4, #87CEEB)';\r\n        case 'day': return 'linear-gradient(to right, #FFD700, #FFA500)';\r\n        case 'season': return 'linear-gradient(to right, #9370DB, #8A2BE2)';\r\n        default: return 'linear-gradient(to right, #4682B4, #87CEEB)';\r\n      }\r\n    }};\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  background: none;\r\n  border: none;\r\n  color: #aaa;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\n// Иконки для погоды\r\nconst weatherIcons = {\r\n  clear: '☀️',\r\n  cloudy: '☁️',\r\n  rain: '🌧️',\r\n  thunderstorm: '⛈️',\r\n  fog: '🌫️',\r\n  snow: '❄️'\r\n};\r\n\r\n// Русские названия погоды\r\nconst weatherNames = {\r\n  clear: 'Ясно',\r\n  cloudy: 'Облачно',\r\n  rain: 'Дождь',\r\n  thunderstorm: 'Гроза',\r\n  fog: 'Туман',\r\n  snow: 'Снег'\r\n};\r\n\r\n// Русские названия сезонов\r\nconst seasonNames = {\r\n  spring: 'Весна',\r\n  summer: 'Лето',\r\n  autumn: 'Осень',\r\n  winter: 'Зима'\r\n};\r\n\r\n// Иконки для сезонов\r\nconst seasonIcons = {\r\n  spring: '🌱',\r\n  summer: '☀️',\r\n  autumn: '🍂',\r\n  winter: '❄️'\r\n};\r\n\r\n// Русские названия событий\r\nconst eventNames = {\r\n  bloom: 'Цветение духовных трав',\r\n  spirit_tide: 'Прилив духовной энергии',\r\n  solstice: 'Солнцестояние',\r\n  meteor_shower: 'Метеоритный дождь',\r\n  harvest: 'Сбор урожая',\r\n  spirit_wind: 'Духовный ветер',\r\n  ice_tribulation: 'Ледяная трибуляция',\r\n  blizzard: 'Метель'\r\n};\r\n\r\n// Иконки для событий\r\nconst eventIcons = {\r\n  bloom: '🌸',\r\n  spirit_tide: '🌊',\r\n  solstice: '☀️',\r\n  meteor_shower: '☄️',\r\n  harvest: '🌾',\r\n  spirit_wind: '🌬️',\r\n  ice_tribulation: '❄️',\r\n  blizzard: '🌨️'\r\n};\r\n\r\n// Русские названия времени суток\r\nconst daytimeNames = {\r\n  dawn: 'Рассвет',\r\n  morning: 'Утро',\r\n  noon: 'Полдень',\r\n  afternoon: 'День',\r\n  evening: 'Вечер',\r\n  night: 'Ночь',\r\n  deepNight: 'Глубокая ночь'\r\n};\r\n\r\n// Иконки для времени суток\r\nconst daytimeIcons = {\r\n  dawn: '🌅',\r\n  morning: '🌄',\r\n  noon: '☀️',\r\n  afternoon: '🌞',\r\n  evening: '🌇',\r\n  night: '🌙',\r\n  deepNight: '🌚'\r\n};\r\n\r\n/**\r\n * Компонент детальной информации о погоде и времени\r\n */\r\nfunction WeatherDetailScreen({ onClose }) {\r\n  const { state } = useGame();\r\n  const timeWeather = useTimeWeather(); // Используем хук для получения единых данных о времени\r\n  \r\n  // Проверяем, что хук вернул данные\r\n  if (!timeWeather) return null;\r\n  \r\n  // Получаем данные о погоде и времени\r\n  const weather = state.weather || {};\r\n  const worldState = state.world || {};\r\n  const currentLocation = worldState.currentLocation || {};\r\n  \r\n  // Используем данные о времени из хука useTimeWeather\r\n  const hour = timeWeather.hour;\r\n  const minute = timeWeather.minute;\r\n  const daytimePeriod = timeWeather.daytimePeriod;\r\n  \r\n  // Форматируем время\r\n  const formattedTime = timeWeather.formattedTime;\r\n  \r\n  // Получаем текущую погоду и интенсивность из timeWeather\r\n  // Используем хук useTimeWeather как источник правды о текущей погоде\r\n  const currentWeather = timeWeather.currentWeather;\r\n  const weatherIntensity = timeWeather.weatherIntensity;\r\n  \r\n  // Получаем прогресс времени до следующей смены погоды\r\n  const nextWeatherChange = weather.nextWeatherChange || 0;\r\n  const weatherDuration = 120; // Примерное базовое время погоды\r\n  const weatherProgress = Math.max(0, Math.min(100, 100 - (nextWeatherChange / weatherDuration * 100)));\r\n  \r\n  // Получаем actions для диспатча\r\n  const { actions } = useGame();\r\n\r\n  // Для отладки - проверяем, соответствует ли погода в state.weather тому, что возвращает useTimeWeather\r\n  // Если нет, выводим предупреждение в консоль\r\n  React.useEffect(() => {\r\n    if (weather.currentWeather && weather.currentWeather !== currentWeather) {\r\n      console.warn('⚠️ Несоответствие погоды:', {\r\n        hookWeather: currentWeather,\r\n        stateWeather: weather.currentWeather\r\n      });\r\n    }\r\n  }, [currentWeather, weather.currentWeather]);\r\n  \r\n  // Проверка нулевого таймера и принудительная смена погоды\r\n  React.useEffect(() => {\r\n    if (nextWeatherChange === 0 && currentWeather) {\r\n      console.log('⚠️ WeatherDetailScreen: Обнаружен нулевой nextWeatherChange, инициируем смену погоды');\r\n      \r\n      // Принудительно меняем погоду с небольшой задержкой\r\n      const timer = setTimeout(() => {\r\n        actions.dispatch({ type: 'FORCE_WEATHER_CHANGE' });\r\n        console.log('🌦️ WeatherDetailScreen: Выполнена принудительная смена погоды из-за нулевого таймера');\r\n      }, 500);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [nextWeatherChange, currentWeather, actions]);\r\n  \r\n  // Получаем сезон и день сезона\r\n  const currentSeason = timeWeather.season;\r\n  const seasonDay = weather.seasonDay || 1;\r\n  const seasonLength = weather.seasonLength || 30;\r\n  const seasonProgress = (seasonDay / seasonLength) * 100;\r\n  \r\n  // Получаем активное особое событие\r\n  const activeEvent = weather.activeEvent || null;\r\n  const eventRemainingTime = weather.eventRemainingTime || 0;\r\n  \r\n  // Получаем прогноз погоды\r\n  const forecast = weather.forecast || [];\r\n  \r\n  // Прогресс дня (от 0 до 100%)\r\n  const dayProgress = ((hour * 60 + minute) / (24 * 60)) * 100;\r\n  \r\n  return (\r\n    <DetailContainer>\r\n      <CloseButton onClick={onClose}>×</CloseButton>\r\n      <DetailTitle>Детальная информация о погоде и времени</DetailTitle>\r\n      \r\n      <Section>\r\n        <SectionTitle>\r\n          <span>🕒 Текущее время и погода</span>\r\n        </SectionTitle>\r\n        <Grid>\r\n          <InfoBox>\r\n            <InfoRow>\r\n              <Label>Время:</Label>\r\n              <Value highlight>{formattedTime}</Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>Период суток:</Label>\r\n              <Value>\r\n                {daytimeIcons[daytimePeriod]} {daytimeNames[daytimePeriod]}\r\n              </Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>Суточный цикл:</Label>\r\n              <Value>\r\n                <ProgressBar progress={dayProgress} type=\"day\" />\r\n              </Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>День:</Label>\r\n              <Value>{timeWeather.dayCount}</Value>\r\n            </InfoRow>\r\n          </InfoBox>\r\n          \r\n          <InfoBox>\r\n            <InfoRow>\r\n              <Label>Текущая погода:</Label>\r\n              <Value>\r\n                {weatherIcons[currentWeather]} {weatherNames[currentWeather]}\r\n              </Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>Интенсивность:</Label>\r\n              <Value>{Math.min(100, Math.round(weatherIntensity * 100))}%</Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>До смены погоды:</Label>\r\n              <Value>{nextWeatherChange} мин. игрового времени</Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>Прогресс:</Label>\r\n              <Value>\r\n                <ProgressBar progress={weatherProgress} type=\"time\" />\r\n              </Value>\r\n            </InfoRow>\r\n          </InfoBox>\r\n        </Grid>\r\n      </Section>\r\n      \r\n      <Section>\r\n        <SectionTitle>\r\n          <span>🌡️ Сезон и события</span>\r\n        </SectionTitle>\r\n        <Grid>\r\n          <InfoBox>\r\n            <InfoRow>\r\n              <Label>Текущий сезон:</Label>\r\n              <Value>\r\n                {seasonIcons[currentSeason]} {seasonNames[currentSeason]}\r\n              </Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>День сезона:</Label>\r\n              <Value>{seasonDay} из {seasonLength}</Value>\r\n            </InfoRow>\r\n            <InfoRow>\r\n              <Label>Прогресс сезона:</Label>\r\n              <Value>\r\n                <ProgressBar progress={seasonProgress} type=\"season\" />\r\n              </Value>\r\n            </InfoRow>\r\n          </InfoBox>\r\n          \r\n          <InfoBox>\r\n            <InfoRow>\r\n              <Label>Активное событие:</Label>\r\n              <Value highlight={activeEvent !== null}>\r\n                {activeEvent ? `${eventIcons[activeEvent]} ${eventNames[activeEvent]}` : 'Нет активных событий'}\r\n              </Value>\r\n            </InfoRow>\r\n            {activeEvent && (\r\n              <>\r\n                <InfoRow>\r\n                  <Label>Оставшееся время:</Label>\r\n                  <Value>{eventRemainingTime} мин. игрового времени</Value>\r\n                </InfoRow>\r\n                <InfoRow>\r\n                  <Label>Прогресс события:</Label>\r\n                  <Value>\r\n                    <ProgressBar \r\n                      progress={100 - (eventRemainingTime / (weather.specialEvents?.[activeEvent]?.duration || 120) * 100)} \r\n                      type=\"time\" \r\n                    />\r\n                  </Value>\r\n                </InfoRow>\r\n              </>\r\n            )}\r\n          </InfoBox>\r\n        </Grid>\r\n      </Section>\r\n      \r\n      {forecast.length > 0 && (\r\n        <Section>\r\n          <SectionTitle>\r\n            <span>🔮 Прогноз погоды</span>\r\n          </SectionTitle>\r\n          <ForecastGrid>\r\n            {/* Первый элемент показывает текущую погоду для сравнения */}\r\n            <ForecastItem weatherType={currentWeather}>\r\n              <ForecastHeader>\r\n                <div>\r\n                  <ForecastIcon>{weatherIcons[currentWeather]}</ForecastIcon>\r\n                  {weatherNames[currentWeather]}\r\n                </div>\r\n                <Value type={weatherIntensity > 1 ? 'negative' : 'positive'}>\r\n                  {Math.round(weatherIntensity * 100)}%\r\n                </Value>\r\n              </ForecastHeader>\r\n              <ForecastTime>\r\n                <strong>Текущая погода</strong>\r\n              </ForecastTime>\r\n              <ForecastTime>\r\n                До смены: {nextWeatherChange} мин. игрового времени\r\n              </ForecastTime>\r\n            </ForecastItem>\r\n            \r\n            {/* Остальные элементы прогноза */}\r\n            {forecast.map((item, index) => (\r\n              <ForecastItem key={index} weatherType={item.type}>\r\n                <ForecastHeader>\r\n                  <div>\r\n                    <ForecastIcon>{weatherIcons[item.type]}</ForecastIcon>\r\n                    {weatherNames[item.type]}\r\n                  </div>\r\n                  <Value type={item.intensity > 1 ? 'negative' : 'positive'}>\r\n                    {Math.round(item.intensity * 100)}%\r\n                  </Value>\r\n                </ForecastHeader>\r\n                <ForecastTime>\r\n                  Через {item.timeToOccur} мин. игрового времени\r\n                </ForecastTime>\r\n                <ForecastTime>\r\n                  Продолжительность: {item.duration} мин. игрового времени\r\n                </ForecastTime>\r\n              </ForecastItem>\r\n            ))}\r\n          </ForecastGrid>\r\n        </Section>\r\n      )}\r\n      \r\n      <Section>\r\n        <SectionTitle>\r\n          <span>🏞️ Влияние локации</span>\r\n        </SectionTitle>\r\n        <InfoBox>\r\n          <InfoRow>\r\n            <Label>Текущая локация:</Label>\r\n            <Value highlight>\r\n              {currentLocation && currentLocation.name ? \r\n                currentLocation.name : \r\n                'Долина Начала' /* Исправляем \"Неизвестно\" на \"Долина Начала\" */}\r\n            </Value>\r\n          </InfoRow>\r\n          \r\n          {/* Динамически генерируем эффекты локации, как в MapTab.js */}\r\n          {(() => {\r\n            // Базовые бонусы локации\r\n            const locationEffects = {};\r\n            \r\n            // Устанавливаем тип 'forest' для Долины начала (если currentLocation равно null)\r\n            const locationType = currentLocation && currentLocation.type ? currentLocation.type : 'forest';\r\n            \r\n            // Используем определенный тип локации или 'forest' для Долины начала\r\n            {\r\n              // Используем locationType вместо проверки на наличие currentLocation\r\n              // Расчет особых эффектов для локации в зависимости от погоды и сезона\r\n              switch(locationType) {\r\n                case 'forest':\r\n                  locationEffects.baseEnergy = { value: '+5%', positive: true };\r\n                  locationEffects.basePerception = { value: '+10%', positive: true };\r\n                  \r\n                  if (currentSeason === 'spring') \r\n                    locationEffects.resourceBonus = { value: '+20% к сбору ресурсов', positive: true };\r\n                  if (currentWeather === 'rain') \r\n                    locationEffects.energyRecovery = { value: '+10% к восстановлению энергии', positive: true };\r\n                  break;\r\n                case 'mountain':\r\n                  locationEffects.baseStrength = { value: '+5%', positive: true };\r\n                  locationEffects.baseStamina = { value: '+15%', positive: true };\r\n                  \r\n                  if (currentSeason === 'winter') \r\n                    locationEffects.cultivationSpeed = { value: '+15% к скорости культивации', positive: true };\r\n                  if (currentWeather === 'thunderstorm') \r\n                    locationEffects.insightChance = { value: '+20% к шансу озарения', positive: true };\r\n                  break;\r\n                case 'water':\r\n                  locationEffects.baseWisdom = { value: '+10%', positive: true };\r\n                  locationEffects.baseHealing = { value: '+15%', positive: true };\r\n                  \r\n                  if (currentSeason === 'summer') \r\n                    locationEffects.cooldown = { value: '-20% к времени восстановления навыков', positive: true };\r\n                  if (currentWeather === 'clear') \r\n                    locationEffects.spiritualEnergy = { value: '+20% к получению духовной энергии', positive: true };\r\n                  break;\r\n                case 'city':\r\n                  locationEffects.baseSocial = { value: '+20%', positive: true };\r\n                  locationEffects.baseLuck = { value: '+5%', positive: true };\r\n                  \r\n                  if (currentSeason === 'autumn') \r\n                    locationEffects.tradeBonus = { value: '+15% к выгоде при торговле', positive: true };\r\n                  if (currentWeather === 'fog') \r\n                    locationEffects.stealthBonus = { value: '+30% к скрытности', positive: true };\r\n                  break;\r\n                case 'dungeon':\r\n                  locationEffects.baseAttack = { value: '+10%', positive: true };\r\n                  locationEffects.baseDefense = { value: '+5%', positive: true };\r\n                  \r\n                  if (currentSeason === 'winter') \r\n                    locationEffects.defenseBonus = { value: '+10% к защите', positive: true };\r\n                  if (currentWeather === 'thunderstorm') \r\n                    locationEffects.attackBonus = { value: '+20% к атаке', positive: true };\r\n                  break;\r\n              }\r\n              \r\n              // Эффекты времени суток для разных локаций\r\n              switch(daytimePeriod) {\r\n                case 'dawn':\r\n                  if (locationType === 'forest')\r\n                    locationEffects.dawnPerception = { value: '+15% к восприятию', positive: true };\r\n                  if (locationType === 'water')\r\n                    locationEffects.dawnMeditation = { value: '+25% к эффекту медитации', positive: true };\r\n                  break;\r\n                case 'afternoon':\r\n                  if (locationType === 'mountain')\r\n                    locationEffects.dayStamina = { value: '+10% к выносливости', positive: true };\r\n                  break;\r\n                case 'night':\r\n                case 'deepNight':\r\n                  if (locationType === 'water')\r\n                    locationEffects.nightEnergy = { value: '+20% к духовной энергии', positive: true };\r\n                  if (locationType === 'dungeon')\r\n                    locationEffects.nightMonsterStrength = { value: '+15% к силе монстров', positive: false };\r\n                  break;\r\n              }\r\n              \r\n              // Особые эффекты при активных событиях\r\n              if (activeEvent) {\r\n                switch(activeEvent) {\r\n                  case 'bloom':\r\n                    if (locationType === 'forest')\r\n                      locationEffects.bloomHerbQuality = { value: '+50% к качеству трав', positive: true };\r\n                    break;\r\n                  case 'spirit_tide':\r\n                    if (locationType === 'water')\r\n                      locationEffects.tideSpiritualPower = { value: '+40% к силе духовных техник', positive: true };\r\n                    break;\r\n                  case 'solstice':\r\n                    if (locationType === 'mountain')\r\n                      locationEffects.solsticeCultivation = { value: '+30% к скорости культивации', positive: true };\r\n                    break;\r\n                  case 'meteor_shower':\r\n                    locationEffects.meteorRareMaterials = { value: 'Шанс найти редкие материалы', positive: true };\r\n                    break;\r\n                }\r\n              }\r\n            }\r\n            \r\n            return (\r\n              <>\r\n                <InfoRow>\r\n                  <Label>Особенности локации:</Label>\r\n                  <Value>\r\n                    {Object.entries(locationEffects).filter(([key]) => key.startsWith('base')).length > 0 \r\n                      ? Object.entries(locationEffects)\r\n                          .filter(([key]) => key.startsWith('base'))\r\n                          .map(([key, effect]) => key.replace('base', '') + ': ' + effect.value)\r\n                          .join(', ')\r\n                      : 'Отсутствуют'\r\n                    }\r\n                  </Value>\r\n                </InfoRow>\r\n                <InfoRow>\r\n                  <Label>Погодные модификаторы:</Label>\r\n                  <Value>\r\n                    {Object.entries(locationEffects).filter(([key]) => !key.startsWith('base')).length > 0 \r\n                      ? Object.entries(locationEffects)\r\n                          .filter(([key]) => !key.startsWith('base'))\r\n                          .map(([key, effect]) => effect.value)\r\n                          .join(', ')\r\n                      : 'Отсутствуют'\r\n                    }\r\n                  </Value>\r\n                </InfoRow>\r\n              </>\r\n            );\r\n          })()}\r\n        </InfoBox>\r\n      </Section>\r\n    </DetailContainer>\r\n  );\r\n}\r\n\r\nexport default WeatherDetailScreen;\r\n","import styled, { keyframes, css } from 'styled-components';\r\n\r\n// Анимации\r\nconst pulse = keyframes`\r\n  0% {\r\n    box-shadow: 0 0 0 0 rgba(212, 175, 55, 0.7);\r\n  }\r\n  70% {\r\n    box-shadow: 0 0 0 10px rgba(212, 175, 55, 0);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 0 0 rgba(212, 175, 55, 0);\r\n  }\r\n`;\r\n\r\nconst glow = keyframes`\r\n  0% {\r\n    background-position: 0% 50%;\r\n  }\r\n  50% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\nexport const TabsContainer = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Tab = styled.div`\r\n  padding: 10px 20px;\r\n  background: ${props => props.active ? 'rgba(212, 175, 55, 0.2)' : 'rgba(0, 0, 0, 0.3)'};\r\n  color: ${props => props.active ? '#d4af37' : '#aaa'};\r\n  border: 1px solid ${props => props.active ? '#d4af37' : 'transparent'};\r\n  border-radius: 4px 4px 0 0;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.1);\r\n    color: #d4af37;\r\n  }\r\n  \r\n  ${props => props.active && css`\r\n    position: relative;\r\n    \r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: -1px;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 2px;\r\n      background: #d4af37;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const CultivationArea = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 300px;\r\n  gap: 20px;\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\nexport const Panel = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    box-shadow: 0 0 15px rgba(212, 175, 55, 0.2);\r\n  }\r\n`;\r\n\r\nexport const MeditationPanel = styled(Panel)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const ProgressInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const ProgressBar = styled.div`\r\n  width: 100%;\r\n  height: 20px;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  box-shadow: 0 0 5px rgba(212, 175, 55, 0.3);\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: ${props => props.progress}%;\r\n    background: linear-gradient(90deg, #d4af37, #ffdf00, #d4af37);\r\n    background-size: 200% 200%;\r\n    animation: ${glow} 3s ease infinite;\r\n    transition: width 0.3s ease;\r\n  }\r\n`;\r\n\r\nexport const ProgressText = styled.div`\r\n  text-align: center;\r\n  font-size: 0.9rem;\r\n  color: #aaa;\r\n`;\r\n\r\nexport const StatsList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const StatItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nexport const StatLabel = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\nexport const StatValue = styled.span`\r\n  color: #d4af37;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 12px;\r\n  background: ${props => props.active ? '#d4af37' : 'rgba(0, 0, 0, 0.2)'};\r\n  color: ${props => props.active ? '#000' : '#d4af37'};\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &:hover:not(:disabled) {\r\n    box-shadow: 0 0 10px rgba(212, 175, 55, 0.5);\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  &:active:not(:disabled) {\r\n    transform: translateY(1px);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #333;\r\n    color: #666;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  ${props => props.active && css`\r\n    animation: ${pulse} 2s infinite;\r\n  `}\r\n`;\r\n\r\nexport const BreakthroughRequirements = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n`;\r\n\r\nexport const Requirement = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  transition: all 0.3s ease;\r\n  \r\n  &::before {\r\n    content: '•';\r\n    color: ${props => props.met ? '#4caf50' : '#f44336'};\r\n    transition: color 0.3s ease;\r\n  }\r\n  \r\n  color: ${props => props.met ? '#4caf50' : '#f44336'};\r\n  \r\n  ${props => props.met && css`\r\n    text-shadow: 0 0 5px rgba(76, 175, 80, 0.5);\r\n  `}\r\n`;\r\n\r\nexport const ResourceList = styled.div`\r\n  margin-top: 15px;\r\n  padding: 10px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  animation: ${fadeIn} 0.5s ease-in-out;\r\n  box-shadow: 0 0 5px rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nexport const ResourceItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 5px 0;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.1);\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.05);\r\n  }\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\n// Специальный компонент для прогресс-бара трибуляции\r\nexport const TribulationProgressBar = styled(ProgressBar)`\r\n  box-shadow: 0 0 10px #d4af37;\r\n  animation: ${pulse} 2s infinite;\r\n`;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport * as S from './CultivationTabStyles';\r\nimport { useGame } from '../../context/GameContext';\r\nimport ResourceService from '../../services/resource-service';\r\n\r\n// Компонент для отображения содержимого вкладок\r\nconst TabContent = ({ active, children }) => {\r\n  if (!active) return null;\r\n  return <div>{children}</div>;\r\n};\r\n\r\nfunction CultivationTab() {\r\n  const { state, actions } = useGame();\r\n  const [isMeditating, setIsMeditating] = useState(false);\r\n  const [meditationProgress, setMeditationProgress] = useState(0);\r\n  const [activeTab, setActiveTab] = useState('meditation');\r\n  const [tribulationActive, setTribulationActive] = useState(false);\r\n  const [tribulationProgress, setTribulationProgress] = useState(0);\r\n  const [tribulationResult, setTribulationResult] = useState(null);\r\n  const [insightCooldown, setInsightCooldown] = useState(0);\r\n  \r\n  // Function to handle meditation completion\r\n  const handleMeditationComplete = useCallback(() => {\r\n    const cultivationEfficiency = state.player.cultivation.cultivationEfficiency || 1.0;\r\n    const experienceGain = Math.floor((Math.random() * 10 + 10) * cultivationEfficiency);\r\n    const energyGain = Math.floor((Math.random() * 5 + 5) * cultivationEfficiency);\r\n    \r\n    const bottleneckChance = 0.3;\r\n    // Используем текущее значение из состояния, гарантируя, что оно не будет undefined\r\n    const currentBottleneckProgress = state.player.cultivation.bottleneckProgress !== undefined \r\n      ? state.player.cultivation.bottleneckProgress \r\n      : 0;\r\n    \r\n    let newBottleneckProgress = currentBottleneckProgress;\r\n    \r\n    if (Math.random() < bottleneckChance) {\r\n      const bottleneckGain = Math.floor(Math.random() * 3) + 1;\r\n      newBottleneckProgress = currentBottleneckProgress + bottleneckGain;\r\n      \r\n      actions.addNotification({\r\n        message: `Вы продвинулись в преодолении \"бутылочного горлышка\" (+${bottleneckGain})`,\r\n        type: 'info'\r\n      });\r\n      \r\n      console.log(`Обновление прогресса бутылочного горлышка: ${currentBottleneckProgress} -> ${newBottleneckProgress}`);\r\n    }\r\n    \r\n    // Проверяем, не превысит ли опыт максимальное значение\r\n    const experienceToNextLevel = state.player.cultivation.experienceToNextLevel || 100;\r\n    const currentExperience = state.player.cultivation.experience || 0;\r\n    const newExperience = Math.min(currentExperience + experienceGain, experienceToNextLevel);\r\n    \r\n    // Если опыт достиг максимума, уведомляем пользователя\r\n    if (newExperience >= experienceToNextLevel) {\r\n      actions.addNotification({\r\n        message: 'Вы достигли максимального опыта для текущего уровня. Попробуйте совершить прорыв!',\r\n        type: 'success'\r\n      });\r\n    }\r\n    \r\n    actions.updateCultivation({\r\n      experience: newExperience,\r\n      energy: Math.min(\r\n        state.player.cultivation.energy + energyGain,\r\n        state.player.cultivation.maxEnergy\r\n      ),\r\n      bottleneckProgress: newBottleneckProgress\r\n    });\r\n  }, [actions, state.player.cultivation]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isMeditating) {\r\n      timer = setInterval(() => {\r\n        setMeditationProgress(prev => {\r\n          const newValue = prev + 1;\r\n          if (newValue >= 100) {\r\n            // Schedule the handleMeditationComplete call after the state update completes\r\n            setTimeout(() => {\r\n              handleMeditationComplete();\r\n            }, 0);\r\n            return 0;\r\n          }\r\n          return newValue;\r\n        });\r\n      }, 100);\r\n    }\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [isMeditating, handleMeditationComplete]);\r\n  \r\n  const experienceToNextLevel = state.player.cultivation.experienceToNextLevel || 100;\r\n  const hasEnoughExperience = state.player.cultivation.experience >= experienceToNextLevel;\r\n  const hasEnoughEnergy = state.player.cultivation.energy >= state.player.cultivation.maxEnergy * 0.8;\r\n  \r\n  const needsTribulation = state.player.cultivation.level % 3 === 0;\r\n  const passedTribulation = !needsTribulation || state.player.cultivation.tribulationCompleted;\r\n  \r\n  const bottleneckProgress = state.player.cultivation.bottleneckProgress || 0;\r\n  const requiredBottleneckProgress = state.player.cultivation.requiredBottleneckProgress || 100;\r\n  const passedBottleneck = bottleneckProgress >= requiredBottleneckProgress;\r\n  \r\n  // Проверка наличия требуемых ресурсов\r\n  const [requiredResources, setRequiredResources] = useState({});\r\n  const [hasRequiredResources, setHasRequiredResources] = useState(false);\r\n  \r\n  // Получение требуемых ресурсов для прорыва\r\n  useEffect(() => {\r\n    let isActive = true; // Flag to prevent state updates after unmount\r\n    \r\n    // Use a separate function to fetch resources that will only update state if component is still mounted\r\n    const fetchResources = async () => {\r\n      try {\r\n        // First extract all needed data from state to avoid state access during async operations\r\n        const requiredResources = state.player.cultivation.requiredResources || {};\r\n        const resourceIds = Object.keys(requiredResources);\r\n        const stage = state.player.cultivation.stage;\r\n        const level = state.player.cultivation.level;\r\n        const inventoryItems = state.player.inventory.items;\r\n        \r\n        const resourcesNeeded = {};\r\n        \r\n        // Define the standard resources outside of any async operations\r\n        const stageResources = {\r\n          'Закалка тела': {\r\n            'low_grade_herb': level * 5,\r\n            'basic_pill': level * 2\r\n          },\r\n          'Очищение Ци': {\r\n            'medium_grade_herb': level * 4,\r\n            'qi_pill': level * 3,\r\n            'spirit_stone': level * 3\r\n          },\r\n          'Золотое ядро': {\r\n            'rare_herb': level * 3,\r\n            'high_quality_pill': level * 2,\r\n            'spirit_mineral': level * 4,\r\n            'spirit_stone': level * 10\r\n          },\r\n          'Формирование души': {\r\n            'exotic_herb': level * 2,\r\n            'spirit_essence': level * 3,\r\n            'beast_soul': level * 1,\r\n            'spirit_mineral': level * 8,\r\n            'spirit_stone': level * 20\r\n          }\r\n        };\r\n        \r\n        // Use either the specified resources or default ones\r\n        if (resourceIds.length > 0) {\r\n          // Process pre-defined required resources\r\n          for (const id of resourceIds) {\r\n            try {\r\n              const resource = await ResourceService.getResourceById(id);\r\n              if (resource && isActive) {\r\n                resourcesNeeded[id] = {\r\n                  name: resource.name,\r\n                  amount: requiredResources[id],\r\n                  available: inventoryItems.filter(item => item.id === id).length\r\n                };\r\n              }\r\n            } catch (err) {\r\n              console.error(`Error fetching resource ${id}:`, err);\r\n            }\r\n          }\r\n        } else {\r\n          // Use standard resources based on cultivation stage\r\n          const currentStageResources = stageResources[stage] || stageResources['Закалка тела'];\r\n          \r\n          for (const id of Object.keys(currentStageResources)) {\r\n            try {\r\n              const resource = await ResourceService.getResourceById(id);\r\n              if (resource && isActive) {\r\n                resourcesNeeded[id] = {\r\n                  name: resource.name,\r\n                  amount: currentStageResources[id],\r\n                  available: inventoryItems.filter(item => item.id === id).length\r\n                };\r\n              }\r\n            } catch (err) {\r\n              console.error(`Error fetching resource ${id}:`, err);\r\n            }\r\n          }\r\n        }\r\n        \r\n        // Only update state if component is still mounted\r\n        if (isActive) {\r\n          setRequiredResources(resourcesNeeded);\r\n          \r\n          // Check if player has all required resources\r\n          const hasAll = Object.values(resourcesNeeded).every(resource => \r\n            resource.available >= resource.amount\r\n          );\r\n          \r\n          setHasRequiredResources(hasAll);\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при получении требуемых ресурсов:', error);\r\n        if (isActive) {\r\n          setHasRequiredResources(false);\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Schedule the fetch operation to happen outside the render cycle\r\n    const timeoutId = setTimeout(fetchResources, 0);\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      isActive = false;\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [state.player.cultivation.stage, state.player.cultivation.level, state.player.cultivation.requiredResources, state.player.inventory.items]);\r\n  \r\n  const canBreakthrough = hasEnoughExperience && hasEnoughEnergy && passedTribulation && passedBottleneck && hasRequiredResources;\r\n  \r\n  const handleBreakthrough = useCallback(() => {\r\n    if (!canBreakthrough) return;\r\n    \r\n    // Schedule state updates outside the render cycle\r\n    setTimeout(() => {\r\n      // Extract all needed values from state first\r\n      const spirit = state.player.stats.spirit || 0;\r\n      const intellect = state.player.stats.intellect || 0;\r\n      const currentLevel = state.player.cultivation.level || 1;\r\n      const currentStage = state.player.cultivation.stage || 'Закалка тела';\r\n      const currentExpToNextLevel = state.player.cultivation.experienceToNextLevel || 100;\r\n      const currentMaxEnergy = state.player.cultivation.maxEnergy || 100;\r\n      const currentUnassignedPoints = state.player.stats.unassignedPoints || 0;\r\n      const currentExp = state.player.cultivation.experience || 0;\r\n      const currentEnergy = state.player.cultivation.energy || 0;\r\n      \r\n      const successChance = 0.5 + (spirit / 100) + (intellect / 200);\r\n      \r\n      if (Math.random() < successChance) {\r\n        const newLevel = currentLevel + 1;\r\n        const isStageUp = newLevel > 9;\r\n        \r\n        if (isStageUp) {\r\n          const stages = ['Закалка тела', 'Очищение Ци', 'Золотое ядро', 'Формирование души'];\r\n          const currentStageIndex = stages.indexOf(currentStage);\r\n          \r\n          if (currentStageIndex < stages.length - 1) {\r\n            const newStage = stages[currentStageIndex + 1];\r\n            const newMaxEnergy = currentMaxEnergy * 1.5;\r\n            \r\n            actions.updateCultivation({\r\n              stage: newStage,\r\n              level: 1,\r\n              experience: 0,\r\n              experienceToNextLevel: currentExpToNextLevel * 2,\r\n              maxEnergy: newMaxEnergy,\r\n              energy: newMaxEnergy,\r\n              tribulationCompleted: false,\r\n              bottleneckProgress: 0,\r\n              requiredBottleneckProgress: 100\r\n            });\r\n            \r\n            actions.addNotification({\r\n              message: `Поздравляем! Вы достигли ступени ${newStage}!`,\r\n              type: 'success'\r\n            });\r\n          }\r\n        } else {\r\n          const newMaxEnergy = Math.floor(currentMaxEnergy * 1.1);\r\n          \r\n          actions.updateCultivation({\r\n            level: newLevel,\r\n            experience: 0,\r\n            experienceToNextLevel: Math.floor(currentExpToNextLevel * 1.2),\r\n            maxEnergy: newMaxEnergy,\r\n            energy: newMaxEnergy,\r\n            tribulationCompleted: false,\r\n            bottleneckProgress: 0,\r\n            requiredBottleneckProgress: newLevel * 10\r\n          });\r\n          \r\n          actions.updatePlayerStats({\r\n            unassignedPoints: currentUnassignedPoints + 5\r\n          });\r\n          \r\n          actions.addNotification({\r\n            message: `Вы успешно повысили уровень культивации! Получено 5 очков характеристик.`,\r\n            type: 'success'\r\n          });\r\n        }\r\n      } else {\r\n        actions.updateCultivation({\r\n          energy: Math.floor(currentEnergy * 0.5),\r\n          experience: Math.floor(currentExp * 0.8)\r\n        });\r\n        \r\n        actions.addNotification({\r\n          message: 'Прорыв не удался. Вы потеряли часть энергии и опыта.',\r\n          type: 'error'\r\n        });\r\n      }\r\n    }, 0);\r\n  }, [actions, canBreakthrough, state.player.cultivation, state.player.stats]);\r\n  \r\n  // Обработка трибуляции\r\n  useEffect(() => {\r\n    let timer;\r\n    if (tribulationActive && tribulationProgress < 100 && !tribulationResult) {\r\n      timer = setInterval(() => {\r\n        // Создаем случайные события вне функции обновления состояния\r\n        if (Math.random() < 0.1) {\r\n          const eventType = Math.floor(Math.random() * 3);\r\n          const messages = [\r\n            {\r\n              message: 'Вы чувствуете, как энергия трибуляции усиливается!',\r\n              type: 'warning'\r\n            },\r\n            {\r\n              message: 'Ваше тело испытывает сильную боль, но вы продолжаете сопротивляться!',\r\n              type: 'warning'\r\n            },\r\n            {\r\n              message: 'Вы ощущаете, как ваша духовная сила растет в процессе испытания!',\r\n              type: 'info'\r\n            }\r\n          ];\r\n          actions.addNotification(messages[eventType]);\r\n        }\r\n        \r\n        setTribulationProgress(prev => {\r\n          const newProgress = prev + (Math.random() * 2 + 0.5);\r\n          \r\n          // Завершение трибуляции\r\n          if (newProgress >= 100) {\r\n            // Используем setTimeout для вызова функции после обновления состояния\r\n            setTimeout(() => {\r\n              completeTribulation();\r\n            }, 0);\r\n            return 100;\r\n          }\r\n          \r\n          return newProgress;\r\n        });\r\n      }, 500);\r\n    }\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [tribulationActive, tribulationResult]); // Убрал tribulationProgress из зависимостей\r\n  \r\n  // Завершение трибуляции\r\n  const completeTribulation = useCallback(() => {\r\n    // Use setTimeout to defer state updates\r\n    setTimeout(() => {\r\n      // Extract state values first to avoid accessing state during render\r\n      const spirit = state.player.stats.spirit || 0;\r\n      const intellect = state.player.stats.intellect || 0;\r\n      const experienceToNextLevel = state.player.cultivation.experienceToNextLevel || 100;\r\n      const currentExperience = state.player.cultivation.experience || 0;\r\n      const maxEnergy = state.player.cultivation.maxEnergy || 100;\r\n      const currentEnergy = state.player.cultivation.energy || 0;\r\n      const health = state.player.health || 100;\r\n      \r\n      // Определяем успешность прохождения трибуляции\r\n      const successChance = 0.6 + (spirit / 150) + (intellect / 250);\r\n      const success = Math.random() < successChance;\r\n      \r\n      if (success) {\r\n        const rewardExperience = Math.floor(experienceToNextLevel * 0.2);\r\n        const energyReward = Math.floor(maxEnergy * 0.2);\r\n        const newExperience = Math.min(currentExperience + rewardExperience, experienceToNextLevel);\r\n        \r\n        setTribulationResult({\r\n          success: true,\r\n          message: 'Вы успешно прошли трибуляцию!',\r\n          rewards: {\r\n            experience: rewardExperience,\r\n            energy: energyReward\r\n          }\r\n        });\r\n        \r\n        // Если опыт достиг максимума после трибуляции, уведомляем пользователя\r\n        if (newExperience >= experienceToNextLevel) {\r\n          actions.addNotification({\r\n            message: 'Вы достигли максимального опыта для текущего уровня. Попробуйте совершить прорыв!',\r\n            type: 'success'\r\n          });\r\n        }\r\n        \r\n        actions.updateCultivation({\r\n          tribulationCompleted: true,\r\n          experience: newExperience,\r\n          energy: Math.min(currentEnergy + energyReward, maxEnergy)\r\n        });\r\n        \r\n        actions.addNotification({\r\n          message: 'Поздравляем! Вы успешно прошли трибуляцию и получили награду!',\r\n          type: 'success'\r\n        });\r\n      } else {\r\n        const energyPenalty = Math.floor(currentEnergy * 0.3);\r\n        const healthPenalty = Math.floor(health * 0.2);\r\n        \r\n        setTribulationResult({\r\n          success: false,\r\n          message: 'Вы не смогли пройти трибуляцию.',\r\n          penalties: {\r\n            energy: energyPenalty,\r\n            health: healthPenalty\r\n          }\r\n        });\r\n        \r\n        actions.updateCultivation({\r\n          energy: Math.floor(currentEnergy * 0.7)\r\n        });\r\n        \r\n        actions.addNotification({\r\n          message: 'Вы не смогли пройти трибуляцию и потеряли часть энергии.',\r\n          type: 'error'\r\n        });\r\n      }\r\n      \r\n      setTribulationActive(false);\r\n    }, 0);\r\n  }, [actions, state.player.cultivation, state.player.stats, state.player.health]);\r\n  \r\n  // Начало трибуляции\r\n  const handleStartTribulation = useCallback(() => {\r\n    if (tribulationActive) return;\r\n    \r\n    // Check energy requirements\r\n    const maxEnergy = state.player.cultivation.maxEnergy || 100;\r\n    const currentEnergy = state.player.cultivation.energy || 0;\r\n    \r\n    if (currentEnergy < maxEnergy * 0.5) {\r\n      actions.addNotification({\r\n        message: 'Недостаточно энергии для начала трибуляции. Требуется минимум 50% от максимума.',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Schedule state updates outside the render cycle\r\n    setTimeout(() => {\r\n      // Extract all values before updating state\r\n      const newEnergy = Math.floor(currentEnergy * 0.8);\r\n      \r\n      setTribulationActive(true);\r\n      setTribulationProgress(0);\r\n      setTribulationResult(null);\r\n      \r\n      actions.updateCultivation({\r\n        energy: newEnergy\r\n      });\r\n      \r\n      actions.addNotification({\r\n        message: 'Вы начали трибуляцию. Сосредоточьтесь и преодолейте испытание!',\r\n        type: 'info'\r\n      });\r\n    }, 0);\r\n  }, [actions, state.player.cultivation, tribulationActive]);\r\n  \r\n  const handleGainInsight = useCallback(() => {\r\n    if (insightCooldown > 0) return;\r\n    \r\n    // Schedule the state updates outside of the render cycle\r\n    setTimeout(() => {\r\n      try {\r\n        const currentEfficiency = state.player.cultivation.cultivationEfficiency || 1.0;\r\n        const newEfficiency = Math.min(currentEfficiency + 0.1, 2.0);\r\n        const currentInsightPoints = state.player.cultivation.insightPoints || 0;\r\n        \r\n        const insightResult = {\r\n          success: true,\r\n          message: 'Вы получили прозрение! Эффективность культивации увеличена на 10%.',\r\n          effect: {\r\n            cultivationEfficiency: newEfficiency\r\n          }\r\n        };\r\n        \r\n        if (insightResult.success) {\r\n          actions.updateCultivation({\r\n            cultivationEfficiency: newEfficiency,\r\n            insightPoints: currentInsightPoints + 1\r\n          });\r\n          \r\n          setInsightCooldown(24 * 60 * 60);\r\n          \r\n          actions.addNotification({\r\n            message: insightResult.message,\r\n            type: 'success'\r\n          });\r\n        } else {\r\n          actions.addNotification({\r\n            message: insightResult.message || 'Не удалось получить прозрение.',\r\n            type: 'error'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при получении прозрения:', error);\r\n        actions.addNotification({\r\n          message: 'Произошла ошибка при получении прозрения.',\r\n          type: 'error'\r\n        });\r\n      }\r\n    }, 0);\r\n  }, [actions, insightCooldown, state.player.cultivation]);\r\n  \r\n  return (\r\n    <S.Container>\r\n      <S.TabsContainer>\r\n        <S.Tab \r\n          active={activeTab === 'meditation'} \r\n          onClick={() => setActiveTab('meditation')}\r\n        >\r\n          Медитация\r\n        </S.Tab>\r\n        <S.Tab \r\n          active={activeTab === 'breakthrough'} \r\n          onClick={() => setActiveTab('breakthrough')}\r\n        >\r\n          Прорыв\r\n        </S.Tab>\r\n        <S.Tab \r\n          active={activeTab === 'tribulation'} \r\n          onClick={() => setActiveTab('tribulation')}\r\n        >\r\n          Трибуляция\r\n        </S.Tab>\r\n        <S.Tab \r\n          active={activeTab === 'insight'} \r\n          onClick={() => setActiveTab('insight')}\r\n        >\r\n          Прозрение\r\n        </S.Tab>\r\n      </S.TabsContainer>\r\n      \r\n      <TabContent active={activeTab === 'meditation'}>\r\n        <S.CultivationArea>\r\n          <S.MeditationPanel>\r\n            <h3>Медитация</h3>\r\n            <S.ProgressInfo>\r\n              <S.ProgressBar progress={meditationProgress} />\r\n              <S.ProgressText>\r\n                {isMeditating ? 'Медитация...' : 'Нажмите кнопку для начала медитации'}\r\n              </S.ProgressText>\r\n            </S.ProgressInfo>\r\n            <S.Button \r\n              active={isMeditating}\r\n              onClick={() => setIsMeditating(!isMeditating)}\r\n            >\r\n              {isMeditating ? 'Прервать медитацию' : 'Начать медитацию'}\r\n            </S.Button>\r\n          </S.MeditationPanel>\r\n          \r\n          <S.Panel>\r\n            <h3>Характеристики культивации</h3>\r\n            <S.StatsList>\r\n              <S.StatItem>\r\n                <S.StatLabel>Ступень</S.StatLabel>\r\n                <S.StatValue>{state.player.cultivation.stage}</S.StatValue>\r\n              </S.StatItem>\r\n              <S.StatItem>\r\n                <S.StatLabel>Уровень</S.StatLabel>\r\n                <S.StatValue>{state.player.cultivation.level}</S.StatValue>\r\n              </S.StatItem>\r\n              <S.StatItem>\r\n                <S.StatLabel>Опыт</S.StatLabel>\r\n                <S.StatValue>\r\n                  {state.player.cultivation.experience || 0}/{experienceToNextLevel || 100}\r\n                </S.StatValue>\r\n              </S.StatItem>\r\n              <S.StatItem>\r\n                <S.StatLabel>Духовная энергия</S.StatLabel>\r\n                <S.StatValue>\r\n                  {state.player.cultivation.energy}/{state.player.cultivation.maxEnergy}\r\n                </S.StatValue>\r\n              </S.StatItem>\r\n              <S.StatItem>\r\n                <S.StatLabel>Эффективность</S.StatLabel>\r\n                <S.StatValue>\r\n                  {Math.floor((state.player.cultivation.cultivationEfficiency || 1.0) * 100)}%\r\n                </S.StatValue>\r\n              </S.StatItem>\r\n            </S.StatsList>\r\n          </S.Panel>\r\n        </S.CultivationArea>\r\n        \r\n        <S.Panel>\r\n          <h3>Прогресс \"бутылочного горлышка\"</h3>\r\n          <S.ProgressInfo>\r\n            <S.ProgressBar progress={(bottleneckProgress / requiredBottleneckProgress) * 100} />\r\n            <S.ProgressText>\r\n              {bottleneckProgress}/{requiredBottleneckProgress}\r\n            </S.ProgressText>\r\n          </S.ProgressInfo>\r\n        </S.Panel>\r\n      </TabContent>\r\n      \r\n      <TabContent active={activeTab === 'breakthrough'}>\r\n        <S.Panel>\r\n          <h3>Прорыв</h3>\r\n          \r\n          <S.BreakthroughRequirements>\r\n            <S.Requirement met={hasEnoughExperience}>\r\n              Опыт: {state.player.cultivation.experience}/{experienceToNextLevel || 100}\r\n            </S.Requirement>\r\n            <S.Requirement met={hasEnoughEnergy}>\r\n              Энергия: {state.player.cultivation.energy} (требуется {Math.floor(state.player.cultivation.maxEnergy * 0.8)})\r\n            </S.Requirement>\r\n            <S.Requirement met={passedBottleneck}>\r\n              Бутылочное горлышко: {bottleneckProgress}/{requiredBottleneckProgress}\r\n            </S.Requirement>\r\n            {needsTribulation && (\r\n              <S.Requirement met={passedTribulation}>\r\n                Трибуляция: {passedTribulation ? 'Пройдена' : 'Не пройдена'}\r\n              </S.Requirement>\r\n            )}\r\n            <S.Requirement met={hasRequiredResources}>\r\n              Ресурсы: {hasRequiredResources ? 'Достаточно' : (\r\n                <span>\r\n                  Недостаточно: {Object.values(requiredResources)\r\n                    .filter(resource => resource.available < resource.amount)\r\n                    .map(resource => `${resource.name} (${resource.available}/${resource.amount})`)\r\n                    .join(', ')}\r\n                </span>\r\n              )}\r\n            </S.Requirement>\r\n          </S.BreakthroughRequirements>\r\n          \r\n          {Object.keys(requiredResources).length > 0 && (\r\n            <S.ResourceList>\r\n              <h4>Требуемые ресурсы:</h4>\r\n              {Object.values(requiredResources).map((resource, index) => (\r\n                <S.ResourceItem key={index}>\r\n                  <span>{resource.name}</span>\r\n                  <span style={{ color: resource.available >= resource.amount ? '#4caf50' : '#f44336' }}>\r\n                    {resource.available}/{resource.amount}\r\n                  </span>\r\n                </S.ResourceItem>\r\n              ))}\r\n            </S.ResourceList>\r\n          )}\r\n          \r\n          <S.Button \r\n            onClick={handleBreakthrough}\r\n            disabled={!canBreakthrough}\r\n            style={{ marginTop: '15px', width: '100%' }}\r\n          >\r\n            Попытаться совершить прорыв\r\n          </S.Button>\r\n        </S.Panel>\r\n      </TabContent>\r\n      \r\n      <TabContent active={activeTab === 'tribulation'}>\r\n        <S.Panel>\r\n          <h3>Трибуляция</h3>\r\n          \r\n          {needsTribulation && !passedTribulation && (\r\n            <>\r\n              {!tribulationActive && !tribulationResult && (\r\n                <>\r\n                  <p>\r\n                    Для перехода на следующий уровень культивации вам необходимо пройти трибуляцию.\r\n                    Это испытание проверит вашу силу духа и тела.\r\n                  </p>\r\n                  <S.Button \r\n                    onClick={handleStartTribulation}\r\n                    disabled={state.player.cultivation.energy < state.player.cultivation.maxEnergy * 0.5}\r\n                    style={{ marginTop: '15px', width: '100%' }}\r\n                  >\r\n                    Начать трибуляцию (требуется 50% энергии)\r\n                  </S.Button>\r\n                </>\r\n              )}\r\n              \r\n              {tribulationActive && !tribulationResult && (\r\n                <>\r\n                  <p>Вы проходите трибуляцию. Сосредоточьтесь и преодолейте испытание!</p>\r\n                  <S.ProgressInfo>\r\n                  <S.TribulationProgressBar \r\n                    progress={tribulationProgress} \r\n                  />\r\n                    <S.ProgressText>\r\n                      Прогресс: {Math.floor(tribulationProgress)}%\r\n                    </S.ProgressText>\r\n                  </S.ProgressInfo>\r\n                </>\r\n              )}\r\n              \r\n              {tribulationResult && (\r\n                <div>\r\n                  <h4 style={{ color: tribulationResult.success ? '#4caf50' : '#f44336' }}>\r\n                    {tribulationResult.message}\r\n                  </h4>\r\n                  \r\n                  {tribulationResult.success && tribulationResult.rewards && (\r\n                    <div>\r\n                      <p>Вы получили награду:</p>\r\n                      <ul>\r\n                        {tribulationResult.rewards.experience && (\r\n                          <li>Опыт культивации: +{tribulationResult.rewards.experience}</li>\r\n                        )}\r\n                        {tribulationResult.rewards.energy && (\r\n                          <li>Духовная энергия: +{tribulationResult.rewards.energy}</li>\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {!tribulationResult.success && tribulationResult.penalties && (\r\n                    <div>\r\n                      <p>Вы понесли потери:</p>\r\n                      <ul>\r\n                        {tribulationResult.penalties.energy && (\r\n                          <li>Духовная энергия: -{tribulationResult.penalties.energy}</li>\r\n                        )}\r\n                        {tribulationResult.penalties.health && (\r\n                          <li>Здоровье: -{tribulationResult.penalties.health}</li>\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <S.Button \r\n                    onClick={() => setTribulationResult(null)}\r\n                    style={{ marginTop: '15px', width: '100%' }}\r\n                  >\r\n                    {tribulationResult.success ? 'Продолжить культивацию' : 'Попробовать снова позже'}\r\n                  </S.Button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n          \r\n          {(!needsTribulation || passedTribulation) && (\r\n            <p>\r\n              Вам не требуется проходить трибуляцию на текущем уровне культивации.\r\n              {passedTribulation && needsTribulation && ' Вы уже успешно прошли трибуляцию.'}\r\n            </p>\r\n          )}\r\n        </S.Panel>\r\n      </TabContent>\r\n      \r\n      <TabContent active={activeTab === 'insight'}>\r\n        <S.Panel>\r\n          <h3>Прозрение</h3>\r\n          \r\n          <S.Button \r\n            onClick={handleGainInsight}\r\n            disabled={insightCooldown > 0}\r\n            style={{ marginTop: '15px', width: '100%' }}\r\n          >\r\n            {insightCooldown > 0 \r\n              ? `Доступно через: ${Math.floor(insightCooldown / 3600)}:${Math.floor((insightCooldown % 3600) / 60)}:${insightCooldown % 60}` \r\n              : 'Получить прозрение'}\r\n          </S.Button>\r\n        </S.Panel>\r\n      </TabContent>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default CultivationTab;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 300px;\r\n  gap: 20px;\r\n`;\r\n\r\nconst InventoryGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  gap: 10px;\r\n  padding: 20px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst ItemSlot = styled.div`\r\n  width: 100%;\r\n  aspect-ratio: 1;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid ${props => props.quality === 'common' ? '#666' :\r\n    props.quality === 'uncommon' ? '#2196f3' :\r\n    props.quality === 'rare' ? '#9c27b0' :\r\n    props.quality === 'epic' ? '#ff9800' : '#d4af37'};\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 0 10px ${props => props.quality === 'common' ? '#666' :\r\n      props.quality === 'uncommon' ? '#2196f3' :\r\n      props.quality === 'rare' ? '#9c27b0' :\r\n      props.quality === 'epic' ? '#ff9800' : '#d4af37'};\r\n  }\r\n`;\r\n\r\nconst ItemIcon = styled.div`\r\n  width: 60%;\r\n  height: 60%;\r\n  background: ${props => props.type === 'weapon' ? '#f44336' :\r\n    props.type === 'armor' ? '#2196f3' :\r\n    props.type === 'accessory' ? '#9c27b0' :\r\n    props.type === 'consumable' ? '#4caf50' :\r\n    props.type === 'material' ? '#ff9800' :\r\n    props.type === 'book' ? '#795548' : '#666'};\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ItemQuantity = styled.div`\r\n  position: absolute;\r\n  bottom: 2px;\r\n  right: 2px;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  padding: 2px 4px;\r\n  border-radius: 2px;\r\n  font-size: 0.8rem;\r\n  color: #fff;\r\n`;\r\n\r\nconst ItemDetails = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ItemName = styled.h3`\r\n  color: ${props => props.quality === 'common' ? '#fff' :\r\n    props.quality === 'uncommon' ? '#2196f3' :\r\n    props.quality === 'rare' ? '#9c27b0' :\r\n    props.quality === 'epic' ? '#ff9800' : '#d4af37'};\r\n  margin: 0 0 10px 0;\r\n`;\r\n\r\nconst ItemType = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ItemDescription = styled.p`\r\n  color: #f0f0f0;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: rgba(212, 175, 55, 0.2);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #d4af37;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.3);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #333;\r\n    border-color: #666;\r\n    color: #666;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst CurrencyInfo = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst CurrencyItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  color: #aaa;\r\n  \r\n  span {\r\n    color: #d4af37;\r\n  }\r\n`;\r\n\r\nfunction InventoryTab() {\r\n  const { state, actions } = useGame();\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  \r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n  \r\n  const handleUseItem = () => {\r\n    if (!selectedItem) return;\r\n    \r\n    console.log('Использование предмета:', selectedItem);\r\n    \r\n    switch (selectedItem.type) {\r\n      case 'weapon':\r\n      case 'armor':\r\n      case 'accessory':\r\n        // Экипируем предмет - используем actions.equipItem из GameContextProvider\r\n        console.log(`Экипировка предмета ${selectedItem.name} (ID: ${selectedItem.id}, тип: ${selectedItem.type})`);\r\n        \r\n        // Убедимся, что предмет имеет предрассчитанные бонусы\r\n        // Используем напрямую нашу утилиту из helpers\r\n        const { ensureItemHasCalculatedBonuses } = require('../../utils/equipmentBonusHelper');\r\n        const itemWithBonuses = ensureItemHasCalculatedBonuses(selectedItem);\r\n        \r\n        // Вызываем экшен экипировки, передавая предмет с бонусами\r\n        actions.equipItem(itemWithBonuses);\r\n        \r\n        actions.addNotification({\r\n          message: `Вы экипировали ${selectedItem.name}`,\r\n          type: 'success'\r\n        });\r\n        \r\n        // Обновляем выбранный предмет, чтобы отразить, что он экипирован\r\n        setSelectedItem({\r\n          ...selectedItem,\r\n          equipped: true\r\n        });\r\n        break;\r\n        \r\n      case 'consumable':\r\n        // Используем предмет\r\n        if (selectedItem.id === 'qi_gathering_pill') {\r\n          // Увеличиваем энергию\r\n          actions.updateCultivation({\r\n            energy: Math.min(\r\n              state.player.cultivation.energy + 50,\r\n              state.player.cultivation.maxEnergy\r\n            )\r\n          });\r\n          \r\n          actions.addNotification({\r\n            message: 'Вы использовали пилюлю сбора ци. Духовная энергия восстановлена.',\r\n            type: 'success'\r\n          });\r\n        }\r\n        \r\n        // Уменьшаем количество предмета на 1\r\n        const updatedItems = state.player.inventory.items.map(item => {\r\n          if (item.id === selectedItem.id) {\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity - 1\r\n            };\r\n          }\r\n          return item;\r\n        }).filter(item => item.quantity > 0);\r\n        \r\n        // Обновляем инвентарь\r\n        actions.updatePlayer({\r\n          inventory: {\r\n            ...state.player.inventory,\r\n            items: updatedItems\r\n          }\r\n        });\r\n        \r\n        // Если предмет закончился, снимаем выделение\r\n        if (selectedItem.quantity <= 1) {\r\n          setSelectedItem(null);\r\n        } else {\r\n          // Обновляем выбранный предмет\r\n          setSelectedItem({\r\n            ...selectedItem,\r\n            quantity: selectedItem.quantity - 1\r\n          });\r\n        }\r\n        break;\r\n        \r\n      case 'book':\r\n        // Изучаем технику из книги\r\n        actions.addNotification({\r\n          message: 'Вы изучили новую технику из книги.',\r\n          type: 'success'\r\n        });\r\n        break;\r\n        \r\n      default:\r\n        console.log(`Неизвестный тип предмета: ${selectedItem.type}`);\r\n        break;\r\n    }\r\n  };\r\n  \r\n  const canUseItem = selectedItem && (\r\n    selectedItem.type === 'consumable' ||\r\n    selectedItem.type === 'book' ||\r\n    selectedItem.type === 'weapon' ||\r\n    selectedItem.type === 'armor' ||\r\n    selectedItem.type === 'accessory'\r\n  );\r\n  \r\n  return (\r\n    <Container>\r\n      <InventoryGrid>\r\n        {state.player.inventory.items.map((item, index) => (\r\n          <ItemSlot\r\n            key={`${item.id}_${index}`}\r\n            quality={item.quality}\r\n            onClick={() => handleItemClick(item)}\r\n          >\r\n            <ItemIcon type={item.type} />\r\n            {item.quantity > 1 && (\r\n              <ItemQuantity>{item.quantity}</ItemQuantity>\r\n            )}\r\n          </ItemSlot>\r\n        ))}\r\n      </InventoryGrid>\r\n      \r\n      <ItemDetails>\r\n        {selectedItem ? (\r\n          <>\r\n            <ItemName quality={selectedItem.quality}>\r\n              {selectedItem.name}\r\n            </ItemName>\r\n            <ItemType>\r\n              {selectedItem.type === 'weapon' && 'Оружие'}\r\n              {selectedItem.type === 'armor' && 'Броня'}\r\n              {selectedItem.type === 'accessory' && 'Аксессуар'}\r\n              {selectedItem.type === 'consumable' && 'Расходуемый предмет'}\r\n              {selectedItem.type === 'material' && 'Материал'}\r\n              {selectedItem.type === 'book' && 'Книга'}\r\n            </ItemType>\r\n            <ItemDescription>\r\n              {selectedItem.description}\r\n            </ItemDescription>\r\n            \r\n            <ActionButton\r\n              onClick={handleUseItem}\r\n              disabled={!canUseItem}\r\n            >\r\n              {selectedItem.type === 'consumable' ? 'Использовать' :\r\n               selectedItem.type === 'book' ? 'Изучить' :\r\n               selectedItem.type === 'material' ? 'Нельзя использовать' :\r\n               'Экипировать'}\r\n            </ActionButton>\r\n            \r\n            <ActionButton\r\n              onClick={() => {\r\n                actions.removeItem(selectedItem.id);\r\n                setSelectedItem(null);\r\n              }}\r\n            >\r\n              Выбросить\r\n            </ActionButton>\r\n          </>\r\n        ) : (\r\n          <div style={{ textAlign: 'center', color: '#aaa' }}>\r\n            Выберите предмет для просмотра деталей\r\n          </div>\r\n        )}\r\n        \r\n        <CurrencyInfo>\r\n          <CurrencyItem>\r\n            Медь: <span>{state.player.inventory.currency.copper}</span>\r\n          </CurrencyItem>\r\n          <CurrencyItem>\r\n            Серебро: <span>{state.player.inventory.currency.silver}</span>\r\n          </CurrencyItem>\r\n          <CurrencyItem>\r\n            Золото: <span>{state.player.inventory.currency.gold}</span>\r\n          </CurrencyItem>\r\n          <CurrencyItem>\r\n            Дух. камни: <span>{state.player.inventory.currency.spiritStones}</span>\r\n          </CurrencyItem>\r\n        </CurrencyInfo>\r\n      </ItemDetails>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default InventoryTab;\r\n","/**\r\n * Утилиты для отладки экипировки и бонусов\r\n */\r\n\r\n// Форматированный вывод бонусов экипировки в консоль\r\nexport const printEquipmentBonuses = (bonuses) => {\r\n  if (!bonuses) {\r\n    console.log('%c🚫 Бонусы экипировки отсутствуют!', 'font-weight: bold; color: red;');\r\n    return;\r\n  }\r\n\r\n  console.group('%c📊 Бонусы экипировки:', 'font-weight: bold; color: gold;');\r\n\r\n  // Бонусы к характеристикам\r\n  if (bonuses.stats) {\r\n    console.group('%c Базовые характеристики:', 'color: aqua;');\r\n    Object.entries(bonuses.stats).forEach(([stat, value]) => {\r\n      const colorStyle = value > 0 \r\n        ? 'color: green; font-weight: bold;' \r\n        : value < 0 \r\n          ? 'color: red;' \r\n          : 'color: gray;';\r\n      \r\n      const statNames = {\r\n        'strength': 'Сила',\r\n        'dexterity': 'Ловкость',\r\n        'vitality': 'Выносливость',\r\n        'intelligence': 'Интеллект',\r\n        'perception': 'Восприятие',\r\n        'luck': 'Удача'\r\n      };\r\n      \r\n      const statName = statNames[stat] || stat;\r\n      console.log(`  ${statName}: %c${value > 0 ? '+' : ''}${value}`, colorStyle);\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  // Боевые характеристики\r\n  if (bonuses.combat) {\r\n    console.group('%c Боевые характеристики:', 'color: red;');\r\n    Object.entries(bonuses.combat).forEach(([stat, value]) => {\r\n      const colorStyle = value > 0 \r\n        ? 'color: green; font-weight: bold;' \r\n        : value < 0 \r\n          ? 'color: red;' \r\n          : 'color: gray;';\r\n          \r\n      const statNames = {\r\n        'physicalDamage': 'Физический урон',\r\n        'magicDamage': 'Магический урон',\r\n        'physicalDefense': 'Физическая защита',\r\n        'magicDefense': 'Магическая защита',\r\n        'critChance': 'Шанс крит. удара',\r\n        'critDamage': 'Урон от крит. удара',\r\n        'dodgeChance': 'Шанс уклонения'\r\n      };\r\n      \r\n      const statName = statNames[stat] || stat;\r\n      const suffix = ['critChance', 'critDamage', 'dodgeChance'].includes(stat) ? '%' : '';\r\n      console.log(`  ${statName}: %c${value > 0 ? '+' : ''}${value}${suffix}`, colorStyle);\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  // Характеристики культивации\r\n  if (bonuses.cultivation) {\r\n    console.group('%c Культивация:', 'color: cyan;');\r\n    Object.entries(bonuses.cultivation).forEach(([stat, value]) => {\r\n      const colorStyle = value > 0 \r\n        ? 'color: green; font-weight: bold;' \r\n        : value < 0 \r\n          ? 'color: red;' \r\n          : 'color: gray;';\r\n          \r\n      const statNames = {\r\n        'energyMax': 'Макс. энергия',\r\n        'energyRegen': 'Восст. энергии',\r\n        'comprehensionRate': 'Скорость понимания',\r\n        'breakthroughChance': 'Шанс прорыва'\r\n      };\r\n      \r\n      const statName = statNames[stat] || stat;\r\n      const suffix = stat === 'energyRegen' \r\n        ? '/час' \r\n        : ['comprehensionRate', 'breakthroughChance'].includes(stat) \r\n          ? '%' \r\n          : '';\r\n      console.log(`  ${statName}: %c${value > 0 ? '+' : ''}${value}${suffix}`, colorStyle);\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  // Стихийные бонусы\r\n  if (bonuses.elemental) {\r\n    console.group('%c Стихийные бонусы:', 'color: orange;');\r\n    Object.entries(bonuses.elemental).forEach(([element, value]) => {\r\n      const colorStyle = value > 0 \r\n        ? 'color: green; font-weight: bold;' \r\n        : value < 0 \r\n          ? 'color: red;' \r\n          : 'color: gray;';\r\n          \r\n      const elementNames = {\r\n        'fire': 'Огонь',\r\n        'water': 'Вода',\r\n        'earth': 'Земля',\r\n        'air': 'Воздух',\r\n        'light': 'Свет',\r\n        'dark': 'Тьма'\r\n      };\r\n      \r\n      const elementName = elementNames[element] || element;\r\n      console.log(`  ${elementName}: %c${value > 0 ? '+' : ''}${value}`, colorStyle);\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  // Особые эффекты\r\n  if (bonuses.special && bonuses.special.length > 0) {\r\n    console.group('%c Особые эффекты:', 'color: magenta;');\r\n    bonuses.special.forEach(effect => {\r\n      console.log(`  %c${effect.name}:%c ${effect.description}`, 'color: yellow; font-weight: bold;', 'color: white;');\r\n    });\r\n    console.groupEnd();\r\n  }\r\n\r\n  console.groupEnd();\r\n};\r\n\r\n// Выводит информацию об экипированных предметах\r\nexport const printEquippedItems = (equippedItems) => {\r\n  if (!equippedItems || Object.keys(equippedItems).length === 0) {\r\n    console.log('%c🚫 Экипированные предметы отсутствуют!', 'font-weight: bold; color: red;');\r\n    return;\r\n  }\r\n\r\n  console.group('%c⚔️ Экипированные предметы:', 'font-weight: bold; color: gold;');\r\n\r\n  Object.entries(equippedItems).forEach(([slot, item]) => {\r\n    if (!item) return;\r\n\r\n    const slotNames = {\r\n      'weapon': 'Оружие',\r\n      'headArmor': 'Голова',\r\n      'bodyArmor': 'Тело',\r\n      'handArmor': 'Руки',\r\n      'legArmor': 'Ноги',\r\n      'accessory1': 'Аксессуар 1',\r\n      'accessory2': 'Аксессуар 2',\r\n      'artifact1': 'Артефакт 1',\r\n      'artifact2': 'Артефакт 2'\r\n    };\r\n\r\n    const rarityColors = {\r\n      'common': 'white',\r\n      'uncommon': '#1eff00',\r\n      'rare': '#0070dd',\r\n      'epic': '#a335ee',\r\n      'legendary': '#ff8000'\r\n    };\r\n\r\n    const slotName = slotNames[slot] || slot;\r\n    const rarityColor = rarityColors[item.rarity] || 'white';\r\n\r\n    console.group(`%c${slotName}: %c${item.name}`, 'color: gray;', `color: ${rarityColor}; font-weight: bold;`);\r\n    console.log(`  ID: ${item.id || item.itemId}`);\r\n    console.log(`  Тип: ${item.type}`);\r\n    console.log(`  Редкость: %c${item.rarity}`, `color: ${rarityColor};`);\r\n    \r\n    // Проверяем, есть ли у предмета предрассчитанные бонусы\r\n    if (item.calculatedBonuses) {\r\n      console.log(`  %c✅ Имеет предрассчитанные бонусы`, 'color: green; font-weight: bold;');\r\n    } else {\r\n      console.log(`  %c❌ Не имеет предрассчитанных бонусов`, 'color: red;');\r\n    }\r\n    \r\n    console.groupEnd();\r\n  });\r\n\r\n  console.groupEnd();\r\n};\r\n\r\n// Единая функция отладки\r\nexport const debugEquipment = (state) => {\r\n  console.group('%c🛡️ ОТЛАДКА ЭКИПИРОВКИ', 'font-size: 16px; font-weight: bold; color: gold;');\r\n\r\n  if (state && state.player) {\r\n    // Вывод текущих бонусов\r\n    printEquipmentBonuses(state.player.equipmentBonuses);\r\n    \r\n    // Получаем экипированные предметы\r\n    const equippedItems = {};\r\n    \r\n    if (state.player.inventory && state.player.inventory.items) {\r\n      // Сортируем по типам экипировки\r\n      state.player.inventory.items.forEach(item => {\r\n        if (!item.equipped) return;\r\n        \r\n        switch(item.type) {\r\n          case 'weapon':\r\n            equippedItems.weapon = item;\r\n            break;\r\n          case 'armor':\r\n            // Определяем подтип брони\r\n            const armorType = item.properties?.armorType || item.armorType;\r\n            const itemName = item.name.toLowerCase();\r\n            \r\n            if (armorType === 'head' || (!armorType && (itemName.includes('шлем') || itemName.includes('шапка')))) {\r\n              equippedItems.headArmor = item;\r\n            }\r\n            else if (armorType === 'legs' || (!armorType && (itemName.includes('сапог') || itemName.includes('ботин')))) {\r\n              equippedItems.legArmor = item;\r\n            }\r\n            else if (armorType === 'hands' || (!armorType && (itemName.includes('перчат') || itemName.includes('рукав')))) {\r\n              equippedItems.handArmor = item;\r\n            }\r\n            else {\r\n              equippedItems.bodyArmor = item;\r\n            }\r\n            break;\r\n          case 'accessory':\r\n            if (!equippedItems.accessory1) {\r\n              equippedItems.accessory1 = item;\r\n            } else if (!equippedItems.accessory2) {\r\n              equippedItems.accessory2 = item;\r\n            }\r\n            break;\r\n          case 'artifact':\r\n            if (!equippedItems.artifact1) {\r\n              equippedItems.artifact1 = item;\r\n            } else if (!equippedItems.artifact2) {\r\n              equippedItems.artifact2 = item;\r\n            }\r\n            break;\r\n        }\r\n      });\r\n      \r\n      // Вывод экипированных предметов\r\n      printEquippedItems(equippedItems);\r\n    } else {\r\n      console.log('%c❌ Нет информации об инвентаре!', 'color: red; font-weight: bold;');\r\n    }\r\n  } else {\r\n    console.log('%c❌ Нет информации о состоянии игрока!', 'color: red; font-weight: bold;');\r\n  }\r\n\r\n  console.groupEnd();\r\n};\r\n\r\n// Экспортируем все функции\r\nexport default {\r\n  printEquipmentBonuses,\r\n  printEquippedItems,\r\n  debugEquipment\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { debugEquipment } from '../../utils/equipmentDebug';\r\nimport { ensureItemHasCalculatedBonuses } from '../../utils/equipmentBonusHelper';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 400px 1fr;\r\n  gap: 20px;\r\n`;\r\n\r\nconst EquipmentDisplay = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-auto-rows: minmax(100px, auto);\r\n  grid-gap: 20px;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst EquipmentSlot = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #666;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  height: 100px;\r\n  \r\n  &.head {\r\n    grid-column: 1 / span 3;\r\n    height: 80px;\r\n  }\r\n  \r\n  &.body {\r\n    grid-column: 2;\r\n    grid-row: 2;\r\n  }\r\n  \r\n  &.left {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n  }\r\n  \r\n  &.right {\r\n    grid-column: 3;\r\n    grid-row: 2;\r\n  }\r\n  \r\n  &.hands {\r\n    grid-column: 1 / span 3;\r\n    grid-row: 3;\r\n    height: 80px;\r\n  }\r\n  \r\n  &.legs {\r\n    grid-column: 1 / span 3;\r\n    grid-row: 4;\r\n    height: 80px;\r\n  }\r\n  \r\n  &.acc1 {\r\n    grid-column: 1;\r\n    grid-row: 5;\r\n  }\r\n  \r\n  &.acc2 {\r\n    grid-column: 3;\r\n    grid-row: 5;\r\n  }\r\n  \r\n  &.art1 {\r\n    grid-column: 1;\r\n    grid-row: 6;\r\n  }\r\n  \r\n  &.art2 {\r\n    grid-column: 3;\r\n    grid-row: 6;\r\n  }\r\n  \r\n  &.equipped {\r\n    border-color: ${props => props.rarity === 'common' ? '#666' :\r\n      props.rarity === 'uncommon' ? '#2196f3' :\r\n      props.rarity === 'rare' ? '#9c27b0' :\r\n      props.rarity === 'epic' ? '#ff9800' : '#d4af37'};\r\n    box-shadow: 0 0 5px ${props => props.rarity === 'common' ? '#666' :\r\n      props.rarity === 'uncommon' ? '#2196f3' :\r\n      props.rarity === 'rare' ? '#9c27b0' :\r\n      props.rarity === 'epic' ? '#ff9800' : '#d4af37'};\r\n  }\r\n`;\r\n\r\nconst SlotName = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.8rem;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ItemIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background: ${props => props.type === 'weapon' ? '#f44336' :\r\n    props.type === 'armor' ? '#2196f3' :\r\n    props.type === 'accessory' ? '#9c27b0' :\r\n    props.type === 'artifact' ? '#ff9800' :\r\n    props.type === 'material' ? '#4caf50' :\r\n    props.type === 'book' ? '#795548' : '#666'};\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ItemName = styled.div`\r\n  color: ${props => props.rarity === 'common' ? '#fff' :\r\n    props.rarity === 'uncommon' ? '#2196f3' :\r\n    props.rarity === 'rare' ? '#9c27b0' :\r\n    props.rarity === 'epic' ? '#ff9800' : '#d4af37'};\r\n  font-size: 0.9rem;\r\n  margin-top: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nconst StatsPanel = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\nconst UnequipButton = styled.button`\r\n  padding: 10px 15px;\r\n  background: rgba(180, 30, 30, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: rgba(180, 30, 30, 0.5);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.3;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst DropButton = styled.button`\r\n  padding: 10px 15px;\r\n  background: rgba(180, 30, 30, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  width: 100%;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: rgba(180, 30, 30, 0.5);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.3;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst SectionTitle = styled.h3`\r\n  color: #d4af37;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.3);\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst StatGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n`;\r\n\r\nconst StatItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  \r\n  span:first-child {\r\n    color: #aaa;\r\n  }\r\n  \r\n  span:last-child {\r\n    color: ${props => props.value > 0 ? '#4caf50' : props.value < 0 ? '#f44336' : '#aaa'};\r\n  }\r\n`;\r\n\r\nconst FilterButtons = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst FilterButton = styled.button`\r\n  padding: 8px 15px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #666;\r\n  border-radius: 4px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  &.active {\r\n    background: rgba(212, 175, 55, 0.2);\r\n    border-color: #d4af37;\r\n    color: #d4af37;\r\n  }\r\n`;\r\n\r\nconst InventoryGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  gap: 10px;\r\n  padding: 15px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #666;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst ItemSlot = styled.div`\r\n  width: 100%;\r\n  aspect-ratio: 1;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid ${props => props.rarity === 'common' ? '#666' :\r\n    props.rarity === 'uncommon' ? '#2196f3' :\r\n    props.rarity === 'rare' ? '#9c27b0' :\r\n    props.rarity === 'epic' ? '#ff9800' : '#d4af37'};\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  position: relative;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 0 10px ${props => props.rarity === 'common' ? '#666' :\r\n      props.rarity === 'uncommon' ? '#2196f3' :\r\n      props.rarity === 'rare' ? '#9c27b0' :\r\n      props.rarity === 'epic' ? '#ff9800' : '#d4af37'};\r\n  }\r\n  \r\n  &.equipped {\r\n    border-width: 2px;\r\n    box-shadow: 0 0 5px ${props => props.rarity === 'common' ? '#666' :\r\n      props.rarity === 'uncommon' ? '#2196f3' :\r\n      props.rarity === 'rare' ? '#9c27b0' :\r\n      props.rarity === 'epic' ? '#ff9800' : '#d4af37'};\r\n  }\r\n`;\r\n\r\n// Вспомогательная функция для определения типа брони на основе armorType и названия\r\nconst determineArmorType = (item) => {\r\n  if (!item) return null;\r\n  \r\n  // Сначала проверяем явно указанный тип\r\n  const armorType = item.properties?.armorType || item.armorType;\r\n  if (armorType) return armorType;\r\n  \r\n  // Если тип не указан, определяем по названию\r\n  const itemName = item.name.toLowerCase();\r\n  \r\n  if (itemName.includes('шлем') || itemName.includes('шапка') || itemName.includes('капюшон')) {\r\n    return 'head';\r\n  }\r\n  \r\n  if (itemName.includes('сапог') || itemName.includes('ботин') || itemName.includes('обувь')) {\r\n    return 'legs';\r\n  }\r\n  \r\n  if (itemName.includes('перчат') || itemName.includes('рукав')) {\r\n    return 'hands';\r\n  }\r\n  \r\n  // По умолчанию считаем броней для тела\r\n  return 'body';\r\n};\r\n\r\nfunction EquipmentTab() {\r\n  const { state, actions } = useGame();\r\n  const [equipped, setEquipped] = useState({\r\n    weapon: null,\r\n    headArmor: null,\r\n    bodyArmor: null,\r\n    legArmor: null,\r\n    handArmor: null,\r\n    accessory1: null,\r\n    accessory2: null,\r\n    artifact1: null,\r\n    artifact2: null\r\n  });\r\n  const [filter, setFilter] = useState('all');\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [selectedEquippedItem, setSelectedEquippedItem] = useState(null);\r\n  const [selectedInventoryItem, setSelectedInventoryItem] = useState(null);\r\n  \r\n  // Загружаем экипированные предметы один раз при монтировании компонента\r\n  const isMounted = React.useRef(false);\r\n  \r\n  useEffect(() => {\r\n    // Загружаем экипировку только при первом монтировании компонента\r\n    if (isMounted.current) {\r\n      return;\r\n    }\r\n    \r\n    console.log('Инициализация экипировки');\r\n    isMounted.current = true;\r\n    \r\n    // Загружаем экипированные предметы и их бонусы\r\n    const items = updateEquippedItems();\r\n    \r\n    // Явно применяем бонусы экипировки при первой загрузке компонента\r\n    console.log('Явное применение бонусов экипировки при первом монтировании');\r\n    actions.applyEquipmentBonuses(items);\r\n    \r\n    // Используем нашу отладочную утилиту для вывода информации\r\n    setTimeout(() => {\r\n      debugEquipment(state);\r\n    }, 500); // Небольшая задержка, чтобы убедиться, что все бонусы успели применяться\r\n  }, []); // Пустой массив зависимостей - запускается только при монтировании\r\n  \r\n  // Обновляем отображение экипированных предметов при изменении инвентаря\r\n  useEffect(() => {\r\n    if (!isMounted.current) {\r\n      return; // Пропускаем первую загрузку, она обрабатывается выше\r\n    }\r\n    \r\n    // Обновляем отображение и применяем предрассчитанные бонусы\r\n    updateEquippedItems();\r\n  }, [state.player.inventory.items]);\r\n  \r\n  // Функция для обновления отображения экипированных предметов (без пересчета бонусов)\r\n  // Возвращает объект с экипированными предметами\r\n  const updateEquippedItems = () => {\r\n    const equippedItems = {};\r\n    \r\n    // Получаем список экипированных предметов\r\n    const equippedItemsList = state.player.inventory.items.filter(item => item.equipped);\r\n    \r\n    console.log('==== ОБНОВЛЕНИЕ ЭКИПИРОВАННЫХ ПРЕДМЕТОВ ====');\r\n    console.log(`Найдено ${equippedItemsList.length} экипированных предметов`);\r\n    \r\n    // Находим экипированные предметы из инвентаря\r\n    state.player.inventory.items.forEach(item => {\r\n      if (item.equipped) {\r\n        // Используем нашу утилиту для гарантии наличия предрассчитанных бонусов\r\n        let itemWithBonuses = ensureItemHasCalculatedBonuses(item);\r\n        if (itemWithBonuses.calculatedBonuses) {\r\n          console.log(`✅ Предмет ${item.name} имеет предрассчитанные бонусы`);\r\n        }\r\n        \r\n        switch(item.type) {\r\n          case 'weapon':\r\n            equippedItems.weapon = itemWithBonuses;\r\n            console.log(`⚔️ Экипировано оружие: ${itemWithBonuses.name}`);\r\n            break;\r\n          case 'armor':\r\n            // Получаем armorType из properties, если доступно\r\n            const armorType = item.properties?.armorType || item.armorType;\r\n            const itemName = item.name.toLowerCase();\r\n            \r\n            // Улучшенная логика определения типа брони\r\n            if (armorType === 'head' || (!armorType && (itemName.includes('шлем') || itemName.includes('шапка') || itemName.includes('капюшон')))) {\r\n              equippedItems.headArmor = itemWithBonuses;\r\n              console.log(`🧢 Экипирована броня для головы: ${itemWithBonuses.name}`);\r\n            }\r\n            else if (armorType === 'legs' || (!armorType && (itemName.includes('сапог') || itemName.includes('ботин') || itemName.includes('обувь')))) {\r\n              equippedItems.legArmor = itemWithBonuses;\r\n              console.log(`👢 Экипирована броня для ног: ${itemWithBonuses.name}`);\r\n            }\r\n            else if (armorType === 'hands' || (!armorType && (itemName.includes('перчат') || itemName.includes('рукав')))) {\r\n              equippedItems.handArmor = itemWithBonuses;\r\n              console.log(`🧤 Экипирована броня для рук: ${itemWithBonuses.name}`);\r\n            }\r\n            else {\r\n              // Если ничего не совпало, считаем бронёй для тела\r\n              equippedItems.bodyArmor = itemWithBonuses;\r\n              console.log(`🥋 Экипирована броня для тела: ${itemWithBonuses.name}`);\r\n            }\r\n            break;\r\n          case 'accessory':\r\n            if (!equippedItems.accessory1) {\r\n              equippedItems.accessory1 = itemWithBonuses;\r\n              console.log(`💍 Экипирован аксессуар 1: ${itemWithBonuses.name}`);\r\n            } else if (!equippedItems.accessory2) {\r\n              equippedItems.accessory2 = itemWithBonuses;\r\n              console.log(`📿 Экипирован аксессуар 2: ${itemWithBonuses.name}`);\r\n            }\r\n            break;\r\n          case 'artifact':\r\n            if (!equippedItems.artifact1) {\r\n              equippedItems.artifact1 = itemWithBonuses;\r\n              console.log(`🔮 Экипирован артефакт 1: ${itemWithBonuses.name}`);\r\n            } else if (!equippedItems.artifact2) {\r\n              equippedItems.artifact2 = itemWithBonuses;\r\n              console.log(`🧿 Экипирован артефакт 2: ${itemWithBonuses.name}`);\r\n            }\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    \r\n    setEquipped(equippedItems);\r\n    \r\n    // После обновления экипировки сразу же применяем бонусы\r\n    console.log('Применение бонусов экипировки после обновления экипированных предметов');\r\n    actions.applyEquipmentBonuses(equippedItems);\r\n    \r\n    return equippedItems;\r\n  };\r\n  \r\n  const handleSlotClick = (slotType) => {\r\n    setSelectedSlot(slotType);\r\n    \r\n    // Сохраняем выбранный экипированный предмет, если он есть в слоте\r\n    const itemInSlot = equipped[slotType];\r\n    setSelectedEquippedItem(itemInSlot);\r\n    \r\n    // Автоматически меняем фильтр в зависимости от типа слота\r\n    switch(slotType) {\r\n      case 'weapon':\r\n        setFilter('weapon');\r\n        break;\r\n      case 'headArmor':\r\n      case 'bodyArmor':\r\n      case 'legArmor':\r\n      case 'handArmor':\r\n        setFilter('armor');\r\n        break;\r\n      case 'accessory1':\r\n      case 'accessory2':\r\n        setFilter('accessory');\r\n        break;\r\n      case 'artifact1':\r\n      case 'artifact2':\r\n        setFilter('artifact');\r\n        break;\r\n      default:\r\n        setFilter('all');\r\n    }\r\n  };\r\n  \r\n  // Функция для снятия экипировки\r\n  const handleUnequipItem = () => {\r\n    if (selectedEquippedItem && selectedSlot) {\r\n      console.log(`Снятие предмета ${selectedEquippedItem.name} из слота ${selectedSlot}`);\r\n      \r\n      // Передаем выбранный слот в действие unequipItem\r\n      actions.unequipItem(selectedSlot);\r\n      \r\n      // Обновляем отображение экипировки\r\n      updateEquippedItems();\r\n      \r\n      // Сбрасываем выбранный предмет и слот\r\n      setSelectedEquippedItem(null);\r\n    }\r\n  };\r\n  \r\n  // Функция для выбрасывания предмета\r\n  const handleDropItem = () => {\r\n    if (selectedInventoryItem) {\r\n      console.log(`Выбрасывание предмета ${selectedInventoryItem.name}`);\r\n      \r\n      // Если предмет экипирован, сначала снимаем его\r\n      if (selectedInventoryItem.equipped) {\r\n        // Находим слот, в котором экипирован предмет\r\n        for (const [slot, item] of Object.entries(equipped)) {\r\n          if (item && item.id === selectedInventoryItem.id) {\r\n            console.log(`Сначала снимаем экипировку ${selectedInventoryItem.name} из слота ${slot}`);\r\n            actions.unequipItem(slot);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Выбрасываем предмет - обратите внимание, что reducer ожидает объект с id в качестве payload\r\n      const itemId = selectedInventoryItem.id || selectedInventoryItem.itemId;\r\n      actions.removeItem({ id: itemId }); // Исправление: передаем объект с id вместо самого id\r\n      \r\n      // Обновляем отображение экипировки\r\n      setTimeout(() => {\r\n        updateEquippedItems();\r\n        \r\n        // Сбрасываем выбранный предмет\r\n        setSelectedInventoryItem(null);\r\n      }, 100);\r\n    }\r\n  };\r\n  \r\n  const handleItemClick = (item) => {\r\n    // Сохраняем выбранный предмет инвентаря\r\n    setSelectedInventoryItem(item);\r\n    \r\n    if (selectedSlot) {\r\n      // Убедимся, что предмет имеет предрассчитанные бонусы\r\n      item = ensureItemHasCalculatedBonuses(item);\r\n      \r\n      // Экипируем предмет через действие equipItem\r\n      console.log(`Экипировка предмета ${item.name} в слот ${selectedSlot}`);\r\n      actions.equipItem(item);\r\n      \r\n      // Обновляем UI отображение экипировки\r\n      updateEquippedItems();\r\n    }\r\n  };\r\n  \r\n  // Рендеринг компонента\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <EquipmentDisplay>\r\n          <EquipmentSlot \r\n            className=\"head\" \r\n            onClick={() => handleSlotClick('headArmor')}\r\n            rarity={equipped.headArmor ? equipped.headArmor.rarity : 'common'}\r\n          >\r\n            <SlotName>Голова</SlotName>\r\n            {equipped.headArmor ? (\r\n              <>\r\n                <ItemIcon type=\"armor\" />\r\n                <ItemName rarity={equipped.headArmor.rarity}>{equipped.headArmor.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"left\" \r\n            onClick={() => handleSlotClick('weapon')}\r\n            rarity={equipped.weapon ? equipped.weapon.rarity : 'common'}\r\n          >\r\n            <SlotName>Оружие</SlotName>\r\n            {equipped.weapon ? (\r\n              <>\r\n                <ItemIcon type=\"weapon\" />\r\n                <ItemName rarity={equipped.weapon.rarity}>{equipped.weapon.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"body\" \r\n            onClick={() => handleSlotClick('bodyArmor')}\r\n            rarity={equipped.bodyArmor ? equipped.bodyArmor.rarity : 'common'}\r\n          >\r\n            <SlotName>Тело</SlotName>\r\n            {equipped.bodyArmor ? (\r\n              <>\r\n                <ItemIcon type=\"armor\" />\r\n                <ItemName rarity={equipped.bodyArmor.rarity}>{equipped.bodyArmor.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"right\" \r\n            onClick={() => handleSlotClick('shield')}\r\n            rarity={'common'}\r\n          >\r\n            <SlotName>Щит</SlotName>\r\n            <span>Не экипировано</span>\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"hands\" \r\n            onClick={() => handleSlotClick('handArmor')}\r\n            rarity={equipped.handArmor ? equipped.handArmor.rarity : 'common'}\r\n          >\r\n            <SlotName>Руки</SlotName>\r\n            {equipped.handArmor ? (\r\n              <>\r\n                <ItemIcon type=\"armor\" />\r\n                <ItemName rarity={equipped.handArmor.rarity}>{equipped.handArmor.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"legs\" \r\n            onClick={() => handleSlotClick('legArmor')}\r\n            rarity={equipped.legArmor ? equipped.legArmor.rarity : 'common'}\r\n          >\r\n            <SlotName>Ноги</SlotName>\r\n            {equipped.legArmor ? (\r\n              <>\r\n                <ItemIcon type=\"armor\" />\r\n                <ItemName rarity={equipped.legArmor.rarity}>{equipped.legArmor.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"acc1\" \r\n            onClick={() => handleSlotClick('accessory1')}\r\n            rarity={equipped.accessory1 ? equipped.accessory1.rarity : 'common'}\r\n          >\r\n            <SlotName>Аксессуар 1</SlotName>\r\n            {equipped.accessory1 ? (\r\n              <>\r\n                <ItemIcon type=\"accessory\" />\r\n                <ItemName rarity={equipped.accessory1.rarity}>{equipped.accessory1.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"acc2\" \r\n            onClick={() => handleSlotClick('accessory2')}\r\n            rarity={equipped.accessory2 ? equipped.accessory2.rarity : 'common'}\r\n          >\r\n            <SlotName>Аксессуар 2</SlotName>\r\n            {equipped.accessory2 ? (\r\n              <>\r\n                <ItemIcon type=\"accessory\" />\r\n                <ItemName rarity={equipped.accessory2.rarity}>{equipped.accessory2.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"art1\" \r\n            onClick={() => handleSlotClick('artifact1')}\r\n            rarity={equipped.artifact1 ? equipped.artifact1.rarity : 'common'}\r\n          >\r\n            <SlotName>Артефакт 1</SlotName>\r\n            {equipped.artifact1 ? (\r\n              <>\r\n                <ItemIcon type=\"artifact\" />\r\n                <ItemName rarity={equipped.artifact1.rarity}>{equipped.artifact1.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n          \r\n          <EquipmentSlot \r\n            className=\"art2\" \r\n            onClick={() => handleSlotClick('artifact2')}\r\n            rarity={equipped.artifact2 ? equipped.artifact2.rarity : 'common'}\r\n          >\r\n            <SlotName>Артефакт 2</SlotName>\r\n            {equipped.artifact2 ? (\r\n              <>\r\n                <ItemIcon type=\"artifact\" />\r\n                <ItemName rarity={equipped.artifact2.rarity}>{equipped.artifact2.name}</ItemName>\r\n              </>\r\n            ) : (\r\n              <span>Не экипировано</span>\r\n            )}\r\n          </EquipmentSlot>\r\n        </EquipmentDisplay>\r\n        \r\n        {/* Секция инвентаря */}\r\n        <div style={{ marginTop: '20px' }}>\r\n          <SectionTitle>Инвентарь</SectionTitle>\r\n          \r\n          <FilterButtons>\r\n            <FilterButton \r\n              className={filter === 'all' ? 'active' : ''} \r\n              onClick={() => setFilter('all')}\r\n            >\r\n              Все\r\n            </FilterButton>\r\n            <FilterButton \r\n              className={filter === 'weapon' ? 'active' : ''} \r\n              onClick={() => setFilter('weapon')}\r\n            >\r\n              Оружие\r\n            </FilterButton>\r\n            <FilterButton \r\n              className={filter === 'armor' ? 'active' : ''} \r\n              onClick={() => setFilter('armor')}\r\n            >\r\n              Броня\r\n            </FilterButton>\r\n            <FilterButton \r\n              className={filter === 'accessory' ? 'active' : ''} \r\n              onClick={() => setFilter('accessory')}\r\n            >\r\n              Аксессуары\r\n            </FilterButton>\r\n            <FilterButton \r\n              className={filter === 'artifact' ? 'active' : ''} \r\n              onClick={() => setFilter('artifact')}\r\n            >\r\n              Артефакты\r\n            </FilterButton>\r\n          </FilterButtons>\r\n          \r\n          <InventoryGrid>\r\n            {state.player.inventory.items\r\n              .filter(item => {\r\n                if (filter === 'all') return true;\r\n                return item.type === filter;\r\n              })\r\n              .map((item, index) => (\r\n                <ItemSlot \r\n                  key={`${item.id}-${index}`}\r\n                  rarity={item.rarity || 'common'}\r\n                  className={item.equipped ? 'equipped' : ''}\r\n                  onClick={() => handleItemClick(item)}\r\n                >\r\n                  <ItemIcon type={item.type || 'material'} />\r\n                  <ItemName rarity={item.rarity || 'common'}>{item.name}</ItemName>\r\n                </ItemSlot>\r\n              ))}\r\n          </InventoryGrid>\r\n        </div>\r\n      </div>\r\n      \r\n      <StatsPanel>\r\n        <SectionTitle>Бонусы экипировки</SectionTitle>\r\n        \r\n        {/* Панель управления выбранным предметом */}\r\n        {selectedEquippedItem && (\r\n          <div>\r\n            <h4>Выбранный предмет: {selectedEquippedItem.name}</h4>\r\n            <UnequipButton onClick={handleUnequipItem}>\r\n              Снять предмет\r\n            </UnequipButton>\r\n            <div style={{ marginTop: '10px' }}>\r\n              <DropButton onClick={handleDropItem}>\r\n                Выбросить\r\n              </DropButton>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Отображаем информацию о выбранном предмете из инвентаря */}\r\n        {selectedInventoryItem && !selectedInventoryItem.equipped && (\r\n          <div>\r\n            <h4>Выбранный предмет: {selectedInventoryItem.name}</h4>\r\n            <div style={{ marginTop: '10px' }}>\r\n              <DropButton onClick={handleDropItem}>\r\n                Выбросить\r\n              </DropButton>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {state.player.equipmentBonuses && (\r\n          <>\r\n            {/* Бонусы характеристик */}\r\n            <div>\r\n              <h4>Базовые характеристики</h4>\r\n              <StatGrid>\r\n                {Object.entries(state.player.equipmentBonuses.stats || {}).map(([stat, value]) => (\r\n                  <StatItem key={stat} value={value}>\r\n                    <span>\r\n                      {stat === 'strength' ? 'Сила' :\r\n                       stat === 'dexterity' ? 'Ловкость' :\r\n                       stat === 'vitality' ? 'Выносливость' :\r\n                       stat === 'intelligence' ? 'Интеллект' :\r\n                       stat === 'perception' ? 'Восприятие' :\r\n                       stat === 'luck' ? 'Удача' : stat}\r\n                    </span>\r\n                    <span>{value > 0 ? '+' : ''}{value}</span>\r\n                  </StatItem>\r\n                ))}\r\n              </StatGrid>\r\n            </div>\r\n            \r\n            {/* Боевые характеристики */}\r\n            <div>\r\n              <h4>Боевые характеристики</h4>\r\n              <StatGrid>\r\n                {Object.entries(state.player.equipmentBonuses.combat || {}).map(([stat, value]) => (\r\n                  <StatItem key={stat} value={value}>\r\n                    <span>\r\n                      {stat === 'physicalDamage' ? 'Физический урон' :\r\n                       stat === 'magicDamage' ? 'Магический урон' :\r\n                       stat === 'physicalDefense' ? 'Физическая защита' :\r\n                       stat === 'magicDefense' ? 'Магическая защита' :\r\n                       stat === 'critChance' ? 'Шанс крит. удара' :\r\n                       stat === 'critDamage' ? 'Урон от крит. удара' :\r\n                       stat === 'dodgeChance' ? 'Шанс уклонения' : stat}\r\n                    </span>\r\n                    <span>\r\n                      {value > 0 ? '+' : ''}{value}\r\n                      {['critChance', 'critDamage', 'dodgeChance'].includes(stat) ? '%' : ''}\r\n                    </span>\r\n                  </StatItem>\r\n                ))}\r\n              </StatGrid>\r\n            </div>\r\n          </>\r\n        )}\r\n      </StatsPanel>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EquipmentTab;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  gap: 20px;\r\n`;\r\n\r\nconst CharacterPanel = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: 0 auto 20px;\r\n  background: #2c2c2c;\r\n  border: 2px solid #d4af37;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 3rem;\r\n  color: #d4af37;\r\n`;\r\n\r\nconst CharacterInfo = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CharacterName = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 5px;\r\n`;\r\n\r\nconst CharacterTitle = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CultivationRealm = styled.div`\r\n  color: #f0f0f0;\r\n  font-size: 1.1rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StatsPanel = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst StatGroup = styled.div`\r\n  margin-bottom: 20px;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst StatGroupTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px;\r\n  font-size: 1.1rem;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.2);\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst StatGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n`;\r\n\r\nconst StatItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst StatControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n`;\r\n\r\nconst StatButton = styled.button`\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(212, 175, 55, 0.2);\r\n  color: #d4af37;\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: rgba(212, 175, 55, 0.4);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.3;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst UnassignedPoints = styled.div`\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  background: rgba(212, 175, 55, 0.1);\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  color: #d4af37;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst StatLabel = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\nconst StatValue = styled.span`\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst BackgroundInfo = styled.div`\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst BackgroundTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst BackgroundText = styled.p`\r\n  color: #f0f0f0;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n  margin: 0;\r\n`;\r\n\r\nfunction CharacterTab() {\r\n  const { state, actions } = useGame();\r\n  const player = state?.player || {};\r\n  const cultivation = player?.cultivation || {};\r\n  const stats = player?.stats || {};\r\n  const derivedStats = player?.secondaryStats || {};\r\n  const unassignedPoints = stats.unassignedPoints || 0;\r\n  \r\n  // Функция для получения названия стадии развития\r\n  const getCultivationStageName = (level) => {\r\n    level = level || 0;\r\n    if (level < 10) return 'Ученик';\r\n    if (level < 20) return 'Практик';\r\n    if (level < 30) return 'Адепт';\r\n    if (level < 40) return 'Мастер';\r\n    if (level < 50) return 'Грандмастер';\r\n    return 'Бессмертный';\r\n  };\r\n  \r\n  // Функция для форматирования значения характеристики\r\n  const formatStat = (value) => {\r\n    value = value || 0;\r\n    if (value >= 1000) {\r\n      return `${(value / 1000).toFixed(1)}k`;\r\n    }\r\n    return value.toString();\r\n  };\r\n  \r\n  // Функция для увеличения характеристики\r\n  const increaseStat = (statName) => {\r\n    if (unassignedPoints <= 0) return;\r\n    \r\n    const newStats = {\r\n      ...stats,\r\n      [statName]: (stats[statName] || 0) + 1,\r\n      unassignedPoints: unassignedPoints - 1\r\n    };\r\n    \r\n    actions.updatePlayerStats(newStats);\r\n  };\r\n  \r\n  // Добавляем отладочный вывод для проверки структуры данных\r\n  console.log('DEBUG - CharacterTab - Состояние игрока:', state.player);\r\n  console.log('DEBUG - CharacterTab - Бонусы экипировки:', player.equipmentBonuses);\r\n  console.log('DEBUG - CharacterTab - Характеристики:', stats);\r\n  console.log('DEBUG - CharacterTab - Вторичные характеристики:', derivedStats);\r\n  \r\n  return (\r\n    <Container>\r\n      <CharacterPanel>\r\n        <Avatar>\r\n          {(player.name || '?')[0].toUpperCase()}\r\n        </Avatar>\r\n        \r\n        <CharacterInfo>\r\n          <CharacterName>{player.name || 'Безымянный'}</CharacterName>\r\n          <CharacterTitle>{player.title || 'Без титула'}</CharacterTitle>\r\n          <CultivationRealm>\r\n            {getCultivationStageName(cultivation.level)} ({cultivation.level || 0} уровень)\r\n          </CultivationRealm>\r\n        </CharacterInfo>\r\n        \r\n        <BackgroundInfo>\r\n          <BackgroundTitle>Предыстория</BackgroundTitle>\r\n          <BackgroundText>\r\n            {player.background || 'История этого культиватора пока не написана...'}\r\n          </BackgroundText>\r\n        </BackgroundInfo>\r\n      </CharacterPanel>\r\n      \r\n      <StatsPanel>\r\n        <StatGroup>\r\n          <StatGroupTitle>Основные характеристики</StatGroupTitle>\r\n          {unassignedPoints > 0 && (\r\n            <UnassignedPoints>\r\n              Нераспределенные очки: {unassignedPoints}\r\n            </UnassignedPoints>\r\n          )}\r\n          <StatGrid>\r\n            <StatItem>\r\n              <StatLabel>Сила</StatLabel>\r\n              <StatControls>\r\n                <StatValue>\r\n                  {formatStat(stats.strength)}\r\n                  {/* Для силы сохраняем тот же ключ */}\r\n                  {player.equipmentBonuses?.stats?.strength > 0 && (\r\n                    <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                      +{player.equipmentBonuses.stats.strength}\r\n                    </span>\r\n                  )}\r\n                </StatValue>\r\n                {unassignedPoints > 0 && (\r\n                  <StatButton onClick={() => increaseStat('strength')}>+</StatButton>\r\n                )}\r\n              </StatControls>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Ловкость</StatLabel>\r\n              <StatControls>\r\n                <StatValue>\r\n                  {formatStat(stats.agility)}\r\n                  {/* Для agility отображаем dexterity из бонусов */}\r\n                  {player.equipmentBonuses?.stats?.dexterity > 0 && (\r\n                    <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                      +{player.equipmentBonuses.stats.dexterity}\r\n                    </span>\r\n                  )}\r\n                </StatValue>\r\n                {unassignedPoints > 0 && (\r\n                  <StatButton onClick={() => increaseStat('agility')}>+</StatButton>\r\n                )}\r\n              </StatControls>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Здоровье</StatLabel>\r\n              <StatControls>\r\n                <StatValue>\r\n                  {formatStat(stats.health)}\r\n                  {/* Для health отображаем vitality из бонусов */}\r\n                  {player.equipmentBonuses?.stats?.vitality > 0 && (\r\n                    <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                      +{player.equipmentBonuses.stats.vitality}\r\n                    </span>\r\n                  )}\r\n                </StatValue>\r\n                {unassignedPoints > 0 && (\r\n                  <StatButton onClick={() => increaseStat('health')}>+</StatButton>\r\n                )}\r\n              </StatControls>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Интеллект</StatLabel>\r\n              <StatControls>\r\n                <StatValue>\r\n                  {formatStat(stats.intellect)}\r\n                  {/* Для intellect отображаем intelligence из бонусов */}\r\n                  {player.equipmentBonuses?.stats?.intelligence > 0 && (\r\n                    <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                      +{player.equipmentBonuses.stats.intelligence}\r\n                    </span>\r\n                  )}\r\n                </StatValue>\r\n                {unassignedPoints > 0 && (\r\n                  <StatButton onClick={() => increaseStat('intellect')}>+</StatButton>\r\n                )}\r\n              </StatControls>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Дух</StatLabel>\r\n              <StatControls>\r\n                <StatValue>\r\n                  {formatStat(stats.spirit)}\r\n                  {/* Для spirit отображаем perception из бонусов */}\r\n                  {player.equipmentBonuses?.stats?.perception > 0 && (\r\n                    <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                      +{player.equipmentBonuses.stats.perception}\r\n                    </span>\r\n                  )}\r\n                </StatValue>\r\n                {unassignedPoints > 0 && (\r\n                  <StatButton onClick={() => increaseStat('spirit')}>+</StatButton>\r\n                )}\r\n              </StatControls>\r\n            </StatItem>\r\n            {/* Добавляем отображение для удачи, если нужно */}\r\n            {player.equipmentBonuses?.stats?.luck > 0 && (\r\n              <StatItem>\r\n                <StatLabel>Удача</StatLabel>\r\n                <StatControls>\r\n                  <StatValue>\r\n                    {0}\r\n                    <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                      +{player.equipmentBonuses.stats.luck}\r\n                    </span>\r\n                  </StatValue>\r\n                </StatControls>\r\n              </StatItem>\r\n            )}\r\n          </StatGrid>\r\n        </StatGroup>\r\n        \r\n        <StatGroup>\r\n          <StatGroupTitle>Боевые характеристики</StatGroupTitle>\r\n          <StatGrid>\r\n            <StatItem>\r\n              <StatLabel>Физ. атака</StatLabel>\r\n              <StatValue>\r\n                {formatStat(stats.strength)}\r\n                {player.equipmentBonuses?.combat?.physicalDamage > 0 && (\r\n                  <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                    +{player.equipmentBonuses.combat.physicalDamage}\r\n                  </span>\r\n                )}\r\n              </StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Маг. атака</StatLabel>\r\n              <StatValue>\r\n                {formatStat(derivedStats.magicalAttack)}\r\n                {player.equipmentBonuses?.combat?.magicDamage > 0 && (\r\n                  <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                    +{player.equipmentBonuses.combat.magicDamage}\r\n                  </span>\r\n                )}\r\n              </StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Физ. защита</StatLabel>\r\n              <StatValue>\r\n                {formatStat(derivedStats.physicalDefense)}\r\n                {player.equipmentBonuses?.combat?.physicalDefense > 0 && (\r\n                  <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                    +{player.equipmentBonuses.combat.physicalDefense}\r\n                  </span>\r\n                )}\r\n              </StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Маг. защита</StatLabel>\r\n              <StatValue>\r\n                {formatStat(derivedStats.magicalDefense)}\r\n                {player.equipmentBonuses?.combat?.magicDefense > 0 && (\r\n                  <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                    +{player.equipmentBonuses.combat.magicDefense}\r\n                  </span>\r\n                )}\r\n              </StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Уклонение</StatLabel>\r\n              <StatValue>\r\n                {formatStat(derivedStats.evasion)}\r\n                {player.equipmentBonuses?.combat?.dodgeChance > 0 && (\r\n                  <span style={{ color: '#4caf50', marginLeft: '5px' }}>\r\n                    +{player.equipmentBonuses.combat.dodgeChance}%\r\n                  </span>\r\n                )}\r\n              </StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Точность</StatLabel>\r\n              <StatValue>{formatStat(derivedStats.accuracy)}</StatValue>\r\n            </StatItem>\r\n          </StatGrid>\r\n        </StatGroup>\r\n        \r\n        <StatGroup>\r\n          <StatGroupTitle>Культивация</StatGroupTitle>\r\n          <StatGrid>\r\n            <StatItem>\r\n              <StatLabel>Духовная энергия</StatLabel>\r\n              <StatValue>{cultivation.energy || 0}/{cultivation.maxEnergy || 100}</StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Опыт</StatLabel>\r\n              <StatValue>{cultivation.experience || 0}/{cultivation.experienceRequired || 100}</StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Понимание Дао</StatLabel>\r\n              <StatValue>{cultivation.daoUnderstanding || 0}%</StatValue>\r\n            </StatItem>\r\n            <StatItem>\r\n              <StatLabel>Прорывы</StatLabel>\r\n              <StatValue>{cultivation.breakthroughs || 0}</StatValue>\r\n            </StatItem>\r\n          </StatGrid>\r\n        </StatGroup>\r\n      </StatsPanel>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CharacterTab;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst BarContainer = styled.div`\r\n  width: 100%;\r\n  height: 22px;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  border-radius: 11px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5), 0 1px 2px rgba(255, 255, 255, 0.05);\r\n  border: 1px solid rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst BarFill = styled.div`\r\n  height: 100%;\r\n  width: ${props => (props.value / props.maxValue) * 100}%;\r\n  background: ${props => {\r\n    const percentage = (props.value / props.maxValue) * 100;\r\n    \r\n    switch (props.type) {\r\n      case 'health':\r\n        if (percentage <= 20) return 'linear-gradient(to right, #8B0000, #d32f2f)';\r\n        if (percentage <= 50) return 'linear-gradient(to right, #e65100, #fb8c00)';\r\n        return 'linear-gradient(to right, #2e7d32, #4caf50)';\r\n      case 'energy':\r\n        return 'linear-gradient(to right, #1565C0, #42a5f5)';\r\n      case 'hunger':\r\n        if (percentage <= 30) return 'linear-gradient(to right, #8B0000, #d32f2f)';\r\n        if (percentage <= 60) return 'linear-gradient(to right, #e65100, #fb8c00)';\r\n        return 'linear-gradient(to right, #2e7d32, #4caf50)';\r\n      case 'loyalty':\r\n        if (percentage <= 25) return 'linear-gradient(to right, #8B0000, #d32f2f)';\r\n        if (percentage <= 50) return 'linear-gradient(to right, #e65100, #fb8c00)';\r\n        return 'linear-gradient(to right, #4A148C, #9c27b0)';\r\n      default:\r\n        return 'linear-gradient(to right, #424242, #757575)';\r\n    }\r\n  }};\r\n  transition: width 0.3s ease-out;\r\n  position: relative;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 50%;\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.25) 0%,\r\n      rgba(255, 255, 255, 0.05) 100%\r\n    );\r\n  }\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    width: 7px;\r\n    background: rgba(255, 255, 255, 0.15);\r\n    filter: blur(3px);\r\n  }\r\n`;\r\n\r\nconst BarText = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: #fff;\r\n  font-size: 0.85rem;\r\n  font-weight: bold;\r\n  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.7);\r\n  white-space: nowrap;\r\n  letter-spacing: 0.5px;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: #e0e0e0;\r\n  font-size: 0.85rem;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.7);\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  margin-right: 5px;\r\n  filter: drop-shadow(1px 1px 1px rgba(0, 0, 0, 0.5));\r\n`;\r\n\r\nfunction ResourceBar({\r\n  type = 'health',\r\n  value,\r\n  maxValue = 100, // Установим значение по умолчанию для maxValue\r\n  label,\r\n  showValues = true,\r\n  showPercentage = false,\r\n  className,\r\n  ...props // Добавляем сбор всех дополнительных пропсов\r\n}) {\r\n  // Защита от деления на ноль или undefined\r\n  const safeMaxValue = maxValue || 100;\r\n  const safeValue = isNaN(value) ? 0 : Math.max(0, value || 0);\r\n  const percentage = Math.round((safeValue / safeMaxValue) * 100);\r\n  \r\n  const icons = {\r\n    health: '❤️',\r\n    energy: '⚡',\r\n    hunger: '🍖',\r\n    loyalty: '🐾'\r\n  };\r\n  \r\n  return (\r\n    <Container className={className}>\r\n      <Label>\r\n        <div>\r\n          <Icon>{icons[type]}</Icon>\r\n          {label}\r\n        </div>\r\n        {showValues && (\r\n          <div>\r\n            {safeValue}/{safeMaxValue}\r\n            {showPercentage && ` (${percentage}%)`}\r\n          </div>\r\n        )}\r\n      </Label>\r\n      \r\n      <BarContainer {...props}> {/* Передаем все дополнительные пропсы (включая data-атрибуты) */}\r\n        <BarFill\r\n          type={type}\r\n          value={safeValue}\r\n          maxValue={safeMaxValue}\r\n        />\r\n        <BarText>\r\n          {showValues ? `${safeValue}/${safeMaxValue}` : `${percentage}%`}\r\n        </BarText>\r\n      </BarContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ResourceBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ResourceBar from './ResourceBar';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n`;\r\n\r\nconst PortraitContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding-bottom: 100%;\r\n  background: ${props => props.isEnemy \r\n    ? 'radial-gradient(circle, rgba(50, 23, 23, 0.7) 0%, rgba(68, 20, 20, 0.8) 100%)'\r\n    : 'radial-gradient(circle, rgba(23, 34, 50, 0.7) 0%, rgba(20, 40, 68, 0.8) 100%)'\r\n  };\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);\r\n  border: 1px solid ${props => props.isEnemy \r\n    ? 'rgba(220, 20, 60, 0.4)'\r\n    : 'rgba(100, 149, 237, 0.4)'\r\n  };\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 12px 20px rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\n\r\nconst PortraitContent = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 5rem;\r\n  text-shadow: 0 0 15px ${props => props.isEnemy \r\n    ? 'rgba(255, 100, 100, 0.7)'\r\n    : 'rgba(100, 200, 255, 0.7)'\r\n  };\r\n  \r\n  ${props => props.isEnemy && `\r\n    transform: scaleX(-1);\r\n  `}\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: ${props => props.isEnemy\r\n      ? 'radial-gradient(circle at 30% 30%, rgba(255, 100, 100, 0.2) 0%, transparent 60%)'\r\n      : 'radial-gradient(circle at 30% 30%, rgba(100, 200, 255, 0.2) 0%, transparent 60%)'\r\n    };\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nconst NamePlate = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 0.6) 80%, transparent 100%);\r\n  padding: 15px 10px 10px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Name = styled.div`\r\n  color: ${props => props.isEnemy ? '#ff9e9e' : '#9ecaff'};\r\n  font-size: 1.2rem;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  letter-spacing: 0.5px;\r\n`;\r\n\r\nconst Level = styled.div`\r\n  color: #e0e0e0;\r\n  font-size: 0.9rem;\r\n  font-weight: 300;\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst StyledResourceBar = styled(ResourceBar)`\r\n  height: 15px;\r\n`;\r\n\r\nfunction Portrait({\r\n  name,\r\n  level,\r\n  icon,\r\n  health,\r\n  maxHealth,\r\n  energy,\r\n  maxEnergy,\r\n  hunger,\r\n  loyalty,\r\n  isPet = false,\r\n  isEnemy = false\r\n}) {\r\n  return (\r\n    <Container>\r\n      <PortraitContainer isEnemy={isEnemy}>\r\n        <PortraitContent isEnemy={isEnemy}>\r\n          {icon}\r\n        </PortraitContent>\r\n        \r\n        <NamePlate>\r\n          <Name isEnemy={isEnemy}>{name}</Name>\r\n          <Level>Уровень {level}</Level>\r\n        </NamePlate>\r\n      </PortraitContainer>\r\n      \r\n      <StatsContainer>\r\n        <StyledResourceBar\r\n          type=\"health\"\r\n          value={health}\r\n          maxValue={maxHealth}\r\n          label=\"Здоровье\"\r\n          // Добавляем data-атрибуты для доступа через DOM\r\n          data-health={health}\r\n          data-max-health={maxHealth}\r\n        />\r\n        \r\n        {maxEnergy > 0 && (\r\n          <StyledResourceBar\r\n            type=\"energy\"\r\n            value={energy}\r\n            maxValue={maxEnergy}\r\n            label=\"Энергия\"\r\n            // Добавляем data-атрибуты для доступа через DOM\r\n            data-energy={energy}\r\n            data-max-energy={maxEnergy}\r\n          />\r\n        )}\r\n        \r\n        {/* Отображаем сытость и лояльность только для питомцев */}\r\n        {isPet && hunger !== undefined && (\r\n          <StyledResourceBar\r\n            type=\"hunger\"\r\n            value={hunger}\r\n            maxValue={100}\r\n            label=\"Сытость\"\r\n            data-hunger={hunger}\r\n          />\r\n        )}\r\n        \r\n        {isPet && loyalty !== undefined && (\r\n          <StyledResourceBar\r\n            type=\"loyalty\"\r\n            value={loyalty}\r\n            maxValue={100}\r\n            label=\"Лояльность\"\r\n            data-loyalty={loyalty}\r\n          />\r\n        )}\r\n      </StatsContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Portrait;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\r\n  gap: 15px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  position: relative;\r\n  background: ${props => props.disabled \r\n    ? 'linear-gradient(to bottom, rgba(40, 40, 40, 0.95), rgba(30, 30, 30, 0.95))' \r\n    : 'linear-gradient(to bottom, rgba(53, 46, 21, 0.95), rgba(43, 36, 11, 0.95))'\r\n  };\r\n  border: 1px solid ${props => props.disabled \r\n    ? 'rgba(102, 102, 102, 0.5)' \r\n    : 'rgba(212, 175, 55, 0.7)'\r\n  };\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3), inset 0 1px 3px rgba(255, 255, 255, 0.1);\r\n  border-radius: 10px;\r\n  padding: 15px 12px;\r\n  color: ${props => props.disabled ? '#777' : '#ffd700'};\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  transition: all 0.3s cubic-bezier(.25,.8,.25,1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n  opacity: ${props => props.disabled ? 0.8 : 1};\r\n  font-weight: ${props => props.disabled ? 'normal' : 'bold'};\r\n  text-shadow: ${props => props.disabled ? 'none' : '0 1px 2px rgba(0, 0, 0, 0.5)'};\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: linear-gradient(to bottom, rgba(73, 66, 41, 0.95), rgba(63, 56, 31, 0.95));\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4), inset 0 1px 3px rgba(255, 255, 255, 0.2);\r\n    color: #fff07c;\r\n    border-color: rgba(255, 215, 0, 0.8);\r\n  }\r\n  \r\n  &:active:not(:disabled) {\r\n    transform: translateY(1px);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2), inset 0 1px 3px rgba(255, 255, 255, 0.1);\r\n    background: linear-gradient(to bottom, rgba(43, 36, 11, 0.95), rgba(53, 46, 21, 0.95));\r\n  }\r\n  \r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 50%;\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgba(255, 255, 255, 0.1) 0%,\r\n      transparent 100%\r\n    );\r\n    border-radius: 9px 9px 0 0;\r\n  }\r\n`;\r\n\r\nconst ActionIcon = styled.div`\r\n  font-size: 2rem;\r\n  filter: drop-shadow(0 2px 3px rgba(0, 0, 0, 0.5));\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ActionName = styled.div`\r\n  font-size: 1rem;\r\n  text-align: center;\r\n  margin-bottom: 2px;\r\n  letter-spacing: 0.5px;\r\n`;\r\n\r\nconst ActionCost = styled.div`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.disabled ? '#777' : '#72bbff'};\r\n  font-weight: normal;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n`;\r\n\r\nconst ActionCooldown = styled.div`\r\n  font-size: 0.9rem;\r\n  color: ${props => props.disabled ? '#777' : '#ff7f7f'};\r\n  font-weight: normal;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 3px;\r\n`;\r\n\r\nconst Tooltip = styled.div`\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: rgba(0, 0, 0, 0.9);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  padding: 8px;\r\n  width: max-content;\r\n  max-width: 200px;\r\n  margin-bottom: 8px;\r\n  z-index: 100;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n  \r\n  ${ActionButton}:hover & {\r\n    opacity: 1;\r\n  }\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: #d4af37 transparent transparent transparent;\r\n  }\r\n`;\r\n\r\nconst TooltipTitle = styled.div`\r\n  color: #d4af37;\r\n  font-weight: bold;\r\n  margin-bottom: 4px;\r\n`;\r\n\r\nconst TooltipDescription = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n`;\r\n\r\nconst TooltipStats = styled.div`\r\n  margin-top: 4px;\r\n  font-size: 0.8rem;\r\n  \r\n  div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: ${props => props.type === 'positive' ? '#4caf50' : '#f44336'};\r\n  }\r\n`;\r\n\r\nconst actionIcons = {\r\n  attack: '⚔️',\r\n  defend: '🛡️',\r\n  heal: '💚',\r\n  flee: '🏃'\r\n};\r\n\r\nfunction ActionBar({\r\n  actions = [],\r\n  onActionSelect,\r\n  disabled = false,\r\n  currentEnergy = 0\r\n}) {\r\n  const isActionAvailable = (action) => {\r\n    if (disabled) return false;\r\n    if (action.energyCost > currentEnergy) return false;\r\n    if (action.cooldown > 0) return false;\r\n    // Добавляем проверку на собственный флаг disabled у действия\r\n    // (используется для способностей питомца при низкой сытости)\r\n    if (action.disabled) return false;\r\n    return true;\r\n  };\r\n  \r\n  // Функция для определения причины, почему действие недоступно\r\n  const getDisabledReason = (action) => {\r\n    if (disabled) return \"Сейчас не ваш ход\";\r\n    if (action.energyCost > currentEnergy) return `Недостаточно энергии (нужно ${action.energyCost})`;\r\n    if (action.cooldown > 0) return `Перезарядка (${action.cooldown} ходов)`;\r\n    if (action.disabled && action.type === 'petAbility') return \"Питомцу не хватает сытости (нужно минимум 20%)\";\r\n    if (action.disabled) return \"Действие недоступно\";\r\n    return \"\";\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      {actions.map((action, index) => {\r\n        const isAvailable = isActionAvailable(action);\r\n        \r\n        return (\r\n          <ActionButton\r\n            key={`${action.name}-${index}`}\r\n            onClick={() => isAvailable && onActionSelect(action)}\r\n            disabled={!isAvailable}\r\n          >\r\n            <ActionIcon>\r\n              {action.icon || actionIcons[action.type] || '❓'}\r\n            </ActionIcon>\r\n            \r\n            <ActionName>{action.name}</ActionName>\r\n            \r\n            {action.energyCost > 0 && (\r\n              <ActionCost disabled={!isAvailable}>\r\n                ⚡ {action.energyCost}\r\n              </ActionCost>\r\n            )}\r\n            \r\n            {action.cooldown > 0 && (\r\n              <ActionCooldown disabled={!isAvailable}>\r\n                🕒 {action.cooldown}\r\n              </ActionCooldown>\r\n            )}\r\n            \r\n            <Tooltip>\r\n              <TooltipTitle>{action.name}</TooltipTitle>\r\n              \r\n              <TooltipDescription>\r\n                {action.description}\r\n              </TooltipDescription>\r\n              \r\n              {!isAvailable && (\r\n                <TooltipDescription style={{ color: '#ff6b6b', marginTop: '5px', fontWeight: 'bold' }}>\r\n                  {getDisabledReason(action)}\r\n                </TooltipDescription>\r\n              )}\r\n              \r\n              {/* Используем calculatedDamage, если он определен, иначе используем базовый damage */}\r\n              {(action.calculatedDamage || action.damage) && (\r\n                <TooltipStats type=\"negative\">\r\n                  <div>\r\n                    <span>Урон:</span>\r\n                    <span>{action.calculatedDamage || action.damage}</span>\r\n                  </div>\r\n                </TooltipStats>\r\n              )}\r\n              \r\n              {action.healing && (\r\n                <TooltipStats type=\"positive\">\r\n                  <div>\r\n                    <span>Лечение:</span>\r\n                    <span>{action.healing}</span>\r\n                  </div>\r\n                </TooltipStats>\r\n              )}\r\n              \r\n              {action.type === 'petAbility' && (\r\n                <TooltipDescription style={{ color: '#f39c12', marginTop: '5px', fontSize: '0.8rem' }}>\r\n                  Использование способности уменьшает сытость питомца на 20% и снижает лояльность\r\n                </TooltipDescription>\r\n              )}\r\n              \r\n              {action.effects?.map((effect, index) => (\r\n                <TooltipDescription key={index}>\r\n                  {effect.description}\r\n                </TooltipDescription>\r\n              ))}\r\n            </Tooltip>\r\n          </ActionButton>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ActionBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst EffectsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n`;\r\n\r\nconst EffectItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 4px 0;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  \r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nconst EffectIcon = styled.div`\r\n  font-size: 1rem;\r\n  color: ${props => {\r\n    switch (props.type) {\r\n      case 'buff': return '#7FFF7F'; // Зеленый для положительных эффектов\r\n      case 'debuff': return '#FF7F7F'; // Красный для отрицательных эффектов\r\n      default: return '#FFFF7F'; // Желтый для нейтральных эффектов\r\n    }\r\n  }};\r\n`;\r\n\r\nconst EffectName = styled.div`\r\n  flex: 1;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst EffectDuration = styled.div`\r\n  font-size: 0.8rem;\r\n  color: rgba(255, 255, 255, 0.7);\r\n`;\r\n\r\n/**\r\n * Компонент для отображения активных эффектов и бонусов в бою\r\n */\r\nfunction StatusEffects({ effects = [] }) {\r\n  // Если нет эффектов, показываем сообщение\r\n  if (!effects || effects.length === 0) {\r\n    return <div style={{ color: \"#aaa\", fontSize: \"0.9rem\" }}>Нет активных эффектов</div>;\r\n  }\r\n  \r\n  return (\r\n    <EffectsWrapper>\r\n      {effects.map((effect, index) => (\r\n        <EffectItem key={index}>\r\n          <EffectIcon type={effect.type || 'neutral'}>\r\n            {effect.icon || (effect.type === 'buff' ? '✨' : effect.type === 'debuff' ? '⚠️' : '•')}\r\n          </EffectIcon>\r\n          <EffectName>{effect.name}</EffectName>\r\n          {effect.duration && (\r\n            <EffectDuration>{effect.duration} ходов</EffectDuration>\r\n          )}\r\n        </EffectItem>\r\n      ))}\r\n    </EffectsWrapper>\r\n  );\r\n}\r\n\r\nexport default StatusEffects;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  background: rgba(10, 12, 16, 0.7);\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  height: 200px;\r\n  overflow-y: auto;\r\n  box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.3);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  font-family: 'Arial', sans-serif;\r\n  \r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0.3);\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background: linear-gradient(to bottom, rgba(212, 175, 55, 0.7), rgba(192, 155, 35, 0.7));\r\n    border-radius: 4px;\r\n    border: 1px solid rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: linear-gradient(to bottom, rgba(232, 195, 75, 0.8), rgba(212, 175, 55, 0.8));\r\n  }\r\n`;\r\n\r\nconst LogEntry = styled.div`\r\n  position: relative;\r\n  color: ${props => {\r\n    switch (props.type) {\r\n      case 'damage':\r\n        return '#ff7f7f';\r\n      case 'heal':\r\n        return '#7fff7f';\r\n      case 'buff':\r\n        return '#7fbfff';\r\n      case 'debuff':\r\n        return '#ffbf7f';\r\n      case 'critical':\r\n        return '#ff7fbf';\r\n      case 'dodge':\r\n        return '#bf7fff';\r\n      case 'system':\r\n        return '#ffd700';\r\n      default:\r\n        return '#e0e0e0';\r\n    }\r\n  }};\r\n  padding: 6px 10px;\r\n  margin-bottom: 4px;\r\n  font-size: 0.95rem;\r\n  line-height: 1.5;\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.7);\r\n  border-left: 3px solid ${props => {\r\n    switch (props.type) {\r\n      case 'damage':\r\n        return 'rgba(255, 87, 34, 0.7)';\r\n      case 'heal':\r\n        return 'rgba(76, 175, 80, 0.7)';\r\n      case 'buff':\r\n        return 'rgba(33, 150, 243, 0.7)';\r\n      case 'debuff':\r\n        return 'rgba(255, 152, 0, 0.7)';\r\n      case 'critical':\r\n        return 'rgba(233, 30, 99, 0.7)';\r\n      case 'dodge':\r\n        return 'rgba(156, 39, 176, 0.7)';\r\n      case 'system':\r\n        return 'rgba(212, 175, 55, 0.7)';\r\n      default:\r\n        return 'rgba(158, 158, 158, 0.7)';\r\n    }\r\n  }};\r\n  border-radius: 4px;\r\n  background: ${props => {\r\n    switch (props.type) {\r\n      case 'damage':\r\n        return 'rgba(244, 67, 54, 0.1)';\r\n      case 'heal':\r\n        return 'rgba(76, 175, 80, 0.1)';\r\n      case 'buff':\r\n        return 'rgba(33, 150, 243, 0.1)';\r\n      case 'debuff':\r\n        return 'rgba(255, 152, 0, 0.1)';\r\n      case 'critical':\r\n        return 'rgba(233, 30, 99, 0.1)';\r\n      case 'dodge':\r\n        return 'rgba(156, 39, 176, 0.1)';\r\n      case 'system':\r\n        return 'rgba(212, 175, 55, 0.1)';\r\n      default:\r\n        return 'rgba(0, 0, 0, 0.15)';\r\n    }\r\n  }};\r\n  \r\n  &:hover {\r\n    background: ${props => {\r\n      switch (props.type) {\r\n        case 'damage':\r\n          return 'rgba(244, 67, 54, 0.2)';\r\n        case 'heal':\r\n          return 'rgba(76, 175, 80, 0.2)';\r\n        case 'buff':\r\n          return 'rgba(33, 150, 243, 0.2)';\r\n        case 'debuff':\r\n          return 'rgba(255, 152, 0, 0.2)';\r\n        case 'critical':\r\n          return 'rgba(233, 30, 99, 0.2)';\r\n        case 'dodge':\r\n          return 'rgba(156, 39, 176, 0.2)';\r\n        case 'system':\r\n          return 'rgba(212, 175, 55, 0.2)';\r\n        default:\r\n          return 'rgba(66, 66, 66, 0.2)';\r\n      }\r\n    }};\r\n    transform: translateX(2px);\r\n    transition: all 0.3s ease;\r\n  }\r\n`;\r\n\r\nconst Timestamp = styled.span`\r\n  color: rgba(255, 255, 255, 0.5);\r\n  font-size: 0.8rem;\r\n  margin-right: 8px;\r\n  font-family: 'Courier New', monospace;\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction CombatLog({ entries = [] }) {\r\n  const containerRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n    }\r\n  }, [entries]);\r\n  \r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return `${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}`;\r\n  };\r\n  \r\n  return (\r\n    <Container ref={containerRef}>\r\n      {entries.map((entry, index) => (\r\n        <LogEntry\r\n          key={`${entry.timestamp}-${index}`}\r\n          type={entry.type}\r\n        >\r\n          <Timestamp>{formatTime(entry.timestamp)}</Timestamp>\r\n          {entry.message}\r\n        </LogEntry>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CombatLog;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Portrait from './Portrait';\r\nimport ActionBar from './ActionBar';\r\nimport StatusEffects from './StatusEffects';\r\nimport CombatLog from './CombatLog';\r\nimport { GameContext } from '../../context/GameContext';\r\n\r\n// Проверяем и логируем импорты для отладки\r\nconsole.log('CombatInterface импорты:', {\r\n  Portrait: typeof Portrait,\r\n  ActionBar: typeof ActionBar,\r\n  StatusEffects: typeof StatusEffects,\r\n  CombatLog: typeof CombatLog\r\n});\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  height: 100%;\r\n  background: linear-gradient(to bottom, #1a1a2e 0%, #16213e 100%);\r\n  box-shadow: inset 0 0 50px rgba(0, 0, 0, 0.5);\r\n  border-radius: 8px;\r\n  font-family: 'Arial', sans-serif;\r\n`;\r\n\r\nconst CombatArea = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n`;\r\n\r\nconst CharacterContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  width: 300px;\r\n  position: relative;\r\n  z-index: 1;\r\n  \r\n  &.player {\r\n    box-shadow: 0 0 15px rgba(100, 149, 237, 0.3);\r\n  }\r\n  \r\n  &.enemy {\r\n    box-shadow: 0 0 15px rgba(220, 20, 60, 0.3);\r\n  }\r\n`;\r\n\r\nconst EffectsContainer = styled.div`\r\n  background: rgba(13, 17, 23, 0.7);\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(5px);\r\n`;\r\n\r\nconst EffectsTitle = styled.div`\r\n  color: #e0e0e0;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n  letter-spacing: 0.5px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst CenterArea = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n  position: relative;\r\n  \r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    background: linear-gradient(\r\n      to right,\r\n      transparent 0%,\r\n      rgba(218, 165, 32, 0.5) 50%,\r\n      transparent 100%\r\n    );\r\n    z-index: 0;\r\n  }\r\n`;\r\n\r\nconst TurnIndicator = styled.div`\r\n  color: #ffd700;\r\n  font-size: 1.3rem;\r\n  text-align: center;\r\n  padding: 15px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 10px;\r\n  min-width: 220px;\r\n  box-shadow: 0 0 20px rgba(218, 165, 32, 0.4);\r\n  border: 1px solid rgba(218, 165, 32, 0.3);\r\n  font-weight: bold;\r\n  text-shadow: 0 0 5px rgba(218, 165, 32, 0.5);\r\n  letter-spacing: 1px;\r\n  position: relative;\r\n  z-index: 1;\r\n  transition: all 0.3s ease;\r\n  animation: pulse 2s infinite;\r\n  \r\n  @keyframes pulse {\r\n    0% { box-shadow: 0 0 20px rgba(218, 165, 32, 0.4); }\r\n    50% { box-shadow: 0 0 30px rgba(218, 165, 32, 0.6); }\r\n    100% { box-shadow: 0 0 20px rgba(218, 165, 32, 0.4); }\r\n  }\r\n`;\r\n\r\nconst ActionArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  margin-top: 10px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nconst LogArea = styled.div`\r\n  flex: 1;\r\n  min-height: 180px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  scrollbar-width: thin;\r\n  scrollbar-color: rgba(255, 255, 255, 0.2) rgba(0, 0, 0, 0.2);\r\n  \r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0.2);\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nfunction CombatInterface({\r\n  player,\r\n  enemy,\r\n  playerActions,\r\n  onActionSelect,\r\n  isPlayerTurn,\r\n  disabled,\r\n  combatLog = []\r\n}) {\r\n  // Используется только для доступа к состоянию игры, если это потребуется\r\n  const { state } = useContext(GameContext);\r\n  \r\n  return (\r\n    <Container>\r\n      <CombatArea>\r\n        <CharacterContainer className=\"player\">\r\n          <Portrait\r\n            name={player.name}\r\n            level={player.level}\r\n            icon={player.icon || '👤'}\r\n            health={player.stats.health}\r\n            maxHealth={player.stats.maxHealth}\r\n            energy={player.stats.energy}\r\n            maxEnergy={player.stats.maxEnergy}\r\n          />\r\n          \r\n          <EffectsContainer>\r\n            <EffectsTitle>Активные эффекты</EffectsTitle>\r\n            <StatusEffects effects={player.effects} />\r\n          </EffectsContainer>\r\n        </CharacterContainer>\r\n        \r\n        <CenterArea>\r\n          <TurnIndicator>\r\n            {isPlayerTurn ? 'Ваш ход' : 'Ход противника'}\r\n          </TurnIndicator>\r\n        </CenterArea>\r\n        \r\n        <CharacterContainer className=\"enemy\">\r\n          <Portrait\r\n            name={enemy.name}\r\n            level={enemy.level}\r\n            icon={enemy.icon}\r\n            health={enemy.stats.health}\r\n            maxHealth={enemy.stats.maxHealth}\r\n            energy={enemy.stats.energy}\r\n            maxEnergy={enemy.stats.maxEnergy}\r\n            isEnemy\r\n          />\r\n          \r\n          <EffectsContainer>\r\n            <EffectsTitle>Активные эффекты</EffectsTitle>\r\n            <StatusEffects effects={enemy.effects} />\r\n          </EffectsContainer>\r\n        </CharacterContainer>\r\n      </CombatArea>\r\n      \r\n      <ActionArea>\r\n        <ActionBar\r\n          actions={playerActions}\r\n          onActionSelect={onActionSelect}\r\n          disabled={disabled || !isPlayerTurn}\r\n          currentEnergy={player.stats.energy}\r\n        />\r\n      </ActionArea>\r\n      \r\n      <LogArea>\r\n        <CombatLog entries={combatLog} />\r\n      </LogArea>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CombatInterface;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ResultsPanel = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  color: ${props => props.victory ? '#4caf50' : '#f44336'};\r\n  margin: 0 0 20px 0;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst StatsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst StatBlock = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst StatTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst StatList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\n\r\nconst StatItem = styled.div`\r\n  color: #aaa;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  \r\n  span:last-child {\r\n    color: ${props => props.positive ? '#4caf50' : props.negative ? '#f44336' : '#d4af37'};\r\n  }\r\n`;\r\n\r\nconst RewardsContainer = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst RewardsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  gap: 15px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst RewardItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  color: #aaa;\r\n  \r\n  span:first-child {\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  span:last-child {\r\n    color: #d4af37;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #d4af37;\r\n  color: #000;\r\n  border: none;\r\n  padding: 12px 30px;\r\n  border-radius: 4px;\r\n  font-size: 1.1rem;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background: #e5c158;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nfunction CombatResults({ results, onClose }) {\r\n  const { state } = useGame();\r\n  \r\n  const {\r\n    victory,\r\n    playerStats,\r\n    enemyStats,\r\n    rewards,\r\n    duration\r\n  } = results;\r\n  \r\n  const formatDuration = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <ResultsPanel>\r\n        <Title victory={victory}>\r\n          {victory ? 'Победа!' : 'Поражение'}\r\n        </Title>\r\n        \r\n        <StatsContainer>\r\n          <StatBlock>\r\n            <StatTitle>Ваши показатели</StatTitle>\r\n            <StatList>\r\n              <StatItem>\r\n                <span>Нанесено урона:</span>\r\n                <span>{playerStats.damageDealt}</span>\r\n              </StatItem>\r\n              <StatItem>\r\n                <span>Использовано техник:</span>\r\n                <span>{playerStats.techniquesUsed}</span>\r\n              </StatItem>\r\n              <StatItem>\r\n                <span>Критические удары:</span>\r\n                <span>{playerStats.criticalHits}</span>\r\n              </StatItem>\r\n              <StatItem>\r\n                <span>Уклонения:</span>\r\n                <span>{playerStats.dodges}</span>\r\n              </StatItem>\r\n            </StatList>\r\n          </StatBlock>\r\n          \r\n          <StatBlock>\r\n            <StatTitle>Противник</StatTitle>\r\n            <StatList>\r\n              <StatItem>\r\n                <span>Нанесено урона:</span>\r\n                <span>{enemyStats.damageDealt}</span>\r\n              </StatItem>\r\n              <StatItem>\r\n                <span>Использовано техник:</span>\r\n                <span>{enemyStats.techniquesUsed}</span>\r\n              </StatItem>\r\n              <StatItem>\r\n                <span>Критические удары:</span>\r\n                <span>{enemyStats.criticalHits}</span>\r\n              </StatItem>\r\n              <StatItem>\r\n                <span>Уклонения:</span>\r\n                <span>{enemyStats.dodges}</span>\r\n              </StatItem>\r\n            </StatList>\r\n          </StatBlock>\r\n        </StatsContainer>\r\n        \r\n        {victory && rewards && (\r\n          <RewardsContainer>\r\n            <StatTitle>Награды</StatTitle>\r\n            <RewardsList>\r\n              <RewardItem>\r\n                <span>✨</span>\r\n                <div>\r\n                  <div>Опыт</div>\r\n                  <span>+{rewards.experience}</span>\r\n                </div>\r\n              </RewardItem>\r\n              {rewards.currency && typeof rewards.currency === 'object' ? (\r\n                // Если currency - это объект с разными типами валют\r\n                Object.entries(rewards.currency).map(([currencyType, amount]) => {\r\n                  if (amount <= 0) return null;\r\n                  \r\n                  // Определяем иконку и название валюты\r\n                  let icon = '💰';\r\n                  let name = currencyType;\r\n                  \r\n                  if (currencyType === 'gold') {\r\n                    icon = '🪙';\r\n                    name = 'Золото';\r\n                  } else if (currencyType === 'silver') {\r\n                    icon = '💿';\r\n                    name = 'Серебро';\r\n                  } else if (currencyType === 'copper') {\r\n                    icon = '🔶';\r\n                    name = 'Медь';\r\n                  }\r\n                  \r\n                  return (\r\n                    <RewardItem key={`currency-${currencyType}`}>\r\n                      <span>{icon}</span>\r\n                      <div>\r\n                        <div>{name}</div>\r\n                        <span>+{amount}</span>\r\n                      </div>\r\n                    </RewardItem>\r\n                  );\r\n                })\r\n              ) : (\r\n                // Обратная совместимость - если currency просто число\r\n                <RewardItem>\r\n                  <span>🪙</span>\r\n                  <div>\r\n                    <div>Золото</div>\r\n                    <span>+{rewards.currency}</span>\r\n                  </div>\r\n                </RewardItem>\r\n              )}\r\n              {rewards.items.map((item, index) => (\r\n                <RewardItem key={index}>\r\n                  <span>{item.icon}</span>\r\n                  <div>\r\n                    <div>{item.name}</div>\r\n                    <span>x{item.quantity}</span>\r\n                  </div>\r\n                </RewardItem>\r\n              ))}\r\n            </RewardsList>\r\n          </RewardsContainer>\r\n        )}\r\n        \r\n        <StatItem>\r\n          <span>Длительность боя:</span>\r\n          <span>{formatDuration(duration)}</span>\r\n        </StatItem>\r\n        \r\n        <Button onClick={onClose}>\r\n          Продолжить\r\n        </Button>\r\n      </ResultsPanel>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CombatResults;\r\n","export const targetTypes = {\r\n  SINGLE: 'single',\r\n  AREA: 'area',\r\n  SELF: 'self'\r\n};\r\n\r\nexport const damageTypes = {\r\n  PHYSICAL: 'physical',\r\n  SPIRITUAL: 'spiritual',\r\n  ELEMENTAL: 'elemental'\r\n};\r\n\r\nexport const statusEffects = {\r\n  BURN: {\r\n    id: 'burn',\r\n    name: 'Горение',\r\n    icon: '🔥',\r\n    type: 'debuff',\r\n    duration: 5,\r\n    tickRate: 1,\r\n    effect: (level) => ({\r\n      damage: 10 + level * 5,\r\n      type: damageTypes.ELEMENTAL\r\n    })\r\n  },\r\n  FREEZE: {\r\n    id: 'freeze',\r\n    name: 'Заморозка',\r\n    icon: '❄️',\r\n    type: 'debuff',\r\n    duration: 3,\r\n    effect: (level) => ({\r\n      speedReduction: 0.3 + level * 0.1,\r\n      defenseReduction: 0.2 + level * 0.05\r\n    })\r\n  },\r\n  STUN: {\r\n    id: 'stun',\r\n    name: 'Оглушение',\r\n    icon: '💫',\r\n    type: 'debuff',\r\n    duration: 2,\r\n    effect: () => ({\r\n      canAct: false\r\n    })\r\n  },\r\n  POISON: {\r\n    id: 'poison',\r\n    name: 'Отравление',\r\n    icon: '💀',\r\n    type: 'debuff',\r\n    duration: 8,\r\n    tickRate: 2,\r\n    effect: (level) => ({\r\n      damage: 15 + level * 8,\r\n      type: damageTypes.SPIRITUAL\r\n    })\r\n  },\r\n  BLEED: {\r\n    id: 'bleed',\r\n    name: 'Кровотечение',\r\n    icon: '💉',\r\n    type: 'debuff',\r\n    duration: 6,\r\n    tickRate: 1,\r\n    effect: (level) => ({\r\n      damage: 8 + level * 4,\r\n      type: damageTypes.PHYSICAL\r\n    })\r\n  },\r\n  STRENGTHEN: {\r\n    id: 'strengthen',\r\n    name: 'Усиление',\r\n    icon: '💪',\r\n    type: 'buff',\r\n    duration: 10,\r\n    effect: (level) => ({\r\n      damageBonus: 0.2 + level * 0.1\r\n    })\r\n  },\r\n  PROTECT: {\r\n    id: 'protect',\r\n    name: 'Защита',\r\n    icon: '🛡️',\r\n    type: 'buff',\r\n    duration: 10,\r\n    effect: (level) => ({\r\n      defenseBonus: 0.2 + level * 0.1\r\n    })\r\n  },\r\n  SPEED: {\r\n    id: 'speed',\r\n    name: 'Ускорение',\r\n    icon: '💨',\r\n    type: 'buff',\r\n    duration: 15,\r\n    effect: (level) => ({\r\n      speedBonus: 0.3 + level * 0.1,\r\n      dodgeBonus: 0.1 + level * 0.05\r\n    })\r\n  },\r\n  REGENERATION: {\r\n    id: 'regeneration',\r\n    name: 'Регенерация',\r\n    icon: '💖',\r\n    type: 'buff',\r\n    duration: 10,\r\n    tickRate: 2,\r\n    effect: (level) => ({\r\n      healing: 20 + level * 10\r\n    })\r\n  }\r\n};\r\n\r\nexport const combatStats = {\r\n  calculateDamage: (attacker, defender, base, type, penetration = 0) => {\r\n    const defense = type === damageTypes.PHYSICAL \r\n      ? defender.physicalDefense \r\n      : defender.spiritualDefense;\r\n    \r\n    const reduction = Math.max(0, defense * (1 - penetration));\r\n    const damage = Math.max(1, base * (1 - reduction / (reduction + 100)));\r\n    \r\n    return Math.floor(damage);\r\n  },\r\n  \r\n  calculateHitChance: (attacker, defender) => {\r\n    const accuracy = attacker.accuracy || 100;\r\n    const evasion = defender.evasion || 0;\r\n    \r\n    return Math.min(95, Math.max(20, accuracy - evasion));\r\n  },\r\n  \r\n  calculateCritical: (attacker, defender) => {\r\n    const critChance = (attacker.criticalChance || 5) - (defender.criticalResistance || 0);\r\n    const isCritical = Math.random() * 100 < Math.max(0, Math.min(critChance, 50));\r\n    \r\n    return {\r\n      isCritical,\r\n      multiplier: isCritical ? 2 + (attacker.criticalDamage || 0) : 1\r\n    };\r\n  }\r\n};\r\n\r\nexport const techniques = {\r\n  basicAttack: {\r\n    id: 'basicAttack',\r\n    name: 'Обычная атака',\r\n    description: 'Простая физическая атака',\r\n    type: 'attack',\r\n    damage: 10,\r\n    damageType: damageTypes.PHYSICAL,\r\n    energyCost: 0,\r\n    cooldown: 0,\r\n    icon: '⚔️'\r\n  },\r\n  fireball: {\r\n    id: 'fireball',\r\n    name: 'Огненный шар',\r\n    description: 'Выпускает огненный шар, наносящий урон и поджигающий цель',\r\n    type: 'technique',\r\n    damage: 20,\r\n    damageType: damageTypes.ELEMENTAL,\r\n    energyCost: 30,\r\n    cooldown: 3,\r\n    icon: '🔥',\r\n    effects: [statusEffects.BURN],\r\n    targetType: targetTypes.SINGLE\r\n  },\r\n  iceShard: {\r\n    id: 'iceShard',\r\n    name: 'Ледяной осколок',\r\n    description: 'Выпускает ледяной осколок, наносящий урон и замедляющий цель',\r\n    type: 'technique',\r\n    damage: 15,\r\n    damageType: damageTypes.ELEMENTAL,\r\n    energyCost: 25,\r\n    cooldown: 2,\r\n    icon: '❄️',\r\n    effects: [statusEffects.FREEZE],\r\n    targetType: targetTypes.SINGLE\r\n  },\r\n  stoneSkin: {\r\n    id: 'stoneSkin',\r\n    name: 'Каменная кожа',\r\n    description: 'Увеличивает физическую защиту',\r\n    type: 'technique',\r\n    damage: 0,\r\n    damageType: damageTypes.PHYSICAL,\r\n    energyCost: 20,\r\n    cooldown: 5,\r\n    icon: '🛡️',\r\n    effects: [statusEffects.PROTECT],\r\n    targetType: targetTypes.SELF\r\n  },\r\n  poisonCloud: {\r\n    id: 'poisonCloud',\r\n    name: 'Ядовитое облако',\r\n    description: 'Создает облако яда, отравляющее всех противников',\r\n    type: 'technique',\r\n    damage: 10,\r\n    damageType: damageTypes.SPIRITUAL,\r\n    energyCost: 40,\r\n    cooldown: 4,\r\n    icon: '💀',\r\n    effects: [statusEffects.POISON],\r\n    targetType: targetTypes.AREA\r\n  }\r\n};\r\n\r\nexport const combatActions = {\r\n  ATTACK: 'attack',\r\n  USE_TECHNIQUE: 'use_technique',\r\n  USE_ITEM: 'use_item',\r\n  DEFEND: 'defend',\r\n  FLEE: 'flee'\r\n};\r\n\r\nexport const combatRewards = {\r\n  calculateExperience: (playerLevel, enemyLevel, enemyRank) => {\r\n    const basExp = 100;\r\n    const levelDiff = enemyLevel - playerLevel;\r\n    const multiplier = Math.max(0.1, 1 + levelDiff * 0.1);\r\n    const rankBonus = {\r\n      normal: 1,\r\n      elite: 2,\r\n      boss: 5\r\n    }[enemyRank] || 1;\r\n    \r\n    return Math.floor(basExp * multiplier * rankBonus);\r\n  },\r\n  \r\n  calculateLoot: (enemy, luck = 0) => {\r\n    const baseLoot = enemy.loot || [];\r\n    const lootChance = Math.min(100, (enemy.lootChance || 50) + luck);\r\n    \r\n    return baseLoot.filter(() => Math.random() * 100 < lootChance);\r\n  }\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport CombatInterface from './CombatInterface';\r\nimport CombatResults from './CombatResults';\r\nimport { combatActions, combatStats, combatRewards, techniques } from '../../data/combat';\r\nimport { petTypeAbilities } from '../../data/spirit-pets';\r\nimport weatherService from '../../services/weather-service';\r\n\r\nfunction CombatManager({ enemy: initialEnemy, onEnd, weatherEffects }) {\r\n  const { state, actions } = useGame();\r\n  const activePet = state.player.spiritPets.pets.find(pet => pet.id === state.player.spiritPets.activePetId);\r\n   \r\n  // Проверяем наличие сохраненного состояния боя\r\n  const hasSavedCombatState = state.combat.inCombat && \r\n                              state.combat.enemyCombatState && \r\n                              state.combat.enemyCombatState.id === initialEnemy.id;\r\n  \r\n  console.log('Проверка сохраненного состояния боя:', { \r\n    hasSavedState: hasSavedCombatState,\r\n    enemyId: initialEnemy.id,\r\n    savedEnemyId: state.combat.enemyCombatState?.id,\r\n    inCombat: state.combat.inCombat,\r\n    savedEnemyHealth: state.combat.enemyCombatState?.stats?.health\r\n  });\r\n  \r\n  const [enemy, setEnemy] = useState(() => {\r\n    // Если есть сохраненное состояние и это тот же враг - восстанавливаем его\r\n    if (hasSavedCombatState) {\r\n      console.log('Восстановление сохраненного состояния противника:', state.combat.enemyCombatState);\r\n      \r\n      // Проверка на нулевое здоровье и восстановление при необходимости\r\n      let savedEnemy = {...state.combat.enemyCombatState};\r\n      \r\n      // Проверяем здоровье врага - если оно нулевое или отрицательное, восстанавливаем до 30% от максимума\r\n      if (!savedEnemy.stats || savedEnemy.stats.health <= 0) {\r\n        console.log('⚠️ Обнаружено нулевое здоровье врага, восстанавливаем!');\r\n        \r\n        // Восстанавливаем структуру stats если она отсутствует\r\n        if (!savedEnemy.stats) {\r\n          savedEnemy.stats = { \r\n            ...initialEnemy.stats,\r\n            health: Math.ceil(initialEnemy.stats.health * 0.3),\r\n            maxHealth: initialEnemy.stats.health,\r\n            energy: initialEnemy.stats.energy,\r\n            maxEnergy: initialEnemy.stats.energy\r\n          };\r\n        } else {\r\n          // Если структура есть, но здоровье равно 0, восстанавливаем только здоровье\r\n          savedEnemy.stats.health = Math.ceil(savedEnemy.stats.maxHealth * 0.3);\r\n        }\r\n      }\r\n      \r\n      // Проверяем наличие массива атак\r\n      if (!savedEnemy.attacks || !Array.isArray(savedEnemy.attacks) || savedEnemy.attacks.length === 0) {\r\n        console.log('⚠️ Отсутствуют атаки у врага, восстанавливаем!');\r\n        savedEnemy.attacks = initialEnemy.attacks || [];\r\n      }\r\n      \r\n      return savedEnemy;\r\n    }\r\n    \r\n    // Иначе создаем нового противника\r\n    return {\r\n      ...initialEnemy,\r\n      stats: {\r\n        ...initialEnemy.stats,\r\n        health: initialEnemy.stats.health,\r\n        maxHealth: initialEnemy.stats.health,\r\n        energy: initialEnemy.stats.energy,\r\n        maxEnergy: initialEnemy.stats.energy\r\n      },\r\n      effects: []\r\n    };\r\n  });\r\n  \r\n  const [player, setPlayer] = useState(() => {\r\n    // Получаем все бонусы от экипировки\r\n    const equipBonuses = state.player.equipmentBonuses?.combat || {};\r\n    \r\n    console.log('CombatManager: Applying equipment bonuses:', equipBonuses);\r\n    console.log('CombatManager: Player base stats:', state.player.secondaryStats);\r\n    \r\n    // Если есть сохраненное состояние игрока в бою - используем его\r\n    if (hasSavedCombatState && state.combat.playerCombatState) {\r\n      console.log('Восстановление сохраненного состояния игрока:', state.combat.playerCombatState);\r\n      return {\r\n        name: state.player.name,\r\n        level: state.player.cultivation.level,\r\n        icon: state.player.avatar,\r\n        stats: { ...state.combat.playerCombatState.stats },\r\n        effects: [...state.combat.playerCombatState.effects]\r\n      };\r\n    }\r\n    \r\n    // Иначе устанавливаем здоровье и энергию на максимальные значения при входе в бой\r\n    let playerMaxHealth = state.player.stats.maxHealth || 100;\r\n    let playerHealth = playerMaxHealth; // Начинаем с полного здоровья\r\n    \r\n    let playerMaxEnergy = state.player.stats.maxEnergy || 100;\r\n    let playerEnergy = playerMaxEnergy; // Начинаем с полной энергии\r\n    \r\n    console.log('CombatManager: Максимальное здоровье при входе в бой:', playerMaxHealth);\r\n    console.log('CombatManager: Максимальная энергия при входе в бой:', playerMaxEnergy);\r\n    \r\n    let initialStats = {\r\n      // Применяем исправленные характеристики здоровья и энергии\r\n      health: playerHealth,\r\n      maxHealth: playerMaxHealth,\r\n      energy: playerEnergy,\r\n      maxEnergy: playerMaxEnergy,\r\n      \r\n      // Физическая атака (с бонусами от экипировки)\r\n      physicalAttack: (state.player.secondaryStats?.physicalAttack || 0) + \r\n                      (equipBonuses.physicalDamage || 0),\r\n      \r\n      // Магическая атака (с бонусами от экипировки)\r\n      magicalAttack: (state.player.secondaryStats?.magicalAttack || 0) + \r\n                     (equipBonuses.magicDamage || 0),\r\n      \r\n      // Физическая защита (с бонусами от экипировки)\r\n      physicalDefense: (state.player.secondaryStats?.physicalDefense || 0) + \r\n                       (equipBonuses.physicalDefense || 0),\r\n      \r\n      // Магическая защита (с бонусами от экипировки)\r\n      spiritualDefense: (state.player.secondaryStats?.magicalDefense || 0) + \r\n                        (equipBonuses.magicDefense || 0),\r\n      \r\n      // Точность\r\n      accuracy: state.player.secondaryStats?.accuracy || 90,\r\n      \r\n      // Уклонение (с бонусами от экипировки)\r\n      evasion: (state.player.secondaryStats?.evasion || 0) + \r\n               (equipBonuses.dodgeChance || 0),\r\n      \r\n      // Критический шанс (с бонусами от экипировки)\r\n      criticalChance: (state.player.secondaryStats?.critChance || 5) + \r\n                      (equipBonuses.critChance || 0),\r\n      \r\n      // Критический урон\r\n      criticalDamage: state.player.secondaryStats?.critDamage || 50\r\n    };\r\n    \r\n    if (activePet) {\r\n      // Добавляем бонусы от питомца\r\n      initialStats.maxHealth += activePet.vitality * 5;\r\n      initialStats.maxEnergy += activePet.spirit * 5;\r\n      initialStats.physicalDefense += activePet.strength;\r\n      initialStats.spiritualDefense += activePet.intelligence;\r\n      initialStats.criticalChance += activePet.agility * 0.01;\r\n    }\r\n    \r\n    console.log('CombatManager: Final player combat stats:', initialStats);\r\n    \r\n    return {\r\n      name: state.player.name,\r\n      level: state.player.cultivation.level,\r\n      icon: state.player.avatar,\r\n      stats: initialStats,\r\n      effects: []\r\n    };\r\n  });\r\n  \r\n  // Восстанавливаем ход игрока из сохраненного состояния или устанавливаем на ход игрока по умолчанию\r\n  const [isPlayerTurn, setIsPlayerTurn] = useState(() => {\r\n    if (hasSavedCombatState && state.combat.isPlayerTurn !== undefined) {\r\n      console.log('Восстанавливаем ход игрока:', state.combat.isPlayerTurn);\r\n      return state.combat.isPlayerTurn;\r\n    }\r\n    return true; // По умолчанию ход игрока\r\n  });\r\n  \r\n  const [disabled, setDisabled] = useState(false);\r\n  \r\n  // Восстанавливаем боевой лог\r\n  const [combatLog, setCombatLog] = useState(() => {\r\n    if (hasSavedCombatState && Array.isArray(state.combat.log) && state.combat.log.length > 0) {\r\n      console.log('Восстанавливаем боевой лог, записей:', state.combat.log.length);\r\n      return [...state.combat.log];\r\n    }\r\n    return [];\r\n  });\r\n  \r\n  // Восстанавливаем боевую статистику\r\n  const [combatStats, setCombatStats] = useState(() => {\r\n    if (hasSavedCombatState && state.combat.combatStats) {\r\n      console.log('Восстанавливаем боевую статистику:', state.combat.combatStats);\r\n      return state.combat.combatStats;\r\n    }\r\n    return {\r\n      player: {\r\n        damageDealt: 0,\r\n        techniquesUsed: 0,\r\n        criticalHits: 0,\r\n        dodges: 0\r\n      },\r\n      enemy: {\r\n        damageDealt: 0,\r\n        techniquesUsed: 0,\r\n        criticalHits: 0,\r\n        dodges: 0\r\n      }\r\n    };\r\n  });\r\n  \r\n  const [startTime] = useState(() => hasSavedCombatState ? state.combat.startTime : Date.now());\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [results, setResults] = useState(null);\r\n  \r\n  // Эффект для сохранения состояния боя в глобальное состояние игрока\r\n  useEffect(() => {\r\n    if (!isFinished) {\r\n      // Используем условие, чтобы избежать циклических обновлений\r\n      const shouldUpdateState = \r\n        // Обновляем только если:\r\n        // 1. Изменились статистики игрока или противника\r\n        // 2. Изменился ход\r\n        // 3. Добавлена новая запись в лог\r\n        // 4. Изменилась статистика боя\r\n        player.stats.health !== state.combat?.playerCombatState?.stats?.health ||\r\n        enemy?.stats?.health !== state.combat?.enemyCombatState?.stats?.health || \r\n        isPlayerTurn !== state.combat?.isPlayerTurn ||\r\n        combatLog.length !== state.combat?.log?.length ||\r\n        combatStats.player.damageDealt !== state.combat?.combatStats?.player?.damageDealt ||\r\n        combatStats.enemy.damageDealt !== state.combat?.combatStats?.enemy?.damageDealt;\r\n      \r\n      if (shouldUpdateState) {\r\n        console.log('Обновление состояния боя в глобальное состояние (есть изменения)');\r\n        actions.updateCombatState({\r\n          inCombat: true,\r\n          enemyCombatState: enemy,\r\n          playerCombatState: {\r\n            stats: { ...player.stats },\r\n            effects: [...player.effects]\r\n          },\r\n          isPlayerTurn: isPlayerTurn,\r\n          log: combatLog,\r\n          combatStats: combatStats,\r\n          startTime: startTime\r\n        });\r\n      }\r\n    }\r\n  }, [player.stats.health, enemy?.stats?.health, isPlayerTurn, combatLog.length, \r\n      combatStats.player.damageDealt, combatStats.enemy.damageDealt, isFinished]);\r\n  \r\n  const addLogEntry = useCallback((message, type = 'info') => {\r\n    setCombatLog(prev => [...prev, {\r\n      message,\r\n      type,\r\n      timestamp: Date.now()\r\n    }]);\r\n  }, []);\r\n  \r\n  const updateStats = useCallback((source, stats) => {\r\n    setCombatStats(prev => ({\r\n      ...prev,\r\n      [source]: {\r\n        ...prev[source],\r\n        ...stats\r\n      }\r\n    }));\r\n  }, []);\r\n  \r\n  // Используем переданные эффекты погоды или берем из состояния\r\n  const effectiveWeatherEffects = weatherEffects || \r\n    (state.weather?.weatherEffects || {\r\n      combat: {\r\n        damageModifiers: {},\r\n        hitChanceModifier: 1.0,\r\n        critChanceModifier: 1.0,\r\n        dodgeChanceModifier: 1.0\r\n      }\r\n    });\r\n  \r\n  // Применяем эффекты погоды к боевым показателям\r\n  const applyWeatherEffects = useCallback((combatState) => {\r\n    if (!effectiveWeatherEffects || !effectiveWeatherEffects.combat) {\r\n      return combatState; // Если нет данных о погоде, возвращаем как есть\r\n    }\r\n    \r\n    // Применяем модификаторы от погоды вручную\r\n    if (combatState.player) {\r\n      combatState.player.hitChance = (combatState.player.hitChance || 0.9) * \r\n        effectiveWeatherEffects.combat.hitChanceModifier;\r\n      combatState.player.dodgeChance = (combatState.player.dodgeChance || 0.1) * \r\n        effectiveWeatherEffects.combat.dodgeChanceModifier;\r\n      combatState.player.critChance = (combatState.player.critChance || 0.05) * \r\n        effectiveWeatherEffects.combat.critChanceModifier;\r\n    }\r\n    \r\n    return combatState;\r\n  }, [effectiveWeatherEffects]);\r\n  \r\n  // Получаем модификатор урона для элементального типа из погодных эффектов\r\n  const getWeatherDamageModifier = useCallback((damageType) => {\r\n    if (!effectiveWeatherEffects || !effectiveWeatherEffects.combat || !effectiveWeatherEffects.combat.damageModifiers) {\r\n      return 1.0; // По умолчанию без модификатора\r\n    }\r\n    \r\n    return effectiveWeatherEffects.combat.damageModifiers[damageType] || 1.0;\r\n  }, [effectiveWeatherEffects]);\r\n  \r\n  // Получаем модификаторы точности и критических ударов из погодных эффектов\r\n  const getWeatherCombatModifiers = useCallback(() => {\r\n    if (!effectiveWeatherEffects || !effectiveWeatherEffects.combat) {\r\n      return {\r\n        hitChanceModifier: 1.0,\r\n        critChanceModifier: 1.0,\r\n        dodgeChanceModifier: 1.0\r\n      };\r\n    }\r\n    \r\n    return {\r\n      hitChanceModifier: effectiveWeatherEffects.combat.hitChanceModifier || 1.0,\r\n      critChanceModifier: effectiveWeatherEffects.combat.critChanceModifier || 1.0,\r\n      dodgeChanceModifier: effectiveWeatherEffects.combat.dodgeChanceModifier || 1.0\r\n    };\r\n  }, [effectiveWeatherEffects]);\r\n  \r\n  const calculateDamage = useCallback((attacker, defender, base, type = 'physical') => {\r\n    console.log('🔍 calculateDamage получил параметры:', {\r\n      базовыйУрон: base,\r\n      типУрона: type,\r\n      атакующий: attacker.name,\r\n      защитник: defender.name\r\n    });\r\n    \r\n    // НОВОЕ ИСПРАВЛЕНИЕ: определяем источник base - предрассчитанный урон с защитой или нет\r\n    // Проверяем, является ли действие техникой с предрассчитанным уроном\r\n    const isPreCalculatedTechnique = (\r\n      attacker.action?.type === 'technique' && \r\n      attacker.action?.calculatedDamage === base\r\n    );\r\n    \r\n    // Проверяем наличие эффектов урона у атакующего\r\n    let damageBonus = 0;\r\n    if (attacker.effects && attacker.effects.length > 0) {\r\n      // Ведем подробное логирование для отладки\r\n      console.log('⚔️ Проверка эффектов атакующего для расчета урона:', attacker.effects);\r\n      \r\n      attacker.effects.forEach(effect => {\r\n        // Проверяем эффекты урона (combat_damage) - разные варианты названий и типов\r\n        if (effect.effectType === 'combat_damage' || \r\n            effect.originalType === 'combat_damage' || \r\n            effect.type === 'combat_damage' ||\r\n            effect.effectType === 'combat_damage (thunderstorm)' ||\r\n            effect.name.includes('Урон в бою') ||\r\n            effect.isCombatEffect === true) {\r\n          \r\n          // Эффект может хранить модификатор в разных полях\r\n          const modifier = typeof effect.modifier === 'number' ? effect.modifier : \r\n                          typeof effect.value === 'number' ? effect.value : 0;\r\n                          \r\n          // Если модификатор больше 1, считаем его процентом, меньше 1 - коэффициентом\r\n          const bonusValue = Math.abs(modifier) > 1 ? modifier / 100 : modifier;\r\n          \r\n          damageBonus += bonusValue;\r\n          console.log(`⚔️ Эффект \"${effect.name}\" добавляет ${Math.abs(modifier) > 1 ? modifier + '%' : modifier * 100 + '%'} к урону (${bonusValue} дробный)`);\r\n        }\r\n        \r\n        // Проверяем специфические эффекты стихийного урона\r\n        if (effect.effectType === `${type}_damage` || \r\n            effect.originalType === `${type}_damage` || \r\n            effect.type === `${type}_damage`) {\r\n          \r\n          // Аналогично проверяем разные поля\r\n          const modifier = typeof effect.modifier === 'number' ? effect.modifier : \r\n                          typeof effect.value === 'number' ? effect.value : 0;\r\n                          \r\n          // Преобразуем модификатор в коэффициент\r\n          const bonusValue = Math.abs(modifier) > 1 ? modifier / 100 : modifier;\r\n          \r\n          damageBonus += bonusValue;\r\n          console.log(`⚔️ Эффект \"${effect.name}\" добавляет ${Math.abs(modifier) > 1 ? modifier + '%' : modifier * 100 + '%'} к урону типа ${type} (${bonusValue} дробный)`);\r\n        }\r\n      });\r\n      \r\n      console.log(`⚔️ Суммарный бонус к урону от эффектов: ${(damageBonus * 100).toFixed(0)}%`);\r\n    } else {\r\n      console.log('⚔️ У атакующего нет активных эффектов для расчета урона');\r\n    }\r\n    \r\n    // Получаем модификаторы от статусов персонажа и погоды\r\n    const weatherDamageModifier = getWeatherDamageModifier(type);\r\n    \r\n    // Если это предрассчитанный урон от техники, используем его напрямую\r\n    // без повторного применения защиты\r\n    if (isPreCalculatedTechnique || (base > 0 && attacker.isTechniqueDamage)) {\r\n      console.log('🔄 Используем предрассчитанный урон техники напрямую:', base);\r\n      \r\n      // Применяем модификатор от погоды и бонусы от эффектов\r\n      const finalMultiplier = (1 + damageBonus) * weatherDamageModifier;\r\n      const damage = Math.max(1, Math.floor(base * finalMultiplier));\r\n      \r\n      console.log(`🧮 Итоговый множитель урона: ${finalMultiplier.toFixed(2)} (погода: ${weatherDamageModifier}, эффекты: ${(1 + damageBonus).toFixed(2)})`);\r\n      console.log(`🧮 Итоговый урон: ${base} × ${finalMultiplier.toFixed(2)} = ${damage}`);\r\n      \r\n      // Применяем модификатор шанса крита от погоды\r\n      const { critChanceModifier } = getWeatherCombatModifiers();\r\n      const baseCritChance = attacker.stats.criticalChance || 5; // По умолчанию 5%\r\n      const modifiedCritChance = baseCritChance * critChanceModifier;\r\n      \r\n      console.log(`🎯 Шанс критического удара: ${baseCritChance}% × ${critChanceModifier} = ${modifiedCritChance}%`);\r\n      \r\n      const isCritical = Math.random() * 100 < modifiedCritChance;\r\n      if (isCritical) {\r\n        const critMultiplier = 1 + (attacker.stats.criticalDamage || 50) / 100;\r\n        const critDamage = Math.floor(damage * critMultiplier);\r\n        \r\n        console.log(`💥 Критический удар! ${damage} × ${critMultiplier} = ${critDamage}`);\r\n        \r\n        return {\r\n          damage: critDamage,\r\n          isCritical,\r\n          weatherModifier: weatherDamageModifier,\r\n          damageBonus: damageBonus\r\n        };\r\n      }\r\n      \r\n      return { \r\n        damage, \r\n        isCritical: false, \r\n        weatherModifier: weatherDamageModifier,\r\n        damageBonus: damageBonus\r\n      };\r\n    }\r\n    \r\n    // Для обычных атак используем стандартный расчет с защитой\r\n    const attackPower = type === 'physical'\r\n      ? (attacker.stats.physicalAttack || 10)\r\n      : (attacker.stats.magicalAttack || 10);\r\n    console.log('🔄 Стандартный расчет для обычной атаки:', attackPower);\r\n    \r\n    // Получаем базовую защиту\r\n    let defense = type === 'physical' ? defender.stats.physicalDefense : defender.stats.spiritualDefense;\r\n    \r\n    // Проверяем наличие эффектов защиты и применяем их\r\n    if (defender.effects && defender.effects.length > 0) {\r\n      let defenseBonus = 0;\r\n      \r\n      // Проходим по всем активным эффектам\r\n      defender.effects.forEach(effect => {\r\n        // Проверяем, есть ли у эффекта бонусы к защите\r\n        if (effect.stats) {\r\n          if (type === 'physical' && effect.stats.physicalDefense) {\r\n            defenseBonus += effect.stats.physicalDefense;\r\n            console.log(`🛡️ Эффект \"${effect.name}\" добавляет ${effect.stats.physicalDefense} к физической защите`);\r\n          } else if (type === 'spiritual' && effect.stats.spiritualDefense) {\r\n            defenseBonus += effect.stats.spiritualDefense;\r\n            console.log(`🛡️ Эффект \"${effect.name}\" добавляет ${effect.stats.spiritualDefense} к духовной защите`);\r\n          }\r\n        }\r\n      });\r\n      \r\n      // Добавляем бонусы к базовой защите\r\n      if (defenseBonus > 0) {\r\n        console.log(`🛡️ Всего добавлено ${defenseBonus} к защите от эффектов`);\r\n        defense += defenseBonus;\r\n      }\r\n    }\r\n    \r\n    // Рассчитываем коэффициент снижения урона с учетом всех бонусов\r\n    const reduction = defense / (defense + 100);\r\n    console.log(`🛡️ Итоговая защита: ${defense}, коэффициент снижения урона: ${reduction.toFixed(2)} (${Math.floor(reduction * 100)}%)`);\r\n    \r\n    // Применяем модификаторы от погоды и эффектов к базовому урону\r\n    const finalMultiplier = (1 + damageBonus) * weatherDamageModifier;\r\n    const damage = Math.max(1, Math.floor(attackPower * (1 - reduction) * finalMultiplier));\r\n    \r\n    console.log(`🧮 Итоговый множитель урона: ${finalMultiplier.toFixed(2)} (погода: ${weatherDamageModifier}, эффекты: ${(1 + damageBonus).toFixed(2)})`);\r\n    console.log(`🧮 Формула урона: ${attackPower} × ${(1 - reduction).toFixed(2)} × ${finalMultiplier.toFixed(2)} = ${damage}`);\r\n    \r\n    // Применяем модификатор шанса крита от погоды\r\n    const { critChanceModifier } = getWeatherCombatModifiers();\r\n    const baseCritChance = attacker.stats.criticalChance || 5; // По умолчанию 5%\r\n    const modifiedCritChance = baseCritChance * critChanceModifier;\r\n    \r\n    console.log(`🎯 Шанс критического удара: ${baseCritChance}% × ${critChanceModifier} = ${modifiedCritChance}%`);\r\n    \r\n    const isCritical = Math.random() * 100 < modifiedCritChance;\r\n    if (isCritical) {\r\n      const critMultiplier = 1 + (attacker.stats.criticalDamage || 50) / 100;\r\n      const critDamage = Math.floor(damage * critMultiplier);\r\n      \r\n      console.log(`💥 Критический удар! ${damage} × ${critMultiplier} = ${critDamage}`);\r\n      \r\n      return {\r\n        damage: critDamage,\r\n        isCritical,\r\n        weatherModifier: weatherDamageModifier,\r\n        damageBonus: damageBonus\r\n      };\r\n    }\r\n    \r\n    return { \r\n      damage, \r\n      isCritical: false, \r\n      weatherModifier: weatherDamageModifier,\r\n      damageBonus: damageBonus\r\n    };\r\n  }, [getWeatherDamageModifier, getWeatherCombatModifiers]);\r\n  \r\n  const applyDamage = useCallback((target, amount) => {\r\n    if (target === 'player') {\r\n      setPlayer(prev => ({\r\n        ...prev,\r\n        stats: {\r\n          ...prev.stats,\r\n          health: Math.max(0, prev.stats.health - amount)\r\n        }\r\n      }));\r\n    } else {\r\n      setEnemy(prev => ({\r\n        ...prev,\r\n        stats: {\r\n          ...prev.stats,\r\n          health: Math.max(0, prev.stats.health - amount)\r\n        }\r\n      }));\r\n    }\r\n  }, []);\r\n  \r\n  const handleAction = useCallback(async (action) => {\r\n    // Добавляем отладочный вывод для анализа полученного action\r\n    console.log('🔍 handleAction вызван с параметром:', {\r\n      action: action,\r\n      actionType: action.type,\r\n      actionTypeJSON: JSON.stringify(action.type),\r\n      actionTypeIsString: typeof action.type === 'string',\r\n      actionTypeConstructor: action.type ? action.type.constructor.name : 'undefined',\r\n      actionHasTypeProp: 'type' in action,\r\n      actionName: action.name,\r\n      actionID: action.id\r\n    });\r\n    \r\n    setDisabled(true);\r\n    \r\n    const attacker = isPlayerTurn ? player : enemy;\r\n    const defender = isPlayerTurn ? enemy : player;\r\n    const attackerType = isPlayerTurn ? 'player' : 'enemy';\r\n    const defenderType = isPlayerTurn ? 'enemy' : 'player';\r\n    \r\n    // Проверяем уклонение с учетом точности и уклонения\r\n    const hitChanceModifier = getWeatherCombatModifiers().hitChanceModifier || 1.0;\r\n    const accuracy = (attacker.stats.accuracy || 90) * hitChanceModifier;\r\n    const evasion = defender.stats.evasion || 0;\r\n    \r\n    // Базовый шанс попадания 80% + разница между точностью и уклонением\r\n    // Ограничиваем шанс минимум 20%, максимум 95%\r\n    const baseHitChance = 80;\r\n    const hitChance = Math.min(95, Math.max(20, baseHitChance + (accuracy - evasion) / 10));\r\n    const hitRoll = Math.random() * 100;\r\n    \r\n    console.log(`Атака ${attacker.name}: Точность ${accuracy}, Уклонение ${evasion}, Шанс попадания ${hitChance.toFixed(1)}%, Бросок ${hitRoll.toFixed(1)}`);\r\n    \r\n    // Промах происходит, если бросок больше шанса попадания\r\n    if (hitRoll >= hitChance) {\r\n      addLogEntry(\r\n        `${defender.name} уклоняется от атаки ${attacker.name}!`,\r\n        'dodge'\r\n      );\r\n      updateStats(defenderType, { dodges: combatStats[defenderType].dodges + 1 });\r\n      setDisabled(false);\r\n      return;\r\n    }\r\n    \r\n    let damage = 0;\r\n    let isCritical = false;\r\n    \r\n    switch (action.type) {\r\n      case 'attack': {\r\n        // Используем физическую атаку персонажа вместо фиксированного значения\r\n        const baseDamage = attacker.stats.physicalAttack || 10;\r\n        const result = calculateDamage(attacker, defender, baseDamage, 'physical');\r\n        damage = result.damage;\r\n        isCritical = result.isCritical;\r\n        break;\r\n      }\r\n      case 'technique': {\r\n        console.log('🛑 ТЕХНИКА: Попытка использования', {\r\n          техникаИмя: action.name,\r\n          техникаID: action.id,\r\n          базовыйУрон: action.damage,\r\n          рассчитанныйУрон: action.calculatedDamage,\r\n          затратыЭнергии: action.energyCost,\r\n          доступнаяЭнергия: attacker.stats.energy,\r\n          атакующий: {\r\n            имя: attacker.name,\r\n            здоровье: attacker.stats.health,\r\n            максЗдоровье: attacker.stats.maxHealth,\r\n            энергия: attacker.stats.energy,\r\n            максЭнергия: attacker.stats.maxEnergy,\r\n          }\r\n        });\r\n        \r\n        // Принудительно устанавливаем энергию на максимум\r\n        // Это временное исправление, чтобы обойти проблему\r\n        if (isPlayerTurn) {\r\n          attacker.stats.energy = attacker.stats.maxEnergy || 100;\r\n          console.log('⚡ ИСПРАВЛЕНИЕ: Энергия принудительно установлена на максимум:', attacker.stats.energy);\r\n        }\r\n        \r\n        if (attacker.stats.energy < action.energyCost) {\r\n          console.log('❌ ОШИБКА: Недостаточно энергии для техники', {\r\n            энергия: attacker.stats.energy,\r\n            требуется: action.energyCost\r\n          });\r\n          \r\n          addLogEntry(\r\n            `У ${attacker.name} недостаточно энергии для использования ${action.name}!`,\r\n            'system'\r\n          );\r\n          setDisabled(false);\r\n          return;\r\n        }\r\n        \r\n        console.log('✅ ТЕХНИКА: Достаточно энергии для использования', {\r\n          энергия: attacker.stats.energy,\r\n          требуется: action.energyCost\r\n        });\r\n        \r\n  // Используем предварительно рассчитанный урон, если он есть, иначе базовый\r\n  console.log('🧮 РАСЧЕТ: Начало расчета урона для техники', {\r\n    базовыйУрон: action.damage,\r\n    рассчитанныйУрон: action.calculatedDamage,\r\n    используемыйУрон: action.calculatedDamage || action.damage,\r\n    типУрона: action.damageType\r\n  });\r\n  \r\n  // Создаем временный объект с пометкой, что это предрассчитанный урон техники\r\n  const attackerWithInfo = {\r\n    ...attacker,\r\n    isTechniqueDamage: true // Этот флаг будет использоваться для определения предрассчитанного урона\r\n  };\r\n  \r\n  const result = calculateDamage(\r\n    attackerWithInfo,\r\n    defender,\r\n    action.calculatedDamage || action.damage, // Передаем предрассчитанный урон\r\n    action.damageType\r\n  );\r\n  \r\n  console.log('📊 РЕЗУЛЬТАТ: Рассчитанный урон', {\r\n    итоговыйУрон: result.damage,\r\n    критический: result.isCritical\r\n  });\r\n        damage = result.damage;\r\n        isCritical = result.isCritical;\r\n        \r\n        // Тратим энергию\r\n        if (attackerType === 'player') {\r\n          setPlayer(prev => ({\r\n            ...prev,\r\n            stats: {\r\n              ...prev.stats,\r\n              energy: prev.stats.energy - action.energyCost\r\n            }\r\n          }));\r\n        } else {\r\n          setEnemy(prev => ({\r\n            ...prev,\r\n            stats: {\r\n              ...prev.stats,\r\n              energy: prev.stats.energy - action.energyCost\r\n            }\r\n          }));\r\n        }\r\n        \r\n        updateStats(attackerType, {\r\n          techniquesUsed: combatStats[attackerType].techniquesUsed + 1\r\n        });\r\n        \r\n        // Применяем эффекты\r\n        if (action.effects) {\r\n          action.effects.forEach(effect => {\r\n            if (effect.target === 'enemy') {\r\n              setEnemy(prev => ({\r\n                ...prev,\r\n                effects: [...prev.effects, effect]\r\n              }));\r\n            } else {\r\n              setPlayer(prev => ({\r\n                ...prev,\r\n                effects: [...prev.effects, effect]\r\n              }));\r\n            }\r\n            \r\n            addLogEntry(\r\n              `${effect.name} применён к ${effect.target === 'enemy' ? defender.name : attacker.name}!`,\r\n              'effect'\r\n            );\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case 'petAbility': {\r\n        // Получаем свежую информацию о питомце непосредственно из state\r\n        const activePet = state.player.spiritPets.pets.find(pet => \r\n          pet.id === state.player.spiritPets.activePetId\r\n        );\r\n        \r\n        if (!activePet) {\r\n          addLogEntry(`Ошибка: активный питомец не найден!`, 'system');\r\n          setDisabled(false);\r\n          return;\r\n        }\r\n        \r\n        // Проверяем лояльность питомца - если ≤ 25, он убегает\r\n        if (activePet.loyalty <= 25) {\r\n          addLogEntry(\r\n            `Питомец ${activePet.name} отказывается помогать и убегает с поля боя!`,\r\n            'system'\r\n          );\r\n          \r\n          // Вызываем действие для удаления питомца\r\n          actions.removeFleePet(activePet.id);\r\n          \r\n          // Сразу передаем ход противнику\r\n          setDisabled(false);\r\n          setIsPlayerTurn(false);\r\n          return;\r\n        }\r\n        \r\n        // Проверяем, достаточно ли сытости\r\n        if (activePet.hunger < 20) {\r\n          addLogEntry(`Питомцу ${activePet.name} не хватает сытости (${activePet.hunger}%) для использования способности!`, 'system');\r\n          setDisabled(false);\r\n          return;\r\n        }\r\n        \r\n        // Рассчитываем урон от способности питомца\r\n        // Используем физическую атаку игрока + урон способности питомца\r\n        const petBaseDamage = Math.floor((activePet.strength * 1.5 + activePet.intelligence * 0.5) * \r\n                           (action.damageMultiplier || 1.0));\r\n        const playerAttackBonus = attacker.stats.physicalAttack || 0;\r\n        \r\n        // Создаем временный объект для расчета атаки\r\n        const attackerWithPetInfo = {\r\n          ...attacker,\r\n          isTechniqueDamage: true // Это предрассчитанный урон, не применять защиту повторно\r\n        };\r\n        \r\n        // Считаем финальный урон\r\n        const result = calculateDamage(\r\n          attackerWithPetInfo,\r\n          defender,\r\n          action.calculatedDamage || (petBaseDamage + playerAttackBonus),\r\n          action.damageType || 'physical'\r\n        );\r\n        \r\n        damage = result.damage;\r\n        isCritical = result.isCritical;\r\n        \r\n        // Отладочный вывод перед использованием способности\r\n        console.log(`🐾 Питомец до атаки: ${activePet.name}, сытость ${activePet.hunger}%, лояльность ${activePet.loyalty}%`);\r\n        \r\n        // Более подробный вывод для отладки\r\n        console.log(`ПИТОМЕЦ ИСПОЛЬЗУЕТ СПОСОБНОСТЬ - НАЧАЛО ИСПОЛЬЗОВАНИЯ`);\r\n        console.log(`ID питомца: ${activePet.id}, ID способности: ${action.id}`);\r\n        console.log(`Состояние до: сытость ${activePet.hunger}%, лояльность ${activePet.loyalty}%`);\r\n        \r\n        // Сохраняем начальные параметры питомца для отображения в логах\r\n        const initialHunger = activePet.hunger;\r\n        const initialLoyalty = activePet.loyalty;\r\n        \r\n        // Рассчитываем потерю лояльности по той же формуле, что и в редукторе,\r\n        // чтобы быть уверенными, что логи показывают правильные значения\r\n        const hungerCost = 20;\r\n        const calculatedLoyaltyCost = Math.round(5 * (100 / Math.max(activePet.hunger, 1)));\r\n        \r\n        console.log(`РАСЧЕТ В КОМПОНЕНТЕ: Питомец теряет ${calculatedLoyaltyCost}% лояльности (сытость: ${activePet.hunger}%)`);\r\n        console.log(`ФОРМУЛА В КОМПОНЕНТЕ: 5 * (100 / ${activePet.hunger}) = ${calculatedLoyaltyCost}`);\r\n        \r\n        // Уменьшаем сытость и лояльность питомца через действие\r\n        actions.usePetAbility({\r\n          petId: activePet.id,\r\n          abilityId: action.id\r\n        });\r\n        \r\n        // Создаем локальную копию с обновленными значениями для немедленного отображения\r\n        // Это гарантирует, что пользователь сразу увидит изменения, даже если редуктор еще не обновил состояние\r\n        const newHunger = Math.max(0, initialHunger - hungerCost);\r\n        const newLoyalty = Math.max(0, initialLoyalty - calculatedLoyaltyCost);\r\n        \r\n        console.log(`ЛОКАЛЬНЫЙ РАСЧЕТ: Питомец ${activePet.name}: сытость ${newHunger}%, лояльность ${newLoyalty}%`);\r\n        \r\n        // Сразу добавляем запись в лог с прогнозируемыми параметрами питомца\r\n        addLogEntry(\r\n          `Питомец ${activePet.name}: сытость снизилась с ${initialHunger}% до ${newHunger}%, лояльность снизилась с ${initialLoyalty}% до ${newLoyalty}%`,\r\n          'info'\r\n        );\r\n        \r\n        // Сразу обновляем локальную копию в состоянии\r\n        if (isPlayerTurn) {\r\n          setPlayer(prev => {\r\n            const updatedActivePet = {\r\n              ...activePet,\r\n              hunger: newHunger,\r\n              loyalty: newLoyalty\r\n            };\r\n            \r\n            const updatedPets = state.player.spiritPets.pets.map(p => \r\n              p.id === activePet.id ? updatedActivePet : p\r\n            );\r\n            \r\n            // Сразу обновляем глобальное состояние для синхронизации\r\n            setTimeout(() => {\r\n              // Используем actions.updateSpiritPet вместо прямого dispatch\r\n              actions.updateSpiritPet({ \r\n                id: activePet.id, \r\n                updates: { \r\n                  hunger: newHunger, \r\n                  loyalty: newLoyalty,\r\n                  lastUsedAbility: new Date() \r\n                } \r\n              });\r\n            }, 0);\r\n            \r\n            return prev;\r\n          });\r\n        }\r\n        \r\n        // Пытаемся получить обновленного питомца сразу (может не сработать из-за асинхронности)\r\n        const updatedPet = state.player.spiritPets.pets.find(pet => pet.id === activePet.id);\r\n        \r\n        // Добавляем информативную запись в боевой лог\r\n        const petType = {\r\n          'fire': 'огненного',\r\n          'water': 'водного',\r\n          'earth': 'земляного',\r\n          'wind': 'ветряного',\r\n          'lightning': 'молниевого',\r\n          'wood': 'древесного',\r\n          'metal': 'металлического',\r\n          'darkness': 'теневого',\r\n          'light': 'светлого'\r\n        }[activePet.type] || '';\r\n        \r\n        addLogEntry(\r\n          `${attacker.name} использует ${action.name} ${petType} питомца и наносит ${damage} урона ${defender.name}${isCritical ? ' (Критический удар!)' : ''}`,\r\n          isCritical ? 'critical' : 'damage'\r\n        );\r\n        \r\n        // Выводим информацию о статусе питомца\r\n        if (updatedPet) {\r\n          addLogEntry(\r\n            `Питомец ${updatedPet.name}: сытость ${updatedPet.hunger}%, лояльность ${updatedPet.loyalty}%`,\r\n            'info'\r\n          );\r\n        }\r\n        \r\n        // Применяем особые эффекты способности, если они есть\r\n        if (action.effects) {\r\n          action.effects.forEach(effect => {\r\n            if (effect.target === 'enemy') {\r\n              setEnemy(prev => ({\r\n                ...prev,\r\n                effects: [...prev.effects, effect]\r\n              }));\r\n              \r\n              addLogEntry(\r\n                `${effect.name} применён к ${defender.name}!`,\r\n                'effect'\r\n              );\r\n            } else {\r\n              setPlayer(prev => ({\r\n                ...prev,\r\n                effects: [...prev.effects, effect]\r\n              }));\r\n              \r\n              addLogEntry(\r\n                `${effect.name} применён к ${attacker.name}!`,\r\n                'effect'\r\n              );\r\n            }\r\n          });\r\n        }\r\n        \r\n        break;\r\n      }\r\n      case 'defend': {\r\n        const effect = {\r\n          type: 'protect',\r\n          name: 'Защитная стойка',\r\n          duration: 2,\r\n          stats: {\r\n            physicalDefense: Math.floor(attacker.stats.physicalDefense * 0.75),\r\n            spiritualDefense: Math.floor(attacker.stats.spiritualDefense * 0.75)\r\n          }\r\n        };\r\n        \r\n        if (attackerType === 'player') {\r\n          setPlayer(prev => ({\r\n            ...prev,\r\n            effects: [...prev.effects, effect]\r\n          }));\r\n        } else {\r\n          setEnemy(prev => ({\r\n            ...prev,\r\n            effects: [...prev.effects, effect]\r\n          }));\r\n        }\r\n        \r\n        addLogEntry(\r\n          `${attacker.name} принимает защитную стойку!`,\r\n          'buff'\r\n        );\r\n        break;\r\n      }\r\n      case 'flee': {\r\n        const fleeRoll = Math.random() * 100;\r\n        if (fleeRoll < 30) {\r\n          addLogEntry(\r\n            `${attacker.name} успешно сбегает с поля боя!`,\r\n            'system'\r\n          );\r\n          handleCombatEnd(false);\r\n          return;\r\n        } else {\r\n          addLogEntry(\r\n            `${attacker.name} пытается сбежать, но безуспешно!`,\r\n            'system'\r\n          );\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    if (damage > 0) {\r\n      applyDamage(defenderType, damage);\r\n      \r\n      addLogEntry(\r\n        `${attacker.name} наносит ${damage} урона ${defender.name}${isCritical ? ' (Критический удар!)' : ''}`,\r\n        isCritical ? 'critical' : 'damage'\r\n      );\r\n      \r\n      updateStats(attackerType, {\r\n        damageDealt: combatStats[attackerType].damageDealt + damage,\r\n        criticalHits: combatStats[attackerType].criticalHits + (isCritical ? 1 : 0)\r\n      });\r\n      \r\n      // Проверяем условие победы\r\n      if (defenderType === 'enemy' && enemy.stats.health <= 0) {\r\n        handleCombatEnd(true);\r\n        return;\r\n      }\r\n      \r\n      if (defenderType === 'player' && player.stats.health <= 0) {\r\n        handleCombatEnd(false);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Обновляем эффекты\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      effects: prev.effects\r\n        .map(effect => ({\r\n          ...effect,\r\n          duration: effect.duration - 1\r\n        }))\r\n        .filter(effect => effect.duration > 0)\r\n    }));\r\n    \r\n    setEnemy(prev => ({\r\n      ...prev,\r\n      effects: prev.effects\r\n        .map(effect => ({\r\n          ...effect,\r\n          duration: effect.duration - 1\r\n        }))\r\n        .filter(effect => effect.duration > 0)\r\n    }));\r\n    \r\n    setDisabled(false);\r\n    setIsPlayerTurn(!isPlayerTurn);\r\n  }, [\r\n    isPlayerTurn,\r\n    player,\r\n    enemy,\r\n    combatStats,\r\n    calculateDamage,\r\n    applyDamage,\r\n    addLogEntry,\r\n    updateStats\r\n  ]);\r\n  \r\n  const handleCombatEnd = useCallback((victory) => {\r\n    setIsFinished(true);\r\n    \r\n    const duration = Math.floor((Date.now() - startTime) / 1000);\r\n    const currentTimestamp = Date.now();\r\n    \r\n    // Создаем объект с результатами боя\r\n    const combatResult = {\r\n      victory: victory,\r\n      enemy: {\r\n        id: enemy.id,\r\n        name: enemy.name,\r\n        level: enemy.level || 1,\r\n        type: enemy.type || 'unknown'\r\n      },\r\n      combatStats: { ...combatStats },\r\n      duration: duration,\r\n      timestamp: currentTimestamp,\r\n      location: state.world.currentLocation // Сохраняем информацию о локации боя\r\n    };\r\n    \r\n    console.log('Завершение боя, сохранение результата:', combatResult);\r\n    \r\n    // Сохраняем результат боя в глобальном стейте\r\n    actions.updateCombatState({\r\n      inCombat: false,\r\n      enemyCombatState: null,\r\n      playerCombatState: null,\r\n      isPlayerTurn: true,\r\n      log: [],\r\n      combatStats: {\r\n        player: { damageDealt: 0, techniquesUsed: 0, criticalHits: 0, dodges: 0 },\r\n        enemy: { damageDealt: 0, techniquesUsed: 0, criticalHits: 0, dodges: 0 }\r\n      },\r\n      startTime: null,\r\n      // Сохраняем полную информацию о результате боя\r\n      lastCombatResult: combatResult\r\n    });\r\n    \r\n    // Добавляем запись о бое в историю боев игрока\r\n    if (actions.addCombatHistory) {\r\n      console.log('📈 Сохранение результата боя в историю игрока');\r\n      actions.addCombatHistory(combatResult);\r\n    } else {\r\n      console.error('❌ Метод addCombatHistory не найден, результат боя не будет добавлен в историю');\r\n    }\r\n    \r\n    if (victory) {\r\n      // Рассчитываем награды\r\n      const experienceGain = Math.floor(\r\n        enemy.experience * (1 + Math.random() * 0.2)\r\n      );\r\n      \r\n      // Конвертируем общий доход в разные типы валют (золото, серебро, медь)\r\n      const totalCurrencyGain = Math.floor(\r\n        enemy.currency.min + Math.random() * (enemy.currency.max - enemy.currency.min)\r\n      );\r\n      \r\n      // Распределяем общую сумму на разные типы валют\r\n      // 1 золото = 100 серебра, 1 серебро = 100 меди\r\n      let remainingValue = totalCurrencyGain;\r\n      \r\n      const gold = Math.floor(remainingValue / 10000);\r\n      remainingValue %= 10000;\r\n      \r\n      const silver = Math.floor(remainingValue / 100);\r\n      remainingValue %= 100;\r\n      \r\n      const copper = remainingValue;\r\n      \r\n      // Формируем объект с валютами\r\n      const currencyGain = {\r\n        gold: gold,\r\n        silver: silver,\r\n        copper: copper\r\n      };\r\n      \r\n      // Удаляем типы валют с нулевым значением\r\n      Object.keys(currencyGain).forEach(key => {\r\n        if (currencyGain[key] === 0) {\r\n          delete currencyGain[key];\r\n        }\r\n      });\r\n      \r\n      // Если все значения равны 0, добавляем хотя бы немного меди\r\n      if (Object.keys(currencyGain).length === 0) {\r\n        currencyGain.copper = 1;\r\n      }\r\n      \r\n      console.log('Награда валютой за бой:', currencyGain);\r\n      \r\n      // Модифицируем шанс получения предметов на основе погодных эффектов\r\n      const lootChanceModifier = effectiveWeatherEffects.exploration?.resourceQualityModifier || 1.0;\r\n      \r\n      const lootItems = enemy.loot\r\n        .filter(item => Math.random() * 100 < (item.chance * lootChanceModifier))\r\n        .map(item => ({\r\n          ...item,\r\n          quantity: 1\r\n        }));\r\n      \r\n      setResults({\r\n        victory: true,\r\n        playerStats: combatStats.player,\r\n        enemyStats: combatStats.enemy,\r\n        duration,\r\n        rewards: {\r\n          experience: experienceGain,\r\n          currency: currencyGain,\r\n          items: lootItems\r\n        }\r\n      });\r\n      \r\n      // Обновляем состояние игрока\r\n      if (actions.addExperience) {\r\n        actions.addExperience(experienceGain);\r\n      }\r\n      \r\n      // Выбираем единый способ обновления валюты\r\n      console.log('Добавление награды в виде валюты после боя:', currencyGain);\r\n      \r\n      // Используем updateCurrency с флагом isAdditive=true, не используя addCurrency,\r\n      // чтобы избежать двойного сложения\r\n      if (actions.updateCurrency) {\r\n        actions.updateCurrency(currencyGain, true);\r\n      } else {\r\n        console.error('Функция updateCurrency не найдена, используем dispatch напрямую');\r\n        // Запасной вариант, если функции нет\r\n        actions.dispatch({ \r\n          type: ACTION_TYPES.UPDATE_CURRENCY, \r\n          payload: currencyGain,\r\n          isAdditive: true\r\n        });\r\n      }\r\n      \r\n      lootItems.forEach(item => {\r\n        if (actions.addItem) {\r\n          actions.addItem(item);\r\n        }\r\n      });\r\n    } else {\r\n      setResults({\r\n        victory: false,\r\n        playerStats: combatStats.player,\r\n        enemyStats: combatStats.enemy,\r\n        duration\r\n      });\r\n    }\r\n  }, [enemy, combatStats, startTime, actions]);\r\n  \r\n  // ИИ противника\r\n  useEffect(() => {\r\n    if (!isPlayerTurn && !disabled && !isFinished) {\r\n      console.log('Ход противника: подготовка действия...', {\r\n        enemy: enemy ? 'enemy exists' : 'enemy is null',\r\n        enemyAttacks: enemy?.attacks ? `${enemy.attacks.length} attacks found` : 'no attacks',\r\n        enemyStats: enemy?.stats ? 'stats exist' : 'no stats',\r\n        enemyEnergy: enemy?.stats?.energy\r\n      });\r\n      \r\n      // Дополнительная проверка, что противник существует и имеет необходимые свойства\r\n      if (!enemy || !enemy.stats || typeof enemy.stats.energy !== 'number') {\r\n        console.warn('⚠️ Проблема с данными противника, использую базовую атаку');\r\n        \r\n        // Задержка, чтобы пользователь мог увидеть сообщение в консоли\r\n        setTimeout(() => {\r\n          handleAction({ type: 'attack' });\r\n        }, 500);\r\n        return;\r\n      }\r\n      \r\n      const timer = setTimeout(() => {\r\n        // Проверяем наличие и валидность массива атак\r\n        if (!enemy.attacks || !Array.isArray(enemy.attacks) || enemy.attacks.length === 0) {\r\n          console.warn('⚠️ У противника нет доступных атак, использую базовую атаку');\r\n          handleAction({ type: 'attack' });\r\n          return;\r\n        }\r\n        \r\n        console.log('Проверка атак противника:', {\r\n          всегоАтак: enemy.attacks.length,\r\n          энергияПротивника: enemy.stats.energy\r\n        });\r\n        \r\n        try {\r\n          const availableActions = enemy.attacks.filter(attack => {\r\n            // Проверяем, что атака имеет свойство energyCost\r\n            if (typeof attack.energyCost !== 'number') {\r\n              console.warn(`Атака \"${attack.name}\" не имеет корректного значения energyCost:`, attack.energyCost);\r\n              return false;\r\n            }\r\n            return attack.energyCost <= enemy.stats.energy;\r\n          });\r\n          \r\n          console.log(`Найдено ${availableActions.length} доступных действий для противника`);\r\n          \r\n          if (availableActions.length > 0) {\r\n            // Выбираем случайное действие с учетом шансов\r\n            const roll = Math.random() * 100;\r\n            let totalChance = 0;\r\n            \r\n            const selectedAction = availableActions.find(action => {\r\n              // Проверяем, что атака имеет свойство chance\r\n              const actionChance = typeof action.chance === 'number' ? action.chance : 50;\r\n              totalChance += actionChance;\r\n              return roll < totalChance;\r\n            }) || availableActions[0];\r\n            \r\n            console.log('Противник выбрал действие:', selectedAction.name);\r\n            \r\n            handleAction({\r\n              type: 'technique',\r\n              ...selectedAction\r\n            });\r\n          } else {\r\n            console.log('У противника нет доступных действий с учетом энергии, использую базовую атаку');\r\n            // Если нет доступных действий, используем обычную атаку\r\n            handleAction({ type: 'attack' });\r\n          }\r\n        } catch (error) {\r\n          console.error('Ошибка при обработке хода противника:', error);\r\n          // В случае ошибки используем безопасный вариант - обычную атаку\r\n          handleAction({ type: 'attack' });\r\n        }\r\n      }, 300); // Уменьшаем задержку с 1000мс до 300мс для более быстрой реакции противника\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isPlayerTurn, disabled, isFinished, enemy?.id, enemy?.stats?.energy, handleAction]);\r\n\r\n  // Используем точно такую же формулу, как и при расчете урона в бою\r\n  const dummyDefense = enemy.stats.physicalDefense;\r\n  const reduction = dummyDefense / (dummyDefense + 100);\r\n  const exactDamage = Math.max(1, Math.floor(player.stats.physicalAttack * (1 - reduction)));\r\n  \r\n  const calculatedBasicAttack = {\r\n    ...techniques.basicAttack,\r\n    calculatedDamage: exactDamage\r\n  };\r\n  \r\n  const playerActions = [\r\n    calculatedBasicAttack,\r\n    ...state.player.techniques.map(technique => {\r\n      // Для техник рассчитываем урон с учетом силы атаки персонажа\r\n      const attackPower = technique.damageType === 'physical' \r\n        ? player.stats.physicalAttack \r\n        : player.stats.magicalAttack;\r\n      \r\n      // ВАЖНОЕ ИСПРАВЛЕНИЕ: Изменен порядок - type указывается ПОСЛЕ spread-оператора\r\n      // Это предотвращает перезапись свойства type значением из technique\r\n      \r\n      // ОБНОВЛЕНИЕ: Расчет урона техник с учетом защиты противника\r\n      // Сначала складываем базовую атаку и урон техники\r\n      const totalAttackPower = attackPower + technique.damage;\r\n      \r\n      // Затем применяем формулу с учетом защиты противника (как для обычной атаки)\r\n      const dummyDefense = enemy.stats.physicalDefense;\r\n      const reduction = dummyDefense / (dummyDefense + 100);\r\n      const exactDamage = Math.max(1, Math.floor(totalAttackPower * (1 - reduction)));\r\n      \r\n      // Логируем информацию для отладки\r\n      /*console.log(`📊 Расчет урона для техники ${technique.name}:`, {\r\n        базоваяАтака: attackPower,\r\n        бонусТехники: technique.damage,\r\n        общаяАтака: totalAttackPower,\r\n        защитаПротивника: dummyDefense,\r\n        коэффициентСнижения: reduction.toFixed(2),\r\n        итоговыйУрон: exactDamage\r\n      });*/\r\n      \r\n      return {\r\n        ...technique,\r\n        type: 'technique', // Теперь type не будет перезаписан\r\n        calculatedDamage: exactDamage\r\n      };\r\n\r\n    }),\r\n    {\r\n      type: 'defend',\r\n      name: 'Защита',\r\n      description: 'Увеличивает физическую и духовную защиту на 75% на 2 хода',\r\n      icon: '🛡️'\r\n    },\r\n    {\r\n      type: 'flee',\r\n      name: 'Побег',\r\n      description: '30% шанс сбежать из боя',\r\n      icon: '🏃'\r\n    }\r\n  ];\r\n  \r\n  // Добавляем способности питомца\r\n  if (activePet) {\r\n    // Преобразуем ID способностей питомца в полные объекты способностей\r\n    const petAbilities = activePet.abilities.map(abilityId => {\r\n      // Находим полный объект способности по ID и типу питомца\r\n      const fullAbility = petTypeAbilities[activePet.type]?.find(a => a.id === abilityId);\r\n      \r\n      // Получаем локализованные названия способностей\r\n      const petTypeNames = {\r\n        'fire': 'Огненный',\r\n        'water': 'Водный',\r\n        'earth': 'Земляной',\r\n        'wind': 'Ветряной',\r\n        'lightning': 'Молниевый',\r\n        'wood': 'Древесный',\r\n        'metal': 'Металлический',\r\n        'darkness': 'Теневой',\r\n        'light': 'Светлый',\r\n      };\r\n      \r\n      // Локализация названий способностей\r\n      const abilityLocalNames = {\r\n        'fire_breath': 'Огненное дыхание',\r\n        'heat_aura': 'Аура жара',\r\n        'meteor_strike': 'Метеоритный удар',\r\n        'water_splash': 'Водяной всплеск',\r\n        'healing_rain': 'Исцеляющий дождь',\r\n        'tidal_wave': 'Приливная волна',\r\n        'stone_armor': 'Каменная броня',\r\n        'earth_spike': 'Земляной шип',\r\n        'earthquake': 'Землетрясение',\r\n        'swift_winds': 'Быстрые ветра',\r\n        'wind_slash': 'Ветряной разрез',\r\n        'cyclone': 'Циклон',\r\n        'wind_breath': 'Ветряное дыхание'\r\n      };\r\n      \r\n      // Если способность найдена, возвращаем её с типом 'petAbility'\r\n      if (fullAbility) {\r\n        // Рассчитываем урон питомца: базовая физическая атака игрока + урон способности питомца\r\n        const basePetDamage = Math.floor((activePet.strength * 1.5 + activePet.intelligence * 0.5) * \r\n                            (fullAbility.damageMultiplier || 1.0));\r\n        \r\n        const playerAttackBonus = player.stats.physicalAttack || 0;\r\n        const totalDamage = basePetDamage + playerAttackBonus;\r\n        \r\n        return {\r\n          ...fullAbility,\r\n          type: 'petAbility',\r\n          petId: activePet.id, // Добавляем ID питомца для редуктора\r\n          // Используем локализованное название вместо технического ID\r\n          name: abilityLocalNames[fullAbility.id] || fullAbility.name || `Способность питомца (${fullAbility.id})`,\r\n          // Добавляем сведения о типе питомца\r\n          description: fullAbility.description || \r\n            `${petTypeNames[activePet.type] || ''} питомец использует особую способность, наносящую ${totalDamage} урона.`,\r\n          // Общий урон - сумма атаки игрока и способности питомца\r\n          damage: totalDamage,\r\n          calculatedDamage: totalDamage,\r\n          // Добавляем информацию о стоимости использования способности в виде сытости\r\n          hungerCost: 20,\r\n          // Проверяем доступность способности по сытости\r\n          disabled: activePet.hunger < 20,\r\n          // Иконка способности на основе стихии питомца\r\n          icon: fullAbility.element === 'fire' ? '🔥' : \r\n               fullAbility.element === 'water' ? '💧' : \r\n               fullAbility.element === 'earth' ? '🌋' : \r\n               fullAbility.element === 'wind' ? '🌪️' : '⚡'\r\n        };\r\n      }\r\n      \r\n      // Если способность не найдена, возвращаем заглушку с более понятным названием\r\n      const localName = abilityLocalNames[abilityId] || `Способность питомца (${abilityId})`;\r\n      console.warn(`Способность ${abilityId} не найдена для питомца типа ${activePet.type}`);\r\n      \r\n      return {\r\n        type: 'petAbility',\r\n        petId: activePet.id,\r\n        id: abilityId,\r\n        name: localName,\r\n        description: `${petTypeNames[activePet.type] || ''} питомец использует особую способность.`,\r\n        damage: player.stats.physicalAttack + Math.floor(activePet.strength * 1.5),\r\n        calculatedDamage: player.stats.physicalAttack + Math.floor(activePet.strength * 1.5),\r\n        damageType: 'physical',\r\n        hungerCost: 20,\r\n        disabled: activePet.hunger < 20,\r\n        icon: '🐾'\r\n      };\r\n    });\r\n    \r\n          // Для каждой способности питомца проверяем, достаточно ли сытости,\r\n          // и устанавливаем disabled=true для кнопки если недостаточно\r\n          const petAbilitiesWithDisabled = petAbilities.map(ability => ({\r\n            ...ability,\r\n            // Установка состояния disabled для кнопки на основе проверки сытости\r\n            disabled: activePet.hunger < 20, // Используем такое же пороговое значение, как и в коде проверки\r\n            // Дополнительный CSS класс для отображения недоступной кнопки\r\n            className: activePet.hunger < 20 ? 'pet-ability-disabled' : ''\r\n          }));\r\n          \r\n          // Добавляем все найденные способности питомца к действиям игрока\r\n          playerActions.push(...petAbilitiesWithDisabled);\r\n  }\r\n\r\n  if (isFinished) {\r\n    return (\r\n      <CombatResults\r\n        results={results}\r\n        onClose={() => onEnd(results)}\r\n      />\r\n    );\r\n  }\r\n  \r\n  // Проверка что игрок и враг корректно сформированы\r\n  console.log('CombatManager передает в CombatInterface:', {\r\n    player: player ? 'player OK' : 'player is ' + typeof player,\r\n    playerType: typeof player,\r\n    enemy: enemy ? 'enemy OK' : 'enemy is ' + typeof enemy,\r\n    enemyType: typeof enemy,\r\n    playerActions: Array.isArray(playerActions) ? `${playerActions.length} actions` : typeof playerActions\r\n  });\r\n  \r\n  // Проверяем, что все обязательные данные у player и enemy присутствуют\r\n  if (!player || typeof player !== 'object') {\r\n    console.error('CombatManager: player не определен или не является объектом', player);\r\n    return <div>Ошибка: Данные игрока отсутствуют</div>;\r\n  }\r\n  \r\n  if (!enemy || typeof enemy !== 'object') {\r\n    console.error('CombatManager: enemy не определен или не является объектом', enemy);\r\n    return <div>Ошибка: Данные противника отсутствуют</div>;\r\n  }\r\n  \r\n  if (!player.stats || !enemy.stats) {\r\n    console.error('CombatManager: отсутствуют stats у player или enemy', {\r\n      playerStats: player.stats,\r\n      enemyStats: enemy.stats\r\n    });\r\n    return <div>Ошибка: Данные статистики отсутствуют</div>;\r\n  }\r\n  \r\n  return (\r\n    <CombatInterface\r\n      player={player}\r\n      enemy={enemy}\r\n      playerActions={playerActions}\r\n      onActionSelect={handleAction}\r\n      isPlayerTurn={isPlayerTurn}\r\n      disabled={disabled}\r\n      combatLog={combatLog}\r\n    />\r\n  );\r\n}\r\nexport default CombatManager;\r\n","import { damageTypes } from './combat';\r\n\r\nconst { unifiedDatabase, initializeDatabaseConnection } = require('../services/database-connection-manager');\r\nconst { Sequelize } = require('sequelize');\r\nlet sequelize;\r\n\r\n// Получение экземпляра Sequelize для SQL-запросов\r\nlet sequelizeInstance = null;\r\n\r\nasync function getSequelizeInstance() {\r\n  if (!sequelize) {\r\n    const { db } = await initializeDatabaseConnection();\r\n    sequelize = db;\r\n  }\r\n  return sequelize;\r\n}\r\n\r\nexport const enemyRanks = {\r\n  NORMAL: 'normal',\r\n  ELITE: 'elite',\r\n  BOSS: 'boss'\r\n};\r\n\r\n/**\r\n * Получает модификаторы времени суток из базы данных\r\n * @returns {Promise<Object>} Модификаторы времени суток\r\n */\r\nexport async function getTimeOfDaySpawnModifiers() {\r\n  try {\r\n    const seq = await getSequelizeInstance();\r\n    const modifiers = await unifiedDatabase.query(\r\n      'SELECT time_of_day, category, modifier FROM enemy_time_modifiers',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Преобразуем в нужный формат\r\n    const timeOfDayModifiers = {};\r\n    \r\n    modifiers.forEach(mod => {\r\n      if (!timeOfDayModifiers[mod.time_of_day]) {\r\n        timeOfDayModifiers[mod.time_of_day] = {};\r\n      }\r\n      \r\n      timeOfDayModifiers[mod.time_of_day][mod.category] = parseFloat(mod.modifier);\r\n    });\r\n    \r\n    return timeOfDayModifiers;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении модификаторов времени суток:', error);\r\n    // Возвращаем резервные данные в случае ошибки\r\n    return {\r\n      'рассвет': {\r\n        'spirit_beast': 1.2,\r\n        'bandit': 0.8,\r\n        'undead': 0.5,\r\n        'elemental': 1.1\r\n      },\r\n      'утро': {\r\n        'spirit_beast': 1.1,\r\n        'bandit': 1.0,\r\n        'undead': 0.3,\r\n        'elemental': 1.0\r\n      },\r\n      'полдень': {\r\n        'spirit_beast': 1.0,\r\n        'bandit': 1.2,\r\n        'undead': 0.2,\r\n        'elemental': 0.9\r\n      },\r\n      'день': {\r\n        'spirit_beast': 1.0,\r\n        'bandit': 1.2,\r\n        'undead': 0.1,\r\n        'elemental': 0.8\r\n      },\r\n      'вечер': {\r\n        'spirit_beast': 1.1,\r\n        'bandit': 1.0,\r\n        'undead': 0.7,\r\n        'elemental': 1.0\r\n      },\r\n      'ночь': {\r\n        'spirit_beast': 0.8,\r\n        'bandit': 0.6,\r\n        'undead': 1.5,\r\n        'elemental': 1.2\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n// Для обратной совместимости с существующим кодом\r\nexport let timeOfDaySpawnModifiers = {\r\n  // Изменения шансов появления существ в зависимости от времени суток (заполняется асинхронно)\r\n  'рассвет': {\r\n    'spirit_beast': 1.2,    // Духовные звери активнее на рассвете\r\n    'bandit': 0.8,          // Разбойники менее активны\r\n    'undead': 0.5,          // Нежить избегает рассвета\r\n    'elemental': 1.1        // Элементали слегка активнее\r\n  },\r\n  'утро': {\r\n    'spirit_beast': 1.1,\r\n    'bandit': 1.0,\r\n    'undead': 0.3,          // Нежить почти не встречается утром\r\n    'elemental': 1.0\r\n  },\r\n  'полдень': {\r\n    'spirit_beast': 1.0,\r\n    'bandit': 1.2,          // Разбойники более активны в полдень\r\n    'undead': 0.2,          // Нежить практически не встречается в полдень\r\n    'elemental': 0.9\r\n  },\r\n  'день': {\r\n    'spirit_beast': 1.0,\r\n    'bandit': 1.2,\r\n    'undead': 0.1,          // Нежить крайне редка днем\r\n    'elemental': 0.8\r\n  },\r\n  'вечер': {\r\n    'spirit_beast': 1.1,    // Духовные звери активнее к вечеру\r\n    'bandit': 1.0,\r\n    'undead': 0.7,          // Нежить начинает появляться\r\n    'elemental': 1.0\r\n  },\r\n  'ночь': {\r\n    'spirit_beast': 0.8,    // Обычные духовные звери менее активны\r\n    'bandit': 0.6,          // Разбойники отдыхают\r\n    'undead': 1.5,          // Нежить активна ночью\r\n    'elemental': 1.2        // Элементали более активны ночью\r\n  }\r\n};\r\n\r\n/**\r\n * Получает модификаторы погоды из базы данных\r\n * @returns {Promise<Object>} Модификаторы погоды\r\n */\r\nexport async function getWeatherSpawnModifiers() {\r\n  try {\r\n    const seq = await getSequelizeInstance();\r\n    const modifiers = await unifiedDatabase.query(\r\n      'SELECT weather_type, category, modifier FROM enemy_weather_modifiers',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Преобразуем в нужный формат\r\n    const weatherModifiers = {};\r\n    \r\n    modifiers.forEach(mod => {\r\n      if (!weatherModifiers[mod.weather_type]) {\r\n        weatherModifiers[mod.weather_type] = {};\r\n      }\r\n      \r\n      weatherModifiers[mod.weather_type][mod.category] = parseFloat(mod.modifier);\r\n    });\r\n    \r\n    return weatherModifiers;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении модификаторов погоды:', error);\r\n    // Возвращаем резервные данные в случае ошибки\r\n    return {\r\n      'Ясно': {\r\n        'spirit_beast': 1.0,\r\n        'bandit': 1.1,\r\n        'undead': 0.9,\r\n        'elemental': 1.0\r\n      },\r\n      'Облачно': {\r\n        'spirit_beast': 1.0,\r\n        'bandit': 1.0,\r\n        'undead': 1.0,\r\n        'elemental': 1.0\r\n      },\r\n      'Дождь': {\r\n        'spirit_beast': 0.8,\r\n        'bandit': 0.7,\r\n        'undead': 1.0,\r\n        'elemental': 1.2,\r\n        'water_elemental': 1.5\r\n      },\r\n      'Гроза': {\r\n        'spirit_beast': 0.6,\r\n        'bandit': 0.5,\r\n        'undead': 1.1,\r\n        'elemental': 1.3,\r\n        'lightning_elemental': 2.0\r\n      },\r\n      'Туман': {\r\n        'spirit_beast': 0.9,\r\n        'bandit': 1.1,\r\n        'undead': 1.3,\r\n        'elemental': 0.8,\r\n        'ghost': 1.6\r\n      },\r\n      'Снег': {\r\n        'spirit_beast': 0.7,\r\n        'bandit': 0.6,\r\n        'undead': 0.9,\r\n        'elemental': 1.1,\r\n        'ice_elemental': 1.8\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n// Для обратной совместимости с существующим кодом\r\nexport let weatherSpawnModifiers = {\r\n  // Изменения шансов появления существ в зависимости от погоды (заполняется асинхронно)\r\n  'Ясно': {\r\n    'spirit_beast': 1.0,    // Нейтральное влияние\r\n    'bandit': 1.1,          // Разбойники слегка активнее в ясную погоду\r\n    'undead': 0.9,\r\n    'elemental': 1.0\r\n  },\r\n  'Облачно': {\r\n    'spirit_beast': 1.0,\r\n    'bandit': 1.0,\r\n    'undead': 1.0,\r\n    'elemental': 1.0\r\n  },\r\n  'Дождь': {\r\n    'spirit_beast': 0.8,    // Духовные звери менее активны\r\n    'bandit': 0.7,          // Разбойники избегают дождя\r\n    'undead': 1.0,\r\n    'elemental': 1.2,       // Водные элементали активнее\r\n    'water_elemental': 1.5  // Особый бонус для водных элементалей\r\n  },\r\n  'Гроза': {\r\n    'spirit_beast': 0.6,    // Звери прячутся\r\n    'bandit': 0.5,          // Разбойники ищут укрытие\r\n    'undead': 1.1,          // Нежить слегка активнее\r\n    'elemental': 1.3,       // Элементали более активны\r\n    'lightning_elemental': 2.0 // Сильный бонус для молниевых элементалей\r\n  },\r\n  'Туман': {\r\n    'spirit_beast': 0.9,\r\n    'bandit': 1.1,          // Разбойники пользуются туманом для засад\r\n    'undead': 1.3,          // Нежить любит туман\r\n    'elemental': 0.8,\r\n    'ghost': 1.6            // Призраки особенно активны в тумане\r\n  },\r\n  'Снег': {\r\n    'spirit_beast': 0.7,\r\n    'bandit': 0.6,\r\n    'undead': 0.9,\r\n    'elemental': 1.1,\r\n    'ice_elemental': 1.8    // Ледяные элементали очень активны\r\n  }\r\n};\r\n\r\n/**\r\n * Получает полные данные врага из базы данных\r\n * @param {string} enemyId - ID врага\r\n * @returns {Promise<Object>} Данные врага\r\n */\r\nexport async function getEnemy(enemyId) {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем базовую информацию о враге\r\n    const [enemy] = await unifiedDatabase.query(\r\n      'SELECT * FROM enemies WHERE id = :enemyId',\r\n      { \r\n        replacements: { enemyId },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    if (!enemy) {\r\n      throw new Error(`Враг с ID ${enemyId} не найден`);\r\n    }\r\n    \r\n    // Получаем характеристики врага\r\n    const [stats] = await unifiedDatabase.query(\r\n      'SELECT * FROM enemy_stats WHERE enemy_id = :enemyId',\r\n      { \r\n        replacements: { enemyId },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    // Получаем атаки врага\r\n    const attacks = await unifiedDatabase.query(\r\n      'SELECT * FROM enemy_attacks WHERE enemy_id = :enemyId',\r\n      { \r\n        replacements: { enemyId },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    // Получаем эффекты атак\r\n    const attacksWithEffects = await Promise.all(attacks.map(async attack => {\r\n      const effects = await unifiedDatabase.query(\r\n        'SELECT * FROM enemy_attack_effects WHERE attack_id = :attackId',\r\n        { \r\n          replacements: { attackId: attack.id },\r\n          type: seq.QueryTypes.SELECT \r\n        }\r\n      );\r\n      \r\n      // Преобразуем эффекты в нужный формат\r\n      const formattedEffects = effects.map(effect => {\r\n        const effectData = {\r\n          type: effect.type,\r\n          duration: effect.duration\r\n        };\r\n        \r\n        if (effect.stat_name && effect.stat_value) {\r\n          effectData.stats = {\r\n            [effect.stat_name]: effect.stat_value\r\n          };\r\n        }\r\n        \r\n        return effectData;\r\n      });\r\n      \r\n      // Форматируем атаку\r\n      return {\r\n        name: attack.name,\r\n        damage: attack.damage,\r\n        type: attack.type,\r\n        chance: attack.chance,\r\n        ...(attack.energy_cost > 0 ? { energyCost: attack.energy_cost } : {}),\r\n        ...(formattedEffects.length > 0 ? { effects: formattedEffects } : {})\r\n      };\r\n    }));\r\n    \r\n    // Получаем добычу врага\r\n    const loot = await unifiedDatabase.query(\r\n      'SELECT * FROM enemy_loot WHERE enemy_id = :enemyId',\r\n      { \r\n        replacements: { enemyId },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    // Форматируем добычу\r\n    const formattedLoot = loot.map(item => ({\r\n      id: item.item_id,\r\n      name: item.name,\r\n      chance: item.chance,\r\n      icon: item.icon\r\n    }));\r\n    \r\n    // Получаем валюту врага\r\n    const [currency] = await unifiedDatabase.query(\r\n      'SELECT * FROM enemy_currency WHERE enemy_id = :enemyId',\r\n      { \r\n        replacements: { enemyId },\r\n        type: seq.QueryTypes.SELECT \r\n      }\r\n    );\r\n    \r\n    // Формируем полный объект врага\r\n    return {\r\n      id: enemy.id,\r\n      name: enemy.name,\r\n      icon: enemy.icon,\r\n      description: enemy.description,\r\n      level: enemy.level,\r\n      category: enemy.category,\r\n      stats: {\r\n        health: stats.health,\r\n        energy: stats.energy,\r\n        physicalDefense: stats.physical_defense,\r\n        spiritualDefense: stats.spiritual_defense,\r\n        accuracy: stats.accuracy,\r\n        evasion: stats.evasion\r\n      },\r\n      attacks: attacksWithEffects,\r\n      experience: enemy.experience,\r\n      currency: {\r\n        min: currency.min_amount,\r\n        max: currency.max_amount\r\n      },\r\n      loot: formattedLoot\r\n    };\r\n  } catch (error) {\r\n    console.error(`Ошибка при получении данных врага ${enemyId}:`, error);\r\n    // Возвращаем null в случае ошибки\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Получает всех врагов из базы данных\r\n * @returns {Promise<Array>} Массив всех врагов\r\n */\r\nexport async function getEnemies() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем всех врагов\r\n    const enemiesFromDB = await unifiedDatabase.query(\r\n      'SELECT * FROM enemies',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Преобразуем данные каждого врага\r\n    const enemiesData = await Promise.all(\r\n      enemiesFromDB.map(enemy => getEnemy(enemy.id))\r\n    );\r\n    \r\n    // Фильтруем null значения (в случае ошибок)\r\n    return enemiesData.filter(enemy => enemy !== null);\r\n  } catch (error) {\r\n    console.error('Ошибка при получении всех врагов:', error);\r\n    return []; // Возвращаем пустой массив в случае ошибки\r\n  }\r\n}\r\n\r\n/**\r\n * Получает точки появления врагов из базы данных\r\n * @returns {Promise<Object>} Точки появления врагов\r\n */\r\nexport async function getEnemySpawns() {\r\n  try {\r\n    // Получаем экземпляр Sequelize\r\n    const seq = await getSequelizeInstance();\r\n    \r\n    // Получаем все точки появления врагов\r\n    const spawns = await unifiedDatabase.query(\r\n      'SELECT * FROM enemy_spawns',\r\n      { type: seq.QueryTypes.SELECT }\r\n    );\r\n    \r\n    // Преобразуем в нужный формат\r\n    const spawnsByLocation = {};\r\n    \r\n    spawns.forEach(spawn => {\r\n      if (!spawnsByLocation[spawn.location_id]) {\r\n        spawnsByLocation[spawn.location_id] = [];\r\n      }\r\n      \r\n      const spawnData = {\r\n        id: spawn.enemy_id,\r\n        minLevel: spawn.min_level,\r\n        maxLevel: spawn.max_level,\r\n        weight: spawn.weight\r\n      };\r\n      \r\n      // Добавляем условия появления, если есть\r\n      if (spawn.time_of_day || spawn.weather_condition) {\r\n        spawnData.conditions = {};\r\n        \r\n        if (spawn.time_of_day) {\r\n          spawnData.conditions.timeOfDay = [spawn.time_of_day];\r\n        }\r\n        \r\n        if (spawn.weather_condition) {\r\n          spawnData.conditions.weather = [spawn.weather_condition];\r\n        }\r\n      }\r\n      \r\n      spawnsByLocation[spawn.location_id].push(spawnData);\r\n    });\r\n    \r\n    return spawnsByLocation;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении точек появления врагов:', error);\r\n    // Возвращаем резервные данные в случае ошибки\r\n    return {\r\n      starting_area: [\r\n        {\r\n          id: 'training_dummy',\r\n          minLevel: 1,\r\n          maxLevel: 2,\r\n          weight: 70\r\n        },\r\n        {\r\n          id: 'weak_spirit_beast',\r\n          minLevel: 3,\r\n          maxLevel: 4,\r\n          weight: 30\r\n        }\r\n      ],\r\n      mountain_path: [\r\n        {\r\n          id: 'weak_spirit_beast',\r\n          minLevel: 3,\r\n          maxLevel: 5,\r\n          weight: 40\r\n        },\r\n        {\r\n          id: 'mountain_bandit',\r\n          minLevel: 5,\r\n          maxLevel: 7,\r\n          weight: 60\r\n        },\r\n        {\r\n          id: 'night_wraith',\r\n          minLevel: 7,\r\n          maxLevel: 9,\r\n          weight: 20,\r\n          conditions: {\r\n            timeOfDay: ['ночь', 'рассвет']\r\n          }\r\n        }\r\n      ],\r\n      ancient_ruins: [\r\n        {\r\n          id: 'mountain_bandit',\r\n          minLevel: 6,\r\n          maxLevel: 8,\r\n          weight: 30\r\n        },\r\n        {\r\n          id: 'ancient_guardian',\r\n          minLevel: 10,\r\n          maxLevel: 12,\r\n          weight: 70\r\n        },\r\n        {\r\n          id: 'night_wraith',\r\n          minLevel: 8,\r\n          maxLevel: 10,\r\n          weight: 50,\r\n          conditions: {\r\n            timeOfDay: ['ночь']\r\n          }\r\n        }\r\n      ],\r\n      forest_lake: [\r\n        {\r\n          id: 'weak_spirit_beast',\r\n          minLevel: 4,\r\n          maxLevel: 6,\r\n          weight: 60\r\n        },\r\n        {\r\n          id: 'water_elemental',\r\n          minLevel: 6,\r\n          maxLevel: 8,\r\n          weight: 40,\r\n          conditions: {\r\n            weather: ['Дождь', 'Гроза']\r\n          }\r\n        }\r\n      ],\r\n      thunder_peak: [\r\n        {\r\n          id: 'weak_spirit_beast',\r\n          minLevel: 5,\r\n          maxLevel: 7,\r\n          weight: 30\r\n        },\r\n        {\r\n          id: 'mountain_bandit',\r\n          minLevel: 7,\r\n          maxLevel: 9,\r\n          weight: 40\r\n        },\r\n        {\r\n          id: 'lightning_spirit',\r\n          minLevel: 8,\r\n          maxLevel: 10,\r\n          weight: 30,\r\n          conditions: {\r\n            weather: ['Гроза']\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n// Для обратной совместимости с существующим кодом\r\nexport let enemies = [];\r\nexport let enemySpawns = {\r\n  starting_area: [\r\n    {\r\n      id: 'training_dummy',\r\n      minLevel: 1,\r\n      maxLevel: 2,\r\n      weight: 70\r\n    },\r\n    {\r\n      id: 'weak_spirit_beast',\r\n      minLevel: 3,\r\n      maxLevel: 4,\r\n      weight: 30\r\n    }\r\n  ],\r\n  mountain_path: [\r\n    {\r\n      id: 'weak_spirit_beast',\r\n      minLevel: 3,\r\n      maxLevel: 5,\r\n      weight: 40\r\n    },\r\n    {\r\n      id: 'mountain_bandit',\r\n      minLevel: 5,\r\n      maxLevel: 7,\r\n      weight: 60\r\n    },\r\n    // Призрак появляется на горной тропе только ночью\r\n    {\r\n      id: 'night_wraith',\r\n      minLevel: 7,\r\n      maxLevel: 9,\r\n      weight: 20,\r\n      conditions: {\r\n        timeOfDay: ['ночь', 'рассвет'] // Появляется ночью и на рассвете\r\n      }\r\n    }\r\n  ],\r\n  ancient_ruins: [\r\n    {\r\n      id: 'mountain_bandit',\r\n      minLevel: 6,\r\n      maxLevel: 8,\r\n      weight: 30\r\n    },\r\n    {\r\n      id: 'ancient_guardian',\r\n      minLevel: 10,\r\n      maxLevel: 12,\r\n      weight: 70\r\n    },\r\n    // Призрак в руинах появляется с большим весом ночью\r\n    {\r\n      id: 'night_wraith',\r\n      minLevel: 8,\r\n      maxLevel: 10,\r\n      weight: 50,\r\n      conditions: {\r\n        timeOfDay: ['ночь']\r\n      }\r\n    }\r\n  ],\r\n  forest_lake: [\r\n    {\r\n      id: 'weak_spirit_beast',\r\n      minLevel: 4,\r\n      maxLevel: 6,\r\n      weight: 60\r\n    },\r\n    {\r\n      id: 'water_elemental',\r\n      minLevel: 6,\r\n      maxLevel: 8,\r\n      weight: 40,\r\n      conditions: {\r\n        weather: ['Дождь', 'Гроза'] // Больше шансов появиться в дождь и грозу\r\n      }\r\n    }\r\n  ],\r\n  thunder_peak: [\r\n    {\r\n      id: 'weak_spirit_beast',\r\n      minLevel: 5,\r\n      maxLevel: 7,\r\n      weight: 30\r\n    },\r\n    {\r\n      id: 'mountain_bandit',\r\n      minLevel: 7,\r\n      maxLevel: 9,\r\n      weight: 40\r\n    },\r\n    {\r\n      id: 'lightning_spirit',\r\n      minLevel: 8,\r\n      maxLevel: 10,\r\n      weight: 30,\r\n      conditions: {\r\n        weather: ['Гроза'] // Появляется преимущественно в грозу\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\n/**\r\n * Функция для получения модифицированного списка врагов на основе времени суток и погоды\r\n * @param {string} locationId - ID локации\r\n * @param {string} timeOfDay - Время суток\r\n * @param {string} weatherType - Тип погоды\r\n * @returns {Promise<Array>} Модифицированный список спавнов врагов\r\n */\r\nexport async function getModifiedEnemySpawns(locationId, timeOfDay, weatherType) {\r\n  try {\r\n    // Получаем спавны для локации\r\n    const allSpawns = await getEnemySpawns();\r\n    const locationSpawns = allSpawns[locationId];\r\n    \r\n    if (!locationSpawns) return [];\r\n    \r\n    // Получаем врагов\r\n    const allEnemies = await getEnemies();\r\n    \r\n    // Получаем модификаторы\r\n    const timeModifiers = await getTimeOfDaySpawnModifiers();\r\n    const weatherModifiers = await getWeatherSpawnModifiers();\r\n    \r\n    return locationSpawns.filter(spawn => {\r\n      // Проверка условий появления врага\r\n      if (spawn.conditions) {\r\n        // Проверка времени суток\r\n        if (spawn.conditions.timeOfDay && !spawn.conditions.timeOfDay.includes(timeOfDay)) {\r\n          return false;\r\n        }\r\n        \r\n        // Проверка погоды\r\n        if (spawn.conditions.weather && !spawn.conditions.weather.includes(weatherType)) {\r\n          return false;\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    }).map(spawn => {\r\n      // Копирование объекта спавна для модификации\r\n      const modifiedSpawn = { ...spawn };\r\n      \r\n      // Получаем данные о враге\r\n      const enemy = allEnemies.find(e => e.id === spawn.id);\r\n      if (enemy && enemy.category) {\r\n        // Применяем модификаторы времени суток\r\n        const timeModifier = timeModifiers[timeOfDay]?.[enemy.category] || 1.0;\r\n        \r\n        // Применяем модификаторы погоды\r\n        const weatherModifier = weatherModifiers[weatherType]?.[enemy.category] || 1.0;\r\n        \r\n        // Комбинированный модификатор\r\n        const totalModifier = timeModifier * weatherModifier;\r\n        \r\n        // Модификация веса спавна\r\n        modifiedSpawn.weight = Math.round(spawn.weight * totalModifier);\r\n      }\r\n      \r\n      return modifiedSpawn;\r\n    }).filter(spawn => spawn.weight > 0);\r\n  } catch (error) {\r\n    console.error('Ошибка при получении модифицированных спавнов врагов:', error);\r\n    \r\n    // Используем оригинальную функцию как запасной вариант\r\n    const locationSpawns = enemySpawns[locationId];\r\n    if (!locationSpawns) return [];\r\n    \r\n    return locationSpawns.filter(spawn => {\r\n      // Проверка условий появления врага\r\n      if (spawn.conditions) {\r\n        // Проверка времени суток\r\n        if (spawn.conditions.timeOfDay && !spawn.conditions.timeOfDay.includes(timeOfDay)) {\r\n          return false;\r\n        }\r\n        \r\n        // Проверка погоды\r\n        if (spawn.conditions.weather && !spawn.conditions.weather.includes(weatherType)) {\r\n          return false;\r\n        }\r\n      }\r\n      \r\n      return true;\r\n    }).map(spawn => {\r\n      // Копирование объекта спавна для модификации\r\n      const modifiedSpawn = { ...spawn };\r\n      \r\n      // Получаем данные о враге\r\n      const enemy = enemies.find(e => e.id === spawn.id);\r\n      if (enemy && enemy.category) {\r\n        // Применяем модификаторы времени суток\r\n        const timeModifier = timeOfDaySpawnModifiers[timeOfDay]?.[enemy.category] || 1.0;\r\n        \r\n        // Применяем модификаторы погоды\r\n        const weatherModifier = weatherSpawnModifiers[weatherType]?.[enemy.category] || 1.0;\r\n        \r\n        // Комбинированный модификатор\r\n        const totalModifier = timeModifier * weatherModifier;\r\n        \r\n        // Модификация веса спавна\r\n        modifiedSpawn.weight = Math.round(spawn.weight * totalModifier);\r\n      }\r\n      \r\n      return modifiedSpawn;\r\n    }).filter(spawn => spawn.weight > 0);\r\n  }\r\n}\r\n\r\n// Инициализация данных при импорте модуля\r\nasync function initEnemyData() {\r\n  try {\r\n    // Загружаем данные из БД\r\n    timeOfDaySpawnModifiers = await getTimeOfDaySpawnModifiers();\r\n    weatherSpawnModifiers = await getWeatherSpawnModifiers();\r\n    enemies = await getEnemies();\r\n    enemySpawns = await getEnemySpawns();\r\n    \r\n    console.log('Данные о врагах успешно загружены из БД');\r\n  } catch (error) {\r\n    console.error('Ошибка при инициализации данных о врагах:', error);\r\n  }\r\n}\r\n\r\ninitEnemyData().catch(error => {\r\n  console.error('Ошибка при инициализации данных о врагах:', error);\r\n});\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport CombatManager from '../combat/CombatManager';\r\nimport { enemies, getModifiedEnemySpawns } from '../../data/enemies';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst WorldArea = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nconst WeatherBanner = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-radius: 8px;\r\n  padding: 10px 15px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-left: 3px solid #d4af37;\r\n`;\r\n\r\nconst WeatherInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n`;\r\n\r\nconst WeatherIcon = styled.div`\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst WeatherDetails = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst WeatherType = styled.div`\r\n  color: #d4af37;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst TimeOfDay = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst WeatherEffects = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.8rem;\r\n  max-width: 50%;\r\n  \r\n  span {\r\n    color: ${props => props.positive ? '#a3be8c' : '#bf616a'};\r\n  }\r\n`;\r\n\r\n// Функции для получения иконок времени суток и погоды\r\nconst getTimeIcon = (timeOfDay) => {\r\n  switch(timeOfDay) {\r\n    case 'рассвет': return '🌅';\r\n    case 'утро': return '🌄';\r\n    case 'полдень': return '☀️';\r\n    case 'день': return '🌞';\r\n    case 'вечер': return '🌇';\r\n    case 'ночь': return '🌙';\r\n    default: return '⏰';\r\n  }\r\n};\r\n\r\nconst getWeatherIcon = (weatherType) => {\r\n  switch(weatherType) {\r\n    case 'Ясно': return '☀️';\r\n    case 'Облачно': return '☁️';\r\n    case 'Дождь': return '🌧️';\r\n    case 'Гроза': return '⛈️';\r\n    case 'Туман': return '🌫️';\r\n    case 'Снег': return '❄️';\r\n    default: return '🌈';\r\n  }\r\n};\r\n\r\nconst AreaInfo = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst AreaTitle = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 10px 0;\r\n`;\r\n\r\nconst AreaDescription = styled.p`\r\n  color: #aaa;\r\n  margin: 0;\r\n  line-height: 1.6;\r\n`;\r\n\r\nconst EnemiesList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 15px;\r\n`;\r\n\r\nconst EnemyCard = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid transparent;\r\n  \r\n  ${props => props.available && `\r\n    &:hover {\r\n      border-color: #d4af37;\r\n      transform: translateY(-2px);\r\n    }\r\n  `}\r\n  \r\n  ${props => !props.available && `\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  `}\r\n`;\r\n\r\nconst EnemyHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst EnemyIcon = styled.div`\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst EnemyInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst EnemyName = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst EnemyLevel = styled.div`\r\n  color: ${props => props.available ? '#aaa' : '#f44336'};\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst EnemyDescription = styled.p`\r\n  color: #aaa;\r\n  margin: 0 0 10px 0;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst EnemyStats = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 5px;\r\n  font-size: 0.8rem;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StatRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst RewardsList = styled.div`\r\n  margin-top: 10px;\r\n  padding-top: 10px;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n`;\r\n\r\nconst RewardItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 0.8rem;\r\n  color: #aaa;\r\n  \r\n  span {\r\n    color: #d4af37;\r\n  }\r\n`;\r\n\r\nfunction CombatArea({ areaId }) {\r\n  const { state, actions } = useGame();\r\n  const [selectedEnemy, setSelectedEnemy] = useState(null);\r\n  \r\n  // Получаем информацию о погоде и времени суток - вызываем все хуки в начале компонента\r\n  const defaultWeather = {\r\n    weatherType: 'Ясно',\r\n    timeOfDay: 'день',\r\n    weatherIntensity: 5,\r\n    weatherEffects: {\r\n      combat: {\r\n        damageModifiers: {},\r\n        hitChanceModifier: 1.0,\r\n        dodgeChanceModifier: 1.0,\r\n        critChanceModifier: 1.0,\r\n        enemySpawnRateModifier: 1.0\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Безопасно получаем объект weather с проверкой вложенных свойств\r\n  const weather = {\r\n    ...defaultWeather,\r\n    ...(state.weather || {}),\r\n    weatherEffects: {\r\n      ...defaultWeather.weatherEffects,\r\n      ...(state.weather?.weatherEffects || {}),\r\n      combat: {\r\n        ...defaultWeather.weatherEffects.combat,\r\n        ...(state.weather?.weatherEffects?.combat || {})\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Функции-хелперы\r\n  const getEnemyLevel = (spawn) => {\r\n    return Math.floor(\r\n      spawn.minLevel + \r\n      Math.random() * (spawn.maxLevel - spawn.minLevel + 1)\r\n    );\r\n  };\r\n  \r\n  // Проверяем кэш противников и используем его, если доступен\r\n  const spawnEnemy = (spawn) => {\r\n    // Поиск базового противника\r\n    const baseEnemy = enemies.find(e => e.id === spawn.id);\r\n    if (!baseEnemy) return null;\r\n    \r\n    // Создаем ключ кэша\r\n    const cacheKey = `${areaId}_${spawn.id}`;\r\n    \r\n    // Проверяем, есть ли кэшированный противник\r\n    const cachedEnemy = state.world?.generatedEnemies?.[cacheKey];\r\n    \r\n    if (cachedEnemy) {\r\n      console.log(`🎮 Используем кэшированного противника: ${cacheKey}`, {\r\n        level: cachedEnemy.level,\r\n        requiredLevel: cachedEnemy.requiredLevel\r\n      });\r\n      \r\n      return cachedEnemy;\r\n    }\r\n    \r\n    // Если нет в кэше, генерируем заново\r\n    const level = getEnemyLevel(spawn);\r\n    const levelMultiplier = 1 + (level - baseEnemy.level) * 0.1;\r\n    \r\n    // Создаем нового противника с корректным requiredLevel\r\n    const newEnemy = {\r\n      ...baseEnemy,\r\n      level,\r\n      requiredLevel: spawn.minLevel, // Явно устанавливаем requiredLevel из spawn.minLevel\r\n      stats: {\r\n        ...baseEnemy.stats,\r\n        health: Math.floor(baseEnemy.stats.health * levelMultiplier),\r\n        energy: Math.floor(baseEnemy.stats.energy * levelMultiplier),\r\n        physicalDefense: Math.floor(baseEnemy.stats.physicalDefense * levelMultiplier),\r\n        spiritualDefense: Math.floor(baseEnemy.stats.spiritualDefense * levelMultiplier)\r\n      },\r\n      attacks: baseEnemy.attacks.map(attack => ({\r\n        ...attack,\r\n        damage: Math.floor(attack.damage * levelMultiplier)\r\n      })),\r\n      experience: Math.floor(baseEnemy.experience * levelMultiplier),\r\n      currency: {\r\n        min: Math.floor(baseEnemy.currency.min * levelMultiplier),\r\n        max: Math.floor(baseEnemy.currency.max * levelMultiplier)\r\n      }\r\n    };\r\n    \r\n    // Кэшируем противника\r\n    actions.cacheGeneratedEnemy(areaId, spawn.id, newEnemy);\r\n    \r\n    console.log(`🎮 Сгенерирован и кэширован противник: ${cacheKey}`, {\r\n      level: newEnemy.level,\r\n      requiredLevel: newEnemy.requiredLevel\r\n    });\r\n    \r\n    return newEnemy;\r\n  };\r\n  \r\n  // Получаем список врагов - перемещаем все вычисления наверх\r\n  const areaEnemies = getModifiedEnemySpawns(\r\n    areaId, \r\n    weather.timeOfDay, \r\n    weather.weatherType\r\n  );\r\n  \r\n  const availableEnemies = areaEnemies.map(spawn => {\r\n    const enemy = spawnEnemy(spawn);\r\n    return {\r\n      ...enemy,\r\n      available: state.player.cultivation.level >= spawn.minLevel\r\n    };\r\n  });\r\n  \r\n  const handleEnemySelect = (enemy) => {\r\n    if (!enemy.available) return;\r\n    \r\n    // Проверяем валидность врага перед установкой\r\n    if (!enemy || typeof enemy !== 'object') {\r\n      console.error('CombatArea: Попытка выбрать некорректного врага', enemy);\r\n      return;\r\n    }\r\n    \r\n    if (!enemy.stats) {\r\n      console.error('CombatArea: У выбранного врага отсутствуют stats', enemy);\r\n      return;\r\n    }\r\n    \r\n    console.log('CombatArea: Выбран противник для боя:', enemy.name, enemy);\r\n    setSelectedEnemy(enemy);\r\n  };\r\n  \r\n  const handleCombatEnd = (result) => {\r\n    setSelectedEnemy(null);\r\n    // Дополнительная логика после боя\r\n  };\r\n  \r\n  // Вместо условного возврата используем условный рендеринг в одном return statement\r\n  \r\n  return (\r\n    <Container>\r\n      {selectedEnemy ? (\r\n        <CombatManager\r\n          enemy={selectedEnemy}\r\n          onEnd={handleCombatEnd}\r\n          weatherEffects={weather.weatherEffects}\r\n        />\r\n      ) : (\r\n        <WorldArea>\r\n          {/* Отображение информации о текущей погоде и времени суток */}\r\n          <WeatherBanner>\r\n            <WeatherInfo>\r\n              <WeatherIcon>\r\n                {getWeatherIcon(weather.weatherType)}\r\n                {getTimeIcon(weather.timeOfDay)}\r\n              </WeatherIcon>\r\n              <WeatherDetails>\r\n                <WeatherType>{weather.weatherType}</WeatherType>\r\n                <TimeOfDay>{weather.formattedTime || '12:00'} ({weather.timeOfDay})</TimeOfDay>\r\n              </WeatherDetails>\r\n            </WeatherInfo>\r\n            \r\n            <WeatherEffects>\r\n              {(weather.weatherEffects?.combat?.hitChanceModifier !== undefined && \r\n                weather.weatherEffects.combat.hitChanceModifier !== 1.0) && (\r\n                <div>Шанс попадания: \r\n                  <span positive={weather.weatherEffects.combat.hitChanceModifier > 1.0}>\r\n                    {weather.weatherEffects.combat.hitChanceModifier > 1.0 ? ' +' : ' -'}\r\n                    {Math.abs(Math.round((weather.weatherEffects.combat.hitChanceModifier - 1) * 100))}%\r\n                  </span>\r\n                </div>\r\n              )}\r\n              {(weather.weatherEffects?.combat?.critChanceModifier !== undefined && \r\n                weather.weatherEffects.combat.critChanceModifier !== 1.0) && (\r\n                <div>Шанс крита: \r\n                  <span positive={weather.weatherEffects.combat.critChanceModifier > 1.0}>\r\n                    {weather.weatherEffects.combat.critChanceModifier > 1.0 ? ' +' : ' -'}\r\n                    {Math.abs(Math.round((weather.weatherEffects.combat.critChanceModifier - 1) * 100))}%\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </WeatherEffects>\r\n          </WeatherBanner>\r\n          <AreaInfo>\r\n            <AreaTitle>\r\n              {areaId === 'starting_area' && 'Тренировочная площадка'}\r\n              {areaId === 'mountain_path' && 'Горная тропа'}\r\n              {areaId === 'ancient_ruins' && 'Древние руины'}\r\n            </AreaTitle>\r\n            <AreaDescription>\r\n              {areaId === 'starting_area' && \r\n                'Безопасное место для начинающих культиваторов. Здесь обитают слабые духовные звери, идеально подходящие для тренировки.'\r\n              }\r\n              {areaId === 'mountain_path' && \r\n                'Извилистая тропа, ведущая в горы. Здесь можно встретить более сильных противников и найти редкие ресурсы.'\r\n              }\r\n              {areaId === 'ancient_ruins' && \r\n                'Загадочные руины древней цивилизации. В этом опасном месте обитают могущественные духи и хранятся древние сокровища.'\r\n              }\r\n            </AreaDescription>\r\n          </AreaInfo>\r\n          \r\n          <EnemiesList>\r\n            {availableEnemies.map(enemy => (\r\n              <EnemyCard\r\n                key={enemy.id}\r\n                available={enemy.available}\r\n                onClick={() => handleEnemySelect(enemy)}\r\n              >\r\n                <EnemyHeader>\r\n                  <EnemyIcon>{enemy.icon}</EnemyIcon>\r\n                  <EnemyInfo>\r\n                    <EnemyName>{enemy.name}</EnemyName>\r\n                    <EnemyLevel available={enemy.available}>\r\n                      {enemy.available \r\n                        ? `Уровень ${enemy.level}`\r\n                        : `Требуется уровень ${enemy.requiredLevel}`\r\n                      }\r\n                    </EnemyLevel>\r\n                  </EnemyInfo>\r\n                </EnemyHeader>\r\n                \r\n                <EnemyDescription>\r\n                  {enemy.description}\r\n                </EnemyDescription>\r\n                \r\n                <EnemyStats>\r\n                  <StatRow>\r\n                    <span>Здоровье:</span>\r\n                    <span>{enemy.stats.health}</span>\r\n                  </StatRow>\r\n                  <StatRow>\r\n                    <span>Защита:</span>\r\n                    <span>{enemy.stats.physicalDefense}/{enemy.stats.spiritualDefense}</span>\r\n                  </StatRow>\r\n                  <StatRow>\r\n                    <span>Точность:</span>\r\n                    <span>{enemy.stats.accuracy}</span>\r\n                  </StatRow>\r\n                  <StatRow>\r\n                    <span>Уклонение:</span>\r\n                    <span>{enemy.stats.evasion}</span>\r\n                  </StatRow>\r\n                </EnemyStats>\r\n                \r\n                <RewardsList>\r\n                  <RewardItem>\r\n                    <span>✨</span> {enemy.experience} опыта\r\n                  </RewardItem>\r\n                  <RewardItem>\r\n                    <span>💰</span> {enemy.currency.min}-{enemy.currency.max} монет\r\n                  </RewardItem>\r\n                  {enemy.loot.map((item, index) => (\r\n                    <RewardItem key={index}>\r\n                      <span>{item.icon || '📦'}</span>\r\n                      {item.name} ({Math.floor(item.chance)}%)\r\n                    </RewardItem>\r\n                  ))}\r\n                </RewardsList>\r\n              </EnemyCard>\r\n            ))}\r\n          </EnemiesList>\r\n        </WorldArea>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CombatArea;\r\n","import React, { useState, useEffect, useMemo, useReducer } from 'react';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport CombatArea from '../world/CombatArea';\r\nimport useTimeWeather from '../../hooks/useTimeWeather';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 300px;\r\n  gap: 20px;\r\n  overflow-x: hidden; /* Предотвращает горизонтальную прокрутку */\r\n`;\r\n\r\n// Анимации\r\nconst fadeInOut = keyframes`\r\n  0%, 100% { opacity: 0.8; }\r\n  50% { opacity: 1; }\r\n`;\r\n\r\nconst floatAnimation = keyframes`\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-3px); }\r\n`;\r\n\r\nconst shineAnimation = keyframes`\r\n  0% { background-position: -100% 0; }\r\n  100% { background-position: 200% 0; }\r\n`;\r\n\r\nconst rainAnimation = keyframes`\r\n  0% { background-position: 0% 0%; }\r\n  100% { background-position: 20% 100%; }\r\n`;\r\n\r\nconst snowAnimation = keyframes`\r\n  0% { background-position: 0 0; }\r\n  100% { background-position: 10px 100px; }\r\n`;\r\n\r\nconst fogAnimation = keyframes`\r\n  0%, 100% { opacity: 0.5; }\r\n  50% { opacity: 0.7; }\r\n`;\r\n\r\nconst thunderAnimation = keyframes`\r\n  0%, 95%, 100% { \r\n    box-shadow: inset 0 0 100vw 0 rgba(255, 255, 255, 0);\r\n  }\r\n  97% {\r\n    box-shadow: inset 0 0 100vw 0 rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\n// Стилизованный контейнер для времени суток и погоды\r\nconst TimeWeatherPanel = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\n// Компонент верхней строки с временем и погодой\r\nconst InfoRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n// Колонка с информацией\r\nconst InfoColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n`;\r\n\r\n// Метка (заголовок)\r\nconst InfoLabel = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\n// Значение\r\nconst InfoValue = styled.div`\r\n  color: #f0f0f0;\r\n  font-size: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n`;\r\n\r\n// Анимированная иконка\r\nconst AnimatedIcon = styled.div`\r\n  font-size: 1.5rem;\r\n  animation: ${fadeInOut} 3s infinite ease-in-out;\r\n  animation: ${floatAnimation} 3s infinite ease-in-out;\r\n`;\r\n\r\n// Прогресс-бар для времени суток\r\nconst DayCycleProgress = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 4px;\r\n  margin-top: 8px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: ${props => props.progress || 0}%;\r\n    background: linear-gradient(to right, \r\n      #FFC107 0%, \r\n      #FFD54F 25%, \r\n      #4FC3F7 50%, \r\n      #0D47A1 75%, \r\n      #311B92 100%\r\n    );\r\n    border-radius: 4px;\r\n    transition: width 0.5s ease-in-out;\r\n  }\r\n`;\r\n\r\n// Прогресс-бар для сезона\r\nconst SeasonProgress = styled.div`\r\n  width: 100%;\r\n  height: 8px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 4px;\r\n  margin-top: 8px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: ${props => props.progress || 0}%;\r\n    ${props => {\r\n      switch (props.season) {\r\n        case 'spring':\r\n          return css`background: linear-gradient(to right, #81C784, #C5E1A5, #AED581);`;\r\n        case 'summer':\r\n          return css`background: linear-gradient(to right, #FFD54F, #FFA726, #FF9800);`;\r\n        case 'autumn':\r\n          return css`background: linear-gradient(to right, #A1887F, #8D6E63, #795548);`;\r\n        case 'winter':\r\n          return css`background: linear-gradient(to right, #B3E5FC, #81D4FA, #4FC3F7);`;\r\n        default:\r\n          return css`background: linear-gradient(to right, #81C784, #FFD54F, #A1887F, #B3E5FC);`;\r\n      }\r\n    }}\r\n    border-radius: 4px;\r\n    transition: width 0.5s ease-in-out;\r\n  }\r\n`;\r\n\r\n// Информация о сезоне\r\nconst SeasonInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 5px;\r\n`;\r\n\r\n// Название сезона с иконкой\r\nconst SeasonName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 1rem;\r\n  color: ${props => {\r\n    switch (props.season) {\r\n      case 'spring': return '#AED581';\r\n      case 'summer': return '#FFD54F';\r\n      case 'autumn': return '#A1887F';\r\n      case 'winter': return '#81D4FA';\r\n      default: return '#fff';\r\n    }\r\n  }};\r\n`;\r\n\r\n// Дни сезона\r\nconst SeasonDays = styled.div`\r\n  font-size: 0.9rem;\r\n  color: #aaa;\r\n`;\r\n\r\n// Компонент для предстоящих изменений\r\nconst UpcomingChange = styled.div`\r\n  font-size: 0.8rem;\r\n  color: #bbb;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  margin-top: 5px;\r\n  \r\n  span {\r\n    color: #d4af37;\r\n  }\r\n`;\r\n\r\n// Эффект мерцания для особых событий\r\nconst specialEventShine = css`\r\n  background: linear-gradient(\r\n    to right,\r\n    rgba(255, 215, 0, 0) 0%,\r\n    rgba(255, 215, 0, 0.5) 50%,\r\n    rgba(255, 215, 0, 0) 100%\r\n  );\r\n  background-size: 200% auto;\r\n  animation: ${shineAnimation} 3s linear infinite;\r\n`;\r\n\r\n// Контейнер для особого события\r\nconst SpecialEventContainer = styled.div`\r\n  margin-top: 8px;\r\n  padding: 8px 10px;\r\n  border-radius: 4px;\r\n  background: rgba(255, 215, 0, 0.1);\r\n  border: 1px dashed rgba(255, 215, 0, 0.3);\r\n  ${props => props.active && specialEventShine}\r\n`;\r\n\r\n// Заголовок особого события\r\nconst EventTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  font-size: 0.9rem;\r\n  color: #d4af37;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\n// Описание особого события\r\nconst EventDescription = styled.div`\r\n  font-size: 0.8rem;\r\n  color: #bbb;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\n// Прогресс особого события\r\nconst EventProgress = styled.div`\r\n  width: 100%;\r\n  height: 4px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 2px;\r\n  margin-top: 5px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: ${props => 100 - props.progress || 0}%;\r\n    background: linear-gradient(to right, #d4af37, #ffd700);\r\n    border-radius: 2px;\r\n    transition: width 0.5s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst WeatherEffectsPanel = styled.div`\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 8px 12px;\r\n  margin-top: 10px;\r\n  font-size: 0.8rem;\r\n  color: #aaa;\r\n  \r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  span {\r\n    color: ${props => props.positive ? '#a3be8c' : '#bf616a'};\r\n  }\r\n`;\r\n\r\n// Иконка для времени суток\r\nconst getTimeIcon = (timeOfDay) => {\r\n  switch(timeOfDay) {\r\n    case 'рассвет': return '🌅';\r\n    case 'утро': return '🌄';\r\n    case 'полдень': return '☀️';\r\n    case 'день': return '🌞';\r\n    case 'вечер': return '🌇';\r\n    case 'ночь': return '🌙';\r\n    default: return '⏰';\r\n  }\r\n};\r\n\r\n// Иконка для погоды\r\nconst getWeatherIcon = (weatherType) => {\r\n  switch(weatherType) {\r\n    case 'Ясно': return '☀️';\r\n    case 'Облачно': return '☁️';\r\n    case 'Дождь': return '🌧️';\r\n    case 'Гроза': return '⛈️';\r\n    case 'Туман': return '🌫️';\r\n    case 'Снег': return '❄️';\r\n    default: return '🌈';\r\n  }\r\n};\r\n\r\n// Стилизованная карта с эффектами погоды\r\nconst MapArea = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  transition: all 0.5s ease-in-out;\r\n  \r\n  /* Эффект времени суток */\r\n  ${props => {\r\n    switch (props.daytimePeriod) {\r\n      case 'рассвет':\r\n        return css`filter: brightness(0.9) sepia(0.2);`;\r\n      case 'утро':\r\n        return css`filter: brightness(1.1) contrast(1.05);`;\r\n      case 'полдень':\r\n        return css`filter: brightness(1.2) contrast(1.1);`;\r\n      case 'день':\r\n        return css`filter: brightness(1.15) contrast(1.05);`;\r\n      case 'вечер':\r\n        return css`filter: brightness(0.9) sepia(0.15);`;\r\n      case 'ночь':\r\n        return css`filter: brightness(0.7) contrast(1.2) saturate(0.8);`;\r\n      case 'глубокая ночь':\r\n        return css`filter: brightness(0.6) contrast(1.3) saturate(0.7);`;\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n  \r\n  /* Эффект сезона */\r\n  ${props => {\r\n    switch (props.season) {\r\n      case 'spring':\r\n        return css`\r\n          &::before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: rgba(150, 255, 150, 0.05);\r\n            pointer-events: none;\r\n            z-index: 1;\r\n          }\r\n        `;\r\n      case 'summer':\r\n        return css`\r\n          &::before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: rgba(255, 200, 100, 0.05);\r\n            pointer-events: none;\r\n            z-index: 1;\r\n          }\r\n        `;\r\n      case 'autumn':\r\n        return css`\r\n          &::before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: rgba(255, 150, 50, 0.05);\r\n            pointer-events: none;\r\n            z-index: 1;\r\n          }\r\n        `;\r\n      case 'winter':\r\n        return css`\r\n          &::before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            background: rgba(200, 230, 255, 0.05);\r\n            pointer-events: none;\r\n            z-index: 1;\r\n          }\r\n        `;\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n`;\r\n\r\n// Оверлей для погодных эффектов\r\nconst WeatherOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  z-index: 2;\r\n  \r\n  ${props => {\r\n    switch (props.weather) {\r\n      case 'rain':\r\n        return css`\r\n          background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 100 100\"><line x1=\"20\" y1=\"0\" x2=\"10\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"30\" y1=\"10\" x2=\"20\" y2=\"40\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"40\" y1=\"0\" x2=\"30\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"50\" y1=\"5\" x2=\"40\" y2=\"35\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"60\" y1=\"0\" x2=\"50\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"70\" y1=\"10\" x2=\"60\" y2=\"40\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"80\" y1=\"0\" x2=\"70\" y2=\"30\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/><line x1=\"90\" y1=\"5\" x2=\"80\" y2=\"35\" stroke=\"rgba(200, 200, 255, 0.5)\" stroke-width=\"1\"/></svg>');\r\n          background-repeat: repeat;\r\n          opacity: ${props.intensity || 0.7};\r\n          animation: ${rainAnimation} 0.5s linear infinite;\r\n        `;\r\n      case 'snow':\r\n        return css`\r\n          background-image: \r\n            radial-gradient(circle at 50% 50%, white 0.5px, transparent 1px),\r\n            radial-gradient(circle at 70% 30%, white 0.5px, transparent 1px);\r\n          background-size: 100px 100px, 150px 150px;\r\n          opacity: ${props.intensity || 0.5};\r\n          animation: ${snowAnimation} 20s linear infinite;\r\n        `;\r\n      case 'fog':\r\n        return css`\r\n          background: linear-gradient(to bottom, rgba(255, 255, 255, 0.1), rgba(200, 200, 200, 0.2));\r\n          opacity: ${props.intensity || 0.5};\r\n          animation: ${fogAnimation} 20s ease-in-out infinite;\r\n        `;\r\n      case 'thunderstorm':\r\n        return css`\r\n          background-color: rgba(255, 255, 255, 0);\r\n          box-shadow: inset 0 0 100vw 0 rgba(255, 255, 255, 0);\r\n          animation: ${thunderAnimation} ${10 + Math.random() * 20}s ease-out infinite;\r\n          opacity: ${props.intensity || 0.2};\r\n        `;\r\n      case 'cloudy':\r\n        return css`\r\n          background-image: \r\n            radial-gradient(circle at 30% 40%, rgba(220, 220, 220, 0.3) 20px, transparent 30px),\r\n            radial-gradient(circle at 70% 50%, rgba(220, 220, 220, 0.3) 30px, transparent 40px);\r\n          background-size: 200px 200px;\r\n          opacity: ${props.intensity || 0.3};\r\n        `;\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n`;\r\n\r\n// Оверлей для особых событий\r\nconst EventOverlay = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  z-index: 3;\r\n  \r\n  ${props => {\r\n    switch (props.event) {\r\n      case 'bloom':\r\n        return css`\r\n          box-shadow: inset 0 0 100px rgba(255, 230, 230, 0.3);\r\n          background: \r\n            radial-gradient(circle at 30% 40%, rgba(255, 200, 200, 0.1) 0px, transparent 100px),\r\n            radial-gradient(circle at 70% 60%, rgba(255, 200, 200, 0.1) 0px, transparent 100px);\r\n        `;\r\n      case 'spirit_tide':\r\n        return css`\r\n          background: linear-gradient(to bottom, \r\n            rgba(100, 150, 255, 0.05) 0%, \r\n            rgba(100, 200, 255, 0.1) 50%, \r\n            rgba(100, 150, 255, 0.05) 100%);\r\n        `;\r\n      case 'solstice':\r\n        return css`\r\n          box-shadow: inset 0 0 150px rgba(255, 200, 100, 0.3);\r\n        `;\r\n      case 'meteor_shower':\r\n        return css`\r\n          background-image: linear-gradient(to bottom right, transparent 80%, rgba(255, 255, 255, 0.2) 80.5%, transparent 81%);\r\n          background-size: 200px 200px;\r\n          animation: ${rainAnimation} 1s linear infinite;\r\n        `;\r\n      case 'ice_tribulation':\r\n        return css`\r\n          background: radial-gradient(circle at center, rgba(200, 230, 255, 0.1) 0%, transparent 100%);\r\n          box-shadow: inset 0 0 100px rgba(200, 230, 255, 0.2);\r\n        `;\r\n      case 'blizzard':\r\n        return css`\r\n          background-image: \r\n            radial-gradient(circle at 50% 50%, white 1px, transparent 2px),\r\n            radial-gradient(circle at 70% 30%, white 1px, transparent 2px);\r\n          background-size: 50px 50px, 70px 70px;\r\n          opacity: 0.7;\r\n          animation: ${snowAnimation} 5s linear infinite;\r\n        `;\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n`;\r\n\r\nconst MapGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  gap: 2px;\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 500px;\r\n`;\r\n\r\nconst MapCell = styled.div`\r\n  background: ${props => props.type === 'mountain' ? '#8B4513' :\r\n    props.type === 'forest' ? '#228B22' :\r\n    props.type === 'water' ? '#4682B4' :\r\n    props.type === 'city' ? '#DAA520' :\r\n    props.type === 'dungeon' ? '#800000' : '#556B2F'};\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    transform: scale(1.05);\r\n    z-index: 1;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  ${props => props.isPlayerLocation && `\r\n    &::after {\r\n      content: '●';\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      color: #fff;\r\n      font-size: 1.2rem;\r\n      text-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n    }\r\n  `}\r\n`;\r\n\r\nconst LocationInfo = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst LocationHeader = styled.div`\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst LocationName = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 5px;\r\n`;\r\n\r\nconst LocationType = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst LocationDescription = styled.p`\r\n  color: #f0f0f0;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n  margin: 0 0 20px;\r\n`;\r\n\r\nconst ResourcesList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ResourceItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ResourceLabel = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\nconst ResourceValue = styled.span`\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: rgba(212, 175, 55, 0.2);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #d4af37;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.3);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #333;\r\n    border-color: #666;\r\n    color: #666;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled(ActionButton)`\r\n  background: rgba(150, 150, 150, 0.2);\r\n  border-color: #aaa;\r\n  color: #aaa;\r\n  \r\n  &:hover {\r\n    background: rgba(150, 150, 150, 0.3);\r\n  }\r\n`;\r\n\r\n// Примерные данные для карты, если они отсутствуют в состоянии\r\nconst defaultLocations = [\r\n  { id: 1, name: 'Долина Начала', type: 'forest', x: 3, y: 3, description: 'Место, где начинают свой путь молодые культиваторы.', resources: [{ id: 1, name: 'Духовные травы', amount: 'Мало' }] },\r\n  { id: 2, name: 'Горы Облачного Пика', type: 'mountain', x: 5, y: 2, description: 'Высокие горы, окутанные облаками и духовной энергией.', resources: [{ id: 2, name: 'Духовные камни', amount: 'Средне' }] },\r\n  { id: 3, name: 'Город Восточного Ветра', type: 'city', x: 7, y: 5, description: 'Крупный город, центр торговли и культивации.', resources: [{ id: 3, name: 'Товары', amount: 'Много' }] },\r\n  { id: 4, name: 'Озеро Отражений', type: 'water', x: 2, y: 6, description: 'Мистическое озеро, в котором отражаются звезды даже днем.', resources: [{ id: 4, name: 'Водные эссенции', amount: 'Много' }] },\r\n  { id: 5, name: 'Пещера Тысячи Испытаний', type: 'dungeon', x: 8, y: 8, description: 'Древнее место испытаний для культиваторов.', resources: [{ id: 5, name: 'Сокровища', amount: 'Редко' }] },\r\n  { id: 6, name: 'Туманный Лес', type: 'forest', x: 1, y: 1, description: 'Древний лес, окутанный вечным туманом, где растут редкие виды духовных грибов.', resources: [{ id: 6, name: 'Духовные грибы', amount: 'Средне' }] },\r\n  { id: 7, name: 'Вулканический Пик', type: 'mountain', x: 9, y: 2, description: 'Активный вулкан, источающий огненную ци, идеальное место для практиков огненного пути.', resources: [{ id: 7, name: 'Огненные кристаллы', amount: 'Редко' }] },\r\n  { id: 8, name: 'Деревня Речного Камня', type: 'city', x: 4, y: 7, description: 'Небольшое поселение у подножия гор, известное мастерами-ремесленниками и целебными травами.', resources: [{ id: 8, name: 'Редкие рукоделия', amount: 'Много' }] },\r\n  { id: 9, name: 'Ледяное Озеро', type: 'water', x: 6, y: 9, description: 'Озеро, не тающее даже летом, с водой, насыщенной чистейшей инь-энергией.', resources: [{ id: 9, name: 'Инь-эссенция', amount: 'Много' }] },\r\n  { id: 10, name: 'Запретные Руины', type: 'dungeon', x: 2, y: 3, description: 'Древние руины забытой цивилизации, полные опасных ловушек и бесценных артефактов.', resources: [{ id: 10, name: 'Древние артефакты', amount: 'Редко' }] }\r\n];\r\n\r\n// Соответствие типов локаций и ID областей для боя\r\nconst locationTypeToAreaId = {\r\n  'mountain': 'mountain_path',\r\n  'forest': 'starting_area',\r\n  'dungeon': 'ancient_ruins',\r\n  'city': 'starting_area',\r\n  'water': 'starting_area'\r\n};\r\n\r\nfunction MapTab() {\r\n  const { state, actions } = useGame();\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [isExploring, setIsExploring] = useState(false);\r\n  const [currentAreaId, setCurrentAreaId] = useState(null);\r\n  \r\n  // Получаем данные о мире и локациях с проверкой на существование\r\n  const world = state?.world || {};\r\n  const playerLocation = state?.player?.location || { x: 3, y: 3 };\r\n  const locations = world?.map?.locations || defaultLocations;\r\n  const cultivation = state?.player?.cultivation || {};\r\n  \r\n  // Используем useReducer для принудительного обновления компонента\r\n  const [renderCount, forceUpdate] = useReducer(x => x + 1, 0);\r\n  \r\n  // Используем хук useTimeWeather вместо прямого доступа к state.weather\r\n  const timeWeather = useTimeWeather();\r\n  \r\n  // Получаем все необходимые данные из хука useTimeWeather\r\n  const { \r\n    hour, \r\n    minute, \r\n    formattedTime, \r\n    isDayTime, \r\n    daytimePeriod,\r\n    currentWeather,\r\n    weatherIntensity,\r\n    dayCount,\r\n    season: currentSeason,\r\n    seasonDay,\r\n    seasonLength,\r\n    activeEvent,\r\n    eventRemainingTime,\r\n    nextWeatherChange,\r\n    forceUpdateCounter,\r\n    worldTime // Явно получаем для отслеживания изменений\r\n  } = timeWeather;\r\n  \r\n  // Дополнительные расчеты на основе полученных данных\r\n  const dayProgress = ((hour * 60 + minute) / (24 * 60)) * 100;\r\n  const seasonProgress = (seasonDay / seasonLength) * 100;\r\n  \r\n  // Определяем следующий сезон\r\n  const seasons = ['spring', 'summer', 'autumn', 'winter'];\r\n  const currentSeasonIndex = seasons.indexOf(currentSeason);\r\n  const nextSeason = seasons[(currentSeasonIndex + 1) % seasons.length];\r\n  \r\n  // Длительность события (если есть)\r\n  const eventDuration = 120; // Примерная длительность события\r\n  const eventProgress = activeEvent ? (eventRemainingTime / eventDuration) * 100 : 0;\r\n  \r\n  // Подписываемся на события обновления времени для синхронизации с другими компонентами\r\n  useEffect(() => {\r\n    // Функция для принудительного обновления компонента\r\n    const handleTimeUpdate = () => {\r\n      console.log('⏰ MapTab TimeWeatherPanel: Получено событие обновления времени');\r\n      forceUpdate();\r\n    };\r\n    \r\n    // Подписываемся на глобальное событие обновления времени\r\n    window.addEventListener('manual_time_update', handleTimeUpdate);\r\n    \r\n    // При первом рендере сразу обновляем\r\n    forceUpdate();\r\n    console.log('⚡ MapTab TimeWeatherPanel: Инициализация и подписка на обновления', {\r\n      hour, \r\n      minute,\r\n      formattedTime,\r\n      worldTime,\r\n      counter: forceUpdateCounter\r\n    });\r\n    \r\n    // Очищаем обработчик события при размонтировании\r\n    return () => {\r\n      window.removeEventListener('manual_time_update', handleTimeUpdate);\r\n    };\r\n  }, []);\r\n  \r\n  // Также реагируем на прямые изменения в данных\r\n  useEffect(() => {\r\n    forceUpdate();\r\n    console.log('🔄 MapTab TimeWeatherPanel: Обновление из-за изменения данных', {\r\n      hour, \r\n      minute,\r\n      formattedTime,\r\n      worldTime,\r\n      counter: forceUpdateCounter\r\n    });\r\n  }, [hour, minute, formattedTime, worldTime, forceUpdateCounter]);\r\n  \r\n  // Обработчики событий\r\n  const handleLocationClick = (location) => {\r\n    setSelectedLocation(location);\r\n  };\r\n  \r\n  const handleTravel = () => {\r\n    if (!selectedLocation) return;\r\n    \r\n    // Проверяем, достаточно ли энергии для путешествия\r\n    const distance = Math.abs(selectedLocation.x - playerLocation.x) +\r\n                    Math.abs(selectedLocation.y - playerLocation.y);\r\n    const energyCost = distance * 5;\r\n    \r\n    if ((cultivation.energy || 0) < energyCost) {\r\n      if (actions.addNotification) {\r\n        actions.addNotification({\r\n          message: 'Недостаточно духовной энергии для путешествия',\r\n          type: 'error'\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Тратим энергию и перемещаем игрока\r\n    if (actions.updateCultivation) {\r\n      actions.updateCultivation({\r\n        energy: (cultivation.energy || 0) - energyCost\r\n      });\r\n    }\r\n    \r\n    if (actions.updateLocation) {\r\n      actions.updateLocation(selectedLocation);\r\n    }\r\n    \r\n    if (actions.addNotification) {\r\n      actions.addNotification({\r\n        message: `Вы успешно переместились в ${selectedLocation.name}`,\r\n        type: 'success'\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleExplore = () => {\r\n    // Определяем ID области для исследования на основе типа локации\r\n    const locationType = playerLocation.type || 'forest';\r\n    const areaId = locationTypeToAreaId[locationType] || 'starting_area';\r\n    \r\n    setCurrentAreaId(areaId);\r\n    setIsExploring(true);\r\n  };\r\n  \r\n  // Русские названия погоды\r\n  const weatherNames = {\r\n    clear: 'Ясно',\r\n    cloudy: 'Облачно',\r\n    rain: 'Дождь',\r\n    thunderstorm: 'Гроза',\r\n    fog: 'Туман',\r\n    snow: 'Снег'\r\n  };\r\n  \r\n  // Русские названия сезонов\r\n  const seasonNames = {\r\n    spring: 'Весна',\r\n    summer: 'Лето',\r\n    autumn: 'Осень',\r\n    winter: 'Зима'\r\n  };\r\n  \r\n  // Иконки для сезонов\r\n  const seasonIcons = {\r\n    spring: '🌱',\r\n    summer: '☀️',\r\n    autumn: '🍂',\r\n    winter: '❄️'\r\n  };\r\n  \r\n  // Информация о событиях\r\n  const eventInfo = {\r\n    bloom: {\r\n      name: 'Цветение духовных трав',\r\n      description: 'Духовные травы цветут, повышая их эффективность и количество.',\r\n      icon: '🌸'\r\n    },\r\n    spirit_tide: {\r\n      name: 'Прилив духовной энергии',\r\n      description: 'Повышенная концентрация духовной энергии ускоряет культивацию.',\r\n      icon: '🌊'\r\n    },\r\n    solstice: {\r\n      name: 'Солнцестояние',\r\n      description: 'Пик солнечной активности усиливает огненную культивацию.',\r\n      icon: '☀️'\r\n    },\r\n    meteor_shower: {\r\n      name: 'Метеоритный дождь',\r\n      description: 'Падающие звезды приносят редкие космические материалы.',\r\n      icon: '☄️'\r\n    },\r\n    harvest: {\r\n      name: 'Сбор урожая',\r\n      description: 'Время собирать плоды и готовиться к зиме.',\r\n      icon: '🌾'\r\n    },\r\n    spirit_wind: {\r\n      name: 'Духовный ветер',\r\n      description: 'Сильные ветра делают передвижение легче.',\r\n      icon: '🌬️'\r\n    },\r\n    ice_tribulation: {\r\n      name: 'Ледяная трибуляция',\r\n      description: 'Испытание льдом и холодом для культиваторов.',\r\n      icon: '❄️'\r\n    },\r\n    blizzard: {\r\n      name: 'Метель',\r\n      description: 'Сильный снегопад затрудняет передвижение.',\r\n      icon: '🌨️'\r\n    }\r\n  };\r\n  \r\n  // Если игрок находится в режиме исследования, показываем CombatArea\r\n  if (isExploring && currentAreaId) {\r\n    return (\r\n      <div>\r\n        <BackButton onClick={() => setIsExploring(false)}>\r\n          Вернуться к карте\r\n        </BackButton>\r\n        <CombatArea areaId={currentAreaId} />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Container>\r\n      <div>\r\n        <TimeWeatherPanel>\r\n          <InfoRow>\r\n            <InfoColumn>\r\n              <InfoLabel>Текущее время</InfoLabel>\r\n              <InfoValue>\r\n                <AnimatedIcon>{getTimeIcon(daytimePeriod)}</AnimatedIcon>\r\n                {formattedTime} ({daytimePeriod})\r\n              </InfoValue>\r\n            </InfoColumn>\r\n            \r\n            <InfoColumn>\r\n              <InfoLabel>Погода</InfoLabel>\r\n              <InfoValue>\r\n                <AnimatedIcon>{getWeatherIcon(weatherNames[currentWeather] || 'Ясно')}</AnimatedIcon>\r\n                {weatherNames[currentWeather] || 'Ясно'} \r\n                {weatherIntensity && `(${Math.round(weatherIntensity * 10)}/10)`}\r\n              </InfoValue>\r\n            </InfoColumn>\r\n          </InfoRow>\r\n          \r\n          <InfoLabel>Цикл дня (День {dayCount})</InfoLabel>\r\n          <DayCycleProgress progress={dayProgress} />\r\n          \r\n          <InfoRow>\r\n            <InfoColumn>\r\n              <InfoLabel>Текущий сезон</InfoLabel>\r\n              <SeasonName season={currentSeason}>\r\n                {seasonIcons[currentSeason]} {seasonNames[currentSeason]}\r\n              </SeasonName>\r\n              <SeasonProgress season={currentSeason} progress={seasonProgress} />\r\n            </InfoColumn>\r\n            \r\n            <InfoColumn>\r\n              <SeasonDays>День {seasonDay} из {seasonLength}</SeasonDays>\r\n              <UpcomingChange>\r\n                Следующий сезон: <span>{seasonNames[nextSeason]}</span> через {seasonLength - seasonDay} дней\r\n              </UpcomingChange>\r\n            </InfoColumn>\r\n          </InfoRow>\r\n          \r\n          <InfoLabel>До смены погоды: {nextWeatherChange} мин.</InfoLabel>\r\n          \r\n          {activeEvent && (\r\n            <SpecialEventContainer active={true}>\r\n              <EventTitle>\r\n                {eventInfo[activeEvent]?.icon || '🌟'} {eventInfo[activeEvent]?.name || 'Особое событие'}\r\n              </EventTitle>\r\n              <EventDescription>\r\n                {eventInfo[activeEvent]?.description || 'Происходит особое событие, влияющее на окружающий мир.'}\r\n              </EventDescription>\r\n              <InfoLabel>Осталось времени: {eventRemainingTime} мин.</InfoLabel>\r\n              <EventProgress progress={eventProgress} />\r\n            </SpecialEventContainer>\r\n          )}\r\n        </TimeWeatherPanel>\r\n        \r\n        <MapArea \r\n          daytimePeriod={daytimePeriod} \r\n          season={currentSeason}\r\n        >\r\n          {/* Оверлей погоды */}\r\n          <WeatherOverlay weather={currentWeather} intensity={weatherIntensity} />\r\n          \r\n          {/* Оверлей событий */}\r\n          {activeEvent && <EventOverlay event={activeEvent} />}\r\n          \r\n          <MapGrid>\r\n            {locations.map(location => {\r\n              // Бонусы и эффекты локации\r\n              const locationEffects = {};\r\n              \r\n              // Расчет особых эффектов для локации в зависимости от погоды и сезона\r\n              switch(location.type) {\r\n                case 'forest':\r\n                  if (currentSeason === 'spring') locationEffects.resourceBonus = 1.2;\r\n                  if (currentWeather === 'rain') locationEffects.energyRecovery = 1.1;\r\n                  break;\r\n                case 'mountain':\r\n                  if (currentSeason === 'winter') locationEffects.cultivationSpeed = 1.15;\r\n                  if (currentWeather === 'thunderstorm') locationEffects.insightChance = 1.2;\r\n                  break;\r\n                case 'water':\r\n                  if (currentSeason === 'summer') locationEffects.cooldown = 0.8;\r\n                  if (currentWeather === 'clear') locationEffects.spiritualEnergy = 1.2;\r\n                  break;\r\n                case 'city':\r\n                  if (currentSeason === 'autumn') locationEffects.tradeBonus = 1.15;\r\n                  if (currentWeather === 'fog') locationEffects.stealthBonus = 1.3;\r\n                  break;\r\n                case 'dungeon':\r\n                  if (currentSeason === 'winter') locationEffects.defenseBonus = 1.1;\r\n                  if (currentWeather === 'thunderstorm') locationEffects.attackBonus = 1.2;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n              \r\n              // Специальные цветовые эффекты для локаций в зависимости от времени суток\r\n              let timeEffect = {};\r\n              if (daytimePeriod === 'ночь' || daytimePeriod === 'глубокая ночь') {\r\n                if (location.type === 'water') timeEffect.glow = '0 0 15px rgba(100, 150, 255, 0.3)';\r\n                if (location.type === 'dungeon') timeEffect.glow = '0 0 10px rgba(255, 50, 50, 0.2)';\r\n              }\r\n              \r\n              return (\r\n                <MapCell\r\n                  key={location.id}\r\n                  type={location.type}\r\n                  isPlayerLocation={\r\n                    location.x === playerLocation.x &&\r\n                    location.y === playerLocation.y\r\n                  }\r\n                  style={timeEffect}\r\n                  onClick={() => handleLocationClick(location)}\r\n                  data-effects={Object.keys(locationEffects).length > 0 ? 'active' : 'none'}\r\n                />\r\n              );\r\n            })}\r\n          </MapGrid>\r\n        </MapArea>\r\n      </div>\r\n      \r\n      <LocationInfo>\r\n        {selectedLocation ? (\r\n          <>\r\n            <LocationHeader>\r\n              <LocationName>{selectedLocation.name}</LocationName>\r\n              <LocationType>\r\n                {selectedLocation.type === 'mountain' && 'Горы'}\r\n                {selectedLocation.type === 'forest' && 'Лес'}\r\n                {selectedLocation.type === 'water' && 'Водоем'}\r\n                {selectedLocation.type === 'city' && 'Город'}\r\n                {selectedLocation.type === 'dungeon' && 'Подземелье'}\r\n              </LocationType>\r\n            </LocationHeader>\r\n            \r\n            <LocationDescription>\r\n              {selectedLocation.description}\r\n            </LocationDescription>\r\n            \r\n            {selectedLocation.resources && (\r\n              <ResourcesList>\r\n                {selectedLocation.resources.map(resource => (\r\n                  <ResourceItem key={resource.id}>\r\n                    <ResourceLabel>{resource.name}</ResourceLabel>\r\n                    <ResourceValue>{resource.amount}</ResourceValue>\r\n                  </ResourceItem>\r\n                ))}\r\n              </ResourcesList>\r\n            )}\r\n            \r\n            {selectedLocation.x !== playerLocation.x ||\r\n             selectedLocation.y !== playerLocation.y ? (\r\n              <ActionButton\r\n                onClick={handleTravel}\r\n                disabled={(cultivation.energy || 0) < \r\n                  (Math.abs(selectedLocation.x - playerLocation.x) +\r\n                   Math.abs(selectedLocation.y - playerLocation.y)) * 5}\r\n              >\r\n                Отправиться в путь (\r\n                {(Math.abs(selectedLocation.x - playerLocation.x) +\r\n                  Math.abs(selectedLocation.y - playerLocation.y)) * 5} энергии)\r\n              </ActionButton>\r\n            ) : (\r\n              <ActionButton onClick={handleExplore}>\r\n                Исследовать местность\r\n              </ActionButton>\r\n            )}\r\n            {/* Эффекты локации */}\r\n            {selectedLocation && (\r\n              <>\r\n                {/* Получаем эффекты для данной локации с учетом погоды и сезона */}\r\n                {(() => {\r\n                  // Базовые бонусы локации (независимо от того, находимся ли мы в ней)\r\n                  const locationEffects = {};\r\n                  \r\n                  // Расчет особых эффектов для локации в зависимости от погоды и сезона\r\n                  switch(selectedLocation.type) {\r\n                    case 'forest':\r\n                      locationEffects.baseEnergy = { value: '+5%', positive: true };\r\n                      locationEffects.basePerception = { value: '+10%', positive: true };\r\n                      \r\n                      if (currentSeason === 'spring') \r\n                        locationEffects.resourceBonus = { value: '+20% к сбору ресурсов', positive: true };\r\n                      if (currentWeather === 'rain') \r\n                        locationEffects.energyRecovery = { value: '+10% к восстановлению энергии', positive: true };\r\n                      break;\r\n                    case 'mountain':\r\n                      locationEffects.baseStrength = { value: '+5%', positive: true };\r\n                      locationEffects.baseStamina = { value: '+15%', positive: true };\r\n                      \r\n                      if (currentSeason === 'winter') \r\n                        locationEffects.cultivationSpeed = { value: '+15% к скорости культивации', positive: true };\r\n                      if (currentWeather === 'thunderstorm') \r\n                        locationEffects.insightChance = { value: '+20% к шансу озарения', positive: true };\r\n                      break;\r\n                    case 'water':\r\n                      locationEffects.baseWisdom = { value: '+10%', positive: true };\r\n                      locationEffects.baseHealing = { value: '+15%', positive: true };\r\n                      \r\n                      if (currentSeason === 'summer') \r\n                        locationEffects.cooldown = { value: '-20% к времени восстановления навыков', positive: true };\r\n                      if (currentWeather === 'clear') \r\n                        locationEffects.spiritualEnergy = { value: '+20% к получению духовной энергии', positive: true };\r\n                      break;\r\n                    case 'city':\r\n                      locationEffects.baseSocial = { value: '+20%', positive: true };\r\n                      locationEffects.baseLuck = { value: '+5%', positive: true };\r\n                      \r\n                      if (currentSeason === 'autumn') \r\n                        locationEffects.tradeBonus = { value: '+15% к выгоде при торговле', positive: true };\r\n                      if (currentWeather === 'fog') \r\n                        locationEffects.stealthBonus = { value: '+30% к скрытности', positive: true };\r\n                      break;\r\n                    case 'dungeon':\r\n                      locationEffects.baseAttack = { value: '+10%', positive: true };\r\n                      locationEffects.baseDefense = { value: '+5%', positive: true };\r\n                      \r\n                      if (currentSeason === 'winter') \r\n                        locationEffects.defenseBonus = { value: '+10% к защите', positive: true };\r\n                      if (currentWeather === 'thunderstorm') \r\n                        locationEffects.attackBonus = { value: '+20% к атаке', positive: true };\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                  \r\n                  // Эффекты времени суток для разных локаций\r\n                  switch(daytimePeriod) {\r\n                    case 'рассвет':\r\n                      if (selectedLocation.type === 'forest')\r\n                        locationEffects.dawnPerception = { value: '+15% к восприятию', positive: true };\r\n                      if (selectedLocation.type === 'water')\r\n                        locationEffects.dawnMeditation = { value: '+25% к эффекту медитации', positive: true };\r\n                      break;\r\n                    case 'день':\r\n                      if (selectedLocation.type === 'mountain')\r\n                        locationEffects.dayStamina = { value: '+10% к выносливости', positive: true };\r\n                      break;\r\n                    case 'ночь':\r\n                    case 'глубокая ночь':\r\n                      if (selectedLocation.type === 'water')\r\n                        locationEffects.nightEnergy = { value: '+20% к духовной энергии', positive: true };\r\n                      if (selectedLocation.type === 'dungeon')\r\n                        locationEffects.nightMonsterStrength = { value: '+15% к силе монстров', positive: false };\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                  \r\n                  // Особые эффекты при активных событиях\r\n                  if (activeEvent) {\r\n                    switch(activeEvent) {\r\n                      case 'bloom':\r\n                        if (selectedLocation.type === 'forest')\r\n                          locationEffects.bloomHerbQuality = { value: '+50% к качеству трав', positive: true };\r\n                        break;\r\n                      case 'spirit_tide':\r\n                        if (selectedLocation.type === 'water')\r\n                          locationEffects.tideSpiritualPower = { value: '+40% к силе духовных техник', positive: true };\r\n                        break;\r\n                      case 'solstice':\r\n                        if (selectedLocation.type === 'mountain')\r\n                          locationEffects.solsticeCultivation = { value: '+30% к скорости культивации', positive: true };\r\n                        break;\r\n                      case 'meteor_shower':\r\n                        locationEffects.meteorRareMaterials = { value: 'Шанс найти редкие материалы', positive: true };\r\n                        break;\r\n                      default:\r\n                        break;\r\n                    }\r\n                  }\r\n                  \r\n                  return (\r\n                    <WeatherEffectsPanel style={{ marginTop: '15px' }}>\r\n                      <h4 style={{ margin: '0 0 10px 0', color: '#d4af37' }}>Особенности локации:</h4>\r\n                      {/* Базовые бонусы локации */}\r\n                      <div style={{ marginBottom: '10px' }}>\r\n                        <p style={{ color: '#bbb', marginBottom: '5px' }}>Базовые бонусы:</p>\r\n                        {Object.entries(locationEffects)\r\n                          .filter(([key]) => key.startsWith('base'))\r\n                          .map(([key, effect], idx) => (\r\n                            <p key={idx}>\r\n                              {key.replace('base', '')}: <span positive={effect.positive ? 'true' : 'false'}>{effect.value}</span>\r\n                            </p>\r\n                          ))}\r\n                      </div>\r\n                      \r\n                      {/* Эффекты сезона, погоды и времени */}\r\n                      {Object.entries(locationEffects)\r\n                        .filter(([key]) => !key.startsWith('base'))\r\n                        .length > 0 && (\r\n                        <div>\r\n                          <p style={{ color: '#bbb', marginBottom: '5px' }}>Текущие эффекты:</p>\r\n                          {Object.entries(locationEffects)\r\n                            .filter(([key]) => !key.startsWith('base'))\r\n                            .map(([key, effect], idx) => (\r\n                              <p key={idx}>\r\n                                <span positive={effect.positive ? 'true' : 'false'}>{effect.value}</span>\r\n                              </p>\r\n                            ))}\r\n                        </div>\r\n                      )}\r\n                    </WeatherEffectsPanel>\r\n                  );\r\n                })()}\r\n                \r\n                {/* Погодные эффекты для текущей локации */}\r\n                {selectedLocation.x === playerLocation.x && selectedLocation.y === playerLocation.y && (\r\n                  <WeatherEffectsPanel>\r\n                    <h4 style={{ margin: '10px 0 8px 0', color: '#d4af37' }}>\r\n                      Эффекты текущей погоды \r\n                      {Array.isArray(timeWeather.weatherEffects) && timeWeather.weatherEffects.length > 1 &&\r\n                        ` (${timeWeather.weatherEffects.length})`}\r\n                    </h4>\r\n                    \r\n                    {/* Проверяем есть ли вообще эффекты для отображения */}\r\n                    {(!timeWeather.weatherEffects || \r\n                      (Array.isArray(timeWeather.weatherEffects) && timeWeather.weatherEffects.length === 0) ||\r\n                      (typeof timeWeather.weatherEffects === 'object' && Object.keys(timeWeather.weatherEffects).length === 0)) ? (\r\n                      <p style={{ color: '#aaa', fontStyle: 'italic' }}>Нет активных эффектов погоды</p>\r\n                    ) : (\r\n                      <>\r\n                        {/* Проверяем формат weatherEffects и отображаем соответственно */}\r\n                        {Array.isArray(timeWeather.weatherEffects) ? (\r\n                          // Новый формат - массив эффектов\r\n                          timeWeather.weatherEffects.map((effect, index) => (\r\n                            <p key={index}>\r\n                              {effect.type || 'Эффект'}: \r\n                              <span positive={(effect.modifier > 0 || effect.positive) ? 'true' : 'false'}>\r\n                                {effect.modifier ? \r\n                                  // Округляем значение модификатора перед отображением\r\n                                  (effect.modifier > 0 ? ' +' : ' ') + \r\n                                  (typeof effect.modifier === 'number' ? Math.round(effect.modifier) : effect.modifier) + \r\n                                  (effect.target ? ` к ${effect.target}` : '') \r\n                                  : effect.description || ''}\r\n                              </span>\r\n                            </p>\r\n                          ))\r\n                        ) : (\r\n                          // Старый формат - объект с категориями эффектов\r\n                          <>\r\n                            {timeWeather.weatherEffects?.exploration?.movementEnergyCostModifier !== undefined && \r\n                             timeWeather.weatherEffects.exploration.movementEnergyCostModifier !== 1.0 && (\r\n                              <p>Затраты энергии на передвижение: \r\n                                <span positive={timeWeather.weatherEffects.exploration.movementEnergyCostModifier < 1.0 ? 'true' : 'false'}>\r\n                                  {timeWeather.weatherEffects.exploration.movementEnergyCostModifier < 1.0 ? ' -' : ' +'}\r\n                                  {Math.abs(Math.round((timeWeather.weatherEffects.exploration.movementEnergyCostModifier - 1) * 100))}%\r\n                                </span>\r\n                              </p>\r\n                            )}\r\n                            {timeWeather.weatherEffects?.exploration?.resourceFindRateModifier !== undefined &&\r\n                             timeWeather.weatherEffects.exploration.resourceFindRateModifier !== 1.0 && (\r\n                              <p>Шанс найти ресурсы: \r\n                                <span positive={timeWeather.weatherEffects.exploration.resourceFindRateModifier > 1.0 ? 'true' : 'false'}>\r\n                                  {timeWeather.weatherEffects.exploration.resourceFindRateModifier > 1.0 ? ' +' : ' -'}\r\n                                  {Math.abs(Math.round((timeWeather.weatherEffects.exploration.resourceFindRateModifier - 1) * 100))}%\r\n                                </span>\r\n                              </p>\r\n                            )}\r\n                            {timeWeather.weatherEffects?.exploration?.resourceQualityModifier !== undefined &&\r\n                             timeWeather.weatherEffects.exploration.resourceQualityModifier !== 1.0 && (\r\n                              <p>Качество ресурсов: \r\n                                <span positive={timeWeather.weatherEffects.exploration.resourceQualityModifier > 1.0 ? 'true' : 'false'}>\r\n                                  {timeWeather.weatherEffects.exploration.resourceQualityModifier > 1.0 ? ' +' : ' -'}\r\n                                  {Math.abs(Math.round((timeWeather.weatherEffects.exploration.resourceQualityModifier - 1) * 100))}%\r\n                                </span>\r\n                              </p>\r\n                            )}\r\n                            {timeWeather.weatherEffects?.combat?.enemySpawnRateModifier !== undefined &&\r\n                             timeWeather.weatherEffects.combat.enemySpawnRateModifier !== 1.0 && (\r\n                              <p>Частота появления врагов: \r\n                                <span positive={timeWeather.weatherEffects.combat.enemySpawnRateModifier < 1.0 ? 'true' : 'false'}>\r\n                                  {timeWeather.weatherEffects.combat.enemySpawnRateModifier < 1.0 ? ' -' : ' +'}\r\n                                  {Math.abs(Math.round((timeWeather.weatherEffects.combat.enemySpawnRateModifier - 1) * 100))}%\r\n                                </span>\r\n                              </p>\r\n                            )}\r\n                            {timeWeather.weatherEffects?.system?.specialEncounterChance !== undefined &&\r\n                             timeWeather.weatherEffects.system.specialEncounterChance > 0 && (\r\n                              <p>Шанс особых встреч: \r\n                                <span positive=\"true\">\r\n                                  +{Math.round(timeWeather.weatherEffects.system.specialEncounterChance * 100)}%\r\n                                </span>\r\n                              </p>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </WeatherEffectsPanel>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div style={{ textAlign: 'center', color: '#aaa' }}>\r\n            Выберите локацию для просмотра деталей\r\n          </div>\r\n        )}\r\n      </LocationInfo>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MapTab;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { quests as defaultQuests, questCategories } from '../../data/quests';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  height: 100%;\r\n`;\r\n\r\nconst QuestsList = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst QuestCategories = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CategoryButton = styled.button`\r\n  background: ${props => props.active ? 'rgba(212, 175, 55, 0.2)' : 'rgba(0, 0, 0, 0.3)'};\r\n  color: ${props => props.active ? '#d4af37' : '#f0f0f0'};\r\n  border: 1px solid ${props => props.active ? '#d4af37' : 'transparent'};\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.1);\r\n    border-color: #d4af37;\r\n  }\r\n`;\r\n\r\nconst QuestCard = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid transparent;\r\n  \r\n  &:hover {\r\n    border-color: #d4af37;\r\n    transform: translateX(5px);\r\n  }\r\n  \r\n  ${props => props.selected && `\r\n    border-color: #d4af37;\r\n    background: rgba(212, 175, 55, 0.1);\r\n  `}\r\n`;\r\n\r\nconst QuestTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst QuestInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst QuestDifficulty = styled.span`\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 0.8rem;\r\n  \r\n  ${props => {\r\n    switch (props.level) {\r\n      case 'Легко':\r\n        return 'background: rgba(76, 175, 80, 0.2); color: #4caf50;';\r\n      case 'Средне':\r\n        return 'background: rgba(255, 152, 0, 0.2); color: #ff9800;';\r\n      case 'Сложно':\r\n        return 'background: rgba(244, 67, 54, 0.2); color: #f44336;';\r\n      default:\r\n        return '';\r\n    }\r\n  }}\r\n`;\r\n\r\nconst QuestDetails = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DetailHeader = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DetailTitle = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 10px 0;\r\n`;\r\n\r\nconst DetailDescription = styled.p`\r\n  color: #aaa;\r\n  line-height: 1.6;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Objectives = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Objective = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 4px;\r\n  \r\n  ${props => props.completed && `\r\n    color: #4caf50;\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst Rewards = styled.div`\r\n  margin-top: auto;\r\n`;\r\n\r\nconst RewardItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 8px;\r\n  background: rgba(212, 175, 55, 0.1);\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: ${props => props.disabled ? 'rgba(0, 0, 0, 0.3)' : 'rgba(212, 175, 55, 0.2)'};\r\n  color: ${props => props.disabled ? '#666' : '#d4af37'};\r\n  border: 1px solid ${props => props.disabled ? 'transparent' : '#d4af37'};\r\n  padding: 12px 24px;\r\n  border-radius: 4px;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  margin-top: 20px;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: rgba(212, 175, 55, 0.3);\r\n  }\r\n`;\r\n\r\nfunction QuestsTab() {\r\n  const { state, actions } = useGame();\r\n  const [selectedCategory, setSelectedCategory] = useState('все');\r\n  const [selectedQuest, setSelectedQuest] = useState(null);\r\n  \r\n  // Объединяем квесты из состояния с дефолтными\r\n  const allQuests = [\r\n    ...defaultQuests.filter(q => !state.player.progress.quests.completed.find(cq => cq.id === q.id)),\r\n    ...state.player.progress.quests.active,\r\n    ...state.player.progress.quests.completed\r\n  ];\r\n  \r\n  const filteredQuests = allQuests.filter(quest => \r\n    selectedCategory === 'все' || quest.category === selectedCategory\r\n  );\r\n  \r\n  const handleQuestSelect = (quest) => {\r\n    setSelectedQuest(quest);\r\n  };\r\n  \r\n  const handleAcceptQuest = () => {\r\n    if (selectedQuest) {\r\n      // Проверяем уровень игрока\r\n      if (state.player.cultivation.level < selectedQuest.requiredLevel) {\r\n        actions.addNotification({\r\n          message: `Требуется уровень культивации ${selectedQuest.requiredLevel}`,\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      actions.acceptQuest(selectedQuest.id);\r\n      actions.addNotification({\r\n        message: `Вы приняли задание \"${selectedQuest.title}\"`,\r\n        type: 'success'\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleCompleteQuest = () => {\r\n    if (selectedQuest) {\r\n      if (!selectedQuest.objectives.every(obj => obj.completed)) {\r\n        actions.addNotification({\r\n          message: 'Сначала выполните все цели задания',\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      actions.completeQuest(selectedQuest.id);\r\n    }\r\n  };\r\n  \r\n  const canCompleteQuest = selectedQuest && \r\n    selectedQuest.status === 'active' && \r\n    selectedQuest.objectives.every(obj => obj.completed);\r\n  \r\n  return (\r\n    <Container>\r\n      <QuestsList>\r\n        <QuestCategories>\r\n          {questCategories.map(category => (\r\n            <CategoryButton\r\n              key={category.id}\r\n              active={selectedCategory === category.name}\r\n              onClick={() => setSelectedCategory(category.name)}\r\n            >\r\n              {category.name.charAt(0).toUpperCase() + category.name.slice(1)}\r\n            </CategoryButton>\r\n          ))}\r\n        </QuestCategories>\r\n        \r\n        {filteredQuests.map(quest => (\r\n          <QuestCard\r\n            key={quest.id}\r\n            selected={selectedQuest?.id === quest.id}\r\n            onClick={() => handleQuestSelect(quest)}\r\n          >\r\n            <QuestTitle>{quest.title}</QuestTitle>\r\n            <div>{quest.description}</div>\r\n            <QuestInfo>\r\n              <QuestDifficulty level={quest.difficulty}>\r\n                {quest.difficulty}\r\n              </QuestDifficulty>\r\n              <span>\r\n                {quest.status === 'completed' && 'Завершено'}\r\n                {quest.status === 'active' && 'В процессе'}\r\n                {quest.status === 'available' && `Уровень ${quest.requiredLevel}`}\r\n              </span>\r\n            </QuestInfo>\r\n          </QuestCard>\r\n        ))}\r\n      </QuestsList>\r\n      \r\n      {selectedQuest && (\r\n        <QuestDetails>\r\n          <DetailHeader>\r\n            <DetailTitle>{selectedQuest.title}</DetailTitle>\r\n            <QuestDifficulty level={selectedQuest.difficulty}>\r\n              {selectedQuest.difficulty}\r\n            </QuestDifficulty>\r\n          </DetailHeader>\r\n          \r\n          <DetailDescription>{selectedQuest.description}</DetailDescription>\r\n          \r\n          <Objectives>\r\n            <h3>Цели:</h3>\r\n            {selectedQuest.objectives.map(objective => (\r\n              <Objective key={objective.id} completed={objective.completed}>\r\n                {objective.completed ? '✓' : '○'} {objective.text}\r\n              </Objective>\r\n            ))}\r\n          </Objectives>\r\n          \r\n          <Rewards>\r\n            <h3>Награды:</h3>\r\n            {selectedQuest.rewards.map((reward, index) => (\r\n              <RewardItem key={index}>\r\n                <span>{reward.icon}</span>\r\n                {reward.type === 'currency' && (\r\n                  typeof reward.amount === 'object' \r\n                  ? Object.entries(reward.amount).map(([currency, value]) => {\r\n                      let name = currency;\r\n                      if (currency === 'gold') name = 'золота';\r\n                      if (currency === 'silver') name = 'серебра';\r\n                      if (currency === 'copper') name = 'меди';\r\n                      return `${value} ${name}`;\r\n                    }).join(', ')\r\n                  : `${reward.amount} золота`\r\n                )}\r\n                {reward.type === 'experience' && `${reward.amount} опыта`}\r\n                {reward.type === 'item' && reward.name}\r\n                {reward.type === 'technique' && reward.name}\r\n              </RewardItem>\r\n            ))}\r\n          </Rewards>\r\n          \r\n          {selectedQuest.status === 'available' ? (\r\n            <ActionButton \r\n              onClick={handleAcceptQuest}\r\n              disabled={state.player.cultivation.level < selectedQuest.requiredLevel}\r\n            >\r\n              {state.player.cultivation.level < selectedQuest.requiredLevel \r\n                ? `Требуется уровень ${selectedQuest.requiredLevel}` \r\n                : 'Принять задание'}\r\n            </ActionButton>\r\n          ) : selectedQuest.status === 'active' && (\r\n            <ActionButton \r\n              onClick={handleCompleteQuest}\r\n              disabled={!canCompleteQuest}\r\n            >\r\n              {canCompleteQuest ? 'Завершить задание' : 'Выполните все цели'}\r\n            </ActionButton>\r\n          )}\r\n        </QuestDetails>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default QuestsTab;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport ACTION_TYPES from '../../context/actions/actionTypes';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  gap: 20px;\r\n  overflow-y: auto;\r\n  max-height: calc(100vh - 150px);\r\n`;\r\n\r\nconst SectInfo = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst SectHeader = styled.div`\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.2);\r\n  text-align: center;\r\n`;\r\n\r\nconst SectName = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 5px;\r\n`;\r\n\r\nconst SectRank = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst SectStats = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StatItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst StatLabel = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\nconst StatValue = styled.span`\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst MembersList = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst MembersHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst MembersTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0;\r\n`;\r\n\r\nconst MembersCount = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\n// Объявление MemberItem перенесено в конец файла, чтобы избежать дублирования\r\n\r\nconst MemberInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MemberName = styled.div`\r\n  color: #f0f0f0;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst MemberRole = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst MemberLevel = styled.div`\r\n  color: #d4af37;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: rgba(212, 175, 55, 0.2);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #d4af37;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  margin-bottom: 10px;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.3);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #333;\r\n    border-color: #666;\r\n    color: #666;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ContributionPanel = styled.div`\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst ContributionTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px;\r\n`;\r\n\r\nconst ContributionDescription = styled.p`\r\n  color: #f0f0f0;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n  margin: 0 0 15px;\r\n`;\r\n\r\n// Примерные данные для секты, если они отсутствуют в состоянии\r\nconst defaultSect = {\r\n  name: 'Секта Восходящего Облака',\r\n  rank: 'Начальная',\r\n  influence: 100,\r\n  resources: 50,\r\n  territories: 1,\r\n  benefits: [\r\n    {type: 'cultivation_speed', modifier: 5},\r\n    {type: 'resource_gathering', modifier: 3},\r\n    {type: 'energy_regen', modifier: 1},\r\n    {type: 'technique_discount', modifier: 2},\r\n    {type: 'max_energy', modifier: 10}\r\n  ],\r\n  members: [\r\n    { id: 1, name: 'Мастер Ли', role: 'Глава секты', cultivationLevel: 30 },\r\n    { id: 2, name: 'Старейшина Чжан', role: 'Старейшина', cultivationLevel: 25 },\r\n    { id: 3, name: 'Ученик Ван', role: 'Внутренний ученик', cultivationLevel: 15 },\r\n    { id: 4, name: 'Ученица Мэй', role: 'Внутренний ученик', cultivationLevel: 12 },\r\n    { id: 5, name: 'Ученик Чен', role: 'Внешний ученик', cultivationLevel: 8 }\r\n  ]\r\n};\r\n\r\nfunction SectTab() {\r\n  const { state, actions } = useGame();\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  \r\n  // Получаем данные о секте с проверкой на существование\r\n  const sect = state?.player?.sect || defaultSect;\r\n  const cultivation = state?.player?.cultivation || {};\r\n  \r\n  // Загружаем данные о секте при монтировании компонента\r\n  useEffect(() => {\r\n    const loadSectData = async () => {\r\n      try {\r\n        // Если в контексте еще нет данных о секте, загружаем их\r\n        if (!state.sect?.sect && actions.loadUserSect) {\r\n          await actions.loadUserSect();\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке данных о секте:', error);\r\n        actions.addNotification({\r\n          message: 'Не удалось загрузить данные о секте',\r\n          type: 'error'\r\n        });\r\n      }\r\n    };\r\n    \r\n    loadSectData();\r\n  }, []);\r\n  \r\n  // Получаем данные о секте\r\n  const sectState = state.sect || {};\r\n  const sectData = sectState.sect || defaultSect;\r\n  \r\n  // Импортируем улучшенные утилиты для работы с сектами\r\n  const { collectAllSectBenefits, getBenefitValueByType } = require('../../utils/sectUtils');\r\n  \r\n  // Собираем все бонусы секты\r\n  const allSectBenefits = collectAllSectBenefits(sectState);\r\n  \r\n  // Функция для получения значения бонуса по типу\r\n  const getBenefitValue = (type) => getBenefitValueByType(allSectBenefits, type, 0);\r\n  \r\n  // Обработчик внесения вклада в секту\r\n  const handleContribute = async () => {\r\n    const energyAmount = 20;\r\n    \r\n    // Проверяем, достаточно ли энергии\r\n    if ((cultivation.energy || 0) < energyAmount) {\r\n      actions.addNotification({\r\n        message: 'Недостаточно духовной энергии для вклада в секту',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      if (actions.contributeToSect) {\r\n        // Вносим вклад в секту\r\n        const result = await actions.contributeToSect(state.player.id, sectData.id, energyAmount);\r\n        \r\n        // Отображаем уведомление о результате\r\n        actions.addNotification({\r\n          message: result.message || 'Вы внесли вклад в развитие секты',\r\n          type: 'success'\r\n        });\r\n        \r\n        // Если секта повысила уровень, показываем особое уведомление\r\n        if (result.leveledUp) {\r\n          actions.addNotification({\r\n            message: `Секта \"${sectData.name}\" достигла ${result.newLevel} уровня!`,\r\n            type: 'achievement'\r\n          });\r\n          \r\n          // Немедленно обновляем данные секты в UI для корректного отображения\r\n          const updatedSectData = { \r\n            ...sectData, \r\n            level: result.newLevel,\r\n            experience: result.sectExperience,\r\n            requiredExperience: result.sectRequiredExperience,\r\n            rank: result.sectRank,\r\n            influence: result.sectInfluence\r\n          };\r\n          \r\n          // Принудительно обновляем Redux-состояние\r\n          actions.dispatch({ \r\n            type: ACTION_TYPES.UPDATE_SECT, \r\n            payload: updatedSectData \r\n          });\r\n          \r\n          // Синхронизируем лояльность секты с социальными отношениями\r\n          actions.dispatch({\r\n            type: ACTION_TYPES.UPDATE_RELATIONSHIP_AND_LOYALTY,\r\n            payload: {\r\n              name: sectData.name,\r\n              value: updatedSectData.loyalty || 0\r\n            }\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при внесении вклада в секту:', error);\r\n      actions.addNotification({\r\n        message: error.message || 'Не удалось внести вклад в секту',\r\n        type: 'error'\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Обработчик клика по члену секты\r\n  const handleMemberClick = (member) => {\r\n    console.log(`[DEBUG] Выбран член секты:`, member);\r\n    \r\n    // Проверяем, есть ли сохраненные данные в localStorage\r\n    if (typeof window !== 'undefined') {\r\n      try {\r\n        const savedData = localStorage.getItem(`sect_member_${member.id}`);\r\n        if (savedData) {\r\n          const savedMember = JSON.parse(savedData);\r\n          console.log(`[DEBUG] Найдены данные в localStorage:`, savedMember);\r\n          \r\n          // Обновляем данные из localStorage\r\n          member = {\r\n            ...member,\r\n            level: savedMember.level || member.level,\r\n            experience: savedMember.experience || member.experience,\r\n            requiredExperience: savedMember.requiredExperience || member.requiredExperience,\r\n            loyalty: savedMember.loyalty || member.loyalty\r\n          };\r\n          \r\n          console.log(`[DEBUG] Обновленный член секты после загрузки из localStorage:`, member);\r\n        }\r\n      } catch (e) {\r\n        console.error('Ошибка при загрузке данных члена секты из localStorage:', e);\r\n      }\r\n    }\r\n    \r\n    setSelectedMember(member);\r\n    \r\n    if (actions.selectSectMember) {\r\n      actions.selectSectMember(member);\r\n    }\r\n  };\r\n  \r\n    // Обработчик тренировки с членом секты\r\n    const handleTrainMember = async (memberId) => {\r\n      if (!selectedMember) return;\r\n      \r\n      const duration = 1; // Продолжительность тренировки\r\n      const energyAmount = duration * 5; // 5 единиц энергии за каждую единицу времени (совпадает с расчетом в sect-service.js)\r\n      \r\n      // Проверяем, достаточно ли энергии\r\n      if ((cultivation.energy || 0) < energyAmount) {\r\n        actions.addNotification({\r\n          message: 'Недостаточно духовной энергии для тренировки',\r\n          type: 'error'\r\n        });\r\n        return;\r\n      }\r\n    \r\n    try {\r\n      if (actions.trainSectMember) {\r\n        console.log('[DEBUG] Начинаем тренировку с членом секты:', selectedMember);\r\n        \r\n        // Тренируем члена секты\r\n        const result = await actions.trainSectMember(state.player.id, memberId, duration);\r\n        \r\n        console.log('[DEBUG] Результат тренировки:', result);\r\n        \r\n        // Отображаем уведомление о результате\r\n        actions.addNotification({\r\n          message: result.message || `Вы провели тренировку с ${selectedMember.name}`,\r\n          type: 'success'\r\n        });\r\n        \r\n        // Обновляем опыт игрока\r\n        if (result.userGainedXP > 0) {\r\n          actions.addNotification({\r\n            message: `Вы получили ${result.userGainedXP} опыта от совместной тренировки`,\r\n            type: 'info'\r\n          });\r\n        }\r\n        \r\n        // Если член секты повысил уровень, показываем особое уведомление\r\n        if (result.memberLeveledUp) {\r\n          actions.addNotification({\r\n            message: `${result.memberName} повысил уровень до ${result.memberNewLevel}!`,\r\n            type: 'achievement'\r\n          });\r\n        }\r\n        \r\n        // Обновляем данные о выбранном члене секты в интерфейсе\r\n        const updatedMember = {\r\n          ...selectedMember,\r\n          level: result.memberLevel,\r\n          experience: result.memberExperience,\r\n          requiredExperience: result.memberRequiredExperience,\r\n          loyalty: result.memberLoyalty,\r\n          role: result.memberRole\r\n        };\r\n        \r\n        console.log('[DEBUG] Обновляем выбранного члена секты в UI:', updatedMember);\r\n        \r\n        // Обновляем состояние выбранного члена секты\r\n        setSelectedMember(updatedMember);\r\n        \r\n        // Обновляем члена в списке секты через Redux\r\n        // Это заставит интерфейс перерисоваться с новыми данными\r\n        const updatedSectData = {\r\n          ...sectData,\r\n          members: sectData.members.map(member => \r\n            member.id === memberId \r\n              ? {\r\n                  ...member,\r\n                  level: result.memberLevel,\r\n                  experience: result.memberExperience,\r\n                  requiredExperience: result.memberRequiredExperience,\r\n                  loyalty: result.memberLoyalty,\r\n                  role: result.memberRole\r\n                }\r\n              : member\r\n          )\r\n        };\r\n        \r\n        // Принудительно обновляем Redux-состояние\r\n        actions.dispatch({ \r\n          type: ACTION_TYPES.UPDATE_SECT, \r\n          payload: updatedSectData \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при тренировке члена секты:', error);\r\n      actions.addNotification({\r\n        message: error.message || 'Не удалось провести тренировку',\r\n        type: 'error'\r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <SectInfo>\r\n        <SectHeader>\r\n          <SectName>{sectData.name}</SectName>\r\n          <SectRank>Ранг: {sectData.rank}</SectRank>\r\n        </SectHeader>\r\n        \r\n        <SectStats>\r\n          <StatItem>\r\n            <StatLabel>Уровень</StatLabel>\r\n            <StatValue>{sectData.level || 1}</StatValue>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatLabel>Опыт</StatLabel>\r\n            <StatValue>{sectData.experience || 0}/{sectData.requiredExperience || 100}</StatValue>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatLabel>Влияние</StatLabel>\r\n            <StatValue>{sectData.influence || 0}</StatValue>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatLabel>Ресурсы</StatLabel>\r\n            <StatValue>{sectData.resources || 0}</StatValue>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatLabel>Территории</StatLabel>\r\n            <StatValue>{sectData.territories || 0}</StatValue>\r\n          </StatItem>\r\n          <StatItem>\r\n            <StatLabel>Члены</StatLabel>\r\n            <StatValue>{(sectData.members || []).length}</StatValue>\r\n          </StatItem>\r\n        </SectStats>\r\n        \r\n        {/* Отображение бонусов от секты */}\r\n        <BenefitsSection>\r\n          <BenefitsTitle>Бонусы секты</BenefitsTitle>\r\n          <BenefitsList>\r\n            <BenefitItem>\r\n              <BenefitLabel>Скорость культивации</BenefitLabel>\r\n              <BenefitValue>+{getBenefitValue('cultivation_speed')}%</BenefitValue>\r\n            </BenefitItem>\r\n            <BenefitItem>\r\n              <BenefitLabel>Сбор ресурсов</BenefitLabel>\r\n              <BenefitValue>+{getBenefitValue('resource_gathering')}%</BenefitValue>\r\n            </BenefitItem>\r\n            <BenefitItem>\r\n              <BenefitLabel>Регенерация энергии</BenefitLabel>\r\n              <BenefitValue>+{getBenefitValue('energy_regen')} ед/час</BenefitValue>\r\n            </BenefitItem>\r\n            <BenefitItem>\r\n              <BenefitLabel>Скидка на техники</BenefitLabel>\r\n              <BenefitValue>-{getBenefitValue('technique_discount')}%</BenefitValue>\r\n            </BenefitItem>\r\n            <BenefitItem>\r\n              <BenefitLabel>Макс. энергия</BenefitLabel>\r\n              <BenefitValue>+{getBenefitValue('max_energy')} ед</BenefitValue>\r\n            </BenefitItem>\r\n          </BenefitsList>\r\n        </BenefitsSection>\r\n        \r\n        <ContributionPanel>\r\n          <ContributionTitle>Вклад в секту</ContributionTitle>\r\n          <ContributionDescription>\r\n            Внесите свой вклад в развитие секты, потратив духовную энергию.\r\n            Это увеличит ваше влияние и поможет секте стать сильнее.\r\n          </ContributionDescription>\r\n          \r\n          <ActionButton\r\n            onClick={handleContribute}\r\n            disabled={(cultivation.energy || 0) < 20}\r\n          >\r\n            Внести вклад (20 энергии)\r\n          </ActionButton>\r\n        </ContributionPanel>\r\n      </SectInfo>\r\n      \r\n      <MembersList>\r\n        <MembersHeader>\r\n          <MembersTitle>Члены секты</MembersTitle>\r\n          <MembersCount>{(sectData.members || []).length} человек</MembersCount>\r\n        </MembersHeader>\r\n        \r\n        {(sectData.members || []).map(member => (\r\n          <MemberItem\r\n            key={member.id}\r\n            onClick={() => handleMemberClick(member)}\r\n            selected={selectedMember && selectedMember.id === member.id}\r\n          >\r\n            <MemberInfo>\r\n              <MemberName>{member.name}</MemberName>\r\n              <MemberRole>{member.role}</MemberRole>\r\n            </MemberInfo>\r\n            <MemberLevel>\r\n              {member.level || 1} уровень\r\n              {member.loyalty && <MemberLoyalty>Лояльность: {member.loyalty}%</MemberLoyalty>}\r\n            </MemberLevel>\r\n          </MemberItem>\r\n        ))}\r\n        \r\n        {selectedMember && (\r\n          <MemberDetails>\r\n            <MemberDetailsHeader>\r\n              <MemberDetailName>{selectedMember.name}</MemberDetailName>\r\n              <MemberDetailRole>{selectedMember.role}</MemberDetailRole>\r\n            </MemberDetailsHeader>\r\n            \r\n            <MemberProgress>\r\n              <MemberProgressLabel>Прогресс: {selectedMember.experience || 0}/{selectedMember.requiredExperience || 100}</MemberProgressLabel>\r\n              <ProgressBar \r\n                current={selectedMember.experience || 0} \r\n                max={selectedMember.requiredExperience || 100} \r\n              />\r\n            </MemberProgress>\r\n            \r\n            <MemberTrainingInfo>\r\n              <TrainingInfoText>\r\n                Совместная тренировка с этим культиватором повысит его опыт и лояльность.\r\n                Вы также получите некоторое количество опыта от обмена знаниями.\r\n              </TrainingInfoText>\r\n            </MemberTrainingInfo>\r\n            \r\n            <ActionButton\r\n              onClick={() => handleTrainMember(selectedMember.id)}\r\n              disabled={(cultivation.energy || 0) < 5 || sectState.loading}\r\n            >\r\n              {sectState.loading ? 'Тренировка...' : `Тренировать ${selectedMember.name} (5 энергии)`}\r\n            </ActionButton>\r\n          </MemberDetails>\r\n        )}\r\n      </MembersList>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Дополнительные стили\r\nconst BenefitsSection = styled.div`\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst BenefitsTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst BenefitsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 8px;\r\n`;\r\n\r\nconst BenefitItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst BenefitLabel = styled.span`\r\n  color: #aaa;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst BenefitValue = styled.span`\r\n  color: #d4af37;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst MemberDetails = styled.div`\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  border: 1px solid rgba(212, 175, 55, 0.3);\r\n`;\r\n\r\nconst MemberDetailsHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst MemberDetailName = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst MemberDetailRole = styled.span`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst MemberProgress = styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst MemberProgressLabel = styled.div`\r\n  color: #f0f0f0;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  height: 8px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  \r\n  &:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: ${props => Math.min(100, (props.current / props.max) * 100)}%;\r\n    background: #d4af37;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nconst MemberTrainingInfo = styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst TrainingInfoText = styled.p`\r\n  color: #aaa;\r\n  font-size: 0.85rem;\r\n  line-height: 1.4;\r\n  margin: 0 0 10px;\r\n`;\r\n\r\nconst MemberLoyalty = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.75rem;\r\n  margin-top: 5px;\r\n`;\r\n\r\n// Модификация существующих стилей\r\nconst MemberItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background: ${props => props.selected ? 'rgba(212, 175, 55, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\r\n  border: 1px solid ${props => props.selected ? 'rgba(212, 175, 55, 0.5)' : 'transparent'};\r\n  border-radius: 4px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.1);\r\n  }\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport default SectTab;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\r\n * Сервис для работы с группами\r\n * Автоматически использует PostgreSQL, если доступен, или мок-базу данных, если нет\r\n */\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport unifiedDatabase, { getIsUsingMockDb } from './database-connection-manager';\r\n\r\nclass GroupService {\r\n  /**\r\n   * Получение списка групп пользователя\r\n   */\r\n  static async getUserGroups(userId) {\r\n    try {\r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const groupsQuery = groupsCollection.where('memberIds', 'array-contains', userId);\r\n      \r\n      const groupsSnapshot = await groupsQuery.get();\r\n      const groups = [];\r\n      \r\n      for (const groupDoc of groupsSnapshot.docs) {\r\n        const group = {\r\n          id: groupDoc.id,\r\n          ...groupDoc.data()\r\n        };\r\n        \r\n        group.members = await this.getGroupMembers(group.id);\r\n        groups.push(group);\r\n      }\r\n      \r\n      return groups;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении групп пользователя:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение данных группы по ID\r\n   */\r\n  static async getGroupById(groupId) {\r\n    try {\r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const groupDoc = await groupsCollection.doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = {\r\n        id: groupDoc.id,\r\n        ...groupDoc.data()\r\n      };\r\n      \r\n      group.members = await this.getGroupMembers(groupId);\r\n      \r\n      return group;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении данных группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение списка участников группы\r\n   */\r\n  static async getGroupMembers(groupId) {\r\n    try {\r\n      const membersCollection = await unifiedDatabase.getCollection('group_members');\r\n      const membersSnapshot = await membersCollection\r\n        .where('groupId', '==', groupId)\r\n        .get();\r\n      \r\n      const members = [];\r\n      \r\n      for (const memberDoc of membersSnapshot.docs) {\r\n        const member = {\r\n          id: memberDoc.id,\r\n          ...memberDoc.data()\r\n        };\r\n        \r\n        const usersCollection = await unifiedDatabase.getCollection('users');\r\n        const userDoc = await usersCollection.doc(member.userId).get();\r\n        \r\n        if (userDoc.exists) {\r\n          member.user = {\r\n            id: userDoc.id,\r\n            name: userDoc.data().name,\r\n            avatar: userDoc.data().avatar,\r\n            cultivationLevel: userDoc.data().cultivation?.level || 1,\r\n            cultivationStage: userDoc.data().cultivation?.stage || 'Начинающий'\r\n          };\r\n        }\r\n        \r\n        members.push(member);\r\n      }\r\n      \r\n      return members;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении участников группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Создание новой группы\r\n   */\r\n  static async createGroup(groupData, userId) {\r\n    try {\r\n      // Проверка на валидность userId\r\n      if (!userId) {\r\n        throw new Error('ID пользователя не указан');\r\n      }\r\n      \r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const userGroupsSnapshot = await groupsCollection\r\n        .where('leaderId', '==', userId)\r\n        .get();\r\n      \r\n      if (userGroupsSnapshot.size >= 3) {\r\n        throw new Error('Превышен лимит групп для пользователя (максимум 3)');\r\n      }\r\n      \r\n      const usersCollection = await unifiedDatabase.getCollection('users');\r\n      const userDoc = await usersCollection.doc(userId).get();\r\n      \r\n      if (!userDoc.exists) {\r\n        throw new Error('Пользователь не найден');\r\n      }\r\n      \r\n      // Безопасное получение данных пользователя\r\n      const userData = userDoc.data() || {};\r\n      const user = {\r\n        id: userDoc.id,\r\n        ...userData\r\n      };\r\n      \r\n      // Безопасное получение уровня культивации\r\n      const userLevel = user.cultivation?.level || 1;\r\n      \r\n      if (userLevel < (groupData.minCultivationLevel || 1)) {\r\n        throw new Error('Ваш уровень культивации не соответствует минимальному требованию');\r\n      }\r\n      \r\n      const now = new Date();\r\n      const groupId = uuidv4();\r\n      \r\n      const group = {\r\n        id: groupId,\r\n        name: groupData.name,\r\n        description: groupData.description || '',\r\n        leaderId: userId,\r\n        memberIds: [userId],\r\n        maxMembers: groupData.maxMembers || 10,\r\n        minCultivationLevel: groupData.minCultivationLevel || 1,\r\n        isPrivate: groupData.isPrivate || false,\r\n        requiresApproval: groupData.requiresApproval || false,\r\n        createdAt: now.toISOString(),\r\n        updatedAt: now.toISOString()\r\n      };\r\n      \r\n      await groupsCollection.doc(groupId).set(group);\r\n      \r\n      const memberId = uuidv4();\r\n      \r\n      const member = {\r\n        id: memberId,\r\n        groupId,\r\n        userId,\r\n        role: 'leader',\r\n        specialization: groupData.leaderSpecialization || groupData.specialization || null,\r\n        joinedAt: now.toISOString()\r\n      };\r\n      \r\n      const membersCollection = await unifiedDatabase.getCollection('group_members');\r\n      await membersCollection.doc(memberId).set(member);\r\n      \r\n      // Безопасное создание объекта пользователя\r\n      member.user = {\r\n        id: userId,\r\n        name: user.name || 'Неизвестный культиватор', // Добавляем значение по умолчанию\r\n        avatar: user.avatar || null,\r\n        cultivationLevel: userLevel,\r\n        cultivationStage: user.cultivation?.stage || 'Начинающий'\r\n      };\r\n      \r\n      group.members = [member];\r\n      \r\n      return group;\r\n    } catch (error) {\r\n      console.error('Ошибка при создании группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление данных группы\r\n   */\r\n  static async updateGroup(groupId, updateData, userId) {\r\n    try {\r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const groupDoc = await groupsCollection.doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = {\r\n        id: groupDoc.id,\r\n        ...groupDoc.data()\r\n      };\r\n      \r\n      if (group.leaderId !== userId) {\r\n        throw new Error('Только лидер группы может обновлять её данные');\r\n      }\r\n      \r\n      const now = new Date();\r\n      \r\n      const updatedGroup = {\r\n        ...group,\r\n        name: updateData.name || group.name,\r\n        description: updateData.description !== undefined ? updateData.description : group.description,\r\n        maxMembers: updateData.maxMembers || group.maxMembers,\r\n        minCultivationLevel: updateData.minCultivationLevel || group.minCultivationLevel,\r\n        isPrivate: updateData.isPrivate !== undefined ? updateData.isPrivate : group.isPrivate,\r\n        requiresApproval: updateData.requiresApproval !== undefined ? updateData.requiresApproval : group.requiresApproval,\r\n        updatedAt: now.toISOString()\r\n      };\r\n      \r\n      await groupsCollection.doc(groupId).update({\r\n        name: updatedGroup.name,\r\n        description: updatedGroup.description,\r\n        maxMembers: updatedGroup.maxMembers,\r\n        minCultivationLevel: updatedGroup.minCultivationLevel,\r\n        isPrivate: updatedGroup.isPrivate,\r\n        requiresApproval: updatedGroup.requiresApproval,\r\n        updatedAt: updatedGroup.updatedAt\r\n      });\r\n      \r\n      updatedGroup.members = await this.getGroupMembers(groupId);\r\n      \r\n      return updatedGroup;\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Удаление группы\r\n   */\r\n  static async deleteGroup(groupId, userId) {\r\n    try {\r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const groupDoc = await groupsCollection.doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = groupDoc.data();\r\n      \r\n      if (group.leaderId !== userId) {\r\n        throw new Error('Только лидер группы может удалить её');\r\n      }\r\n      \r\n      const membersCollection = await unifiedDatabase.getCollection('group_members');\r\n      const membersSnapshot = await membersCollection\r\n        .where('groupId', '==', groupId)\r\n        .get();\r\n      \r\n      // Используем транзакцию из унифицированного интерфейса\r\n      await unifiedDatabase.transaction(async (batch) => {\r\n        membersSnapshot.forEach(doc => {\r\n          batch.delete(doc.ref);\r\n        });\r\n        \r\n        batch.delete(groupsCollection.doc(groupId));\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Добавление участника в группу\r\n   */\r\n  static async addMember(groupId, userId, role = 'member', specialization = null) {\r\n    try {\r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const groupDoc = await groupsCollection.doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = {\r\n        id: groupDoc.id,\r\n        ...groupDoc.data()\r\n      };\r\n      \r\n      if (group.memberIds.length >= group.maxMembers) {\r\n        throw new Error('Достигнуто максимальное количество участников в группе');\r\n      }\r\n      \r\n      if (group.memberIds.includes(userId)) {\r\n        throw new Error('Пользователь уже является участником этой группы');\r\n      }\r\n      \r\n      const usersCollection = await unifiedDatabase.getCollection('users');\r\n      const userDoc = await usersCollection.doc(userId).get();\r\n      \r\n      if (!userDoc.exists) {\r\n        throw new Error('Пользователь не найден');\r\n      }\r\n      \r\n      const user = {\r\n        id: userDoc.id,\r\n        ...userDoc.data()\r\n      };\r\n      \r\n      const userLevel = user.cultivation?.level || 1;\r\n      \r\n      if (userLevel < group.minCultivationLevel) {\r\n        throw new Error('Уровень культивации пользователя не соответствует минимальному требованию');\r\n      }\r\n      \r\n      const now = new Date();\r\n      const memberId = uuidv4();\r\n      \r\n      const member = {\r\n        id: memberId,\r\n        groupId,\r\n        userId,\r\n        role,\r\n        specialization,\r\n        joinedAt: now.toISOString()\r\n      };\r\n      \r\n      await groupsCollection.doc(groupId).update({\r\n        memberIds: [...group.memberIds, userId],\r\n        updatedAt: now.toISOString()\r\n      });\r\n      \r\n      const membersCollection = await unifiedDatabase.getCollection('group_members');\r\n      await membersCollection.doc(memberId).set(member);\r\n      \r\n      member.user = {\r\n        id: userId,\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n        cultivationLevel: userLevel,\r\n        cultivationStage: user.cultivation?.stage || 'Начинающий'\r\n      };\r\n      \r\n      return member;\r\n    } catch (error) {\r\n      console.error('Ошибка при добавлении участника в группу:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Удаление участника из группы\r\n   */\r\n  static async removeMember(groupId, userId, removedById) {\r\n    try {\r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const groupDoc = await groupsCollection.doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = {\r\n        id: groupDoc.id,\r\n        ...groupDoc.data()\r\n      };\r\n      \r\n      const membersCollection = await unifiedDatabase.getCollection('group_members');\r\n      const membersSnapshot = await membersCollection\r\n        .where('groupId', '==', groupId)\r\n        .where('userId', '==', userId)\r\n        .get();\r\n      \r\n      if (membersSnapshot.empty) {\r\n        throw new Error('Пользователь не является участником этой группы');\r\n      }\r\n      \r\n      const memberDoc = membersSnapshot.docs[0];\r\n      const member = {\r\n        id: memberDoc.id,\r\n        ...memberDoc.data()\r\n      };\r\n      \r\n      const removerSnapshot = await membersCollection\r\n        .where('groupId', '==', groupId)\r\n        .where('userId', '==', removedById)\r\n        .get();\r\n      \r\n      let removerRole = null;\r\n      \r\n      if (!removerSnapshot.empty) {\r\n        const removerDoc = removerSnapshot.docs[0];\r\n        removerRole = removerDoc.data().role;\r\n      }\r\n      \r\n      if (\r\n        userId !== removedById && // Нельзя удалять других пользователей, если...\r\n        removerRole !== 'leader' && // ...не лидер\r\n        (removerRole !== 'officer' || member.role === 'leader' || member.role === 'officer') // ...и не офицер, удаляющий обычного участника\r\n      ) {\r\n        throw new Error('У вас нет прав для удаления этого пользователя из группы');\r\n      }\r\n      \r\n      if (member.role === 'leader' && group.memberIds.length > 1) {\r\n        const officersSnapshot = await membersCollection\r\n          .where('groupId', '==', groupId)\r\n          .where('role', '==', 'officer')\r\n          .get();\r\n        \r\n        let newLeaderId = null;\r\n        \r\n        if (!officersSnapshot.empty) {\r\n          newLeaderId = officersSnapshot.docs[0].data().userId;\r\n        } else {\r\n          const otherMembersSnapshot = await membersCollection\r\n            .where('groupId', '==', groupId)\r\n            .where('userId', '!=', userId)\r\n            .get();\r\n          \r\n          if (!otherMembersSnapshot.empty) {\r\n            newLeaderId = otherMembersSnapshot.docs[0].data().userId;\r\n          }\r\n        }\r\n        \r\n        if (newLeaderId) {\r\n          await membersCollection\r\n            .where('groupId', '==', groupId)\r\n            .where('userId', '==', newLeaderId)\r\n            .get()\r\n            .then(snapshot => {\r\n              if (!snapshot.empty) {\r\n                snapshot.docs[0].ref.update({ role: 'leader' });\r\n              }\r\n            });\r\n          \r\n          await groupsCollection.doc(groupId).update({\r\n            leaderId: newLeaderId\r\n          });\r\n        }\r\n      }\r\n      \r\n      await memberDoc.ref.delete();\r\n      \r\n      await groupsCollection.doc(groupId).update({\r\n        memberIds: group.memberIds.filter(id => id !== userId),\r\n        updatedAt: new Date().toISOString()\r\n      });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении участника из группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление роли участника группы\r\n   */\r\n  static async updateMemberRole(groupId, userId, newRole, updatedById) {\r\n    try {\r\n      const groupsCollection = await unifiedDatabase.getCollection('groups');\r\n      const groupDoc = await groupsCollection.doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = groupDoc.data();\r\n      \r\n      if (\r\n        group.leaderId !== updatedById && \r\n        newRole === 'leader'\r\n      ) {\r\n        throw new Error('Только лидер группы может назначать нового лидера');\r\n      }\r\n      \r\n      const membersCollection = await unifiedDatabase.getCollection('group_members');\r\n      const updaterSnapshot = await membersCollection\r\n        .where('groupId', '==', groupId)\r\n        .where('userId', '==', updatedById)\r\n        .get();\r\n      \r\n      if (updaterSnapshot.empty) {\r\n        throw new Error('Вы не являетесь участником этой группы');\r\n      }\r\n      \r\n      const updaterRole = updaterSnapshot.docs[0].data().role;\r\n      \r\n      if (updaterRole !== 'leader' && updaterRole !== 'officer') {\r\n        throw new Error('Только лидер или офицер группы может обновлять роли');\r\n      }\r\n      \r\n      const memberSnapshot = await membersCollection\r\n        .where('groupId', '==', groupId)\r\n        .where('userId', '==', userId)\r\n        .get();\r\n      \r\n      if (memberSnapshot.empty) {\r\n        throw new Error('Пользователь не является участником этой группы');\r\n      }\r\n      \r\n      const memberDoc = memberSnapshot.docs[0];\r\n      const member = {\r\n        id: memberDoc.id,\r\n        ...memberDoc.data()\r\n      };\r\n      \r\n      if (\r\n        updaterRole === 'officer' && \r\n        (member.role === 'leader' || member.role === 'officer')\r\n      ) {\r\n        throw new Error('Офицер не может обновлять роли лидера или других офицеров');\r\n      }\r\n      \r\n      if (newRole === 'leader') {\r\n        await membersCollection\r\n          .where('groupId', '==', groupId)\r\n          .where('role', '==', 'leader')\r\n          .get()\r\n          .then(snapshot => {\r\n            if (!snapshot.empty) {\r\n              snapshot.docs[0].ref.update({ role: 'officer' });\r\n            }\r\n          });\r\n        \r\n        await groupsCollection.doc(groupId).update({\r\n          leaderId: userId\r\n        });\r\n      }\r\n      \r\n      await memberDoc.ref.update({\r\n        role: newRole\r\n      });\r\n      \r\n      await groupsCollection.doc(groupId).update({\r\n        updatedAt: new Date().toISOString()\r\n      });\r\n      \r\n      const updatedMember = {\r\n        ...member,\r\n        role: newRole\r\n      };\r\n      \r\n      return updatedMember;\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении роли участника:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Отправка приглашения в группу\r\n   */\r\n  static async sendInvitation(groupId, inviteeId, inviterId, message = '') {\r\n    try {\r\n      const groupDoc = await database.collection('groups').doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = groupDoc.data();\r\n      \r\n      const inviterSnapshot = await database.collection('group_members')\r\n        .where('groupId', '==', groupId)\r\n        .where('userId', '==', inviterId)\r\n        .get();\r\n      \r\n      if (inviterSnapshot.empty) {\r\n        throw new Error('Вы не являетесь участником этой группы');\r\n      }\r\n      \r\n      const inviterRole = inviterSnapshot.docs[0].data().role;\r\n      \r\n      if (inviterRole !== 'leader' && inviterRole !== 'officer') {\r\n        throw new Error('Только лидер или офицер группы может отправлять приглашения');\r\n      }\r\n      \r\n      if (group.memberIds.includes(inviteeId)) {\r\n        throw new Error('Пользователь уже является участником этой группы');\r\n      }\r\n      \r\n      const existingInvitationSnapshot = await database.collection('group_invitations')\r\n        .where('groupId', '==', groupId)\r\n        .where('inviteeId', '==', inviteeId)\r\n        .where('status', '==', 'pending')\r\n        .get();\r\n      \r\n      if (!existingInvitationSnapshot.empty) {\r\n        throw new Error('Для этого пользователя уже существует ожидающее приглашение');\r\n      }\r\n      \r\n      const inviteeDoc = await database.collection('users').doc(inviteeId).get();\r\n      \r\n      if (!inviteeDoc.exists) {\r\n        throw new Error('Приглашаемый пользователь не найден');\r\n      }\r\n      \r\n      const invitee = inviteeDoc.data();\r\n      \r\n      const inviteeLevel = invitee.cultivation?.level || 1;\r\n      \r\n      if (inviteeLevel < group.minCultivationLevel) {\r\n        throw new Error(`Уровень культивации пользователя (${inviteeLevel}) не соответствует минимальному требованию группы (${group.minCultivationLevel})`);\r\n      }\r\n      \r\n      const now = new Date();\r\n      const expiresAt = new Date(now.getTime() + 72 * 60 * 60 * 1000);\r\n      \r\n      const invitationId = uuidv4();\r\n      \r\n      const invitation = {\r\n        id: invitationId,\r\n        groupId,\r\n        inviterId,\r\n        inviteeId,\r\n        status: 'pending',\r\n        message,\r\n        expiresAt: expiresAt.toISOString(),\r\n        createdAt: now.toISOString(),\r\n        updatedAt: now.toISOString()\r\n      };\r\n      \r\n      await database.collection('group_invitations').doc(invitationId).set(invitation);\r\n      \r\n      invitation.group = {\r\n        id: group.id,\r\n        name: group.name,\r\n        description: group.description\r\n      };\r\n      \r\n      const inviterDoc = await database.collection('users').doc(inviterId).get();\r\n      if (inviterDoc.exists) {\r\n        invitation.inviter = {\r\n          id: inviterId,\r\n          name: inviterDoc.data().name,\r\n          avatar: inviterDoc.data().avatar\r\n        };\r\n      }\r\n      \r\n      invitation.invitee = {\r\n        id: inviteeId,\r\n        name: invitee.name,\r\n        avatar: invitee.avatar\r\n      };\r\n      \r\n      return invitation;\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке приглашения в группу:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение списка приглашений пользователя\r\n   */\r\n  static async getUserInvitations(userId, status = 'pending') {\r\n    try {\r\n      let invitationsQuery = database.collection('group_invitations')\r\n        .where('inviteeId', '==', userId);\r\n      \r\n      if (status) {\r\n        if (Array.isArray(status)) {\r\n          invitationsQuery = invitationsQuery.where('status', 'in', status);\r\n        } else {\r\n          invitationsQuery = invitationsQuery.where('status', '==', status);\r\n        }\r\n      }\r\n      \r\n      invitationsQuery = invitationsQuery.orderBy('createdAt', 'desc');\r\n      \r\n      const invitationsSnapshot = await invitationsQuery.get();\r\n      const invitations = [];\r\n      \r\n      for (const invitationDoc of invitationsSnapshot.docs) {\r\n        const invitation = {\r\n          id: invitationDoc.id,\r\n          ...invitationDoc.data()\r\n        };\r\n        \r\n        const groupDoc = await database.collection('groups').doc(invitation.groupId).get();\r\n        if (groupDoc.exists) {\r\n          invitation.group = {\r\n            id: groupDoc.id,\r\n            name: groupDoc.data().name,\r\n            description: groupDoc.data().description,\r\n            memberCount: groupDoc.data().memberIds ? groupDoc.data().memberIds.length : 0,\r\n            maxMembers: groupDoc.data().maxMembers\r\n          };\r\n        }\r\n        \r\n        const inviterDoc = await database.collection('users').doc(invitation.inviterId).get();\r\n        if (inviterDoc.exists) {\r\n          invitation.inviter = {\r\n            id: inviterDoc.id,\r\n            name: inviterDoc.data().name,\r\n            avatar: inviterDoc.data().avatar\r\n          };\r\n        }\r\n        \r\n        invitations.push(invitation);\r\n      }\r\n      \r\n      return invitations;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении приглашений пользователя:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ответ на приглашение в группу\r\n   */\r\n  static async respondToInvitation(invitationId, response, userId) {\r\n    try {\r\n      const invitationDoc = await database.collection('group_invitations').doc(invitationId).get();\r\n      \r\n      if (!invitationDoc.exists) {\r\n        throw new Error('Приглашение не найдено');\r\n      }\r\n      \r\n      const invitation = invitationDoc.data();\r\n      \r\n      if (invitation.inviteeId !== userId) {\r\n        throw new Error('У вас нет прав для ответа на это приглашение');\r\n      }\r\n      \r\n      if (invitation.status !== 'pending') {\r\n        throw new Error('Нельзя ответить на приглашение, которое не находится в статусе ожидания');\r\n      }\r\n      \r\n      const now = new Date();\r\n      const expiresAt = new Date(invitation.expiresAt);\r\n      \r\n      if (expiresAt < now) {\r\n        throw new Error('Срок действия приглашения истек');\r\n      }\r\n      \r\n      const statusUpdate = {\r\n        status: response === 'accept' ? 'accepted' : 'declined',\r\n        updatedAt: now.toISOString()\r\n      };\r\n      \r\n      await database.collection('group_invitations').doc(invitationId).update(statusUpdate);\r\n      \r\n      if (response === 'accept') {\r\n        await this.addMember(invitation.groupId, userId);\r\n      }\r\n      \r\n      return { success: true, status: statusUpdate.status };\r\n    } catch (error) {\r\n      console.error('Ошибка при ответе на приглашение:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение активностей группы с возможностью фильтрации\r\n   */\r\n  static async getGroupActivities(groupId, options = {}) {\r\n    try {\r\n      let query = database.collection('group_activities')\r\n        .where('groupId', '==', groupId);\r\n\r\n      // Фильтрация по статусу\r\n      if (options.status) {\r\n        if (Array.isArray(options.status)) {\r\n          query = query.where('status', 'in', options.status);\r\n        } else {\r\n          query = query.where('status', '==', options.status);\r\n        }\r\n      }\r\n\r\n      // Сортировка\r\n      const sortField = options.sortField || 'createdAt';\r\n      const sortDirection = options.sortDirection || 'desc';\r\n      query = query.orderBy(sortField, sortDirection);\r\n\r\n      // Ограничение количества\r\n      if (options.limit) {\r\n        query = query.limit(options.limit);\r\n      }\r\n\r\n      const activitiesSnapshot = await query.get();\r\n      const activities = [];\r\n      \r\n      for (const activityDoc of activitiesSnapshot.docs) {\r\n        const activity = {\r\n          id: activityDoc.id,\r\n          ...activityDoc.data()\r\n        };\r\n        \r\n        // Загружаем участников если требуется\r\n        if (options.includeParticipants) {\r\n          const participants = await database.collection('group_activity_participants')\r\n            .where('activityId', '==', activity.id)\r\n            .get();\r\n          activity.participants = participants.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n          }));\r\n        }\r\n        \r\n        activities.push(activity);\r\n      }\r\n      \r\n      return activities;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении активностей группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Создание групповой активности\r\n   */\r\n  static async createGroupActivity(groupId, activityData, creatorId) {\r\n    try {\r\n      const groupDoc = await database.collection('groups').doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Группа не найдена');\r\n      }\r\n      \r\n      const group = groupDoc.data();\r\n      \r\n      const memberSnapshot = await database.collection('group_members')\r\n        .where('groupId', '==', groupId)\r\n        .where('userId', '==', creatorId)\r\n        .get();\r\n      \r\n      if (memberSnapshot.empty) {\r\n        throw new Error('Вы не являетесь участником этой группы');\r\n      }\r\n      \r\n      const memberRole = memberSnapshot.docs[0].data().role;\r\n      \r\n      if (memberRole !== 'leader' && memberRole !== 'officer') {\r\n        throw new Error('Только лидер или офицер группы может создавать активности');\r\n      }\r\n      \r\n      const now = new Date();\r\n      const activityId = uuidv4();\r\n      \r\n      const activity = {\r\n        id: activityId,\r\n        groupId,\r\n        creatorId,\r\n        name: activityData.name,\r\n        description: activityData.description || '',\r\n        type: activityData.type || 'exploration',\r\n        location: activityData.location || '',\r\n        minParticipants: activityData.minParticipants || 2,\r\n        maxParticipants: activityData.maxParticipants || group.maxMembers,\r\n        startTime: activityData.startTime || null,\r\n        endTime: activityData.endTime || null,\r\n        status: 'planned',\r\n        createdAt: now.toISOString(),\r\n        updatedAt: now.toISOString()\r\n      };\r\n      \r\n      await database.collection('group_activities').doc(activityId).set(activity);\r\n      \r\n      return activity;\r\n    } catch (error) {\r\n      console.error('Ошибка при создании групповой активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Присоединение к групповой активности\r\n   */\r\n  static async joinGroupActivity(activityId, userId) {\r\n    try {\r\n      const activityDoc = await database.collection('group_activities').doc(activityId).get();\r\n      \r\n      if (!activityDoc.exists) {\r\n        throw new Error('Активность не найдена');\r\n      }\r\n      \r\n      const activity = activityDoc.data();\r\n      \r\n      const memberSnapshot = await database.collection('group_members')\r\n        .where('groupId', '==', activity.groupId)\r\n        .where('userId', '==', userId)\r\n        .get();\r\n      \r\n      if (memberSnapshot.empty) {\r\n        throw new Error('Вы не являетесь участником этой группы');\r\n      }\r\n      \r\n      const participantsSnapshot = await database.collection('group_activity_participants')\r\n        .where('activityId', '==', activityId)\r\n        .get();\r\n      \r\n      const participantCount = participantsSnapshot.size;\r\n      \r\n      if (participantCount >= activity.maxParticipants) {\r\n        throw new Error('Достигнуто максимальное количество участников для этой активности');\r\n      }\r\n      \r\n      const existingParticipantSnapshot = await database.collection('group_activity_participants')\r\n        .where('activityId', '==', activityId)\r\n        .where('userId', '==', userId)\r\n        .get();\r\n      \r\n      if (!existingParticipantSnapshot.empty) {\r\n        throw new Error('Вы уже являетесь участником этой активности');\r\n      }\r\n      \r\n      const now = new Date();\r\n      const participantId = uuidv4();\r\n      \r\n      const participant = {\r\n        id: participantId,\r\n        activityId,\r\n        userId,\r\n        role: 'participant',\r\n        joinedAt: now.toISOString()\r\n      };\r\n      \r\n      await database.collection('group_activity_participants').doc(participantId).set(participant);\r\n      \r\n      return participant;\r\n    } catch (error) {\r\n      console.error('Ошибка при присоединении к групповой активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default GroupService;\r\n","/**\r\n * Сервис для работы с групповыми активностями\r\n */\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { unifiedDatabase as database } from './database-connection-manager';\r\n\r\nclass GroupActivityService {\r\n  /**\r\n   * Получение списка всех видов групповых активностей\r\n   */\r\n  static async getAllActivityTypes() {\r\n    try {\r\n      const typesSnapshot = await database.collection('group_activity_types').get();\r\n      return typesSnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n    } catch (error) {\r\n      console.error('Ошибка при получении видов групповых активностей:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение групповой активности по ID\r\n   */\r\n  static async getActivityById(activityId) {\r\n    try {\r\n      const activityDoc = await database.collection('group_activities').doc(activityId).get();\r\n      \r\n      if (!activityDoc.exists) {\r\n        throw new Error('Активность не найдена');\r\n      }\r\n      \r\n      const activity = {\r\n        id: activityDoc.id,\r\n        ...activityDoc.data()\r\n      };\r\n      \r\n      // Загружаем данные о типе активности\r\n      if (activity.typeId) {\r\n        const typeDoc = await database.collection('group_activity_types').doc(activity.typeId).get();\r\n        if (typeDoc.exists) {\r\n          activity.type = {\r\n            id: typeDoc.id,\r\n            ...typeDoc.data()\r\n          };\r\n        }\r\n      }\r\n      \r\n      // Загружаем участников активности\r\n      activity.participants = await this.getActivityParticipants(activityId);\r\n      \r\n      return activity;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении данных активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение списка активностей группы\r\n   */\r\n  static async getGroupActivities(groupId, options = {}) {\r\n    try {\r\n      let query = database.collection('group_activities')\r\n        .where('groupId', '==', groupId);\r\n      \r\n      // Фильтрация по статусу, если указан\r\n      if (options.status) {\r\n        if (Array.isArray(options.status)) {\r\n          query = query.where('status', 'in', options.status);\r\n        } else {\r\n          query = query.where('status', '==', options.status);\r\n        }\r\n      }\r\n      \r\n      // Сортировка (по умолчанию - от новых к старым)\r\n      const sortField = options.sortField || 'createdAt';\r\n      const sortDirection = options.sortDirection || 'desc';\r\n      query = query.orderBy(sortField, sortDirection);\r\n      \r\n      // Ограничение количества, если указано\r\n      if (options.limit) {\r\n        query = query.limit(options.limit);\r\n      }\r\n      \r\n      const activitiesSnapshot = await query.get();\r\n      const activities = [];\r\n      \r\n      for (const activityDoc of activitiesSnapshot.docs) {\r\n        const activity = {\r\n          id: activityDoc.id,\r\n          ...activityDoc.data()\r\n        };\r\n        \r\n        // Загружаем данные о типе активности, если требуется\r\n        if (options.includeType && activity.typeId) {\r\n          const typeDoc = await database.collection('group_activity_types').doc(activity.typeId).get();\r\n          if (typeDoc.exists) {\r\n            activity.type = {\r\n              id: typeDoc.id,\r\n              ...typeDoc.data()\r\n            };\r\n          }\r\n        }\r\n        \r\n        // Загружаем участников, если требуется\r\n        if (options.includeParticipants) {\r\n          activity.participants = await this.getActivityParticipants(activity.id);\r\n        } else {\r\n          // Считаем количество участников для краткой информации\r\n          const participantsSnapshot = await database.collection('group_activity_participants')\r\n            .where('activityId', '==', activity.id)\r\n            .get();\r\n          \r\n          activity.participantCount = participantsSnapshot.size;\r\n        }\r\n        \r\n        activities.push(activity);\r\n      }\r\n      \r\n      return activities;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении активностей группы:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Получение списка участников активности\r\n   */\r\n  static async getActivityParticipants(activityId) {\r\n    try {\r\n      const participantsSnapshot = await database.collection('group_activity_participants')\r\n        .where('activityId', '==', activityId)\r\n        .get();\r\n      \r\n      const participants = [];\r\n      \r\n      for (const participantDoc of participantsSnapshot.docs) {\r\n        const participant = {\r\n          id: participantDoc.id,\r\n          ...participantDoc.data()\r\n        };\r\n        \r\n        // Загружаем информацию о пользователе\r\n        const userDoc = await database.collection('users').doc(participant.userId).get();\r\n        \r\n        if (userDoc.exists) {\r\n          participant.user = {\r\n            id: userDoc.id,\r\n            name: userDoc.data().name,\r\n            avatar: userDoc.data().avatar,\r\n            cultivationLevel: userDoc.data().cultivation?.level || 1,\r\n            cultivationStage: userDoc.data().cultivation?.stage || 'Начинающий'\r\n          };\r\n        }\r\n        \r\n        participants.push(participant);\r\n      }\r\n      \r\n      return participants;\r\n    } catch (error) {\r\n      console.error('Ошибка при получении участников активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Создание новой групповой активности\r\n   */\r\n  static async createActivity(groupId, activityData, creatorId) {\r\n    try {\r\n      // Проверяем существование группы\r\n      const groupDoc = await database.collection('groups').doc(groupId).get();\r\n      \r\n      if (!groupDoc.exists) {\r\n        throw new Error('Групка не найдена');\r\n      }\r\n      \r\n      const group = groupDoc.data();\r\n      \r\n      // Проверяем права пользователя\r\n      const memberSnapshot = await database.collection('group_members')\r\n        .where('groupId', '==', groupId)\r\n        .where('userId', '==', creatorId)\r\n        .get();\r\n      \r\n      if (memberSnapshot.empty) {\r\n        throw new Error('Вы не являетесь участником этой группы');\r\n      }\r\n      \r\n      const memberRole = memberSnapshot.docs[0].data().role;\r\n      \r\n      // Проверяем, имеет ли пользователь права на создание активностей\r\n      if (memberRole !== 'leader' && memberRole !== 'officer') {\r\n        throw new Error('Только лидер или офицер группы может создавать активности');\r\n      }\r\n      \r\n      // Проверяем тип активности\r\n      let activityType = null;\r\n      \r\n      if (activityData.typeId) {\r\n        const typeDoc = await database.collection('group_activity_types').doc(activityData.typeId).get();\r\n        \r\n        if (!typeDoc.exists) {\r\n          throw new Error('Указанный тип активности не найден');\r\n        }\r\n        \r\n        activityType = typeDoc.data();\r\n      }\r\n      \r\n      // Создаем активность\r\n      const now = new Date();\r\n      const activityId = uuidv4();\r\n      \r\n      const activity = {\r\n        id: activityId,\r\n        groupId,\r\n        creatorId,\r\n        name: activityData.name,\r\n        description: activityData.description || '',\r\n        typeId: activityData.typeId || null,\r\n        location: activityData.location || '',\r\n        minParticipants: activityData.minParticipants || 2,\r\n        maxParticipants: activityData.maxParticipants || group.maxMembers,\r\n        difficulty: activityData.difficulty || 'normal',\r\n        requiredLevel: activityData.requiredLevel || 1,\r\n        startTime: activityData.startTime || null,\r\n        endTime: activityData.endTime || null,\r\n        duration: activityData.duration || 60,\r\n        rewards: activityData.rewards || {\r\n          experience: 0,\r\n          resources: [],\r\n          items: []\r\n        },\r\n        requirements: activityData.requirements || {\r\n          minCultivationLevel: 1,\r\n          items: []\r\n        },\r\n        status: 'planned',\r\n        createdAt: now.toISOString(),\r\n        updatedAt: now.toISOString()\r\n      };\r\n      \r\n      // Сохраняем активность в базу данных\r\n      await database.collection('group_activities').doc(activityId).set(activity);\r\n      \r\n      // Добавляем создателя как участника\r\n      const participantId = uuidv4();\r\n      \r\n      const participant = {\r\n        id: participantId,\r\n        activityId,\r\n        userId: creatorId,\r\n        role: 'organizer',\r\n        status: 'confirmed',\r\n        joinedAt: now.toISOString()\r\n      };\r\n      \r\n      await database.collection('group_activity_participants').doc(participantId).set(participant);\r\n      \r\n      return {\r\n        ...activity,\r\n        participants: [participant]\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при создании групповой активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Обновление данных активности\r\n   */\r\n  static async updateActivity(activityId, updateData, userId) {\r\n    try {\r\n      const activityDoc = await database.collection('group_activities').doc(activityId).get();\r\n      \r\n      if (!activityDoc.exists) {\r\n        throw new Error('Активность не найдена');\r\n      }\r\n      \r\n      const activity = activityDoc.data();\r\n      \r\n      // Проверяем права пользователя\r\n      if (activity.creatorId !== userId) {\r\n        // Проверяем, является ли пользователь лидером группы\r\n        const groupDoc = await database.collection('groups').doc(activity.groupId).get();\r\n        \r\n        if (!groupDoc.exists || groupDoc.data().leaderId !== userId) {\r\n          throw new Error('Только создатель активности или лидер группы может обновлять данные');\r\n        }\r\n      }\r\n      \r\n      // Обновляем файл\r\n      const now = new Date();\r\n      const updates = {\r\n        ...updateData,\r\n        updatedAt: now.toISOString()\r\n      };\r\n      \r\n      await database.collection('group_activities').doc(activityId).update(updates);\r\n      \r\n      return {\r\n        ...activity,\r\n        ...updates\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при обновлении активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Отмена активности\r\n   */\r\n  static async cancelActivity(activityId, userId, reason = '') {\r\n    try {\r\n      const activityDoc = await database.collection('group_activities').doc(activityId).get();\r\n      \r\n      if (!activityDoc.exists) {\r\n        throw new Error('Активность не найдена');\r\n      }\r\n      \r\n      const activity = activityDoc.data();\r\n      \r\n      // Проверяем права пользователя\r\n      if (activity.creatorId !== userId) {\r\n        throw new Error('Только создатель активности может ее отменить');\r\n      }\r\n      \r\n      // Обновляем статус\r\n      const now = new Date();\r\n      \r\n      await database.collection('group_activities').doc(activityId).update({\r\n        status: 'canceled',\r\n        cancelReason: reason,\r\n        updatedAt: now.toISOString()\r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        message: 'Активность успешно отменена'\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при отмене активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Присоединение к активности\r\n   */\r\n  static async joinActivity(activityId, userId) {\r\n    try {\r\n      const activityDoc = await database.collection('group_activities').doc(activityId).get();\r\n      \r\n      if (!activityDoc.exists) {\r\n        throw new Error('Активность не найдена');\r\n      }\r\n      \r\n      const activity = activityDoc.data();\r\n      \r\n      // Проверяем участника\r\n      const memberSnapshot = await database.collection('group_members')\r\n        .where('groupId', '==', activity.groupId)\r\n        .where('userId', '==', userId)\r\n        .get();\r\n      \r\n      if (memberSnapshot.empty) {\r\n        throw new Error('Вы не являетесь участником этой группы');\r\n      }\r\n      \r\n      // Добавляем участника\r\n      const now = new Date();\r\n      const participantId = uuidv4();\r\n      \r\n      const participant = {\r\n        id: participantId,\r\n        activityId,\r\n        userId,\r\n        status: 'confirmed',\r\n        joinedAt: now.toISOString()\r\n      };\r\n      \r\n      await database.collection('group_activity_participants').doc(participantId).set(participant);\r\n      \r\n      return {\r\n        success: true,\r\n        participant\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при присоединении к активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Покидание активности\r\n   */\r\n  static async leaveActivity(activityId, userId) {\r\n    try {\r\n      // Проверяем участника\r\n      const participantSnapshot = await database.collection('group_activity_participants')\r\n        .where('activityId', '==', activityId)\r\n        .where('userId', '==', userId)\r\n        .get();\r\n      \r\n      if (participantSnapshot.empty) {\r\n        throw new Error('Вы не являетесь участником этой активности');\r\n      }\r\n      \r\n      // Удаляем участника\r\n      await participantSnapshot.docs[0].ref.delete();\r\n      \r\n      return {\r\n        success: true,\r\n        message: 'Вы успешно покинули активность'\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при покидании активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Начало активности\r\n   */\r\n  static async startActivity(activityId, userId) {\r\n    try {\r\n      const activityDoc = await database.collection('group_activities').doc(activityId).get();\r\n      \r\n      if (!activityDoc.exists) {\r\n        throw new Error('Активность не найдена');\r\n      }\r\n      \r\n      const activity = activityDoc.data();\r\n      \r\n      // Проверяем создателя\r\n      if (activity.creatorId !== userId) {\r\n        throw new Error('Только создатель активности может начать ее');\r\n      }\r\n      \r\n      // Обновляем статус\r\n      const now = new Date();\r\n      \r\n      await database.collection('group_activities').doc(activityId).update({\r\n        status: 'active',\r\n        startedAt: now.toISOString(),\r\n        updatedAt: now.toISOString()\r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        message: 'Активность успешно начата'\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при начале активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Завершение активности\r\n   */\r\n  static async completeActivity(activityId, userId, success = true) {\r\n    try {\r\n      const activityDoc = await database.collection('group_activities').doc(activityId).get();\r\n      \r\n      if (!activityDoc.exists) {\r\n        throw new Error('Активность не найдена');\r\n      }\r\n      \r\n      const activity = activityDoc.data();\r\n      \r\n      // Проверяем создателя\r\n      if (activity.creatorId !== userId) {\r\n        throw new Error('Только создатель активности может завершить ее');\r\n      }\r\n      \r\n      // Обновляем статус\r\n      const now = new Date();\r\n      \r\n      await database.collection('group_activities').doc(activityId).update({\r\n        status: 'completed',\r\n        completedAt: now.toISOString(),\r\n        updatedAt: now.toISOString()\r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        message: `Активность успешно завершена (${success ? 'успех' : 'неудача'})`\r\n      };\r\n    } catch (error) {\r\n      console.error('Ошибка при завершении активности:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default GroupActivityService;\r\n","/**\r\n * Действия для работы с группами и групповыми активностями\r\n */\r\nimport ACTION_TYPES from './actionTypes';\r\nimport GroupService from '../../services/group-service';\r\nimport GroupActivityService from '../../services/group-activity-service';\r\n\r\n// Базовые действия для установки состояния\r\nexport const setGroups = (groups) => ({\r\n  type: ACTION_TYPES.SET_GROUPS,\r\n  payload: groups\r\n});\r\n\r\nexport const setCurrentGroup = (group) => ({\r\n  type: ACTION_TYPES.SET_CURRENT_GROUP,\r\n  payload: group\r\n});\r\n\r\nexport const setGroupActivities = (activities) => ({\r\n  type: ACTION_TYPES.SET_GROUP_ACTIVITIES,\r\n  payload: activities\r\n});\r\n\r\nexport const setCurrentActivity = (activity) => ({\r\n  type: ACTION_TYPES.SET_CURRENT_ACTIVITY,\r\n  payload: activity\r\n});\r\n\r\nexport const setGroupActivityInstances = (activityInstances) => ({\r\n  type: ACTION_TYPES.SET_GROUP_ACTIVITY_INSTANCES,\r\n  payload: activityInstances\r\n});\r\n\r\n// Асинхронные действия для взаимодействия с API\r\nexport const fetchUserGroups = (userId) => async (dispatch) => {\r\n  try {\r\n    const groups = await GroupService.getUserGroups(userId);\r\n    dispatch(setGroups(groups));\r\n    return groups;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении групп пользователя:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createGroup = (groupData, userId) => async (dispatch) => {\r\n  try {\r\n    const newGroup = await GroupService.createGroup(groupData, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.CREATE_GROUP,\r\n      payload: newGroup\r\n    });\r\n    return newGroup;\r\n  } catch (error) {\r\n    console.error('Ошибка при создании группы:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateGroup = (groupId, updateData, userId) => async (dispatch) => {\r\n  try {\r\n    const updatedGroup = await GroupService.updateGroup(groupId, updateData, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.UPDATE_GROUP,\r\n      payload: updatedGroup\r\n    });\r\n    return updatedGroup;\r\n  } catch (error) {\r\n    console.error('Ошибка при обновлении группы:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteGroup = (groupId, userId) => async (dispatch) => {\r\n  try {\r\n    await GroupService.deleteGroup(groupId, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.DELETE_GROUP,\r\n      payload: groupId\r\n    });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Ошибка при удалении группы:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const joinGroup = (groupId, userId, role = 'member', specialization = null) => async (dispatch) => {\r\n  try {\r\n    const member = await GroupService.addMember(groupId, userId, role, specialization);\r\n    dispatch({\r\n      type: ACTION_TYPES.JOIN_GROUP,\r\n      payload: { groupId, member }\r\n    });\r\n    \r\n    // Обновляем текущую группу, если пользователь присоединился к ней\r\n    const group = await GroupService.getGroupById(groupId);\r\n    dispatch(setCurrentGroup(group));\r\n    \r\n    return member;\r\n  } catch (error) {\r\n    console.error('Ошибка при присоединении к группе:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const leaveGroup = (groupId, userId) => async (dispatch) => {\r\n  try {\r\n    await GroupService.removeMember(groupId, userId, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.LEAVE_GROUP,\r\n      payload: { groupId, userId }\r\n    });\r\n    \r\n    // Если пользователь покинул текущую группу, сбрасываем её\r\n    dispatch(setCurrentGroup(null));\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Ошибка при выходе из группы:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Действия для получения групповых активностей\r\nexport const fetchGroupActivities = (filters) => async (dispatch) => {\r\n  try {\r\n    const activities = await GroupActivityService.getActivities(filters);\r\n    dispatch(setGroupActivities(activities));\r\n    return activities;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении групповых активностей:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createActivityInstance = (groupId, activityId, difficulty, options, initiatorId) => async (dispatch) => {\r\n  try {\r\n    const activityInstance = await GroupActivityService.createActivityInstance(\r\n      groupId, activityId, difficulty, options, initiatorId\r\n    );\r\n    dispatch({\r\n      type: ACTION_TYPES.CREATE_ACTIVITY_INSTANCE,\r\n      payload: activityInstance\r\n    });\r\n    \r\n    // Устанавливаем созданную активность как текущую\r\n    dispatch(setCurrentActivity(activityInstance));\r\n    \r\n    return activityInstance;\r\n  } catch (error) {\r\n    console.error('Ошибка при создании экземпляра активности:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const startActivity = (instanceId, userId) => async (dispatch) => {\r\n  try {\r\n    const activity = await GroupActivityService.startActivity(instanceId, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.UPDATE_ACTIVITY_INSTANCE,\r\n      payload: activity\r\n    });\r\n    return activity;\r\n  } catch (error) {\r\n    console.error('Ошибка при запуске активности:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateActivityProgress = (instanceId, newStage, additionalData, userId) => async (dispatch) => {\r\n  try {\r\n    const activity = await GroupActivityService.updateActivityProgress(\r\n      instanceId, newStage, additionalData, userId\r\n    );\r\n    dispatch({\r\n      type: ACTION_TYPES.UPDATE_ACTIVITY_INSTANCE,\r\n      payload: activity\r\n    });\r\n    return activity;\r\n  } catch (error) {\r\n    console.error('Ошибка при обновлении прогресса активности:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const completeActivity = (instanceId, additionalData, userId) => async (dispatch) => {\r\n  try {\r\n    const activity = await GroupActivityService.completeActivity(instanceId, additionalData, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.UPDATE_ACTIVITY_INSTANCE,\r\n      payload: activity\r\n    });\r\n    \r\n    // Также добавляем награды в инвентарь и опыт пользователю\r\n    if (activity.rewards && activity.rewards.length > 0) {\r\n      dispatch({\r\n        type: ACTION_TYPES.ADD_REWARDS,\r\n        payload: activity.rewards\r\n      });\r\n    }\r\n    \r\n    return activity;\r\n  } catch (error) {\r\n    console.error('Ошибка при завершении активности:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const failActivity = (instanceId, failureData, userId) => async (dispatch) => {\r\n  try {\r\n    const activity = await GroupActivityService.failActivity(instanceId, failureData, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.UPDATE_ACTIVITY_INSTANCE,\r\n      payload: activity\r\n    });\r\n    return activity;\r\n  } catch (error) {\r\n    console.error('Ошибка при отметке активности как проваленной:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const abandonActivity = (instanceId, reason, userId) => async (dispatch) => {\r\n  try {\r\n    const activity = await GroupActivityService.abandonActivity(instanceId, reason, userId);\r\n    dispatch({\r\n      type: ACTION_TYPES.UPDATE_ACTIVITY_INSTANCE,\r\n      payload: activity\r\n    });\r\n    return activity;\r\n  } catch (error) {\r\n    console.error('Ошибка при отмене активности:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Получение экземпляров активностей группы\r\n * @param {string} groupId - ID группы\r\n * @param {Object} filters - Дополнительные фильтры для поиска\r\n * @returns {Promise<Array>} - Массив экземпляров активностей\r\n */\r\nexport const fetchGroupActivityInstances = (groupId, filters = {}) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ACTION_TYPES.FETCH_GROUP_ACTIVITY_INSTANCES,\r\n      payload: { groupId, filters, loading: true }\r\n    });\r\n    \r\n    const instances = await GroupActivityService.getGroupActivityInstances(groupId, filters);\r\n    \r\n    dispatch(setGroupActivityInstances(instances));\r\n    \r\n    return instances;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении экземпляров активностей группы:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Добавление участника в экземпляр активности\r\n * @param {string} instanceId - ID экземпляра активности\r\n * @param {string} userId - ID пользователя\r\n * @param {string} role - Роль пользователя в активности\r\n * @returns {Promise<Object>} - Обновленный экземпляр активности\r\n */\r\nexport const addActivityParticipant = (instanceId, userId, role = 'participant') => async (dispatch) => {\r\n  try {\r\n    const instance = await GroupActivityService.addActivityParticipant(instanceId, userId, role);\r\n    \r\n    dispatch({\r\n      type: ACTION_TYPES.ADD_ACTIVITY_PARTICIPANT,\r\n      payload: { instanceId, participant: { userId, role } }\r\n    });\r\n    \r\n    return instance;\r\n  } catch (error) {\r\n    console.error('Ошибка при добавлении участника в активность:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Удаление участника из экземпляра активности\r\n * @param {string} instanceId - ID экземпляра активности\r\n * @param {string} userId - ID пользователя\r\n * @param {string} removedById - ID пользователя, который удаляет\r\n * @returns {Promise<Object>} - Обновленный экземпляр активности\r\n */\r\nexport const removeActivityParticipant = (instanceId, userId, removedById) => async (dispatch) => {\r\n  try {\r\n    const instance = await GroupActivityService.removeActivityParticipant(instanceId, userId, removedById);\r\n    \r\n    dispatch({\r\n      type: ACTION_TYPES.REMOVE_ACTIVITY_PARTICIPANT,\r\n      payload: { instanceId, userId }\r\n    });\r\n    \r\n    return instance;\r\n  } catch (error) {\r\n    console.error('Ошибка при удалении участника из активности:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const claimReward = (rewardId, userId) => async (dispatch) => {\r\n  try {\r\n    const reward = await GroupActivityService.claimReward(rewardId, userId);\r\n    \r\n    // В зависимости от типа награды, добавляем соответствующие ресурсы пользователю\r\n    // Реализация этой логики требует взаимодействия с другими редьюсерами\r\n    switch (reward.rewardType) {\r\n      case 'experience':\r\n        dispatch({\r\n          type: ACTION_TYPES.UPDATE_CULTIVATION,\r\n          payload: { \r\n            experience: reward.quantity,\r\n            incrementType: 'add'\r\n          }\r\n        });\r\n        break;\r\n      case 'resource':\r\n        dispatch({\r\n          type: ACTION_TYPES.ADD_ITEM,\r\n          payload: {\r\n            itemType: 'resource',\r\n            itemId: reward.rewardId,\r\n            quantity: reward.quantity,\r\n            quality: reward.quality\r\n          }\r\n        });\r\n        break;\r\n      case 'item':\r\n        dispatch({\r\n          type: ACTION_TYPES.ADD_ITEM,\r\n          payload: {\r\n            itemType: 'equipment',\r\n            itemId: reward.rewardId,\r\n            quantity: reward.quantity,\r\n            quality: reward.quality\r\n          }\r\n        });\r\n        break;\r\n      case 'reputation':\r\n        // Обработка наград репутации\r\n        const [faction, sphere] = reward.rewardId.split(':');\r\n        dispatch({\r\n          type: ACTION_TYPES.UPDATE_RELATIONSHIP,\r\n          payload: {\r\n            faction,\r\n            sphere: sphere || 'general',\r\n            value: reward.quantity,\r\n            incrementType: 'add'\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        console.warn(`Неизвестный тип награды: ${reward.rewardType}`);\r\n    }\r\n    \r\n    return reward;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении награды:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Получение приглашений пользователя в группы\r\n * @param {string} userId - ID пользователя\r\n * @param {string|Array<string>} status - Статус приглашений (pending, accepted, declined)\r\n * @returns {Promise<Array>} - Массив приглашений\r\n */\r\nexport const fetchUserInvitations = (userId, status = 'pending') => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ACTION_TYPES.FETCH_USER_INVITATIONS,\r\n      payload: { userId, status }\r\n    });\r\n    \r\n    const invitations = await GroupService.getUserInvitations(userId, status);\r\n    \r\n    dispatch({\r\n      type: ACTION_TYPES.SET_USER_INVITATIONS,\r\n      payload: invitations\r\n    });\r\n    \r\n    return invitations;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении приглашений пользователя:', error);\r\n    \r\n    dispatch({\r\n      type: ACTION_TYPES.SET_ERROR,\r\n      payload: `Не удалось загрузить приглашения: ${error.message}`\r\n    });\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Ответ на приглашение в группу\r\n * @param {string} invitationId - ID приглашения\r\n * @param {boolean} accept - true для принятия, false для отклонения\r\n * @param {string} userId - ID пользователя\r\n * @returns {Promise<Object>} - Результат ответа на приглашение\r\n */\r\nexport const respondToInvitation = (invitationId, accept, userId) => async (dispatch) => {\r\n  try {\r\n    const response = await GroupService.respondToInvitation(\r\n      invitationId,\r\n      accept ? 'accept' : 'decline',\r\n      userId\r\n    );\r\n    \r\n    dispatch({\r\n      type: ACTION_TYPES.RESPOND_TO_INVITATION,\r\n      payload: { invitationId, userId, accepted: accept }\r\n    });\r\n    \r\n    // Если приглашение принято, обновляем список групп пользователя\r\n    if (accept) {\r\n      await dispatch(fetchUserGroups(userId));\r\n    }\r\n    \r\n    return response;\r\n  } catch (error) {\r\n    console.error('Ошибка при ответе на приглашение:', error);\r\n    \r\n    dispatch({\r\n      type: ACTION_TYPES.SET_ERROR,\r\n      payload: `Не удалось обработать приглашение: ${error.message}`\r\n    });\r\n    \r\n    throw error;\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"groupItem\":\"GroupListItem_groupItem__bdugp\",\"selected\":\"GroupListItem_selected__FS0Nt\",\"header\":\"GroupListItem_header__7ZhIa\",\"groupName\":\"GroupListItem_groupName__-48Y0\",\"activityBadge\":\"GroupListItem_activityBadge__BuNO5\",\"infoRow\":\"GroupListItem_infoRow__F9Zj8\",\"label\":\"GroupListItem_label__ES2At\",\"value\":\"GroupListItem_value__vw-mv\",\"activityInfo\":\"GroupListItem_activityInfo__udEff\",\"activityName\":\"GroupListItem_activityName__LrtVw\",\"activityStatus\":\"GroupListItem_activityStatus__5t4pe\"};","import React from 'react';\r\nimport styles from './GroupListItem.module.css';\r\n\r\n/**\r\n * Компонент для отображения элемента списка групп\r\n * @param {Object} group - Данные группы\r\n * @param {boolean} isSelected - Выбрана ли группа\r\n * @param {Function} onClick - Обработчик клика\r\n */\r\nconst GroupListItem = ({ group, isSelected, onClick }) => {\r\n  // Определяем роль пользователя в группе\r\n  const getUserRole = (memberId) => {\r\n    const member = group.members.find(m => m.userId === memberId);\r\n    return member ? member.role : null;\r\n  };\r\n  \r\n  // Получаем иконку в зависимости от роли пользователя\r\n  const getRoleIcon = (role) => {\r\n    switch (role) {\r\n      case 'leader':\r\n        return '👑'; // Лидер\r\n      case 'officer':\r\n        return '⚔️'; // Офицер\r\n      default:\r\n        return '👤'; // Обычный участник\r\n    }\r\n  };\r\n  \r\n  // Определяем количество участников в группе\r\n  const memberCount = group.members ? group.members.length : 0;\r\n  \r\n  // Проверяем, есть ли у группы текущая активность\r\n  const hasActiveActivity = group.activityInstances && \r\n    group.activityInstances.some(instance => \r\n      instance.status === 'preparing' || instance.status === 'in_progress');\r\n  \r\n  return (\r\n    <li \r\n      className={`${styles.groupItem} ${isSelected ? styles.selected : ''}`}\r\n      onClick={onClick}\r\n    >\r\n      <div className={styles.header}>\r\n        <h4 className={styles.groupName}>{group.name}</h4>\r\n        {hasActiveActivity && (\r\n          <div className={styles.activityBadge}>\r\n            Активность\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className={styles.infoRow}>\r\n        <span className={styles.label}>Участники:</span>\r\n        <span className={styles.value}>{memberCount}/{group.maxMembers}</span>\r\n      </div>\r\n      \r\n      <div className={styles.infoRow}>\r\n        <span className={styles.label}>Тип:</span>\r\n        <span className={styles.value}>\r\n          {group.isPrivate ? 'Закрытая' : 'Открытая'}\r\n        </span>\r\n      </div>\r\n      \r\n      <div className={styles.infoRow}>\r\n        <span className={styles.label}>Лидер:</span>\r\n        <span className={styles.value}>\r\n          {group.leader ? group.leader.username : 'Не указан'}\r\n        </span>\r\n      </div>\r\n      \r\n      {/* Отображаем информацию о последней активности, если она есть */}\r\n      {group.activityInstances && group.activityInstances.length > 0 && (\r\n        <div className={styles.activityInfo}>\r\n          <div className={styles.activityName}>\r\n            {group.activityInstances[0].activityType?.name || 'Активность'}\r\n          </div>\r\n          <div className={styles.activityStatus}>\r\n            {group.activityInstances[0].status === 'in_progress' ? 'В процессе' : \r\n             group.activityInstances[0].status === 'preparing' ? 'Подготовка' :\r\n             group.activityInstances[0].status === 'completed' ? 'Завершена' :\r\n             group.activityInstances[0].status === 'failed' ? 'Провалена' : 'Отменена'}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default GroupListItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"groupList\":\"GroupList_groupList__1vwlr\",\"title\":\"GroupList_title__4NbdF\",\"list\":\"GroupList_list__fakHA\",\"emptyMessage\":\"GroupList_emptyMessage__KifK3\",\"footer\":\"GroupList_footer__tvHlG\",\"helpText\":\"GroupList_helpText__k-DS0\"};","import React from 'react';\r\nimport GroupListItem from './GroupListItem';\r\nimport styles from './GroupList.module.css';\r\n\r\n/**\r\n * Компонент для отображения списка групп пользователя\r\n * @param {Object[]} groups - Массив групп\r\n * @param {Object} selectedGroup - Выбранная группа\r\n * @param {Function} onSelectGroup - Обработчик выбора группы\r\n */\r\nconst GroupList = ({ groups = [], selectedGroup, onSelectGroup }) => {\r\n  // Убедимся, что groups всегда массив\r\n  const safeGroups = Array.isArray(groups) ? groups : [];\r\n  \r\n  return (\r\n    <div className={styles.groupList}>\r\n      <h3 className={styles.title}>Мои группы</h3>\r\n      \r\n      {safeGroups.length === 0 ? (\r\n        <div className={styles.emptyMessage}>\r\n          У вас пока нет групп. Создайте новую группу или присоединитесь к существующей.\r\n        </div>\r\n      ) : (\r\n        <ul className={styles.list}>\r\n          {safeGroups.map(group => (\r\n            <GroupListItem \r\n              key={group.id}\r\n              group={group}\r\n              isSelected={selectedGroup && selectedGroup.id === group.id}\r\n              onClick={() => onSelectGroup(group)}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n      \r\n      <div className={styles.footer}>\r\n        <div className={styles.helpText}>\r\n          Группы позволяют объединяться с другими культиваторами для выполнения особых задач и получения ценных наград.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  padding: ${props => props.size === 'small' ? '6px 12px' : props.size === 'large' ? '12px 20px' : '8px 16px'};\r\n  background-color: ${props => \r\n    props.variant === 'primary' ? '#d4af37' : \r\n    props.variant === 'secondary' ? '#4a4a4a' : \r\n    props.variant === 'danger' ? '#c43b3b' : \r\n    props.variant === 'success' ? '#4a8f52' : \r\n    props.variant === 'warning' ? '#c49b3b' : \r\n    props.variant === 'info' ? '#3b7ac4' : \r\n    '#7e6839'\r\n  };\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: ${props => props.size === 'small' ? '14px' : props.size === 'large' ? '18px' : '16px'};\r\n  font-weight: 500;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  opacity: ${props => props.disabled ? 0.6 : 1};\r\n  transition: background-color 0.2s, transform 0.1s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n\r\n  &:hover {\r\n    background-color: ${props => \r\n      props.variant === 'primary' ? '#e8c347' : \r\n      props.variant === 'secondary' ? '#5a5a5a' : \r\n      props.variant === 'danger' ? '#d44c4c' : \r\n      props.variant === 'success' ? '#5aa062' : \r\n      props.variant === 'warning' ? '#d5ac4c' : \r\n      props.variant === 'info' ? '#4c8bd5' : \r\n      '#9a844f'\r\n    };\r\n    ${props => !props.disabled && 'transform: translateY(-1px);'}\r\n  }\r\n\r\n  &:active {\r\n    ${props => !props.disabled && 'transform: translateY(1px);'}\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  ${props => props.fullWidth && 'width: 100%;'}\r\n  ${props => props.className && props.className}\r\n`;\r\n\r\nconst IconWrapper = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n/**\r\n * Универсальный компонент кнопки\r\n */\r\nconst Button = ({ \r\n  children, \r\n  variant = 'default', \r\n  size = 'medium', \r\n  disabled = false, \r\n  fullWidth = false,\r\n  icon,\r\n  iconPosition = 'start',\r\n  onClick,\r\n  className,\r\n  ...props \r\n}) => {\r\n  return (\r\n    <StyledButton\r\n      variant={variant}\r\n      size={size}\r\n      disabled={disabled}\r\n      fullWidth={fullWidth}\r\n      onClick={disabled ? undefined : onClick}\r\n      className={className}\r\n      {...props}\r\n    >\r\n      {icon && iconPosition === 'start' && <IconWrapper>{icon}</IconWrapper>}\r\n      {children}\r\n      {icon && iconPosition === 'end' && <IconWrapper>{icon}</IconWrapper>}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  variant: PropTypes.oneOf(['default', 'primary', 'secondary', 'danger', 'success', 'warning', 'info']),\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n  disabled: PropTypes.bool,\r\n  fullWidth: PropTypes.bool,\r\n  icon: PropTypes.node,\r\n  iconPosition: PropTypes.oneOf(['start', 'end']),\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"memberList\":\"MemberList_memberList__XFhoP\",\"memberItem\":\"MemberList_memberItem__MkksJ\",\"selected\":\"MemberList_selected__LjpF1\",\"memberInfo\":\"MemberList_memberInfo__iMPkB\",\"nameWrapper\":\"MemberList_nameWrapper__PtfFW\",\"role\":\"MemberList_role__CCGch\",\"username\":\"MemberList_username__7eEwp\",\"currentUser\":\"MemberList_currentUser__+pJ4s\",\"stats\":\"MemberList_stats__Bp02n\",\"level\":\"MemberList_level__IgcUw\",\"specialization\":\"MemberList_specialization__KZpTf\",\"memberActions\":\"MemberList_memberActions__n7d6Z\",\"leaderNote\":\"MemberList_leaderNote__fcE7T\",\"promoteButton\":\"MemberList_promoteButton__pHTSX\",\"demoteButton\":\"MemberList_demoteButton__djUt3\",\"transferButton\":\"MemberList_transferButton__ce1SG\",\"kickButton\":\"MemberList_kickButton__ikXWX\"};","import React, { useState } from 'react';\r\nimport { useGameContext } from '../../context/GameContext';\r\nimport Button from '../ui/Button';\r\nimport styles from './MemberList.module.css';\r\n\r\n/**\r\n * Компонент для отображения списка участников группы\r\n * @param {Object[]} members - Список участников\r\n * @param {string} leaderId - ID лидера группы\r\n * @param {string} currentUserId - ID текущего пользователя\r\n * @param {string} currentUserRole - Роль текущего пользователя в группе\r\n */\r\nconst MemberList = ({ members, leaderId, currentUserId, currentUserRole }) => {\r\n  const { actions } = useGameContext();\r\n  const [selectedMember, setSelectedMember] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // Получаем иконку и название для роли\r\n  const getRoleInfo = (role) => {\r\n    switch (role) {\r\n      case 'leader':\r\n        return { icon: '👑', name: 'Лидер' };\r\n      case 'officer':\r\n        return { icon: '⚔️', name: 'Офицер' };\r\n      default:\r\n        return { icon: '👤', name: 'Участник' };\r\n    }\r\n  };\r\n  \r\n  // Получаем иконку для специализации\r\n  const getSpecIcon = (specialization) => {\r\n    switch (specialization) {\r\n      case 'damage':\r\n        return '🔥'; // Урон\r\n      case 'tank':\r\n        return '🛡️'; // Защита\r\n      case 'support':\r\n        return '✨'; // Поддержка\r\n      case 'control':\r\n        return '🌀'; // Контроль\r\n      case 'healer':\r\n        return '💚'; // Лечение\r\n      default:\r\n        return '📊'; // По умолчанию\r\n    }\r\n  };\r\n  \r\n  // Получаем название для специализации\r\n  const getSpecName = (specialization) => {\r\n    switch (specialization) {\r\n      case 'damage':\r\n        return 'Урон';\r\n      case 'tank':\r\n        return 'Защита';\r\n      case 'support':\r\n        return 'Поддержка';\r\n      case 'control':\r\n        return 'Контроль';\r\n      case 'healer':\r\n        return 'Лечение';\r\n      default:\r\n        return 'Универсал';\r\n    }\r\n  };\r\n  \r\n  // Проверяем, может ли пользователь управлять участником\r\n  const canManageMember = (member) => {\r\n    // Лидер может управлять всеми\r\n    if (currentUserRole === 'leader') {\r\n      return true;\r\n    }\r\n    \r\n    // Офицер может управлять обычными участниками\r\n    if (currentUserRole === 'officer' && member.role === 'member') {\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  };\r\n  \r\n  // Обработчик для повышения участника до офицера\r\n  const handlePromote = async (member) => {\r\n    if (currentUserRole !== 'leader') {\r\n      actions.addNotification({\r\n        message: 'Только лидер группы может повышать участников',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (member.role !== 'member') {\r\n      actions.addNotification({\r\n        message: 'Этот участник уже имеет повышенную роль',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      // В реальном приложении здесь был бы вызов API для изменения роли\r\n      /*\r\n      await actions.dispatch({\r\n        type: 'UPDATE_MEMBER_ROLE',\r\n        payload: {\r\n          groupId: member.groupId,\r\n          userId: member.userId,\r\n          newRole: 'officer'\r\n        }\r\n      });\r\n      */\r\n      \r\n      // Добавляем уведомление\r\n      actions.addNotification({\r\n        message: `${member.user.username} повышен до Офицера`,\r\n        type: 'success'\r\n      });\r\n      \r\n      // Сбрасываем выбранного участника\r\n      setSelectedMember(null);\r\n    } catch (error) {\r\n      console.error('Ошибка при повышении участника:', error);\r\n      actions.addNotification({\r\n        message: `Не удалось повысить участника: ${error.message}`,\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик для понижения офицера до обычного участника\r\n  const handleDemote = async (member) => {\r\n    if (currentUserRole !== 'leader') {\r\n      actions.addNotification({\r\n        message: 'Только лидер группы может понижать участников',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (member.role !== 'officer') {\r\n      actions.addNotification({\r\n        message: 'Этот участник не имеет повышенной роли',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      // В реальном приложении здесь был бы вызов API для изменения роли\r\n      /*\r\n      await actions.dispatch({\r\n        type: 'UPDATE_MEMBER_ROLE',\r\n        payload: {\r\n          groupId: member.groupId,\r\n          userId: member.userId,\r\n          newRole: 'member'\r\n        }\r\n      });\r\n      */\r\n      \r\n      // Добавляем уведомление\r\n      actions.addNotification({\r\n        message: `${member.user.username} понижен до обычного участника`,\r\n        type: 'success'\r\n      });\r\n      \r\n      // Сбрасываем выбранного участника\r\n      setSelectedMember(null);\r\n    } catch (error) {\r\n      console.error('Ошибка при понижении участника:', error);\r\n      actions.addNotification({\r\n        message: `Не удалось понизить участника: ${error.message}`,\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик для исключения участника из группы\r\n  const handleKick = async (member) => {\r\n    if (!canManageMember(member)) {\r\n      actions.addNotification({\r\n        message: 'У вас нет прав для исключения этого участника',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (member.userId === leaderId) {\r\n      actions.addNotification({\r\n        message: 'Нельзя исключить лидера группы',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (!window.confirm(`Вы уверены, что хотите исключить ${member.user.username} из группы?`)) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      // В реальном приложении здесь был бы вызов API для исключения участника\r\n      /*\r\n      await actions.dispatch({\r\n        type: 'REMOVE_MEMBER',\r\n        payload: {\r\n          groupId: member.groupId,\r\n          userId: member.userId\r\n        }\r\n      });\r\n      */\r\n      \r\n      // Добавляем уведомление\r\n      actions.addNotification({\r\n        message: `${member.user.username} исключен из группы`,\r\n        type: 'success'\r\n      });\r\n      \r\n      // Сбрасываем выбранного участника\r\n      setSelectedMember(null);\r\n    } catch (error) {\r\n      console.error('Ошибка при исключении участника:', error);\r\n      actions.addNotification({\r\n        message: `Не удалось исключить участника: ${error.message}`,\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик для передачи лидерства\r\n  const handleTransferLeadership = async (member) => {\r\n    if (currentUserRole !== 'leader') {\r\n      actions.addNotification({\r\n        message: 'Только лидер группы может передать лидерство',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (member.userId === leaderId) {\r\n      actions.addNotification({\r\n        message: 'Вы уже являетесь лидером группы',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (!window.confirm(`Вы уверены, что хотите передать лидерство ${member.user.username}?`)) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      // В реальном приложении здесь был бы вызов API для передачи лидерства\r\n      /*\r\n      await actions.dispatch({\r\n        type: 'TRANSFER_LEADERSHIP',\r\n        payload: {\r\n          groupId: member.groupId,\r\n          newLeaderId: member.userId\r\n        }\r\n      });\r\n      */\r\n      \r\n      // Добавляем уведомление\r\n      actions.addNotification({\r\n        message: `Лидерство передано ${member.user.username}`,\r\n        type: 'success'\r\n      });\r\n      \r\n      // Сбрасываем выбранного участника\r\n      setSelectedMember(null);\r\n    } catch (error) {\r\n      console.error('Ошибка при передаче лидерства:', error);\r\n      actions.addNotification({\r\n        message: `Не удалось передать лидерство: ${error.message}`,\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.memberList}>\r\n      {members.map(member => {\r\n        const roleInfo = getRoleInfo(member.role);\r\n        const isLeader = member.userId === leaderId;\r\n        const isCurrentUser = member.userId === currentUserId;\r\n        const canManage = canManageMember(member) && !isCurrentUser;\r\n        \r\n        return (\r\n          <div \r\n            key={member.userId} \r\n            className={`${styles.memberItem} ${selectedMember?.userId === member.userId ? styles.selected : ''}`}\r\n            onClick={() => setSelectedMember(selectedMember?.userId === member.userId ? null : member)}\r\n          >\r\n            <div className={styles.memberInfo}>\r\n              <div className={styles.nameWrapper}>\r\n                <span className={styles.role}>{roleInfo.icon}</span>\r\n                <span className={styles.username}>\r\n                  {member.user.username}\r\n                  {isCurrentUser && <span className={styles.currentUser}> (Вы)</span>}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className={styles.stats}>\r\n                <span className={styles.level}>\r\n                  Уровень {member.user.cultivationLevel}\r\n                </span>\r\n                <span className={styles.specialization}>\r\n                  {getSpecIcon(member.specialization)} {getSpecName(member.specialization)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Действия с участником */}\r\n            {selectedMember?.userId === member.userId && (\r\n              <div className={styles.memberActions}>\r\n                {isLeader && currentUserRole === 'leader' && (\r\n                  <span className={styles.leaderNote}>Лидер группы</span>\r\n                )}\r\n                \r\n                {currentUserRole === 'leader' && !isLeader && member.role === 'member' && (\r\n                  <Button \r\n                    className={styles.promoteButton}\r\n                    onClick={() => handlePromote(member)}\r\n                    disabled={loading}\r\n                  >\r\n                    Повысить до офицера\r\n                  </Button>\r\n                )}\r\n                \r\n                {currentUserRole === 'leader' && member.role === 'officer' && (\r\n                  <Button \r\n                    className={styles.demoteButton}\r\n                    onClick={() => handleDemote(member)}\r\n                    disabled={loading}\r\n                  >\r\n                    Понизить до участника\r\n                  </Button>\r\n                )}\r\n                \r\n                {currentUserRole === 'leader' && !isLeader && (\r\n                  <Button \r\n                    className={styles.transferButton}\r\n                    onClick={() => handleTransferLeadership(member)}\r\n                    disabled={loading}\r\n                  >\r\n                    Передать лидерство\r\n                  </Button>\r\n                )}\r\n                \r\n                {canManage && (\r\n                  <Button \r\n                    className={styles.kickButton}\r\n                    onClick={() => handleKick(member)}\r\n                    disabled={loading}\r\n                  >\r\n                    Исключить из группы\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemberList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"activityList\":\"ActivityList_activityList__g-7yG\",\"title\":\"ActivityList_title__tNBfN\",\"emptyMessage\":\"ActivityList_emptyMessage__iDzea\",\"list\":\"ActivityList_list__UCNEd\",\"activityItem\":\"ActivityList_activityItem__Rmjuh\",\"selected\":\"ActivityList_selected__p0BPZ\",\"header\":\"ActivityList_header__CGfRY\",\"nameContainer\":\"ActivityList_nameContainer__1etHj\",\"typeIcon\":\"ActivityList_typeIcon__2Ijha\",\"name\":\"ActivityList_name__qt419\",\"difficulty\":\"ActivityList_difficulty__F96xX\",\"difficultyEasy\":\"ActivityList_difficultyEasy__hG+1I\",\"difficultyMedium\":\"ActivityList_difficultyMedium__eKpOe\",\"difficultyHard\":\"ActivityList_difficultyHard__9JAV9\",\"difficultyExtreme\":\"ActivityList_difficultyExtreme__QTz6A\",\"difficultyLegendary\":\"ActivityList_difficultyLegendary__GG5Jp\",\"typeName\":\"ActivityList_typeName__t-kFo\",\"infoRow\":\"ActivityList_infoRow__eAhax\",\"label\":\"ActivityList_label__DN5OZ\",\"value\":\"ActivityList_value__6QugU\",\"location\":\"ActivityList_location__PCdvB\",\"locationIcon\":\"ActivityList_locationIcon__EOQkA\",\"locationName\":\"ActivityList_locationName__-AUcJ\"};","import React from 'react';\r\nimport styles from './ActivityList.module.css';\r\n\r\n/**\r\n * Компонент для отображения списка доступных групповых активностей\r\n * @param {Object[]} activities - Список активностей\r\n * @param {Object} selectedActivity - Выбранная активность\r\n * @param {Function} onSelectActivity - Обработчик выбора активности\r\n */\r\nconst ActivityList = ({ activities = [], selectedActivity, onSelectActivity }) => {\r\n  // Ensure activities is always an array\r\n  const safeActivities = Array.isArray(activities) ? activities : [];\r\n  // Получить иконку для типа активности\r\n  const getActivityTypeIcon = (type) => {\r\n    switch (type) {\r\n      case 'raid':\r\n        return '🏰'; // Рейд\r\n      case 'hunt':\r\n        return '🏹'; // Охота\r\n      case 'expedition':\r\n        return '🧭'; // Экспедиция\r\n      case 'tournament':\r\n        return '🏆'; // Турнир\r\n      case 'caravan':\r\n        return '🐪'; // Караван\r\n      case 'tribulation':\r\n        return '⚡'; // Испытание стихии\r\n      case 'craft':\r\n        return '⚒️'; // Создание артефакта\r\n      default:\r\n        return '📜'; // По умолчанию\r\n    }\r\n  };\r\n  \r\n  // Получить название для типа активности\r\n  const getActivityTypeName = (type) => {\r\n    switch (type) {\r\n      case 'raid':\r\n        return 'Рейд';\r\n      case 'hunt':\r\n        return 'Охота';\r\n      case 'expedition':\r\n        return 'Экспедиция';\r\n      case 'tournament':\r\n        return 'Турнир';\r\n      case 'caravan':\r\n        return 'Караван';\r\n      case 'tribulation':\r\n        return 'Испытание стихии';\r\n      case 'craft':\r\n        return 'Создание артефакта';\r\n      default:\r\n        return 'Активность';\r\n    }\r\n  };\r\n  \r\n  // Получить строку с описанием сложности\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return 'Легкая';\r\n      case 'medium':\r\n        return 'Средняя';\r\n      case 'hard':\r\n        return 'Тяжелая';\r\n      case 'extreme':\r\n        return 'Экстремальная';\r\n      case 'legendary':\r\n        return 'Легендарная';\r\n      default:\r\n        return 'Неизвестная сложность';\r\n    }\r\n  };\r\n  \r\n  // Получить класс для элемента сложности\r\n  const getDifficultyClass = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return styles.difficultyEasy;\r\n      case 'medium':\r\n        return styles.difficultyMedium;\r\n      case 'hard':\r\n        return styles.difficultyHard;\r\n      case 'extreme':\r\n        return styles.difficultyExtreme;\r\n      case 'legendary':\r\n        return styles.difficultyLegendary;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.activityList}>\r\n      <h3 className={styles.title}>Доступные активности</h3>\r\n      \r\n      {safeActivities.length === 0 ? (\r\n        <div className={styles.emptyMessage}>\r\n          Нет доступных активностей для вашей группы.\r\n        </div>\r\n      ) : (\r\n        <ul className={styles.list}>\r\n          {safeActivities.map(activity => (\r\n            <li \r\n              key={activity.id} \r\n              className={`${styles.activityItem} ${selectedActivity?.id === activity.id ? styles.selected : ''}`}\r\n              onClick={() => onSelectActivity(activity)}\r\n            >\r\n              <div className={styles.header}>\r\n                <div className={styles.nameContainer}>\r\n                  <span className={styles.typeIcon}>\r\n                    {getActivityTypeIcon(activity.type)}\r\n                  </span>\r\n                  <h4 className={styles.name}>{activity.name}</h4>\r\n                </div>\r\n                <span className={`${styles.difficulty} ${getDifficultyClass(activity.difficulty)}`}>\r\n                  {getDifficultyText(activity.difficulty)}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className={styles.typeName}>\r\n                {getActivityTypeName(activity.type)}\r\n              </div>\r\n              \r\n              <div className={styles.infoRow}>\r\n                <span className={styles.label}>Участники:</span>\r\n                <span className={styles.value}>\r\n                  {activity.minParticipants || 1}-{activity.maxParticipants || 5}\r\n                </span>\r\n              </div>\r\n              \r\n              <div className={styles.infoRow}>\r\n                <span className={styles.label}>Уровень:</span>\r\n                <span className={styles.value}>\r\n                  {activity.minCultivationLevel || 1}+ (рек. {activity.recommendedCultivationLevel || activity.minCultivationLevel || 1}+)\r\n                </span>\r\n              </div>\r\n              \r\n              <div className={styles.infoRow}>\r\n                <span className={styles.label}>Длительность:</span>\r\n                <span className={styles.value}>\r\n                  {activity.duration || 30} мин.\r\n                </span>\r\n              </div>\r\n              \r\n              {activity.location && (\r\n                <div className={styles.location}>\r\n                  <span className={styles.locationIcon}>📍</span>\r\n                  <span className={styles.locationName}>{activity.location}</span>\r\n                </div>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"activityDetails\":\"ActivityDetails_activityDetails__lPd3A\",\"header\":\"ActivityDetails_header__W-Yef\",\"title\":\"ActivityDetails_title__NGfJC\",\"type\":\"ActivityDetails_type__Mokkj\",\"description\":\"ActivityDetails_description__tuy8z\",\"section\":\"ActivityDetails_section__FsKCq\",\"sectionTitle\":\"ActivityDetails_sectionTitle__ucBa1\",\"infoGrid\":\"ActivityDetails_infoGrid__CAHD2\",\"infoItem\":\"ActivityDetails_infoItem__LumtD\",\"label\":\"ActivityDetails_label__a8i8R\",\"value\":\"ActivityDetails_value__OttgP\",\"warning\":\"ActivityDetails_warning__CmWBf\",\"difficultySelector\":\"ActivityDetails_difficultySelector__wrAAN\",\"diffButton\":\"ActivityDetails_diffButton__FuX4C\",\"selected\":\"ActivityDetails_selected__x+Rnb\",\"difficultyEasy\":\"ActivityDetails_difficultyEasy__Rvt2t\",\"difficultyMedium\":\"ActivityDetails_difficultyMedium__aZXig\",\"difficultyHard\":\"ActivityDetails_difficultyHard__HoZ-e\",\"difficultyExtreme\":\"ActivityDetails_difficultyExtreme__kTtIC\",\"difficultyLegendary\":\"ActivityDetails_difficultyLegendary__8RO1x\",\"legendaryWarning\":\"ActivityDetails_legendaryWarning__i8FDD\",\"optionGroup\":\"ActivityDetails_optionGroup__p8v1T\",\"checkboxLabel\":\"ActivityDetails_checkboxLabel__9Ee9N\",\"radioLabel\":\"ActivityDetails_radioLabel__Sidgb\",\"checkboxText\":\"ActivityDetails_checkboxText__YRLFs\",\"radioText\":\"ActivityDetails_radioText__XBLCT\",\"rewards\":\"ActivityDetails_rewards__lKKF5\",\"rewardsList\":\"ActivityDetails_rewardsList__uca2o\",\"rewardItem\":\"ActivityDetails_rewardItem__mbJKR\",\"rewardIcon\":\"ActivityDetails_rewardIcon__DgD7J\",\"rewardName\":\"ActivityDetails_rewardName__OqqU9\",\"rewardBonus\":\"ActivityDetails_rewardBonus__e7Kql\",\"actions\":\"ActivityDetails_actions__bDWOI\",\"createButton\":\"ActivityDetails_createButton__zuMaM\",\"startButton\":\"ActivityDetails_startButton__nQ3AU\",\"permissionMessage\":\"ActivityDetails_permissionMessage__OFpqF\",\"createdActivity\":\"ActivityDetails_createdActivity__pDXZk\",\"createdInfo\":\"ActivityDetails_createdInfo__uJvJb\",\"createdLabel\":\"ActivityDetails_createdLabel__NoIPS\",\"createdValue\":\"ActivityDetails_createdValue__XLggK\"};","import React, { useState } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport Button from '../ui/Button';\r\nimport styles from './ActivityDetails.module.css';\r\n\r\n/**\r\n * Компонент для отображения деталей активности и создания экземпляра\r\n * @param {Object} activity - Данные активности\r\n * @param {Object} group - Данные группы\r\n * @param {Function} onCreateActivityInstance - Обработчик создания экземпляра\r\n * @param {Function} onStartActivity - Обработчик запуска активности\r\n * @param {boolean} canManageActivities - Может ли пользователь управлять активностями\r\n */\r\nconst ActivityDetails = ({ \r\n  activity, \r\n  group, \r\n  onCreateActivityInstance, \r\n  onStartActivity, \r\n  canManageActivities \r\n}) => {\r\n  const { state } = useGame();\r\n  const [selectedDifficulty, setSelectedDifficulty] = useState('medium');\r\n  const [specialOptions, setSpecialOptions] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [createdInstance, setCreatedInstance] = useState(null);\r\n  \r\n  // Массив доступных сложностей\r\n  const difficulties = ['easy', 'medium', 'hard', 'extreme', 'legendary'];\r\n  \r\n  // Названия сложностей на русском\r\n  const difficultyLabels = {\r\n    'easy': 'Легкая',\r\n    'medium': 'Средняя',\r\n    'hard': 'Тяжелая',\r\n    'extreme': 'Экстремальная',\r\n    'legendary': 'Легендарная'\r\n  };\r\n  \r\n  // Названия типов активностей на русском\r\n  const activityTypeLabels = {\r\n    'raid': 'Рейд',\r\n    'hunt': 'Охота',\r\n    'expedition': 'Экспедиция',\r\n    'tournament': 'Турнир',\r\n    'caravan': 'Караван',\r\n    'tribulation': 'Испытание стихии',\r\n    'craft': 'Создание артефакта'\r\n  };\r\n  \r\n  // Формирование подходящих классов CSS для индикатора сложности\r\n  const getDifficultyClass = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return styles.difficultyEasy;\r\n      case 'medium':\r\n        return styles.difficultyMedium;\r\n      case 'hard':\r\n        return styles.difficultyHard;\r\n      case 'extreme':\r\n        return styles.difficultyExtreme;\r\n      case 'legendary':\r\n        return styles.difficultyLegendary;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n  \r\n  // Обработчик создания экземпляра активности\r\n  const handleCreateInstance = async () => {\r\n    if (!canManageActivities) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      const instance = await onCreateActivityInstance(\r\n        activity.id, \r\n        selectedDifficulty, \r\n        specialOptions\r\n      );\r\n      \r\n      setCreatedInstance(instance);\r\n    } catch (error) {\r\n      console.error('Ошибка при создании активности:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик запуска активности\r\n  const handleStartActivity = async () => {\r\n    if (!canManageActivities || !createdInstance) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      await onStartActivity(createdInstance.id);\r\n    } catch (error) {\r\n      console.error('Ошибка при запуске активности:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Проверка условий для запуска активности\r\n  const canStartActivity = () => {\r\n    // Проверка достаточного количества участников в группе\r\n    const hasEnoughMembers = group.members.length >= activity.minParticipants;\r\n    \r\n    // Проверка минимального уровня культивации участников\r\n    const allMembersHaveRequiredLevel = group.members.every(\r\n      member => member.user.cultivationLevel >= activity.minCultivationLevel\r\n    );\r\n    \r\n    // Проверка наличия у группы активных активностей того же типа\r\n    const hasActiveInstanceOfSameType = group.activityInstances && \r\n      group.activityInstances.some(instance => \r\n        instance.activityId === activity.id && \r\n        (instance.status === 'preparing' || instance.status === 'in_progress')\r\n      );\r\n    \r\n    // Проверка для легендарной сложности - все участники должны иметь уровень 6+\r\n    const legendaryRequirementsMet = selectedDifficulty !== 'legendary' || \r\n      group.members.every(member => member.user.cultivationLevel >= 6);\r\n    \r\n    return hasEnoughMembers && \r\n      allMembersHaveRequiredLevel && \r\n      !hasActiveInstanceOfSameType && \r\n      legendaryRequirementsMet;\r\n  };\r\n  \r\n  // Формирование текста причины невозможности запуска\r\n  const getStartDisabledReason = () => {\r\n    if (!canManageActivities) {\r\n      return 'Только лидер или офицер группы может запускать активности';\r\n    }\r\n    \r\n    if (group.members.length < activity.minParticipants) {\r\n      return `Требуется минимум ${activity.minParticipants} участников`;\r\n    }\r\n    \r\n    if (!group.members.every(member => member.user.cultivationLevel >= activity.minCultivationLevel)) {\r\n      return `Все участники должны иметь уровень культивации не ниже ${activity.minCultivationLevel}`;\r\n    }\r\n    \r\n    if (selectedDifficulty === 'legendary' && \r\n        !group.members.every(member => member.user.cultivationLevel >= 6)) {\r\n      return 'Для Легендарной сложности все участники должны иметь уровень 6+';\r\n    }\r\n    \r\n    if (group.activityInstances && \r\n        group.activityInstances.some(instance => \r\n          instance.activityId === activity.id && \r\n          (instance.status === 'preparing' || instance.status === 'in_progress'))) {\r\n      return 'У группы уже есть активная активность этого типа';\r\n    }\r\n    \r\n    return '';\r\n  };\r\n  \r\n  // Опции для разных типов активностей\r\n  const renderSpecialOptions = () => {\r\n    switch (activity.type) {\r\n      case 'raid':\r\n        return (\r\n          <div className={styles.optionGroup}>\r\n            <label className={styles.checkboxLabel}>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={specialOptions.useTimeLimit || false}\r\n                onChange={e => setSpecialOptions({\r\n                  ...specialOptions,\r\n                  useTimeLimit: e.target.checked\r\n                })}\r\n                disabled={loading || createdInstance !== null}\r\n              />\r\n              <span className={styles.checkboxText}>Ограничение по времени (бонус к наградам +20%)</span>\r\n            </label>\r\n          </div>\r\n        );\r\n        \r\n      case 'hunt':\r\n        return (\r\n          <div className={styles.optionGroup}>\r\n            <label className={styles.checkboxLabel}>\r\n              <input \r\n                type=\"checkbox\" \r\n                checked={specialOptions.wildHunt || false}\r\n                onChange={e => setSpecialOptions({\r\n                  ...specialOptions,\r\n                  wildHunt: e.target.checked\r\n                })}\r\n                disabled={loading || createdInstance !== null}\r\n              />\r\n              <span className={styles.checkboxText}>Дикая охота (редкие существа, повышенный риск)</span>\r\n            </label>\r\n          </div>\r\n        );\r\n        \r\n      case 'expedition':\r\n        return (\r\n          <div className={styles.optionGroup}>\r\n            <label className={styles.radioLabel}>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"expeditionFocus\"\r\n                value=\"combat\"\r\n                checked={specialOptions.expeditionFocus === 'combat'}\r\n                onChange={() => setSpecialOptions({\r\n                  ...specialOptions,\r\n                  expeditionFocus: 'combat'\r\n                })}\r\n                disabled={loading || createdInstance !== null}\r\n              />\r\n              <span className={styles.radioText}>Боевой фокус (больше сражений)</span>\r\n            </label>\r\n            \r\n            <label className={styles.radioLabel}>\r\n              <input \r\n                type=\"radio\" \r\n                name=\"expeditionFocus\"\r\n                value=\"exploration\"\r\n                checked={specialOptions.expeditionFocus === 'exploration'}\r\n                onChange={() => setSpecialOptions({\r\n                  ...specialOptions,\r\n                  expeditionFocus: 'exploration'\r\n                })}\r\n                disabled={loading || createdInstance !== null}\r\n              />\r\n              <span className={styles.radioText}>Исследовательский фокус (поиск ресурсов)</span>\r\n            </label>\r\n          </div>\r\n        );\r\n        \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.activityDetails}>\r\n      <div className={styles.header}>\r\n        <h3 className={styles.title}>{activity.name}</h3>\r\n        <div className={styles.type}>\r\n          {activityTypeLabels[activity.type] || activity.type}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.description}>\r\n        {activity.description}\r\n      </div>\r\n      \r\n      <div className={styles.section}>\r\n        <h4 className={styles.sectionTitle}>Параметры активности</h4>\r\n        \r\n        <div className={styles.infoGrid}>\r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Участники:</span>\r\n            <span className={styles.value}>\r\n              {activity.minParticipants}-{activity.maxParticipants}\r\n              {group.members.length < activity.minParticipants && (\r\n                <span className={styles.warning}>\r\n                  ⚠️ В группе недостаточно участников\r\n                </span>\r\n              )}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Мин. уровень культивации:</span>\r\n            <span className={styles.value}>\r\n              {activity.minCultivationLevel}\r\n              {!group.members.every(m => m.user.cultivationLevel >= activity.minCultivationLevel) && (\r\n                <span className={styles.warning}>\r\n                  ⚠️ Не все участники соответствуют требованиям\r\n                </span>\r\n              )}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Продолжительность:</span>\r\n            <span className={styles.value}>\r\n              {activity.duration} мин.\r\n            </span>\r\n          </div>\r\n          \r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Перезарядка:</span>\r\n            <span className={styles.value}>\r\n              {activity.cooldown >= 1440 \r\n                ? `${Math.floor(activity.cooldown / 1440)} дн.` \r\n                : activity.cooldown >= 60 \r\n                  ? `${Math.floor(activity.cooldown / 60)} ч.` \r\n                  : `${activity.cooldown} мин.`}\r\n            </span>\r\n          </div>\r\n          \r\n          {activity.location && (\r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Локация:</span>\r\n              <span className={styles.value}>{activity.location}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {!createdInstance ? (\r\n        <div className={styles.section}>\r\n          <h4 className={styles.sectionTitle}>Выбор сложности</h4>\r\n          \r\n          <div className={styles.difficultySelector}>\r\n            {difficulties.map(diff => (\r\n              <button\r\n                key={diff}\r\n                className={`${styles.diffButton} ${selectedDifficulty === diff ? styles.selected : ''} ${getDifficultyClass(diff)}`}\r\n                onClick={() => setSelectedDifficulty(diff)}\r\n                disabled={loading}\r\n              >\r\n                {difficultyLabels[diff]}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          \r\n          {selectedDifficulty === 'legendary' && (\r\n            <div className={styles.legendaryWarning}>\r\n              ⚠️ Для Легендарной сложности все участники должны иметь уровень культивации 6+\r\n            </div>\r\n          )}\r\n          \r\n          {renderSpecialOptions()}\r\n          \r\n          <div className={styles.rewards}>\r\n            <h4 className={styles.sectionTitle}>Возможные награды:</h4>\r\n            \r\n            <div className={styles.rewardsList}>\r\n              <div className={styles.rewardItem}>\r\n                <span className={styles.rewardIcon}>🔮</span>\r\n                <span className={styles.rewardName}>Опыт культивации</span>\r\n                <span className={styles.rewardBonus}>\r\n                  {selectedDifficulty === 'easy' && '-20%'}\r\n                  {selectedDifficulty === 'hard' && '+30%'}\r\n                  {selectedDifficulty === 'extreme' && '+70%'}\r\n                  {selectedDifficulty === 'legendary' && '+150%'}\r\n                </span>\r\n              </div>\r\n              \r\n              {activity.rewardStructure?.resources?.length > 0 && (\r\n                <div className={styles.rewardItem}>\r\n                  <span className={styles.rewardIcon}>🌿</span>\r\n                  <span className={styles.rewardName}>Редкие ресурсы</span>\r\n                  <span className={styles.rewardBonus}>\r\n                    {selectedDifficulty === 'easy' && '-20%'}\r\n                    {selectedDifficulty === 'hard' && '+30%'}\r\n                    {selectedDifficulty === 'extreme' && '+70%'}\r\n                    {selectedDifficulty === 'legendary' && '+150%'}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              \r\n              {activity.rewardStructure?.items?.length > 0 && (\r\n                <div className={styles.rewardItem}>\r\n                  <span className={styles.rewardIcon}>📦</span>\r\n                  <span className={styles.rewardName}>Предметы</span>\r\n                  <span className={styles.rewardBonus}>\r\n                    {selectedDifficulty === 'easy' && 'Обычные'}\r\n                    {selectedDifficulty === 'medium' && 'Необычные'}\r\n                    {selectedDifficulty === 'hard' && 'Редкие'}\r\n                    {selectedDifficulty === 'extreme' && 'Эпические'}\r\n                    {selectedDifficulty === 'legendary' && 'Легендарные'}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              \r\n              {activity.rewardStructure?.reputation?.length > 0 && (\r\n                <div className={styles.rewardItem}>\r\n                  <span className={styles.rewardIcon}>👑</span>\r\n                  <span className={styles.rewardName}>Репутация</span>\r\n                  <span className={styles.rewardBonus}>\r\n                    {selectedDifficulty === 'easy' && '-20%'}\r\n                    {selectedDifficulty === 'hard' && '+30%'}\r\n                    {selectedDifficulty === 'extreme' && '+70%'}\r\n                    {selectedDifficulty === 'legendary' && '+150%'}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.actions}>\r\n            <Button \r\n              onClick={handleCreateInstance}\r\n              disabled={!canManageActivities || loading || !canStartActivity()}\r\n              className={styles.createButton}\r\n            >\r\n              {loading ? 'Создание...' : 'Создать активность'}\r\n            </Button>\r\n            \r\n            {!canManageActivities && (\r\n              <div className={styles.permissionMessage}>\r\n                Только лидер или офицер группы может создавать активности\r\n              </div>\r\n            )}\r\n            \r\n            {canManageActivities && !canStartActivity() && (\r\n              <div className={styles.warning}>\r\n                {getStartDisabledReason()}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.section}>\r\n          <h4 className={styles.sectionTitle}>Созданная активность</h4>\r\n          \r\n          <div className={styles.createdActivity}>\r\n            <div className={styles.createdInfo}>\r\n              <span className={styles.createdLabel}>Тип:</span>\r\n              <span className={styles.createdValue}>\r\n                {activityTypeLabels[activity.type] || activity.type}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.createdInfo}>\r\n              <span className={styles.createdLabel}>Сложность:</span>\r\n              <span className={`${styles.createdValue} ${getDifficultyClass(createdInstance.difficulty)}`}>\r\n                {difficultyLabels[createdInstance.difficulty] || createdInstance.difficulty}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.createdInfo}>\r\n              <span className={styles.createdLabel}>Статус:</span>\r\n              <span className={styles.createdValue}>\r\n                {createdInstance.status === 'preparing' ? 'Подготовка' : \r\n                 createdInstance.status === 'in_progress' ? 'В процессе' : \r\n                 createdInstance.status === 'completed' ? 'Завершена' : \r\n                 createdInstance.status === 'failed' ? 'Провалена' : 'Отменена'}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.createdInfo}>\r\n              <span className={styles.createdLabel}>Участники:</span>\r\n              <span className={styles.createdValue}>\r\n                {createdInstance.participants.length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className={styles.actions}>\r\n            <Button \r\n              onClick={handleStartActivity}\r\n              disabled={!canManageActivities || loading || createdInstance.status !== 'preparing'}\r\n              className={styles.startButton}\r\n            >\r\n              {loading ? 'Запуск...' : 'Начать активность'}\r\n            </Button>\r\n            \r\n            {createdInstance.status !== 'preparing' && (\r\n              <div className={styles.warning}>\r\n                Эта активность уже запущена или завершена\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  width: 100%;\r\n  height: ${props => props.height || '10px'};\r\n  background-color: ${props => props.backgroundColor || 'rgba(0, 0, 0, 0.2)'};\r\n  border-radius: ${props => props.height ? `${parseInt(props.height) / 2}px` : '5px'};\r\n  overflow: hidden;\r\n  margin: ${props => props.margin || '0'};\r\n  box-shadow: ${props => props.showShadow ? 'inset 0 1px 3px rgba(0, 0, 0, 0.2)' : 'none'};\r\n  position: relative;\r\n`;\r\n\r\nconst ProgressFill = styled.div`\r\n  height: 100%;\r\n  width: ${props => Math.min(Math.max(props.progress, 0), 100)}%;\r\n  background-color: ${props => {\r\n    if (props.color) return props.color;\r\n    \r\n    // Цвет зависит от прогресса, если не указан явно\r\n    if (props.progress < 25) return '#c43b3b'; // красный для низкого прогресса\r\n    if (props.progress < 50) return '#c49b3b'; // желтый для среднего прогресса\r\n    if (props.progress < 75) return '#8bc43b'; // зеленовато-желтый для хорошего прогресса\r\n    return '#4a8f52'; // зеленый для высокого прогресса\r\n  }};\r\n  transition: width 0.3s ease, background-color 0.3s ease;\r\n  border-radius: ${props => props.height ? `${parseInt(props.height) / 2}px` : '5px'};\r\n  \r\n  /* Градиентное оформление для более привлекательного вида */\r\n  background-image: ${props => props.gradient ? \r\n    'linear-gradient(to right, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.3))' : \r\n    'none'};\r\n  \r\n  /* Эффект блика при hover */\r\n  position: relative;\r\n  overflow: hidden;\r\n  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: -50%;\r\n    left: -50%;\r\n    width: 200%;\r\n    height: 200%;\r\n    background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);\r\n    opacity: 0;\r\n    transition: opacity 0.3s ease;\r\n  }\r\n  \r\n  ${props => props.interactive && `\r\n    &:hover::after {\r\n      opacity: 0.8;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst ProgressLabel = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: ${props => props.labelColor || '#fff'};\r\n  font-size: ${props => props.labelSize || '12px'};\r\n  font-weight: bold;\r\n  text-shadow: 0 0 2px rgba(0, 0, 0, 0.7);\r\n  z-index: 1;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst StageIndicators = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst StageIndicator = styled.div`\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.active ? '#d4af37' : 'rgba(150, 150, 150, 0.3)'};\r\n  transition: background-color 0.3s ease;\r\n  position: relative;\r\n  \r\n  &::after {\r\n    content: '${props => props.stage}';\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: 10px;\r\n    color: rgba(255, 255, 255, 0.7);\r\n    margin-top: 3px;\r\n  }\r\n`;\r\n\r\n/**\r\n * Компонент прогресс-бара для отображения прогресса выполнения задач\r\n */\r\nconst ProgressBar = ({ \r\n  progress = 0,\r\n  color,\r\n  height = '10px',\r\n  backgroundColor,\r\n  showLabel = false,\r\n  labelText,\r\n  labelColor,\r\n  labelSize,\r\n  margin,\r\n  showShadow = true,\r\n  gradient = true,\r\n  interactive = false,\r\n  stages = 0,\r\n  currentStage = 0,\r\n  className\r\n}) => {\r\n  \r\n  // Вычисляем текст метки, если он не указан явно\r\n  const calculatedLabel = labelText || `${Math.round(progress)}%`;\r\n  \r\n  return (\r\n    <div className={className}>\r\n      <ProgressBarContainer \r\n        height={height} \r\n        backgroundColor={backgroundColor}\r\n        margin={margin}\r\n        showShadow={showShadow}\r\n      >\r\n        <ProgressFill \r\n          progress={progress} \r\n          color={color}\r\n          height={height}\r\n          gradient={gradient}\r\n          interactive={interactive}\r\n        />\r\n        {showLabel && (\r\n          <ProgressLabel\r\n            labelColor={labelColor}\r\n            labelSize={labelSize}\r\n          >\r\n            {calculatedLabel}\r\n          </ProgressLabel>\r\n        )}\r\n      </ProgressBarContainer>\r\n      \r\n      {stages > 0 && (\r\n        <StageIndicators>\r\n          {Array.from({length: stages}, (_, i) => (\r\n            <StageIndicator \r\n              key={i} \r\n              active={i < currentStage}\r\n              stage={i+1}\r\n            />\r\n          ))}\r\n        </StageIndicators>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  progress: PropTypes.number,\r\n  color: PropTypes.string,\r\n  height: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  showLabel: PropTypes.bool,\r\n  labelText: PropTypes.string,\r\n  labelColor: PropTypes.string,\r\n  labelSize: PropTypes.string,\r\n  margin: PropTypes.string,\r\n  showShadow: PropTypes.bool,\r\n  gradient: PropTypes.bool,\r\n  interactive: PropTypes.bool,\r\n  stages: PropTypes.number,\r\n  currentStage: PropTypes.number,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProgressBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"activityInstance\":\"ActivityInstance_activityInstance__a+F8w\",\"header\":\"ActivityInstance_header__x1z+t\",\"titleContainer\":\"ActivityInstance_titleContainer__8v1DX\",\"typeIcon\":\"ActivityInstance_typeIcon__AKIDR\",\"title\":\"ActivityInstance_title__I+9xO\",\"status\":\"ActivityInstance_status__i-sSD\",\"statusPreparing\":\"ActivityInstance_statusPreparing__aiMQM\",\"statusInProgress\":\"ActivityInstance_statusInProgress__Hy4LG\",\"statusCompleted\":\"ActivityInstance_statusCompleted__ChauF\",\"statusFailed\":\"ActivityInstance_statusFailed__mAoNj\",\"statusAbandoned\":\"ActivityInstance_statusAbandoned__TlxHw\",\"infoSection\":\"ActivityInstance_infoSection__7Szyr\",\"infoGrid\":\"ActivityInstance_infoGrid__ud8V1\",\"infoItem\":\"ActivityInstance_infoItem__wXl37\",\"label\":\"ActivityInstance_label__lX1mp\",\"value\":\"ActivityInstance_value__B9Zy1\",\"difficultyEasy\":\"ActivityInstance_difficultyEasy__-5odU\",\"difficultyMedium\":\"ActivityInstance_difficultyMedium__endXn\",\"difficultyHard\":\"ActivityInstance_difficultyHard__C-juo\",\"difficultyExtreme\":\"ActivityInstance_difficultyExtreme__Czcl2\",\"difficultyLegendary\":\"ActivityInstance_difficultyLegendary__d8aUJ\",\"progressContainer\":\"ActivityInstance_progressContainer__tQUKu\",\"progressBar\":\"ActivityInstance_progressBar__ZlDB-\",\"progressBarFill\":\"ActivityInstance_progressBarFill__jk-f-\",\"progressText\":\"ActivityInstance_progressText__puFdS\",\"error\":\"ActivityInstance_error__2LkVR\",\"preparingMessage\":\"ActivityInstance_preparingMessage__ZMQhj\",\"eventSection\":\"ActivityInstance_eventSection__N+vfu\",\"eventTitle\":\"ActivityInstance_eventTitle__InZau\",\"eventDescription\":\"ActivityInstance_eventDescription__RANU8\",\"eventOptions\":\"ActivityInstance_eventOptions__1bjZE\",\"optionButton\":\"ActivityInstance_optionButton__rrDhH\",\"eventResult\":\"ActivityInstance_eventResult__gijps\",\"resultTitle\":\"ActivityInstance_resultTitle__FveH6\",\"success\":\"ActivityInstance_success__B0yGT\",\"failure\":\"ActivityInstance_failure__C7DX-\",\"resultDescription\":\"ActivityInstance_resultDescription__9DTJY\",\"resultRewards\":\"ActivityInstance_resultRewards__psihj\",\"resultPenalties\":\"ActivityInstance_resultPenalties__nc31q\",\"rewardsTitle\":\"ActivityInstance_rewardsTitle__fA4hk\",\"penaltiesTitle\":\"ActivityInstance_penaltiesTitle__Jj3i+\",\"rewardsList\":\"ActivityInstance_rewardsList__Sx8S8\",\"penaltiesList\":\"ActivityInstance_penaltiesList__ahu62\",\"rewardItem\":\"ActivityInstance_rewardItem__+B22O\",\"penaltyItem\":\"ActivityInstance_penaltyItem__AbvHT\",\"rewardIcon\":\"ActivityInstance_rewardIcon__uBCSB\",\"penaltyIcon\":\"ActivityInstance_penaltyIcon__S5A4U\",\"rewardName\":\"ActivityInstance_rewardName__t7KAk\",\"penaltyName\":\"ActivityInstance_penaltyName__uGDBO\",\"rewardValue\":\"ActivityInstance_rewardValue__GDEhA\",\"penaltyValue\":\"ActivityInstance_penaltyValue__PiGp-\",\"nextButton\":\"ActivityInstance_nextButton__tR9Tj\",\"actionsSection\":\"ActivityInstance_actionsSection__mNG+W\",\"startButton\":\"ActivityInstance_startButton__jTbh1\",\"failButton\":\"ActivityInstance_failButton__Rs4aC\",\"abandonButton\":\"ActivityInstance_abandonButton__Xo-hj\",\"closeButton\":\"ActivityInstance_closeButton__aSAe7\",\"resultSection\":\"ActivityInstance_resultSection__FOs2y\",\"noRewards\":\"ActivityInstance_noRewards__a7vHF\",\"failReason\":\"ActivityInstance_failReason__yCJr9\",\"loading\":\"ActivityInstance_loading__u+6sa\"};","import React, { useState, useEffect } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { \r\n  updateActivityProgress, \r\n  completeActivity,\r\n  failActivity,\r\n  abandonActivity,\r\n  startActivity\r\n} from '../../context/actions/groupActions';\r\nimport Button from '../ui/Button';\r\nimport ProgressBar from '../ui/ProgressBar';\r\nimport styles from './ActivityInstance.module.css';\r\n\r\n/**\r\n * Компонент для отображения и взаимодействия с запущенной групповой активностью\r\n * @param {Object} instance - Экземпляр активности\r\n * @param {Function} onComplete - Функция, вызываемая при завершении активности\r\n */\r\nconst ActivityInstance = ({ instance, onComplete }) => {\r\n  const { state, actions } = useGame();\r\n  const { user } = state.player;\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [currentEvent, setCurrentEvent] = useState(null);\r\n  const [eventResult, setEventResult] = useState(null);\r\n  \r\n  // Убедимся, что все массивы инициализированы\r\n  const participants = Array.isArray(instance?.participants) ? instance.participants : [];\r\n  \r\n  // Определяем роль пользователя в группе\r\n  const userRole = participants.find(p => p.userId === user?.id)?.role || 'member';\r\n  const isLeaderOrOfficer = userRole === 'leader' || userRole === 'officer';\r\n  \r\n  // Получить иконку для типа активности\r\n  const getActivityTypeIcon = (type) => {\r\n    switch (type) {\r\n      case 'raid':\r\n        return '🏰'; // Рейд\r\n      case 'hunt':\r\n        return '🏹'; // Охота\r\n      case 'expedition':\r\n        return '🧭'; // Экспедиция\r\n      case 'tournament':\r\n        return '🏆'; // Турнир\r\n      case 'caravan':\r\n        return '🐪'; // Караван\r\n      case 'tribulation':\r\n        return '⚡'; // Испытание стихии\r\n      case 'craft':\r\n        return '⚒️'; // Создание артефакта\r\n      default:\r\n        return '📜'; // По умолчанию\r\n    }\r\n  };\r\n  \r\n  // Получить название для типа активности\r\n  const getActivityTypeName = (type) => {\r\n    switch (type) {\r\n      case 'raid':\r\n        return 'Рейд';\r\n      case 'hunt':\r\n        return 'Охота';\r\n      case 'expedition':\r\n        return 'Экспедиция';\r\n      case 'tournament':\r\n        return 'Турнир';\r\n      case 'caravan':\r\n        return 'Караван';\r\n      case 'tribulation':\r\n        return 'Испытание стихии';\r\n      case 'craft':\r\n        return 'Создание артефакта';\r\n      default:\r\n        return 'Активность';\r\n    }\r\n  };\r\n  \r\n  // Получить строку с описанием сложности\r\n  const getDifficultyText = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return 'Легкая';\r\n      case 'medium':\r\n        return 'Средняя';\r\n      case 'hard':\r\n        return 'Тяжелая';\r\n      case 'extreme':\r\n        return 'Экстремальная';\r\n      case 'legendary':\r\n        return 'Легендарная';\r\n      default:\r\n        return 'Неизвестная сложность';\r\n    }\r\n  };\r\n  \r\n  // Получить класс для элемента сложности\r\n  const getDifficultyClass = (difficulty) => {\r\n    switch (difficulty) {\r\n      case 'easy':\r\n        return styles.difficultyEasy;\r\n      case 'medium':\r\n        return styles.difficultyMedium;\r\n      case 'hard':\r\n        return styles.difficultyHard;\r\n      case 'extreme':\r\n        return styles.difficultyExtreme;\r\n      case 'legendary':\r\n        return styles.difficultyLegendary;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n  \r\n  // Генерируем события для текущего этапа активности\r\n  useEffect(() => {\r\n    if (instance?.status === 'in_progress' && !currentEvent && !eventResult) {\r\n      generateEventForCurrentStage();\r\n    }\r\n  }, [instance?.currentStage, instance?.status]);\r\n  \r\n  // Генерация события для текущего этапа\r\n  const generateEventForCurrentStage = () => {\r\n    // Логика генерации событий зависит от типа активности и текущего этапа\r\n    const activityType = instance?.activityType?.type || 'generic';\r\n    const currentStage = instance?.currentStage || 1;\r\n    const events = getEventsForActivityType(activityType, currentStage);\r\n    const randomIndex = Math.floor(Math.random() * events.length);\r\n    setCurrentEvent(events[randomIndex]);\r\n    setEventResult(null);\r\n  };\r\n  \r\n  // Получение возможных событий для типа активности и этапа\r\n  const getEventsForActivityType = (type, stage) => {\r\n    // Здесь будет более сложная логика в зависимости от типа активности\r\n    // Примеры событий:\r\n    const events = {\r\n      'raid': {\r\n        1: [\r\n          { \r\n            id: 'scout', \r\n            title: 'Разведка территории', \r\n            description: 'Перед вами раскинулся древний комплекс. Необходимо собрать информацию о возможных опасностях и сокровищах.', \r\n            options: ['Осторожное наблюдение', 'Отправить разведчика', 'Использовать духовное восприятие'] \r\n          },\r\n          { \r\n            id: 'entrance', \r\n            title: 'Вход в комплекс', \r\n            description: 'Вы обнаружили несколько возможных путей внутрь древнего комплекса.', \r\n            options: ['Главный вход', 'Секретный проход', 'Пробить стену силой'] \r\n          },\r\n        ],\r\n        2: [\r\n          { \r\n            id: 'encounter', \r\n            title: 'Первое столкновение', \r\n            description: 'На пути встречается группа стражей древнего комплекса!', \r\n            options: ['Атаковать напрямую', 'Попытаться обойти', 'Попробовать договориться'] \r\n          },\r\n          { \r\n            id: 'trap', \r\n            title: 'Древняя ловушка', \r\n            description: 'Проходя по коридору, вы активировали древнюю ловушку.', \r\n            options: ['Блокировать техникой', 'Уклониться', 'Пожертвовать ресурсами для нейтрализации'] \r\n          },\r\n        ],\r\n        3: [\r\n          { \r\n            id: 'treasure', \r\n            title: 'Сокровищница', \r\n            description: 'Вы нашли хранилище артефактов, но оно охраняется мощными печатями.', \r\n            options: ['Взломать печати', 'Искать обходной путь', 'Использовать специальный ключ'] \r\n          },\r\n        ],\r\n      },\r\n      'hunt': {\r\n        1: [\r\n          { \r\n            id: 'track', \r\n            title: 'Поиск следов', \r\n            description: 'Вам нужно найти следы редкого духовного зверя.', \r\n            options: ['Исследовать окрестности', 'Использовать приманку', 'Спросить у местных жителей'] \r\n          },\r\n        ],\r\n      },\r\n      'expedition': {\r\n        1: [\r\n          { \r\n            id: 'path', \r\n            title: 'Выбор пути', \r\n            description: 'Перед вами несколько возможных маршрутов экспедиции.', \r\n            options: ['Горный перевал', 'Лесная тропа', 'Подземные туннели'] \r\n          },\r\n        ],\r\n      },\r\n    };\r\n    \r\n    // Если нет специфичных событий для типа/этапа, возвращаем общие события\r\n    return events[type]?.[stage] || [\r\n      { \r\n        id: 'generic', \r\n        title: `Этап ${stage}`, \r\n        description: `Ваша группа продвигается через этап ${stage} активности.`, \r\n        options: ['Действовать осторожно', 'Действовать решительно', 'Импровизировать'] \r\n      }\r\n    ];\r\n  };\r\n  \r\n  // Обработчик выбора варианта события\r\n  const handleOptionSelect = (optionIndex) => {\r\n    if (!currentEvent) return;\r\n    \r\n    const option = currentEvent.options[optionIndex];\r\n    \r\n    // Здесь была бы более сложная логика определения успеха\r\n    // в зависимости от параметров группы и выбранного варианта\r\n    const successChance = 0.7; // 70% базовый шанс успеха\r\n    const success = Math.random() < successChance;\r\n    \r\n    // Формируем результат события\r\n    const result = {\r\n      success,\r\n      description: success \r\n        ? `Вы успешно справились с задачей, выбрав вариант \"${option}\".` \r\n        : `К сожалению, выбор \"${option}\" привел к осложнениям.`,\r\n      rewards: success ? generateRewards() : [],\r\n      penalties: !success ? generatePenalties() : []\r\n    };\r\n    \r\n    setEventResult(result);\r\n  };\r\n  \r\n  // Генерация наград за успешное прохождение этапа\r\n  const generateRewards = () => {\r\n    return [\r\n      { type: 'experience', value: Math.floor(Math.random() * 100) + 50 },\r\n      { type: 'resource', name: 'Духовный кристалл', quantity: Math.floor(Math.random() * 3) + 1 }\r\n    ];\r\n  };\r\n  \r\n  // Генерация штрафов за неудачное прохождение\r\n  const generatePenalties = () => {\r\n    return [\r\n      { type: 'health', value: Math.floor(Math.random() * 20) + 10 },\r\n      { type: 'energy', value: Math.floor(Math.random() * 30) + 15 }\r\n    ];\r\n  };\r\n  \r\n  // Обработчик перехода к следующему этапу\r\n  const handleNextStage = async () => {\r\n    if (!isLeaderOrOfficer) {\r\n      actions.addNotification({\r\n        message: 'Только лидер или офицер группы может управлять активностью',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (!eventResult) {\r\n      actions.addNotification({\r\n        message: 'Сначала нужно выбрать вариант действия',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const nextStage = instance.currentStage + 1;\r\n      const additionalData = {\r\n        battleLog: {\r\n          stage: instance.currentStage,\r\n          event: currentEvent,\r\n          result: eventResult,\r\n          timestamp: new Date().toISOString()\r\n        }\r\n      };\r\n      \r\n      if (nextStage > instance.totalStages) {\r\n        // Завершаем активность\r\n        await actions.dispatch(completeActivity(instance.id, additionalData, user.id));\r\n        \r\n        // Вызываем функцию завершения\r\n        if (onComplete) {\r\n          onComplete();\r\n        }\r\n      } else {\r\n        // Переходим к следующему этапу\r\n        await actions.dispatch(updateActivityProgress(\r\n          instance.id, nextStage, additionalData, user.id\r\n        ));\r\n        \r\n        // Сбрасываем текущее событие и результат\r\n        setCurrentEvent(null);\r\n        setEventResult(null);\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка при переходе к следующему этапу:', err);\r\n      setError(`Не удалось перейти к следующему этапу: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик провала активности\r\n  const handleFailActivity = async () => {\r\n    if (!isLeaderOrOfficer) {\r\n      actions.addNotification({\r\n        message: 'Только лидер или офицер группы может управлять активностью',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (!window.confirm('Вы уверены, что хотите отметить эту активность как проваленную? Это действие нельзя отменить.')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const failureData = {\r\n        reason: 'Отмечено лидером группы как проваленная активность',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      await actions.dispatch(failActivity(instance.id, failureData, user.id));\r\n      \r\n      // Вызываем функцию завершения\r\n      if (onComplete) {\r\n        onComplete();\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка при отметке активности как проваленной:', err);\r\n      setError(`Не удалось отметить активность как проваленную: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик отмены активности\r\n  const handleAbandonActivity = async () => {\r\n    if (userRole !== 'leader') {\r\n      actions.addNotification({\r\n        message: 'Только лидер группы может отменить активность',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    if (!window.confirm('Вы уверены, что хотите отменить эту активность? Это действие нельзя отменить.')) {\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const reason = 'Отменено лидером группы';\r\n      \r\n      await actions.dispatch(abandonActivity(instance.id, reason, user.id));\r\n      \r\n      // Вызываем функцию завершения\r\n      if (onComplete) {\r\n        onComplete();\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка при отмене активности:', err);\r\n      setError(`Не удалось отменить активность: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Если активность еще не запущена\r\n  if (instance?.status === 'preparing') {\r\n    return (\r\n      <div className={styles.activityInstance}>\r\n        <div className={styles.header}>\r\n          <div className={styles.titleContainer}>\r\n            <span className={styles.typeIcon}>\r\n              {getActivityTypeIcon(instance.activityType?.type)}\r\n            </span>\r\n            <h3 className={styles.title}>\r\n              {instance.activityType?.name || 'Групповая активность'}\r\n            </h3>\r\n            <span className={`${styles.status} ${styles.statusPreparing}`}>\r\n              Подготовка\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className={styles.infoSection}>\r\n          <div className={styles.infoGrid}>\r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Тип:</span>\r\n              <span className={styles.value}>\r\n                {getActivityTypeName(instance.activityType?.type)}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Сложность:</span>\r\n              <span className={`${styles.value} ${getDifficultyClass(instance.difficulty)}`}>\r\n                {getDifficultyText(instance.difficulty)}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Этапы:</span>\r\n              <span className={styles.value}>\r\n                {instance.totalStages || 3}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Участники:</span>\r\n              <span className={styles.value}>\r\n                {participants.length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className={styles.preparingMessage}>\r\n          Активность создана и ожидает запуска. Лидер или офицер группы могут запустить активность.\r\n        </div>\r\n        \r\n        {error && (\r\n          <div className={styles.error}>{error}</div>\r\n        )}\r\n        \r\n        <div className={styles.actions}>\r\n        {isLeaderOrOfficer && (\r\n          <Button \r\n            onClick={() => actions.dispatch(startActivity(instance.id, user.id))}\r\n            disabled={loading}\r\n            className={styles.startButton}\r\n          >\r\n            {loading ? 'Загрузка...' : 'Начать активность'}\r\n          </Button>\r\n        )}\r\n          \r\n          {userRole === 'leader' && (\r\n            <Button \r\n              onClick={handleAbandonActivity}\r\n              disabled={loading}\r\n              className={styles.abandonButton}\r\n            >\r\n              Отменить активность\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Если активность уже завершена или провалена\r\n  if (instance?.status === 'completed' || instance?.status === 'failed' || instance?.status === 'abandoned') {\r\n    return (\r\n      <div className={styles.activityInstance}>\r\n        <div className={styles.header}>\r\n          <div className={styles.titleContainer}>\r\n            <span className={styles.typeIcon}>\r\n              {getActivityTypeIcon(instance.activityType?.type)}\r\n            </span>\r\n            <h3 className={styles.title}>\r\n              {instance.activityType?.name || 'Групповая активность'}\r\n            </h3>\r\n            \r\n            {instance.status === 'completed' && (\r\n              <span className={`${styles.status} ${styles.statusCompleted}`}>\r\n                Завершена\r\n              </span>\r\n            )}\r\n            \r\n            {instance.status === 'failed' && (\r\n              <span className={`${styles.status} ${styles.statusFailed}`}>\r\n                Провалена\r\n              </span>\r\n            )}\r\n            \r\n            {instance.status === 'abandoned' && (\r\n              <span className={`${styles.status} ${styles.statusAbandoned}`}>\r\n                Отменена\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className={styles.infoSection}>\r\n          <div className={styles.infoGrid}>\r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Тип:</span>\r\n              <span className={styles.value}>\r\n                {getActivityTypeName(instance.activityType?.type)}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Сложность:</span>\r\n              <span className={`${styles.value} ${getDifficultyClass(instance.difficulty)}`}>\r\n                {getDifficultyText(instance.difficulty)}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Начало:</span>\r\n              <span className={styles.value}>\r\n                {instance.startedAt ? new Date(instance.startedAt).toLocaleString() : 'Нет данных'}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className={styles.infoItem}>\r\n              <span className={styles.label}>Завершение:</span>\r\n              <span className={styles.value}>\r\n                {instance.completedAt ? new Date(instance.completedAt).toLocaleString() : 'Нет данных'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {instance.status === 'completed' && (\r\n          <div className={styles.resultSection}>\r\n            <h4 className={styles.resultTitle}>Активность успешно завершена!</h4>\r\n            \r\n            {Array.isArray(instance.rewards) && instance.rewards.length > 0 ? (\r\n              <div className={styles.rewardsList}>\r\n                <h5 className={styles.rewardsTitle}>Полученные награды:</h5>\r\n                \r\n                {instance.rewards.map(reward => (\r\n                  <div key={reward.id} className={styles.rewardItem}>\r\n                    {reward.rewardType === 'experience' && (\r\n                      <>\r\n                        <span className={styles.rewardIcon}>🔮</span>\r\n                        <span className={styles.rewardName}>Опыт культивации</span>\r\n                        <span className={styles.rewardValue}>+{reward.quantity}</span>\r\n                      </>\r\n                    )}\r\n                    \r\n                    {reward.rewardType === 'resource' && (\r\n                      <>\r\n                        <span className={styles.rewardIcon}>🌿</span>\r\n                        <span className={styles.rewardName}>{reward.rewardId}</span>\r\n                        <span className={styles.rewardValue}>x{reward.quantity}</span>\r\n                      </>\r\n                    )}\r\n                    \r\n                    {reward.rewardType === 'item' && (\r\n                      <>\r\n                        <span className={styles.rewardIcon}>📦</span>\r\n                        <span className={styles.rewardName}>{reward.rewardId}</span>\r\n                        <span className={styles.rewardValue}>x{reward.quantity}</span>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className={styles.noRewards}>\r\n                Информация о наградах недоступна\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {instance.status === 'failed' && (\r\n          <div className={styles.resultSection}>\r\n            <h4 className={styles.resultTitle}>Активность провалена</h4>\r\n            \r\n            {instance.specialConditions?.reason && (\r\n              <div className={styles.failReason}>\r\n                Причина: {instance.specialConditions.reason}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {instance.status === 'abandoned' && (\r\n          <div className={styles.resultSection}>\r\n            <h4 className={styles.resultTitle}>Активность отменена</h4>\r\n            \r\n            {instance.specialConditions?.abandonReason && (\r\n              <div className={styles.failReason}>\r\n                Причина: {instance.specialConditions.abandonReason}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        <div className={styles.actions}>\r\n          <Button \r\n            onClick={onComplete}\r\n            className={styles.closeButton}\r\n          >\r\n            Закрыть\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Если активность в процессе\r\n  return (\r\n    <div className={styles.activityInstance}>\r\n      <div className={styles.header}>\r\n        <div className={styles.titleContainer}>\r\n          <span className={styles.typeIcon}>\r\n            {getActivityTypeIcon(instance.activityType?.type)}\r\n          </span>\r\n          <h3 className={styles.title}>\r\n            {instance.activityType?.name || 'Групповая активность'}\r\n          </h3>\r\n          <span className={`${styles.status} ${styles.statusInProgress}`}>\r\n            В процессе\r\n          </span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.infoSection}>\r\n        <div className={styles.infoGrid}>\r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Тип:</span>\r\n            <span className={styles.value}>\r\n              {getActivityTypeName(instance.activityType?.type)}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Сложность:</span>\r\n            <span className={`${styles.value} ${getDifficultyClass(instance.difficulty)}`}>\r\n              {getDifficultyText(instance.difficulty)}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Этап:</span>\r\n              <span className={styles.value}>\r\n                {instance.currentStage || 1}/{instance.totalStages || 3}\r\n              </span>\r\n          </div>\r\n          \r\n          <div className={styles.infoItem}>\r\n            <span className={styles.label}>Начало:</span>\r\n            <span className={styles.value}>\r\n              {instance.startedAt ? new Date(instance.startedAt).toLocaleString() : 'Нет данных'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n      <div className={styles.progressContainer}>\r\n        <ProgressBar \r\n          progress={instance.progress || 0} \r\n          className={styles.progressBar}\r\n          showLabel={true}\r\n          height=\"15px\"\r\n          color=\"#d4af37\"\r\n        />\r\n        <span className={styles.progressText}>\r\n          Прогресс: {Math.round(instance.progress || 0)}%\r\n        </span>\r\n      </div>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className={styles.error}>{error}</div>\r\n      )}\r\n      \r\n      <div className={styles.eventSection}>\r\n        {currentEvent && !eventResult ? (\r\n          <>\r\n            <h4 className={styles.eventTitle}>{currentEvent.title}</h4>\r\n            <p className={styles.eventDescription}>{currentEvent.description}</p>\r\n            \r\n            <div className={styles.eventOptions}>\r\n              {currentEvent.options.map((option, index) => (\r\n                <Button \r\n                  key={index}\r\n                  onClick={() => handleOptionSelect(index)}\r\n                  disabled={loading}\r\n                  className={styles.optionButton}\r\n                >\r\n                  {option}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : eventResult ? (\r\n          <div className={styles.eventResult}>\r\n            <h4 className={`${styles.resultTitle} ${eventResult.success ? styles.success : styles.failure}`}>\r\n              {eventResult.success ? 'Успех!' : 'Неудача!'}\r\n            </h4>\r\n            <p className={styles.resultDescription}>{eventResult.description}</p>\r\n            \r\n            {eventResult.rewards.length > 0 && (\r\n              <div className={styles.resultRewards}>\r\n                <h5 className={styles.rewardsTitle}>Награды:</h5>\r\n                <ul className={styles.rewardsList}>\r\n                  {eventResult.rewards.map((reward, index) => (\r\n                    <li key={index} className={styles.rewardItem}>\r\n                      {reward.type === 'experience' && (\r\n                        <>\r\n                          <span className={styles.rewardIcon}>🔮</span>\r\n                          <span className={styles.rewardName}>Опыт культивации</span>\r\n                          <span className={styles.rewardValue}>+{reward.value}</span>\r\n                        </>\r\n                      )}\r\n                      \r\n                      {reward.type === 'resource' && (\r\n                        <>\r\n                          <span className={styles.rewardIcon}>🌿</span>\r\n                          <span className={styles.rewardName}>{reward.name}</span>\r\n                          <span className={styles.rewardValue}>x{reward.quantity}</span>\r\n                        </>\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            \r\n            {eventResult.penalties.length > 0 && (\r\n              <div className={styles.resultPenalties}>\r\n                <h5 className={styles.penaltiesTitle}>Потери:</h5>\r\n                <ul className={styles.penaltiesList}>\r\n                  {eventResult.penalties.map((penalty, index) => (\r\n                    <li key={index} className={styles.penaltyItem}>\r\n                      {penalty.type === 'health' && (\r\n                        <>\r\n                          <span className={styles.penaltyIcon}>❤️</span>\r\n                          <span className={styles.penaltyName}>Здоровье</span>\r\n                          <span className={styles.penaltyValue}>-{penalty.value}</span>\r\n                        </>\r\n                      )}\r\n                      \r\n                      {penalty.type === 'energy' && (\r\n                        <>\r\n                          <span className={styles.penaltyIcon}>⚡</span>\r\n                          <span className={styles.penaltyName}>Энергия</span>\r\n                          <span className={styles.penaltyValue}>-{penalty.value}</span>\r\n                        </>\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n            \r\n        {isLeaderOrOfficer && (\r\n          <Button \r\n            onClick={handleNextStage}\r\n            disabled={loading}\r\n            className={styles.nextButton}\r\n          >\r\n            {loading ? 'Загрузка...' : instance.currentStage === instance.totalStages ? 'Завершить активность' : 'Перейти к следующему этапу'}\r\n          </Button>\r\n        )}\r\n          </div>\r\n        ) : (\r\n          <div className={styles.loading}>\r\n            Загрузка события...\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className={styles.actionsSection}>\r\n        {isLeaderOrOfficer && (\r\n          <Button \r\n            onClick={handleFailActivity}\r\n            disabled={loading}\r\n            className={styles.failButton}\r\n          >\r\n            Отметить как проваленную\r\n          </Button>\r\n        )}\r\n        \r\n        {userRole === 'leader' && (\r\n          <Button \r\n            onClick={handleAbandonActivity}\r\n            disabled={loading}\r\n            className={styles.abandonButton}\r\n          >\r\n            Отменить активность\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityInstance;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"groupDetails\":\"GroupDetails_groupDetails__2ob-8\",\"header\":\"GroupDetails_header__-PjTa\",\"titleContainer\":\"GroupDetails_titleContainer__lukBq\",\"title\":\"GroupDetails_title__fT3CX\",\"privateLabel\":\"GroupDetails_privateLabel__1fqN3\",\"description\":\"GroupDetails_description__0jCN7\",\"actions\":\"GroupDetails_actions__WT4x3\",\"editButton\":\"GroupDetails_editButton__iIsMz\",\"leaveButton\":\"GroupDetails_leaveButton__svZo7\",\"tabs\":\"GroupDetails_tabs__SHn7J\",\"tab\":\"GroupDetails_tab__mwwmm\",\"active\":\"GroupDetails_active__SdlqH\",\"badge\":\"GroupDetails_badge__fkI3q\",\"error\":\"GroupDetails_error__ZVXAb\",\"tabContent\":\"GroupDetails_tabContent__1FScj\",\"loading\":\"GroupDetails_loading__R8uKe\",\"activitiesContainer\":\"GroupDetails_activitiesContainer__DGW3O\",\"groupInfo\":\"GroupDetails_groupInfo__bs8gK\",\"infoSection\":\"GroupDetails_infoSection__NQxpO\",\"sectionTitle\":\"GroupDetails_sectionTitle__0bjoV\",\"infoRow\":\"GroupDetails_infoRow__udR94\",\"label\":\"GroupDetails_label__uCS0w\",\"value\":\"GroupDetails_value__wJ23S\",\"activeActivitiesContainer\":\"GroupDetails_activeActivitiesContainer__Twbx7\",\"instancesList\":\"GroupDetails_instancesList__kgnwV\",\"instanceItem\":\"GroupDetails_instanceItem__nPERz\",\"instanceHeader\":\"GroupDetails_instanceHeader__T1+eN\",\"instanceTitle\":\"GroupDetails_instanceTitle__ZnKs4\",\"instanceStatus\":\"GroupDetails_instanceStatus__MkupA\",\"statusPreparing\":\"GroupDetails_statusPreparing__-ZSnt\",\"statusInProgress\":\"GroupDetails_statusInProgress__1E-sd\",\"statusCompleted\":\"GroupDetails_statusCompleted__r5alF\",\"statusFailed\":\"GroupDetails_statusFailed__7oYbA\",\"statusAbandoned\":\"GroupDetails_statusAbandoned__2Baxv\",\"instanceInfo\":\"GroupDetails_instanceInfo__AIyS0\",\"instanceDetail\":\"GroupDetails_instanceDetail__gPC7w\",\"instanceLabel\":\"GroupDetails_instanceLabel__kPSjx\",\"instanceValue\":\"GroupDetails_instanceValue__q-JEe\",\"emptyMessage\":\"GroupDetails_emptyMessage__Yv9Go\"};","import React, { useState, useEffect } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { \r\n  fetchGroupActivities,\r\n  setCurrentActivity,\r\n  createActivityInstance,\r\n  startActivity,\r\n  fetchGroupActivityInstances\r\n} from '../../context/actions/groupActions';\r\nimport MemberList from './MemberList';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityDetails from './ActivityDetails';\r\nimport ActivityInstance from './ActivityInstance';\r\nimport Button from '../ui/Button';\r\nimport styles from './GroupDetails.module.css';\r\n\r\n/**\r\n * Компонент для отображения деталей группы и управления активностями\r\n * @param {Object} group - Данные группы\r\n * @param {Array} activityInstances - Экземпляры активностей группы\r\n * @param {Function} onRefresh - Функция для обновления данных группы\r\n */\r\nconst GroupDetails = ({ group, activityInstances = [], onRefresh }) => {\r\n  const { state, actions } = useGame();\r\n  const { user } = state.player;\r\n  const { activities, currentActivity } = state.groups || { \r\n    activities: [], \r\n    currentActivity: null\r\n  };\r\n  const [activeTab, setActiveTab] = useState('members'); // 'members', 'activities', 'active_activities', 'details'\r\n  const [selectedInstance, setSelectedInstance] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Обеспечиваем, что массивы определены\r\n  const members = Array.isArray(group.members) ? group.members : [];\r\n  const safeActivityInstances = Array.isArray(activityInstances) ? activityInstances : [];\r\n  \r\n  // Определяем роль пользователя в группе\r\n  const userRole = members.find(m => m.userId === user.id)?.role || 'member';\r\n  const isLeaderOrOfficer = userRole === 'leader' || userRole === 'officer';\r\n\r\n  // Загружаем доступные активности при переключении на вкладку\r\n  useEffect(() => {\r\n    if (activeTab === 'activities' && (!activities || activities.length === 0)) {\r\n      loadActivities();\r\n    }\r\n    \r\n    if (activeTab === 'active_activities' && onRefresh) {\r\n      onRefresh();\r\n    }\r\n  }, [activeTab]);\r\n\r\n  \r\n  // Загрузка доступных активностей\r\n  const loadActivities = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Фильтр активностей по уровню группы\r\n      const cultivationLevels = members.map(m => m.user?.cultivationLevel || 1);\r\n      const filters = {\r\n        minCultivationLevel: cultivationLevels.length > 0 ? Math.min(...cultivationLevels) : 1\r\n      };\r\n      \r\n      await actions.dispatch(fetchGroupActivities(filters));\r\n    } catch (err) {\r\n      console.error('Ошибка при загрузке активностей:', err);\r\n      setError('Не удалось загрузить доступные активности');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Обработка выбора активности\r\n  const handleSelectActivity = (activity) => {\r\n    actions.dispatch(setCurrentActivity(activity));\r\n  };\r\n\r\n  // Обработка создания экземпляра активности\r\n  const handleCreateActivityInstance = async (activityId, difficulty, options) => {\r\n    if (!isLeaderOrOfficer) {\r\n      actions.addNotification({\r\n        message: 'Только лидер или офицер группы может создавать активности',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const instance = await actions.dispatch(\r\n        createActivityInstance(group.id, activityId, difficulty, options, user.id)\r\n      );\r\n      \r\n      actions.addNotification({\r\n        message: `Активность \"${instance.activityType.name}\" создана`,\r\n        type: 'success'\r\n      });\r\n      \r\n      return instance;\r\n    } catch (err) {\r\n      console.error('Ошибка при создании активности:', err);\r\n      setError(`Не удалось создать активность: ${err.message}`);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Обработка запуска активности\r\n  const handleStartActivity = async (instanceId) => {\r\n    if (!isLeaderOrOfficer) {\r\n      actions.addNotification({\r\n        message: 'Только лидер или офицер группы может запустить активность',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const instance = await actions.dispatch(startActivity(instanceId, user.id));\r\n      \r\n      actions.addNotification({\r\n        message: `Активность \"${instance.activityType.name}\" запущена`,\r\n        type: 'success'\r\n      });\r\n      \r\n      return instance;\r\n    } catch (err) {\r\n      console.error('Ошибка при запуске активности:', err);\r\n      setError(`Не удалось запустить активность: ${err.message}`);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Обработчик для покидания группы\r\n  const handleLeaveGroup = () => {\r\n    if (userRole === 'leader' && group.members.length > 1) {\r\n      // Если пользователь - лидер и есть другие участники, нужно предупредить\r\n      if (!window.confirm('Вы уверены? Лидерство будет передано другому участнику, если вы покинете группу.')) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Покидаем группу через actions\r\n    actions.dispatch({\r\n      type: 'LEAVE_GROUP',\r\n      payload: { groupId: group.id, userId: user.id }\r\n    });\r\n    \r\n    actions.addNotification({\r\n      message: `Вы покинули группу \"${group.name}\"`,\r\n      type: 'info'\r\n    });\r\n  };\r\n\r\n  // Обработчик завершения взаимодействия с экземпляром активности\r\n  const handleActivityInstanceComplete = () => {\r\n    setSelectedInstance(null);\r\n    if (onRefresh) {\r\n      onRefresh(); // Перезагружаем список после изменений\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.groupDetails}>\r\n      <div className={styles.header}>\r\n        <div className={styles.titleContainer}>\r\n          <h3 className={styles.title}>{group.name}</h3>\r\n          {group.isPrivate && (\r\n            <span className={styles.privateLabel}>Закрытая</span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className={styles.actions}>\r\n          {userRole === 'leader' && (\r\n            <Button \r\n              className={styles.editButton}\r\n              onClick={() => {/* Функция редактирования группы */}}\r\n            >\r\n              Редактировать\r\n            </Button>\r\n          )}\r\n          \r\n          <Button \r\n            className={styles.leaveButton}\r\n            onClick={handleLeaveGroup}\r\n          >\r\n            Покинуть группу\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      \r\n      {group.description && (\r\n        <div className={styles.description}>{group.description}</div>\r\n      )}\r\n      \r\n      <div className={styles.tabs}>\r\n        <button \r\n          className={`${styles.tab} ${activeTab === 'members' ? styles.active : ''}`}\r\n          onClick={() => setActiveTab('members')}\r\n        >\r\n          Участники ({members.length}/{group.maxMembers || 10})\r\n        </button>\r\n        <button \r\n          className={`${styles.tab} ${activeTab === 'activities' ? styles.active : ''}`}\r\n          onClick={() => setActiveTab('activities')}\r\n        >\r\n          Доступные активности\r\n        </button>\r\n        <button \r\n          className={`${styles.tab} ${activeTab === 'active_activities' ? styles.active : ''}`}\r\n          onClick={() => setActiveTab('active_activities')}\r\n        >\r\n          Текущие активности\r\n          {safeActivityInstances.filter(i => i.status === 'in_progress' || i.status === 'preparing').length > 0 && (\r\n            <span className={styles.badge}>\r\n              {safeActivityInstances.filter(i => i.status === 'in_progress' || i.status === 'preparing').length}\r\n            </span>\r\n          )}\r\n        </button>\r\n        <button \r\n          className={`${styles.tab} ${activeTab === 'details' ? styles.active : ''}`}\r\n          onClick={() => setActiveTab('details')}\r\n        >\r\n          Информация\r\n        </button>\r\n      </div>\r\n      \r\n      {error && (\r\n        <div className={styles.error}>\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      <div className={styles.tabContent}>\r\n        {loading ? (\r\n          <div className={styles.loading}>\r\n            Загрузка...\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {activeTab === 'members' && (\r\n              <MemberList \r\n                members={members} \r\n                leaderId={group.leaderId} \r\n                currentUserId={user.id}\r\n                currentUserRole={userRole}\r\n              />\r\n            )}\r\n            \r\n            {activeTab === 'activities' && (\r\n              <div className={styles.activitiesContainer}>\r\n                <ActivityList \r\n                  activities={activities || []} \r\n                  selectedActivity={currentActivity}\r\n                  onSelectActivity={handleSelectActivity}\r\n                />\r\n                \r\n                {currentActivity && (\r\n                  <ActivityDetails \r\n                    activity={currentActivity}\r\n                    group={group}\r\n                    onCreateActivityInstance={handleCreateActivityInstance}\r\n                    onStartActivity={handleStartActivity}\r\n                    canManageActivities={isLeaderOrOfficer}\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n            \r\n            {activeTab === 'active_activities' && (\r\n              <div className={styles.activeActivitiesContainer}>\r\n                {!selectedInstance ? (\r\n                  safeActivityInstances.length > 0 ? (\r\n                    <div className={styles.instancesList}>\r\n                      <h4 className={styles.sectionTitle}>Активности группы</h4>\r\n                      \r\n                      {safeActivityInstances\r\n                        .filter(instance => instance && (instance.status === 'in_progress' || instance.status === 'preparing'))\r\n                        .map(instance => (\r\n                          <div \r\n                            key={instance.id} \r\n                            className={styles.instanceItem}\r\n                            onClick={() => setSelectedInstance(instance)}\r\n                          >\r\n                            <div className={styles.instanceHeader}>\r\n                              <div className={styles.instanceTitle}>\r\n                                {instance.activityType?.name || 'Активность группы'}\r\n                              </div>\r\n                              <div className={`${styles.instanceStatus} ${\r\n                                instance.status === 'in_progress' ? styles.statusInProgress :\r\n                                instance.status === 'preparing' ? styles.statusPreparing :\r\n                                instance.status === 'completed' ? styles.statusCompleted :\r\n                                instance.status === 'failed' ? styles.statusFailed :\r\n                                styles.statusAbandoned\r\n                              }`}>\r\n                                {instance.status === 'in_progress' ? 'В процессе' :\r\n                                instance.status === 'preparing' ? 'Подготовка' :\r\n                                instance.status === 'completed' ? 'Завершена' :\r\n                                instance.status === 'failed' ? 'Провалена' :\r\n                                'Отменена'}\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <div className={styles.instanceInfo}>\r\n                              <div className={styles.instanceDetail}>\r\n                                <span className={styles.instanceLabel}>Сложность:</span>\r\n                                <span className={styles.instanceValue}>\r\n                                  {instance.difficulty === 'easy' ? 'Легкая' :\r\n                                  instance.difficulty === 'medium' ? 'Средняя' :\r\n                                  instance.difficulty === 'hard' ? 'Тяжелая' :\r\n                                  instance.difficulty === 'extreme' ? 'Экстремальная' :\r\n                                  'Легендарная'}\r\n                                </span>\r\n                              </div>\r\n                              \r\n                              <div className={styles.instanceDetail}>\r\n                                <span className={styles.instanceLabel}>Участники:</span>\r\n                                <span className={styles.instanceValue}>\r\n                                  {instance.participants.length}\r\n                                </span>\r\n                              </div>\r\n                              \r\n                              {instance.status === 'in_progress' && (\r\n                                <div className={styles.instanceDetail}>\r\n                                  <span className={styles.instanceLabel}>Прогресс:</span>\r\n                                  <span className={styles.instanceValue}>\r\n                                    {Math.round(instance.progress || 0)}%\r\n                                  </span>\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      \r\n                      {safeActivityInstances\r\n                        .filter(instance => instance && (instance.status === 'in_progress' || instance.status === 'preparing'))\r\n                        .length === 0 && (\r\n                        <div className={styles.emptyMessage}>\r\n                          В данный момент у группы нет активных мероприятий.\r\n                        </div>\r\n                      )}\r\n                      \r\n                      <h4 className={styles.sectionTitle}>История активностей</h4>\r\n                      \r\n                      {safeActivityInstances\r\n                        .filter(instance => instance && instance.status && \r\n                               instance.status !== 'in_progress' && \r\n                               instance.status !== 'preparing')\r\n                        .slice(0, 5) // Показываем только последние 5 завершенных активностей\r\n                        .map(instance => (\r\n                          <div \r\n                            key={instance.id} \r\n                            className={styles.instanceItem}\r\n                            onClick={() => setSelectedInstance(instance)}\r\n                          >\r\n                            <div className={styles.instanceHeader}>\r\n                              <div className={styles.instanceTitle}>\r\n                                {instance.activityType?.name || 'Активность группы'}\r\n                              </div>\r\n                              <div className={`${styles.instanceStatus} ${\r\n                                instance.status === 'completed' ? styles.statusCompleted :\r\n                                instance.status === 'failed' ? styles.statusFailed :\r\n                                styles.statusAbandoned\r\n                              }`}>\r\n                                {instance.status === 'completed' ? 'Завершена' :\r\n                                instance.status === 'failed' ? 'Провалена' :\r\n                                'Отменена'}\r\n                              </div>\r\n                            </div>\r\n                            \r\n                            <div className={styles.instanceDetail}>\r\n                              <span className={styles.instanceLabel}>Дата:</span>\r\n                              <span className={styles.instanceValue}>\r\n                                {new Date(instance.completedAt || instance.abandonedAt || instance.startedAt).toLocaleDateString()}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      \r\n                      {safeActivityInstances\r\n                        .filter(instance => instance && instance.status && \r\n                               instance.status !== 'in_progress' && \r\n                               instance.status !== 'preparing')\r\n                        .length === 0 && (\r\n                        <div className={styles.emptyMessage}>\r\n                          История активностей пуста.\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ) : (\r\n                    <div className={styles.emptyMessage}>\r\n                      У группы пока нет активностей. Перейдите на вкладку \"Доступные активности\", \r\n                      чтобы создать вашу первую групповую активность.\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <ActivityInstance \r\n                    instance={selectedInstance}\r\n                    onComplete={handleActivityInstanceComplete}\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n            \r\n            {activeTab === 'details' && (\r\n              <div className={styles.groupInfo}>\r\n                <div className={styles.infoSection}>\r\n                  <h4 className={styles.sectionTitle}>Общая информация</h4>\r\n                  \r\n                  <div className={styles.infoRow}>\r\n                    <span className={styles.label}>Создана:</span>\r\n                    <span className={styles.value}>\r\n                      {new Date(group.createdAt).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className={styles.infoRow}>\r\n                    <span className={styles.label}>Тип группы:</span>\r\n                    <span className={styles.value}>\r\n                      {group.isPrivate ? 'Закрытая (только по приглашениям)' : 'Открытая'}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className={styles.infoRow}>\r\n                    <span className={styles.label}>Требуемый уровень:</span>\r\n                    <span className={styles.value}>\r\n                      Уровень {group.minCultivationLevel}+\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className={styles.infoRow}>\r\n                    <span className={styles.label}>Одобрение для вступления:</span>\r\n                    <span className={styles.value}>\r\n                      {group.requiresApproval ? 'Требуется' : 'Не требуется'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className={styles.infoSection}>\r\n                  <h4 className={styles.sectionTitle}>Статистика группы</h4>\r\n                  \r\n                  <div className={styles.infoRow}>\r\n                    <span className={styles.label}>Завершенные активности:</span>\r\n                    <span className={styles.value}>\r\n                      {Array.isArray(group.activityInstances) ? \r\n                        group.activityInstances.filter(a => a && a.status === 'completed').length : 0}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className={styles.infoRow}>\r\n                    <span className={styles.label}>Проваленные активности:</span>\r\n                    <span className={styles.value}>\r\n                      {Array.isArray(group.activityInstances) ? \r\n                        group.activityInstances.filter(a => a && a.status === 'failed').length : 0}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className={styles.infoRow}>\r\n                    <span className={styles.label}>Текущие активности:</span>\r\n                    <span className={styles.value}>\r\n                      {Array.isArray(group.activityInstances) ? \r\n                        group.activityInstances.filter(a => a && (a.status === 'in_progress' || a.status === 'preparing')).length : 0}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupDetails;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"CreateGroupForm_formContainer__GHbg+\",\"title\":\"CreateGroupForm_title__pg55i\",\"form\":\"CreateGroupForm_form__t-kbF\",\"formGroup\":\"CreateGroupForm_formGroup__kIy19\",\"label\":\"CreateGroupForm_label__w+HFq\",\"input\":\"CreateGroupForm_input__VmIn4\",\"textarea\":\"CreateGroupForm_textarea__sGPvz\",\"select\":\"CreateGroupForm_select__4Zm-9\",\"fieldHint\":\"CreateGroupForm_fieldHint__erNS8\",\"checkboxGroup\":\"CreateGroupForm_checkboxGroup__+gLxs\",\"checkboxLabel\":\"CreateGroupForm_checkboxLabel__GYbPX\",\"checkboxText\":\"CreateGroupForm_checkboxText__UYAHN\",\"actions\":\"CreateGroupForm_actions__KhBU-\",\"cancelButton\":\"CreateGroupForm_cancelButton__slN2T\",\"submitButton\":\"CreateGroupForm_submitButton__3hTtL\"};","import React, { useState } from 'react';\r\nimport { useGameContext } from '../../context/GameContext';\r\nimport Button from '../ui/Button';\r\nimport styles from './CreateGroupForm.module.css';\r\n\r\n/**\r\n * Компонент формы для создания новой группы\r\n * @param {Function} onSubmit - Обработчик отправки формы\r\n * @param {Function} onCancel - Обработчик отмены создания\r\n * @param {boolean} loading - Индикатор загрузки\r\n */\r\nconst CreateGroupForm = ({ onSubmit, onCancel, loading }) => {\r\n  const { state } = useGameContext();\r\n  const { cultivation } = state.player;\r\n  \r\n  // Состояние для полей формы\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    maxMembers: 5,\r\n    minCultivationLevel: 1,\r\n    isPrivate: false,\r\n    requiresApproval: true,\r\n    leaderSpecialization: 'damage' // Специализация по умолчанию\r\n  });\r\n  \r\n  // Список доступных специализаций\r\n  const specializations = [\r\n    { id: 'damage', name: 'Урон', description: 'Специализация на нанесении максимального урона' },\r\n    { id: 'tank', name: 'Защита', description: 'Специализация на поглощении урона и защите группы' },\r\n    { id: 'support', name: 'Поддержка', description: 'Специализация на усилении союзников и ослаблении противников' },\r\n    { id: 'control', name: 'Контроль', description: 'Специализация на контроле поля боя и обездвиживании противников' },\r\n    { id: 'healer', name: 'Лечение', description: 'Специализация на восстановлении здоровья союзников' }\r\n  ];\r\n  \r\n  // Обработчик изменения полей формы\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n  \r\n  // Обработчик отправки формы\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Проверка на пустое название\r\n    if (!formData.name.trim()) {\r\n      alert('Пожалуйста, введите название группы');\r\n      return;\r\n    }\r\n    \r\n    // Вызываем обработчик отправки\r\n    onSubmit(formData);\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <h3 className={styles.title}>Создание новой группы</h3>\r\n      \r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <div className={styles.formGroup}>\r\n          <label htmlFor=\"name\" className={styles.label}>Название группы</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            className={styles.input}\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Введите название группы\"\r\n            required\r\n            maxLength={30}\r\n            disabled={loading}\r\n          />\r\n          <div className={styles.fieldHint}>От 2 до 30 символов</div>\r\n        </div>\r\n        \r\n        <div className={styles.formGroup}>\r\n          <label htmlFor=\"description\" className={styles.label}>Описание</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            className={styles.textarea}\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            placeholder=\"Опишите цель вашей группы\"\r\n            rows={3}\r\n            maxLength={200}\r\n            disabled={loading}\r\n          />\r\n          <div className={styles.fieldHint}>До 200 символов</div>\r\n        </div>\r\n        \r\n        <div className={styles.formGroup}>\r\n          <label htmlFor=\"maxMembers\" className={styles.label}>Максимальное количество участников</label>\r\n          <select\r\n            id=\"maxMembers\"\r\n            name=\"maxMembers\"\r\n            className={styles.select}\r\n            value={formData.maxMembers}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          >\r\n            <option value={2}>2 культиватора</option>\r\n            <option value={3}>3 культиватора</option>\r\n            <option value={4}>4 культиватора</option>\r\n            <option value={5}>5 культиваторов</option>\r\n            {cultivation && cultivation.level >= 4 && (\r\n              <>\r\n                <option value={6}>6 культиваторов</option>\r\n                <option value={7}>7 культиваторов</option>\r\n              </>\r\n            )}\r\n            {cultivation && cultivation.level >= 7 && (\r\n              <>\r\n                <option value={8}>8 культиваторов</option>\r\n                <option value={9}>9 культиваторов</option>\r\n                <option value={10}>10 культиваторов</option>\r\n              </>\r\n            )}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className={styles.formGroup}>\r\n          <label htmlFor=\"minCultivationLevel\" className={styles.label}>Минимальный уровень культивации</label>\r\n          <select\r\n            id=\"minCultivationLevel\"\r\n            name=\"minCultivationLevel\"\r\n            className={styles.select}\r\n            value={formData.minCultivationLevel}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          >\r\n            <option value={1}>Уровень 1 (Закалка тела)</option>\r\n            <option value={2}>Уровень 2 (Формирование основания)</option>\r\n            <option value={3}>Уровень 3 (Накопление ци)</option>\r\n            <option value={4}>Уровень 4 (Очищение меридиан)</option>\r\n            <option value={5}>Уровень 5 (Золотое ядро)</option>\r\n            <option value={6}>Уровень 6 (Формирование души)</option>\r\n            <option value={7}>Уровень 7 (Соединение души)</option>\r\n            <option value={8}>Уровень 8 (Восстановление духа)</option>\r\n            <option value={9}>Уровень 9 (Выход ниши)</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div className={styles.formGroup}>\r\n          <label htmlFor=\"leaderSpecialization\" className={styles.label}>Ваша специализация в группе</label>\r\n          <select\r\n            id=\"leaderSpecialization\"\r\n            name=\"leaderSpecialization\"\r\n            className={styles.select}\r\n            value={formData.leaderSpecialization}\r\n            onChange={handleChange}\r\n            disabled={loading}\r\n          >\r\n            {specializations.map(spec => (\r\n              <option key={spec.id} value={spec.id}>\r\n                {spec.name} - {spec.description}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className={styles.checkboxGroup}>\r\n          <label className={styles.checkboxLabel}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isPrivate\"\r\n              checked={formData.isPrivate}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n            />\r\n            <span className={styles.checkboxText}>Закрытая группа (только по приглашениям)</span>\r\n          </label>\r\n        </div>\r\n        \r\n        <div className={styles.checkboxGroup}>\r\n          <label className={styles.checkboxLabel}>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"requiresApproval\"\r\n              checked={formData.requiresApproval}\r\n              onChange={handleChange}\r\n              disabled={loading}\r\n            />\r\n            <span className={styles.checkboxText}>Требовать одобрение для вступления</span>\r\n          </label>\r\n        </div>\r\n        \r\n        <div className={styles.actions}>\r\n          <Button \r\n            type=\"button\" \r\n            onClick={onCancel} \r\n            className={styles.cancelButton}\r\n            disabled={loading}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button \r\n            type=\"submit\" \r\n            className={styles.submitButton}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Создание...' : 'Создать группу'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGroupForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"groupsTab\":\"GroupsTab_groupsTab__+cxqB\",\"header\":\"GroupsTab_header__Q33wy\",\"createButton\":\"GroupsTab_createButton__Er0w8\",\"error\":\"GroupsTab_error__jHYKi\",\"invitations\":\"GroupsTab_invitations__5OFCV\",\"invitation\":\"GroupsTab_invitation__DRVTA\",\"invitationActions\":\"GroupsTab_invitationActions__STOvN\",\"content\":\"GroupsTab_content__7FkXy\",\"groupList\":\"GroupsTab_groupList__IfwFP\",\"groupDetails\":\"GroupsTab_groupDetails__vSWaj\",\"loading\":\"GroupsTab_loading__Hbkb9\"};","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { \r\n  fetchUserGroups, \r\n  setCurrentGroup, \r\n  createGroup,\r\n  fetchGroupActivities,\r\n  fetchGroupActivityInstances,\r\n  fetchUserInvitations,\r\n  respondToInvitation\r\n} from '../../context/actions/groupActions';\r\nimport GroupList from '../group/GroupList';\r\nimport GroupDetails from '../group/GroupDetails';\r\nimport CreateGroupForm from '../group/CreateGroupForm';\r\nimport ActivityInstance from '../group/ActivityInstance';\r\nimport Button from '../ui/Button';\r\nimport styles from './GroupsTab.module.css';\r\n\r\n/**\r\n * Компонент вкладки для работы с группами и групповыми активностями\r\n */\r\nconst GroupsTab = () => {\r\n  const { state, actions } = useGame();\r\n  const { user } = state.player;\r\n  const { \r\n    list: groups, \r\n    currentGroup, \r\n    currentActivity, \r\n    activityInstances,\r\n    invitations\r\n  } = state.groups || { \r\n    list: [], \r\n    currentGroup: null, \r\n    currentActivity: null,\r\n    activityInstances: [],\r\n    invitations: []\r\n  };\r\n  \r\n  // Обеспечиваем, что все массивы определены\r\n  const safeGroups = Array.isArray(groups) ? groups : [];\r\n  const safeActivityInstances = Array.isArray(activityInstances) ? activityInstances : [];\r\n  const safeInvitations = Array.isArray(invitations) ? invitations : [];\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Загружаем группы пользователя, приглашения и доступные активности при монтировании компонента\r\n  useEffect(() => {\r\n    if (user && user.id) {\r\n      loadUserGroups();\r\n      loadUserInvitations();\r\n    }\r\n  }, [user]);\r\n\r\n  // Обновляем приглашения каждые 30 секунд\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (user && user.id) {\r\n        loadUserInvitations();\r\n      }\r\n    }, 30000);\r\n    return () => clearInterval(interval);\r\n  }, [user]);\r\n\r\n  // Загрузка приглашений пользователя\r\n  const loadUserInvitations = useCallback(async () => {\r\n    try {\r\n      await actions.dispatch(fetchUserInvitations(user.id));\r\n    } catch (err) {\r\n      console.error('Ошибка при загрузке приглашений:', err);\r\n      actions.addNotification({\r\n        message: 'Не удалось загрузить приглашения',\r\n        type: 'error'\r\n      });\r\n    }\r\n  }, [user, actions]);\r\n\r\n  // Обработка ответа на приглашение\r\n  const handleInvitationResponse = useCallback(async (invitationId, accept) => {\r\n    try {\r\n      await actions.dispatch(respondToInvitation(invitationId, accept, user.id));\r\n      actions.addNotification({\r\n        message: `Приглашение ${accept ? 'принято' : 'отклонено'}`,\r\n        type: 'success'\r\n      });\r\n      loadUserInvitations();\r\n      if (accept) {\r\n        loadUserGroups(); // Обновляем список групп если приняли приглашение\r\n      }\r\n    } catch (err) {\r\n      console.error('Ошибка при обработке приглашения:', err);\r\n      actions.addNotification({\r\n        message: `Не удалось ${accept ? 'принять' : 'отклонить'} приглашение`,\r\n        type: 'error'\r\n      });\r\n    }\r\n  }, [user, actions, loadUserInvitations]);\r\n\r\n  // Когда выбирается группа, загружаем её активности\r\n  useEffect(() => {\r\n    if (currentGroup && currentGroup.id) {\r\n      loadGroupActivities(currentGroup.id);\r\n    }\r\n  }, [currentGroup]);\r\n\r\n  // Загрузка групп пользователя\r\n  const loadUserGroups = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      await actions.dispatch(fetchUserGroups(user.id));\r\n      \r\n      // Также загружаем доступные активности\r\n      await actions.dispatch(fetchGroupActivities());\r\n    } catch (err) {\r\n      console.error('Ошибка при загрузке групп:', err);\r\n      setError('Не удалось загрузить группы. Пожалуйста, попробуйте позже.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Загрузка активностей группы\r\n  const loadGroupActivities = async (groupId) => {\r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Получаем экземпляры активностей группы\r\n      await actions.dispatch(fetchGroupActivityInstances(groupId));\r\n    } catch (err) {\r\n      console.error('Ошибка при загрузке активностей группы:', err);\r\n      actions.addNotification({\r\n        message: 'Не удалось загрузить активности группы',\r\n        type: 'error'\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Обработка создания новой группы\r\n  const handleCreateGroup = async (groupData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Проверка на наличие ID пользователя перед созданием группы\r\n      if (!user || !user.id) {\r\n        throw new Error('Информация о пользователе недоступна. Пожалуйста, обновите страницу и попробуйте снова.');\r\n      }\r\n      \r\n      await actions.dispatch(createGroup(groupData, user.id));\r\n      setShowCreateForm(false);\r\n      \r\n      // Уведомление о создании группы\r\n      actions.addNotification({\r\n        message: `Группа \"${groupData.name}\" успешно создана`,\r\n        type: 'success'\r\n      });\r\n    } catch (err) {\r\n      console.error('Ошибка при создании группы:', err);\r\n      setError(`Не удалось создать группу: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Обработка выбора группы\r\n  const handleSelectGroup = (group) => {\r\n    actions.dispatch(setCurrentGroup(group));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.groupsTab}>\r\n      <div className={styles.header}>\r\n        <h2>Группы культиваторов</h2>\r\n        {!showCreateForm && (\r\n          <Button \r\n            onClick={() => setShowCreateForm(true)}\r\n            className={styles.createButton}\r\n            disabled={loading}\r\n          >\r\n            Создать группу\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {error && (\r\n        <div className={styles.error}>\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {showCreateForm ? (\r\n        <CreateGroupForm \r\n          onSubmit={handleCreateGroup} \r\n          onCancel={() => setShowCreateForm(false)} \r\n          loading={loading}\r\n        />\r\n      ) : (\r\n        <div className={styles.content}>\r\n          {/* Уведомления о новых приглашениях */}\r\n          {safeInvitations.length > 0 && (\r\n            <div className={styles.invitations}>\r\n              <h3>Новые приглашения ({safeInvitations.length})</h3>\r\n              <ul>\r\n                {safeInvitations.map(invite => (\r\n                  <li key={invite.id} className={styles.invitation}>\r\n                    <div>\r\n                      <strong>{invite.group?.name}</strong> от {invite.inviter?.name}\r\n                      {invite.message && <p>{invite.message}</p>}\r\n                    </div>\r\n                    <div className={styles.invitationActions}>\r\n                      <Button \r\n                        onClick={() => handleInvitationResponse(invite.id, true)}\r\n                        small\r\n                        primary\r\n                      >\r\n                        Принять\r\n                      </Button>\r\n                      <Button \r\n                        onClick={() => handleInvitationResponse(invite.id, false)}\r\n                        small\r\n                        secondary\r\n                      >\r\n                        Отклонить\r\n                      </Button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n          {loading ? (\r\n            <div className={styles.loading}>\r\n              Загрузка групп...\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {/* Если есть активная групповая активность, показываем её */}\r\n              {currentActivity && currentActivity.status && currentActivity.status !== 'completed' && currentActivity.status !== 'failed' && (\r\n                <ActivityInstance \r\n                  instance={currentActivity}\r\n                  onComplete={() => loadUserGroups()}\r\n                  onUpdate={() => {\r\n                    if (currentGroup) {\r\n                      loadGroupActivities(currentGroup.id);\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n              \r\n              {/* Если нет активной активности, показываем список групп и детали */}\r\n              {(!currentActivity || !currentActivity.status || currentActivity.status === 'completed' || currentActivity.status === 'failed') && (\r\n                <>\r\n                  <div className={styles.groupList}>\r\n                    <GroupList \r\n                      groups={safeGroups} \r\n                      selectedGroup={currentGroup} \r\n                      onSelectGroup={handleSelectGroup} \r\n                    />\r\n                  </div>\r\n                  \r\n                  {currentGroup && (\r\n                    <div className={styles.groupDetails}>\r\n                      <GroupDetails \r\n                        group={currentGroup} \r\n                        activityInstances={safeActivityInstances}\r\n                        onRefresh={() => {\r\n                          if (currentGroup && currentGroup.id) {\r\n                            loadGroupActivities(currentGroup.id);\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupsTab;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { \r\n  techniques as defaultTechniques, \r\n  techniqueCategories, \r\n  elementColors \r\n} from '../../data/techniques';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  height: 100%;\r\n`;\r\n\r\nconst TechniquesList = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Categories = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryButton = styled.button`\r\n  background: ${props => props.active ? 'rgba(212, 175, 55, 0.2)' : 'rgba(0, 0, 0, 0.3)'};\r\n  color: ${props => props.active ? '#d4af37' : '#f0f0f0'};\r\n  border: 1px solid ${props => props.active ? '#d4af37' : 'transparent'};\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.1);\r\n    border-color: #d4af37;\r\n  }\r\n`;\r\n\r\nconst TechniqueCard = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid transparent;\r\n  position: relative;\r\n  \r\n  ${props => props.element && `\r\n    &::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: linear-gradient(135deg, ${props.elementColor}20 0%, transparent 100%);\r\n      border-radius: 6px;\r\n      pointer-events: none;\r\n    }\r\n  `}\r\n  \r\n  &:hover {\r\n    border-color: #d4af37;\r\n    transform: translateX(5px);\r\n  }\r\n  \r\n  ${props => props.selected && `\r\n    border-color: #d4af37;\r\n    background: rgba(212, 175, 55, 0.1);\r\n  `}\r\n  \r\n  ${props => !props.available && `\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n    \r\n    &:hover {\r\n      transform: none;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst TechniqueHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TechniqueIcon = styled.span`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst TechniqueTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst TechniqueDescription = styled.p`\r\n  color: #aaa;\r\n  margin: 0 0 10px 0;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst TechniqueStats = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 5px;\r\n  font-size: 0.8rem;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StatRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DetailHeader = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DetailTitle = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 10px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst DetailDescription = styled.p`\r\n  color: #aaa;\r\n  line-height: 1.6;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst EffectsList = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst EffectRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 8px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: ${props => props.disabled ? 'rgba(0, 0, 0, 0.3)' : 'rgba(212, 175, 55, 0.2)'};\r\n  color: ${props => props.disabled ? '#666' : '#d4af37'};\r\n  border: 1px solid ${props => props.disabled ? 'transparent' : '#d4af37'};\r\n  padding: 12px 24px;\r\n  border-radius: 4px;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n  margin-bottom: 20px;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: rgba(212, 175, 55, 0.3);\r\n  }\r\n`;\r\n\r\n// Функция для проверки достаточности валюты\r\nconst hasSufficientCurrency = (playerCurrency, requiredCurrency) => {\r\n  if (!playerCurrency || !requiredCurrency) return false;\r\n  \r\n  // Проверяем каждый тип валюты\r\n  for (const [type, amount] of Object.entries(requiredCurrency)) {\r\n    if ((playerCurrency[type] || 0) < amount) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\nfunction SkillsTab() {\r\n  const { state, actions } = useGame();\r\n  const [selectedCategory, setSelectedCategory] = useState('все');\r\n  const [selectedTechnique, setSelectedTechnique] = useState(null);\r\n  \r\n  // Объединяем техники из состояния с дефолтными\r\n  const allTechniques = defaultTechniques.map(technique => ({\r\n    ...technique,\r\n    learned: state.player.techniques.find(t => t.id === technique.id),\r\n    available: state.player.cultivation.level >= technique.requiredLevel\r\n  }));\r\n  \r\n  const filteredTechniques = allTechniques.filter(technique =>\r\n    selectedCategory === 'все' || technique.type === selectedCategory\r\n  );\r\n  \r\n  const handleTechniqueSelect = (technique) => {\r\n    setSelectedTechnique(technique);\r\n  };\r\n  \r\n  const handleLearnTechnique = () => {\r\n    if (!selectedTechnique || !selectedTechnique.available || selectedTechnique.learned) return;\r\n    \r\n    const cost = selectedTechnique.upgradeCost(1);\r\n    \r\n    if (state.player.cultivation.experience < cost.experience || \r\n        !hasSufficientCurrency(state.player.inventory.currency, cost.currency)) {\r\n      actions.addNotification({\r\n        message: 'Недостаточно ресурсов для изучения техники',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Вызываем действие для изучения техники, включая информацию о стоимости\r\n    actions.learnTechnique({\r\n      ...selectedTechnique,\r\n      cost: cost\r\n    });\r\n    \r\n    // Сразу обновляем локальное состояние, чтобы отобразить изменения без перехода на другую технику\r\n    setSelectedTechnique({\r\n      ...selectedTechnique,\r\n      learned: {\r\n        id: selectedTechnique.id,\r\n        name: selectedTechnique.name,\r\n        level: 1,\r\n        experience: 0,\r\n        learnedAt: new Date().toISOString()\r\n      }\r\n    });\r\n    \r\n    actions.addNotification({\r\n      message: `Вы изучили технику \"${selectedTechnique.name}\"!`,\r\n      type: 'success'\r\n    });\r\n  };\r\n  \r\n  const handleUpgradeTechnique = () => {\r\n    if (!selectedTechnique || !selectedTechnique.learned) return;\r\n    \r\n    const currentLevel = selectedTechnique.learned.level || 1;\r\n    if (currentLevel >= selectedTechnique.maxLevel) {\r\n      actions.addNotification({\r\n        message: 'Техника уже достигла максимального уровня',\r\n        type: 'info'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    const cost = selectedTechnique.upgradeCost(currentLevel + 1);\r\n    \r\n    if (state.player.cultivation.experience < cost.experience || \r\n        !hasSufficientCurrency(state.player.inventory.currency, cost.currency)) {\r\n      actions.addNotification({\r\n        message: 'Недостаточно ресурсов для улучшения техники',\r\n        type: 'error'\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // Вызываем действие для улучшения техники с параметрами: ID техники и стоимость \r\n    actions.upgradeTechnique({\r\n      techniqueId: selectedTechnique.id,\r\n      cost: cost\r\n    });\r\n    \r\n    // Сразу обновляем локальное состояние, чтобы отобразить изменения без перехода на другую технику\r\n    setSelectedTechnique({\r\n      ...selectedTechnique,\r\n      learned: {\r\n        ...selectedTechnique.learned,\r\n        level: currentLevel + 1,\r\n      }\r\n    });\r\n    \r\n    actions.addNotification({\r\n      message: `Техника \"${selectedTechnique.name}\" улучшена до уровня ${currentLevel + 1}!`,\r\n      type: 'success'\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <TechniquesList>\r\n        <Categories>\r\n          {techniqueCategories.map(category => (\r\n            <CategoryButton\r\n              key={category.id}\r\n              active={selectedCategory === category.name}\r\n              onClick={() => setSelectedCategory(category.name)}\r\n            >\r\n              {category.name.charAt(0).toUpperCase() + category.name.slice(1)}\r\n            </CategoryButton>\r\n          ))}\r\n        </Categories>\r\n        \r\n        {filteredTechniques.map(technique => (\r\n          <TechniqueCard\r\n            key={technique.id}\r\n            selected={selectedTechnique?.id === technique.id}\r\n            available={technique.available}\r\n            element={technique.element}\r\n            elementColor={technique.element ? elementColors[technique.element] : null}\r\n            onClick={() => handleTechniqueSelect(technique)}\r\n          >\r\n            <TechniqueHeader>\r\n              <TechniqueIcon>{technique.icon}</TechniqueIcon>\r\n              <TechniqueTitle>\r\n                {technique.name}\r\n                {technique.learned && ` (Ур. ${technique.learned.level || 1})`}\r\n              </TechniqueTitle>\r\n            </TechniqueHeader>\r\n            \r\n            <TechniqueDescription>\r\n              {technique.description}\r\n            </TechniqueDescription>\r\n            \r\n            <TechniqueStats>\r\n              <StatRow>\r\n                <span>Тип:</span>\r\n                <span>{technique.type}</span>\r\n              </StatRow>\r\n              <StatRow>\r\n                <span>Энергия:</span>\r\n                <span>{technique.energyCost}</span>\r\n              </StatRow>\r\n              {technique.cooldown > 0 && (\r\n                <StatRow>\r\n                  <span>Перезарядка:</span>\r\n                  <span>{technique.cooldown}с</span>\r\n                </StatRow>\r\n              )}\r\n              <StatRow>\r\n                <span>Требуемый уровень:</span>\r\n                <span>{technique.requiredLevel}</span>\r\n              </StatRow>\r\n            </TechniqueStats>\r\n          </TechniqueCard>\r\n        ))}\r\n      </TechniquesList>\r\n      \r\n      {selectedTechnique && (\r\n        <Details>\r\n          <DetailHeader>\r\n            <DetailTitle>\r\n              <TechniqueIcon>{selectedTechnique.icon}</TechniqueIcon>\r\n              {selectedTechnique.name}\r\n              {selectedTechnique.learned && ` (Ур. ${selectedTechnique.learned.level || 1})`}\r\n            </DetailTitle>\r\n            <DetailDescription>\r\n              {selectedTechnique.description}\r\n            </DetailDescription>\r\n          </DetailHeader>\r\n          \r\n          {/* Перемещаем кнопку сразу после информации о технике */}\r\n          {selectedTechnique.learned ? (\r\n            <ActionButton\r\n              onClick={handleUpgradeTechnique}\r\n              disabled={\r\n                selectedTechnique.learned.level >= selectedTechnique.maxLevel ||\r\n                state.player.cultivation.experience < selectedTechnique.upgradeCost(selectedTechnique.learned.level + 1).experience ||\r\n                !hasSufficientCurrency(\r\n                  state.player.inventory.currency,\r\n                  selectedTechnique.upgradeCost(selectedTechnique.learned.level + 1).currency\r\n                )\r\n              }\r\n            >\r\n              {selectedTechnique.learned.level >= selectedTechnique.maxLevel\r\n                ? 'Максимальный уровень'\r\n                : (() => {\r\n                    const cost = selectedTechnique.upgradeCost(selectedTechnique.learned.level + 1);\r\n                    const currencyText = Object.entries(cost.currency)\r\n                      .map(([type, amount]) => {\r\n                        const currencyName = type === 'gold' ? 'золота' : type === 'silver' ? 'серебра' : 'меди';\r\n                        return `${amount} ${currencyName}`;\r\n                      })\r\n                      .join(', ');\r\n                    return `Улучшить (${cost.experience} опыта, ${currencyText})`;\r\n                  })()\r\n              }\r\n            </ActionButton>\r\n          ) : (\r\n            <ActionButton\r\n              onClick={handleLearnTechnique}\r\n              disabled={\r\n                !selectedTechnique.available ||\r\n                state.player.cultivation.experience < selectedTechnique.upgradeCost(1).experience ||\r\n                !hasSufficientCurrency(\r\n                  state.player.inventory.currency,\r\n                  selectedTechnique.upgradeCost(1).currency\r\n                )\r\n              }\r\n            >\r\n              {!selectedTechnique.available\r\n                ? `Требуется ${selectedTechnique.requiredLevel} уровень`\r\n                : (() => {\r\n                    const cost = selectedTechnique.upgradeCost(1);\r\n                    const currencyText = Object.entries(cost.currency)\r\n                      .map(([type, amount]) => {\r\n                        const currencyName = type === 'gold' ? 'золота' : type === 'silver' ? 'серебра' : 'меди';\r\n                        return `${amount} ${currencyName}`;\r\n                      })\r\n                      .join(', ');\r\n                    return `Изучить (${cost.experience} опыта, ${currencyText})`;\r\n                  })()\r\n              }\r\n            </ActionButton>\r\n          )}\r\n          \r\n          <EffectsList>\r\n            <h3>Эффекты:</h3>\r\n            {selectedTechnique.effects && selectedTechnique.effects.length > 0 ? (\r\n              selectedTechnique.effects.map((effect, index) => (\r\n                <EffectRow key={index}>\r\n                  <span>{effect.name}:</span>\r\n                  <span>\r\n                    {effect.duration ? `${effect.duration} сек.` : ''}\r\n                    {effect.damage ? ` ${effect.damage} урона` : ''}\r\n                    {effect.healing ? ` ${effect.healing} исцеления` : ''}\r\n                    {effect.stats ? Object.entries(effect.stats).map(([stat, value]) => \r\n                      ` ${stat}: ${value > 0 ? '+' : ''}${value}`).join(', ') : ''}\r\n                  </span>\r\n                </EffectRow>\r\n              ))\r\n            ) : (\r\n              <EffectRow>\r\n                <span>Нет эффектов</span>\r\n                <span>-</span>\r\n              </EffectRow>\r\n            )}\r\n          </EffectsList>\r\n        </Details>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SkillsTab;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  gap: 20px;\r\n`;\r\n\r\nconst RelationshipsList = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst RelationshipCategory = styled.div`\r\n  margin-bottom: 20px;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst CategoryTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px;\r\n  font-size: 1.1rem;\r\n  padding: 5px 10px;\r\n  background: rgba(212, 175, 55, 0.1);\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst RelationshipItem = styled.div`\r\n  padding: 10px;\r\n  margin-bottom: 5px;\r\n  background: ${props => props.isSelected ? 'rgba(212, 175, 55, 0.2)' : 'rgba(0, 0, 0, 0.2)'};\r\n  border: 1px solid ${props => props.isSelected ? '#d4af37' : 'transparent'};\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.1);\r\n  }\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst CharacterInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst CharacterName = styled.div`\r\n  color: #f0f0f0;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst RelationType = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst RelationshipLevel = styled.div`\r\n  color: ${props => props.level >= 75 ? '#4caf50' :\r\n    props.level >= 50 ? '#d4af37' :\r\n    props.level >= 25 ? '#ff9800' : '#f44336'};\r\n`;\r\n\r\nconst InteractionPanel = styled.div`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst CharacterHeader = styled.div`\r\n  margin-bottom: 20px;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst CharacterTitle = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 5px;\r\n`;\r\n\r\nconst CharacterRole = styled.div`\r\n  color: #aaa;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst RelationshipStats = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StatItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst StatLabel = styled.span`\r\n  color: #aaa;\r\n`;\r\n\r\nconst StatValue = styled.span`\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst InteractionsList = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst InteractionButton = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background: rgba(212, 175, 55, 0.2);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #d4af37;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.3);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #333;\r\n    border-color: #666;\r\n    color: #666;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst EventLog = styled.div`\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid rgba(212, 175, 55, 0.2);\r\n`;\r\n\r\nconst EventTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0 0 10px;\r\n`;\r\n\r\nconst EventList = styled.div`\r\n  color: #f0f0f0;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n  \r\n  > div {\r\n    margin-bottom: 5px;\r\n    padding-bottom: 5px;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    \r\n    &:last-child {\r\n      margin-bottom: 0;\r\n      padding-bottom: 0;\r\n      border-bottom: none;\r\n    }\r\n  }\r\n`;\r\n\r\n// Примерные данные для отношений, если они отсутствуют в состоянии\r\nconst defaultRelationships = [\r\n  { id: 1, name: 'Мастер Ли', role: 'Наставник', level: 80, events: ['Вы получили урок от Мастера Ли', 'Мастер Ли похвалил ваш прогресс'] },\r\n  { id: 2, name: 'Старейшина Чжан', role: 'Старейшина секты', level: 60, events: ['Вы помогли Старейшине Чжану собрать травы'] },\r\n  { id: 3, name: 'Ученик Ван', role: 'Соученик', level: 45, events: ['Вы тренировались вместе с Ваном', 'Вы одолжили Вану духовный камень'] },\r\n  { id: 4, name: 'Ученица Мэй', role: 'Соученица', level: 40, events: ['Мэй поделилась с вами техникой культивации'] },\r\n  { id: 5, name: 'Торговец Чен', role: 'Торговец', level: 30, events: ['Вы купили товары у Чена', 'Чен дал вам скидку'] },\r\n  { id: 6, name: 'Глава клана Сюй', role: 'Глава враждебного клана', level: 10, events: ['Глава клана Сюй угрожал вам', 'Вы избежали ловушки клана Сюй'] }\r\n];\r\n\r\nfunction SocialTab() {\r\n  const { state, actions } = useGame();\r\n  const [selectedCharacter, setSelectedCharacter] = useState(null);\r\n  \r\n  // Получаем данные об отношениях с проверкой на существование\r\n  // Сначала проверяем social.relationships (новый формат)\r\n  let relationships = state?.player?.social?.relationships;\r\n  \r\n  // Если social.relationships отсутствует или пуст, пробуем использовать старый формат player.relationships\r\n  if (!relationships || (Array.isArray(relationships) && relationships.length === 0)) {\r\n    relationships = state?.player?.relationships;\r\n    console.log('Используем отношения из player.relationships:', relationships);\r\n  }\r\n  \r\n  // Если всё ещё нет данных, используем defaultRelationships\r\n  if (!relationships) {\r\n    relationships = defaultRelationships;\r\n    console.log('Используем defaultRelationships');\r\n  }\r\n  \r\n  // Убедимся, что relationships - это массив\r\n  if (!Array.isArray(relationships)) {\r\n    // Если это объект, преобразуем его в массив\r\n    relationships = typeof relationships === 'object' && relationships !== null \r\n      ? Object.values(relationships) \r\n      : defaultRelationships;\r\n    \r\n    console.log('Relationships преобразованы из объекта в массив:', relationships);\r\n  }\r\n  \r\n  const cultivation = state?.player?.cultivation || {};\r\n  \r\n  const relationshipCategories = {\r\n    friends: {\r\n      title: 'Друзья',\r\n      characters: Array.isArray(relationships) ? relationships.filter(r => r && typeof r === 'object' && typeof r.level === 'number' && r.level >= 75) : []\r\n    },\r\n    allies: {\r\n      title: 'Союзники',\r\n      characters: Array.isArray(relationships) ? relationships.filter(r => r && typeof r === 'object' && typeof r.level === 'number' && r.level >= 50 && r.level < 75) : []\r\n    },\r\n    neutral: {\r\n      title: 'Нейтральные',\r\n      characters: Array.isArray(relationships) ? relationships.filter(r => r && typeof r === 'object' && typeof r.level === 'number' && r.level >= 25 && r.level < 50) : []\r\n    },\r\n    enemies: {\r\n      title: 'Враги',\r\n      characters: Array.isArray(relationships) ? relationships.filter(r => r && typeof r === 'object' && typeof r.level === 'number' && r.level < 25) : []\r\n    }\r\n  };\r\n  \r\n  const handleCharacterClick = (character) => {\r\n    setSelectedCharacter(character);\r\n  };\r\n  \r\n  const handleInteraction = (type) => {\r\n    if (!selectedCharacter) return;\r\n    \r\n    const energyCost = {\r\n      chat: 5,\r\n      gift: 10,\r\n      train: 20,\r\n      quest: 30\r\n    }[type];\r\n    \r\n    if ((cultivation.energy || 0) < energyCost) {\r\n      if (actions.addNotification) {\r\n        actions.addNotification({\r\n          message: 'Недостаточно духовной энергии для взаимодействия',\r\n          type: 'error'\r\n        });\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Тратим энергию\r\n    if (actions.updateCultivation) {\r\n      actions.updateCultivation({\r\n        energy: (cultivation.energy || 0) - energyCost\r\n      });\r\n    }\r\n    \r\n    // Изменяем отношения\r\n    const relationshipChange = {\r\n      chat: Math.floor(Math.random() * 3) + 1,\r\n      gift: Math.floor(Math.random() * 5) + 3,\r\n      train: Math.floor(Math.random() * 7) + 5,\r\n      quest: Math.floor(Math.random() * 10) + 7\r\n    }[type];\r\n    \r\n    // Обновляем данные персонажа\r\n    const updatedCharacter = {\r\n      ...selectedCharacter,\r\n      level: Math.min(100, selectedCharacter.level + relationshipChange)\r\n    };\r\n    \r\n    // Добавляем событие в лог\r\n    const eventText = {\r\n      chat: `Вы побеседовали с ${selectedCharacter.name}`,\r\n      gift: `Вы подарили подарок ${selectedCharacter.name}`,\r\n      train: `Вы тренировались вместе с ${selectedCharacter.name}`,\r\n      quest: `Вы выполнили задание для ${selectedCharacter.name}`\r\n    }[type];\r\n    \r\n    const updatedEvents = selectedCharacter.events \r\n      ? [...selectedCharacter.events, eventText] \r\n      : [eventText];\r\n    \r\n    // Добавляем событие в обновленный объект персонажа\r\n    const characterWithEvents = {\r\n      ...updatedCharacter,\r\n      events: updatedEvents\r\n    };\r\n    \r\n    // Сохраняем изменения в глобальном состоянии через редуктор\r\n    if (actions.updateRelationship) {\r\n      console.log('Вызываем updateRelationship с данными:', characterWithEvents);\r\n      actions.updateRelationship(characterWithEvents);\r\n    } else {\r\n      console.error('Функция updateRelationship не найдена в actions');\r\n    }\r\n    \r\n    // Обновляем локальное состояние компонента\r\n    setSelectedCharacter(characterWithEvents);\r\n    \r\n    if (actions.addNotification) {\r\n      actions.addNotification({\r\n        message: `Отношения с ${selectedCharacter.name} улучшились на ${relationshipChange}`,\r\n        type: 'success'\r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <RelationshipsList>\r\n        {Object.entries(relationshipCategories).map(([key, category]) => (\r\n          category.characters.length > 0 && (\r\n            <RelationshipCategory key={key}>\r\n              <CategoryTitle>{category.title}</CategoryTitle>\r\n              {category.characters.map(character => (\r\n                <RelationshipItem\r\n                  key={character.id}\r\n                  isSelected={selectedCharacter && selectedCharacter.id === character.id}\r\n                  onClick={() => handleCharacterClick(character)}\r\n                >\r\n                  <CharacterInfo>\r\n                    <div>\r\n                      <CharacterName>{character.name}</CharacterName>\r\n                      <RelationType>{character.role}</RelationType>\r\n                    </div>\r\n                    <RelationshipLevel level={character.level}>\r\n                      {character.level}\r\n                    </RelationshipLevel>\r\n                  </CharacterInfo>\r\n                </RelationshipItem>\r\n              ))}\r\n            </RelationshipCategory>\r\n          )\r\n        ))}\r\n      </RelationshipsList>\r\n      \r\n      <InteractionPanel>\r\n        {selectedCharacter ? (\r\n          <>\r\n            <CharacterHeader>\r\n              <CharacterTitle>{selectedCharacter.name}</CharacterTitle>\r\n              <CharacterRole>{selectedCharacter.role}</CharacterRole>\r\n            </CharacterHeader>\r\n            \r\n            <RelationshipStats>\r\n              <StatItem>\r\n                <StatLabel>Отношение</StatLabel>\r\n                <StatValue>{selectedCharacter.level}/100</StatValue>\r\n              </StatItem>\r\n              <StatItem>\r\n                <StatLabel>Статус</StatLabel>\r\n                <StatValue>\r\n                  {selectedCharacter.level >= 75 ? 'Друг' :\r\n                   selectedCharacter.level >= 50 ? 'Союзник' :\r\n                   selectedCharacter.level >= 25 ? 'Нейтральный' : 'Враг'}\r\n                </StatValue>\r\n              </StatItem>\r\n            </RelationshipStats>\r\n            \r\n            <InteractionsList>\r\n              <InteractionButton\r\n                onClick={() => handleInteraction('chat')}\r\n                disabled={(cultivation.energy || 0) < 5}\r\n              >\r\n                Беседа (5 энергии)\r\n              </InteractionButton>\r\n              <InteractionButton\r\n                onClick={() => handleInteraction('gift')}\r\n                disabled={(cultivation.energy || 0) < 10}\r\n              >\r\n                Подарок (10 энергии)\r\n              </InteractionButton>\r\n              <InteractionButton\r\n                onClick={() => handleInteraction('train')}\r\n                disabled={(cultivation.energy || 0) < 20}\r\n              >\r\n                Тренировка (20 энергии)\r\n              </InteractionButton>\r\n              <InteractionButton\r\n                onClick={() => handleInteraction('quest')}\r\n                disabled={(cultivation.energy || 0) < 30}\r\n              >\r\n                Задание (30 энергии)\r\n              </InteractionButton>\r\n            </InteractionsList>\r\n            \r\n            <EventLog>\r\n              <EventTitle>История взаимодействий</EventTitle>\r\n              <EventList>\r\n                {selectedCharacter.events && selectedCharacter.events.map((event, index) => (\r\n                  <div key={index}>{event}</div>\r\n                ))}\r\n                {(!selectedCharacter.events || selectedCharacter.events.length === 0) && (\r\n                  <div>У вас пока нет истории взаимодействий с этим персонажем</div>\r\n                )}\r\n              </EventList>\r\n            </EventLog>\r\n          </>\r\n        ) : (\r\n          <div style={{ textAlign: 'center', color: '#aaa' }}>\r\n            Выберите персонажа для взаимодействия\r\n          </div>\r\n        )}\r\n      </InteractionPanel>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SocialTab;\r\n","export const achievements = [\r\n  {\r\n    id: 'ach1',\r\n    title: 'Первые шаги',\r\n    description: 'Достигните 1 уровня культивации',\r\n    icon: '👣',\r\n    category: 'культивация',\r\n    rewards: [\r\n      { type: 'experience', amount: 50, icon: '✨' },\r\n      { type: 'currency', amount: 200, icon: '💰' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.cultivation) {\r\n          return false;\r\n        }\r\n        return typeof state.player.cultivation.level === 'number' && state.player.cultivation.level >= 1;\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Первые шаги\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.cultivation) {\r\n          return { current: 0, required: 1 };\r\n        }\r\n        return {\r\n          current: typeof state.player.cultivation.level === 'number' ? state.player.cultivation.level : 0,\r\n          required: 1\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Первые шаги\":', error);\r\n        return { current: 0, required: 1 };\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'ach2',\r\n    title: 'Коллекционер техник',\r\n    description: 'Изучите 5 различных техник культивации',\r\n    icon: '📚',\r\n    category: 'техники',\r\n    rewards: [\r\n      { type: 'experience', amount: 100, icon: '✨' },\r\n      { type: 'item', name: 'Свиток забытой техники', icon: '📜' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.techniques) {\r\n          return false;\r\n        }\r\n        return Array.isArray(state.player.techniques) && state.player.techniques.length >= 5;\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Коллекционер техник\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player) {\r\n          return { current: 0, required: 5 };\r\n        }\r\n        return {\r\n          current: Array.isArray(state.player.techniques) ? state.player.techniques.length : 0,\r\n          required: 5\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Коллекционер техник\":', error);\r\n        return { current: 0, required: 5 };\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'ach3',\r\n    title: 'Исследователь',\r\n    description: 'Откройте 10 новых локаций',\r\n    icon: '🗺️',\r\n    category: 'исследование',\r\n    rewards: [\r\n      { type: 'experience', amount: 150, icon: '✨' },\r\n      { type: 'currency', amount: 1000, icon: '💰' },\r\n      { type: 'item', name: 'Карта сокровищ', icon: '🗺️' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.progress || !state.player.progress.discoveries) {\r\n          return false;\r\n        }\r\n        \r\n        const discoveries = state.player.progress.discoveries;\r\n        \r\n        if (typeof discoveries !== 'object' || discoveries === null || Array.isArray(discoveries)) {\r\n          return false;\r\n        }\r\n        \r\n        try {\r\n          // Безопасно подсчитываем количество открытий\r\n          let count = 0;\r\n          for (const key in discoveries) {\r\n            if (Object.prototype.hasOwnProperty.call(discoveries, key)) {\r\n              count++;\r\n            }\r\n          }\r\n          return count >= 10;\r\n        } catch (error) {\r\n          console.error('Ошибка при подсчете discoveries:', error);\r\n          return false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Исследователь\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.progress || !state.player.progress.discoveries) {\r\n          return { current: 0, required: 10 };\r\n        }\r\n        \r\n        const discoveries = state.player.progress.discoveries;\r\n        let count = 0;\r\n        \r\n        if (discoveries && typeof discoveries === 'object' && !Array.isArray(discoveries) && discoveries !== null) {\r\n          try {\r\n            for (const key in discoveries) {\r\n              if (Object.prototype.hasOwnProperty.call(discoveries, key)) {\r\n                count++;\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error('Ошибка при подсчете discoveries:', error);\r\n          }\r\n        }\r\n        \r\n        return {\r\n          current: count,\r\n          required: 10\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Исследователь\":', error);\r\n        return { current: 0, required: 10 };\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'ach4',\r\n    title: 'Мастер медитации',\r\n    description: 'Накопите 1000 единиц духовной энергии',\r\n    icon: '🧘',\r\n    category: 'культивация',\r\n    rewards: [\r\n      { type: 'experience', amount: 200, icon: '✨' },\r\n      { type: 'item', name: 'Пилюля концентрации', icon: '💊' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.cultivation) {\r\n          return false;\r\n        }\r\n        return typeof state.player.cultivation.energy === 'number' && state.player.cultivation.energy >= 1000;\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Мастер медитации\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.cultivation) {\r\n          return { current: 0, required: 1000 };\r\n        }\r\n        return {\r\n          current: typeof state.player.cultivation.energy === 'number' ? state.player.cultivation.energy : 0,\r\n          required: 1000\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Мастер медитации\":', error);\r\n        return { current: 0, required: 1000 };\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'ach5',\r\n    title: 'Помощник',\r\n    description: 'Выполните 10 заданий',\r\n    icon: '🤝',\r\n    category: 'задания',\r\n    rewards: [\r\n      { type: 'experience', amount: 200, icon: '✨' },\r\n      { type: 'currency', amount: 1500, icon: '💰' },\r\n      { type: 'reputation', amount: 500, icon: '⭐' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.progress || !state.player.progress.quests || !state.player.progress.quests.completed) {\r\n          return false;\r\n        }\r\n        return Array.isArray(state.player.progress.quests.completed) && state.player.progress.quests.completed.length >= 10;\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Помощник\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.progress || !state.player.progress.quests) {\r\n          return { current: 0, required: 10 };\r\n        }\r\n        return {\r\n          current: Array.isArray(state.player.progress.quests.completed) ? state.player.progress.quests.completed.length : 0,\r\n          required: 10\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Помощник\":', error);\r\n        return { current: 0, required: 10 };\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'ach6',\r\n    title: 'Богатство',\r\n    description: 'Накопите 10000 монет',\r\n    icon: '💰',\r\n    category: 'экономика',\r\n    rewards: [\r\n      { type: 'item', name: 'Кошель удачи', icon: '👝' },\r\n      { type: 'currency', amount: 2000, icon: '💰' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.inventory) {\r\n          return false;\r\n        }\r\n        \r\n        const currency = state.player.inventory.currency;\r\n        \r\n        if (currency === undefined || currency === null) {\r\n          return false;\r\n        }\r\n        \r\n        if (typeof currency === 'number') {\r\n          return currency >= 10000;\r\n        }\r\n        \r\n        if (typeof currency === 'object' && !Array.isArray(currency) && currency !== null) {\r\n          // Безопасный подсчет суммы валют\r\n          let total = 0;\r\n          try {\r\n            for (const key in currency) {\r\n              if (Object.prototype.hasOwnProperty.call(currency, key)) {\r\n                const value = currency[key];\r\n                if (typeof value === 'number') {\r\n                  total += value;\r\n                }\r\n              }\r\n            }\r\n            return total >= 10000;\r\n          } catch (error) {\r\n            console.error('Ошибка при подсчете валюты:', error);\r\n            return false;\r\n          }\r\n        }\r\n        \r\n        return false;\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Богатство\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.inventory) {\r\n          return { current: 0, required: 10000 };\r\n        }\r\n        \r\n        const currency = state.player.inventory.currency;\r\n        let current = 0;\r\n        \r\n        if (typeof currency === 'number') {\r\n          current = currency;\r\n        } else if (typeof currency === 'object' && currency !== null && !Array.isArray(currency)) {\r\n          try {\r\n            for (const key in currency) {\r\n              if (Object.prototype.hasOwnProperty.call(currency, key)) {\r\n                const value = currency[key];\r\n                if (typeof value === 'number') {\r\n                  current += value;\r\n                }\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error('Ошибка при подсчете валюты в прогрессе:', error);\r\n          }\r\n        }\r\n        \r\n        return {\r\n          current,\r\n          required: 10000\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Богатство\":', error);\r\n        return { current: 0, required: 10000 };\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'ach7',\r\n    title: 'Мастер боевых искусств',\r\n    description: 'Достигните 10 уровня культивации',\r\n    icon: '🥋',\r\n    category: 'культивация',\r\n    rewards: [\r\n      { type: 'experience', amount: 500, icon: '✨' },\r\n      { type: 'technique', name: 'Искусство Бессмертного Меча', icon: '⚔️' },\r\n      { type: 'currency', amount: 5000, icon: '💰' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.cultivation) {\r\n          return false;\r\n        }\r\n        return typeof state.player.cultivation.level === 'number' && state.player.cultivation.level >= 10;\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Мастер боевых искусств\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player || !state.player.cultivation) {\r\n          return { current: 0, required: 10 };\r\n        }\r\n        return {\r\n          current: typeof state.player.cultivation.level === 'number' ? state.player.cultivation.level : 0,\r\n          required: 10\r\n        };\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Мастер боевых искусств\":', error);\r\n        return { current: 0, required: 10 };\r\n      }\r\n    }\r\n  },\r\n  {\r\n    id: 'ach8',\r\n    title: 'Социальные связи',\r\n    description: 'Установите дружеские отношения с 5 NPC',\r\n    icon: '🤝',\r\n    category: 'социальное',\r\n    rewards: [\r\n      { type: 'reputation', amount: 1000, icon: '⭐' },\r\n      { type: 'currency', amount: 1000, icon: '💰' }\r\n    ],\r\n    condition: (state) => {\r\n      try {\r\n        // Проверяем наличие всех необходимых объектов\r\n        if (!state || !state.player) {\r\n          return false;\r\n        }\r\n        \r\n        // Проверяем оба возможных местоположения отношений\r\n        let relationships = null;\r\n        \r\n        // Проверяем relationships в social\r\n        if (state.player.social && state.player.social.relationships) {\r\n          relationships = state.player.social.relationships;\r\n        } \r\n        // Проверяем relationships напрямую в player\r\n        else if (state.player.relationships) {\r\n          relationships = state.player.relationships;\r\n        }\r\n        \r\n        // Если отношения не найдены нигде\r\n        if (!relationships) {\r\n          return false;\r\n        }\r\n        \r\n        try {\r\n          // Безопасный подсчет дружественных NPC\r\n          let friendlyCount = 0;\r\n          \r\n          // Если relationships - это массив (как в нашем случае)\r\n          if (Array.isArray(relationships)) {\r\n            // Дополнительная проверка, что filter может быть вызван\r\n            try {\r\n              friendlyCount = relationships.filter(relation => \r\n                relation && \r\n                typeof relation === 'object' && \r\n                typeof relation.level === 'number' && \r\n                relation.level >= 75\r\n              ).length;\r\n            } catch (filterError) {\r\n              console.error('Ошибка при вызове filter для relationships:', filterError);\r\n              // Если filter не сработал, используем цикл для ручного подсчета\r\n              friendlyCount = 0;\r\n              for (let i = 0; i < relationships.length; i++) {\r\n                const relation = relationships[i];\r\n                if (relation && \r\n                    typeof relation === 'object' && \r\n                    typeof relation.level === 'number' && \r\n                    relation.level >= 75) {\r\n                  friendlyCount++;\r\n                }\r\n              }\r\n            }\r\n          } \r\n          // Обратная совместимость для старого формата (объект)\r\n          else if (typeof relationships === 'object') {\r\n            for (const npcId in relationships) {\r\n              if (Object.prototype.hasOwnProperty.call(relationships, npcId)) {\r\n                const relation = relationships[npcId];\r\n                \r\n                if (relation && \r\n                    typeof relation === 'object' && \r\n                    !Array.isArray(relation) && \r\n                    typeof relation.level === 'number' && \r\n                    relation.level >= 75) {\r\n                  friendlyCount++;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          return friendlyCount >= 5;\r\n        } catch (error) {\r\n          console.error('Ошибка при проверке отношений:', error);\r\n          return false;\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка в достижении \"Социальные связи\":', error);\r\n        return false;\r\n      }\r\n    },\r\n    progress: (state) => {\r\n      try {\r\n        if (!state || !state.player) {\r\n          return { current: 0, required: 5 };\r\n        }\r\n        \r\n        // Проверяем оба возможных местоположения отношений\r\n        let relationships = null;\r\n        \r\n        // Проверяем relationships в social\r\n        if (state.player.social && state.player.social.relationships) {\r\n          relationships = state.player.social.relationships;\r\n        } \r\n        // Проверяем relationships напрямую в player\r\n        else if (state.player.relationships) {\r\n          relationships = state.player.relationships;\r\n        }\r\n        \r\n        // Если отношения не найдены нигде\r\n        if (!relationships) {\r\n          return { current: 0, required: 5 };\r\n        }\r\n        \r\n        try {\r\n          // Безопасный подсчет дружественных NPC\r\n          let friendlyCount = 0;\r\n          \r\n          // Если relationships - это массив (как в нашем случае)\r\n          if (Array.isArray(relationships)) {\r\n            // Дополнительная проверка, что filter может быть вызван\r\n            try {\r\n              friendlyCount = relationships.filter(relation => \r\n                relation && \r\n                typeof relation === 'object' && \r\n                typeof relation.level === 'number' && \r\n                relation.level >= 75\r\n              ).length;\r\n            } catch (filterError) {\r\n              console.error('Ошибка при вызове filter для relationships в progress:', filterError);\r\n              // Если filter не сработал, используем цикл для ручного подсчета\r\n              friendlyCount = 0;\r\n              for (let i = 0; i < relationships.length; i++) {\r\n                const relation = relationships[i];\r\n                if (relation && \r\n                    typeof relation === 'object' && \r\n                    typeof relation.level === 'number' && \r\n                    relation.level >= 75) {\r\n                  friendlyCount++;\r\n                }\r\n              }\r\n            }\r\n          } \r\n          // Обратная совместимость для старого формата (объект)\r\n          else if (typeof relationships === 'object') {\r\n            for (const npcId in relationships) {\r\n              if (Object.prototype.hasOwnProperty.call(relationships, npcId)) {\r\n                const relation = relationships[npcId];\r\n                \r\n                if (relation && \r\n                    typeof relation === 'object' && \r\n                    !Array.isArray(relation) && \r\n                    typeof relation.level === 'number' && \r\n                    relation.level >= 75) {\r\n                  friendlyCount++;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          \r\n          return { current: friendlyCount, required: 5 };\r\n        } catch (error) {\r\n          console.error('Ошибка при подсчете прогресса отношений:', error);\r\n          return { current: 0, required: 5 };\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка в прогрессе \"Социальные связи\":', error);\r\n        return { current: 0, required: 5 };\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nexport const achievementCategories = [\r\n  { id: 'all', name: 'все' },\r\n  { id: 'cultivation', name: 'культивация' },\r\n  { id: 'techniques', name: 'техники' },\r\n  { id: 'exploration', name: 'исследование' },\r\n  { id: 'quests', name: 'задания' },\r\n  { id: 'economy', name: 'экономика' },\r\n  { id: 'social', name: 'социальное' }\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { achievements as defaultAchievements, achievementCategories } from '../../data/achievements';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  height: 100%;\r\n`;\r\n\r\nconst AchievementsList = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Categories = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryButton = styled.button`\r\n  background: ${props => props.active ? 'rgba(212, 175, 55, 0.2)' : 'rgba(0, 0, 0, 0.3)'};\r\n  color: ${props => props.active ? '#d4af37' : '#f0f0f0'};\r\n  border: 1px solid ${props => props.active ? '#d4af37' : 'transparent'};\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.1);\r\n    border-color: #d4af37;\r\n  }\r\n`;\r\n\r\nconst AchievementCard = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-radius: 6px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid transparent;\r\n  \r\n  &:hover {\r\n    border-color: #d4af37;\r\n    transform: translateX(5px);\r\n  }\r\n  \r\n  ${props => props.selected && `\r\n    border-color: #d4af37;\r\n    background: rgba(212, 175, 55, 0.1);\r\n  `}\r\n  \r\n  ${props => props.completed && `\r\n    border-color: #4caf50;\r\n    &::after {\r\n      content: '✓';\r\n      color: #4caf50;\r\n      position: absolute;\r\n      right: 15px;\r\n      top: 15px;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst AchievementHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst AchievementIcon = styled.span`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst AchievementTitle = styled.h3`\r\n  color: #d4af37;\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst AchievementDescription = styled.p`\r\n  color: #aaa;\r\n  margin: 0 0 10px 0;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  width: 100%;\r\n  height: 4px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 2px;\r\n  overflow: hidden;\r\n  \r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    width: ${props => (props.progress * 100)}%;\r\n    height: 100%;\r\n    background: ${props => props.completed ? '#4caf50' : '#d4af37'};\r\n    transition: width 0.3s ease;\r\n  }\r\n`;\r\n\r\nconst ProgressText = styled.div`\r\n  font-size: 0.8rem;\r\n  color: #aaa;\r\n  text-align: right;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DetailHeader = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DetailTitle = styled.h2`\r\n  color: #d4af37;\r\n  margin: 0 0 10px 0;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst DetailDescription = styled.p`\r\n  color: #aaa;\r\n  line-height: 1.6;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Rewards = styled.div`\r\n  margin-top: auto;\r\n`;\r\n\r\nconst RewardItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 8px;\r\n  background: rgba(212, 175, 55, 0.1);\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst Stats = styled.div`\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst StatRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nfunction AchievementsTab() {\r\n  const { state } = useGame();\r\n  const [selectedCategory, setSelectedCategory] = useState('все');\r\n  const [selectedAchievement, setSelectedAchievement] = useState(null);\r\n  const [stats, setStats] = useState({\r\n    total: 0,\r\n    completed: 0,\r\n    points: 0\r\n  });\r\n  \r\n  // Проверяем достижения и обновляем статистику\r\n  useEffect(() => {\r\n    const completedAchievements = defaultAchievements.filter(\r\n      achievement => achievement.condition(state)\r\n    );\r\n    \r\n    setStats({\r\n      total: defaultAchievements.length,\r\n      completed: completedAchievements.length,\r\n      points: completedAchievements.reduce((sum, ach) => \r\n        sum + ach.rewards.reduce((total, reward) => \r\n          total + (reward.amount || 0), 0\r\n        ), 0\r\n      )\r\n    });\r\n  }, [state]);\r\n  \r\n  const filteredAchievements = defaultAchievements.filter(achievement =>\r\n    selectedCategory === 'все' || achievement.category === selectedCategory\r\n  );\r\n  \r\n  const handleAchievementSelect = (achievement) => {\r\n    setSelectedAchievement(achievement);\r\n  };\r\n  \r\n  return (\r\n    <Container>\r\n      <AchievementsList>\r\n        <Categories>\r\n          {achievementCategories.map(category => (\r\n            <CategoryButton\r\n              key={category.id}\r\n              active={selectedCategory === category.name}\r\n              onClick={() => setSelectedCategory(category.name)}\r\n            >\r\n              {category.name.charAt(0).toUpperCase() + category.name.slice(1)}\r\n            </CategoryButton>\r\n          ))}\r\n        </Categories>\r\n        \r\n        <Stats>\r\n          <StatRow>\r\n            <span>Всего достижений:</span>\r\n            <span>{stats.total}</span>\r\n          </StatRow>\r\n          <StatRow>\r\n            <span>Выполнено:</span>\r\n            <span>{stats.completed}</span>\r\n          </StatRow>\r\n          <StatRow>\r\n            <span>Очки достижений:</span>\r\n            <span>{stats.points}</span>\r\n          </StatRow>\r\n        </Stats>\r\n        \r\n        {filteredAchievements.map(achievement => {\r\n          const progress = achievement.progress(state);\r\n          const completed = achievement.condition(state);\r\n          \r\n          return (\r\n            <AchievementCard\r\n              key={achievement.id}\r\n              selected={selectedAchievement?.id === achievement.id}\r\n              completed={completed}\r\n              onClick={() => handleAchievementSelect(achievement)}\r\n            >\r\n              <AchievementHeader>\r\n                <AchievementIcon>{achievement.icon}</AchievementIcon>\r\n                <AchievementTitle>{achievement.title}</AchievementTitle>\r\n              </AchievementHeader>\r\n              \r\n              <AchievementDescription>\r\n                {achievement.description}\r\n              </AchievementDescription>\r\n              \r\n              <ProgressBar \r\n                progress={Math.min(progress.current / progress.required, 1)}\r\n                completed={completed}\r\n              />\r\n              <ProgressText>\r\n                {progress.current} / {progress.required}\r\n              </ProgressText>\r\n            </AchievementCard>\r\n          );\r\n        })}\r\n      </AchievementsList>\r\n      \r\n      {selectedAchievement && (\r\n        <Details>\r\n          <DetailHeader>\r\n            <DetailTitle>\r\n              <AchievementIcon>{selectedAchievement.icon}</AchievementIcon>\r\n              {selectedAchievement.title}\r\n            </DetailTitle>\r\n            <DetailDescription>\r\n              {selectedAchievement.description}\r\n            </DetailDescription>\r\n          </DetailHeader>\r\n          \r\n          <Stats>\r\n            <StatRow>\r\n              <span>Категория:</span>\r\n              <span>{selectedAchievement.category}</span>\r\n            </StatRow>\r\n            <StatRow>\r\n              <span>Статус:</span>\r\n              <span style={{ color: selectedAchievement.condition(state) ? '#4caf50' : '#f0f0f0' }}>\r\n                {selectedAchievement.condition(state) ? 'Выполнено' : 'В процессе'}\r\n              </span>\r\n            </StatRow>\r\n            <StatRow>\r\n              <span>Прогресс:</span>\r\n              <span>\r\n                {selectedAchievement.progress(state).current} / {selectedAchievement.progress(state).required}\r\n              </span>\r\n            </StatRow>\r\n          </Stats>\r\n          \r\n          <Rewards>\r\n            <h3>Награды:</h3>\r\n            {selectedAchievement.rewards.map((reward, index) => (\r\n              <RewardItem key={index}>\r\n                <span>{reward.icon}</span>\r\n                {reward.type === 'currency' && `${reward.amount} монет`}\r\n                {reward.type === 'experience' && `${reward.amount} опыта`}\r\n                {reward.type === 'item' && reward.name}\r\n                {reward.type === 'reputation' && `${reward.amount} очков репутации`}\r\n              </RewardItem>\r\n            ))}\r\n          </Rewards>\r\n        </Details>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AchievementsTab; ","import React, { useState, useEffect } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport styled from 'styled-components';\r\n\r\n// Стилизованные компоненты\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: 20px;\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst TabHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TabTitle = styled.h2`\r\n  font-size: 24px;\r\n  margin: 0;\r\n  color: #ffd700;\r\n`;\r\n\r\nconst TabContent = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  gap: 20px;\r\n`;\r\n\r\nconst LeftPanel = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst RightPanel = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TabMenu = styled.div`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #444;\r\n`;\r\n\r\nconst TabButton = styled.button`\r\n  background: ${props => props.active ? 'rgba(255, 215, 0, 0.2)' : 'transparent'};\r\n  color: ${props => props.active ? '#ffd700' : '#ccc'};\r\n  border: none;\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-bottom: ${props => props.active ? '2px solid #ffd700' : 'none'};\r\n  transition: all 0.3s;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 215, 0, 0.1);\r\n    color: #ffd700;\r\n  }\r\n`;\r\n\r\nconst RecipeList = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst RecipeCard = styled.div`\r\n  display: flex;\r\n  background: ${props => props.selected ? 'rgba(255, 215, 0, 0.1)' : 'rgba(30, 30, 30, 0.7)'};\r\n  border: 1px solid ${props => props.selected ? '#ffd700' : '#444'};\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 215, 0, 0.05);\r\n    border-color: #ffd700;\r\n  }\r\n`;\r\n\r\nconst RecipeIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background: #333;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst RecipeInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst RecipeName = styled.div`\r\n  font-weight: bold;\r\n  color: ${props => {\r\n    switch(props.rarity) {\r\n      case 'common': return '#aaa';\r\n      case 'uncommon': return '#1eff00';\r\n      case 'rare': return '#0070dd';\r\n      case 'epic': return '#a335ee';\r\n      case 'legendary': return '#ff8000';\r\n      default: return '#aaa';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst RecipeDescription = styled.div`\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst RecipeDetails = styled.div`\r\n  padding: 15px;\r\n  background: rgba(30, 30, 30, 0.7);\r\n  border-radius: 5px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst DetailTitle = styled.h3`\r\n  margin: 0 0 10px 0;\r\n  color: #ffd700;\r\n`;\r\n\r\nconst DetailRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst DetailLabel = styled.div`\r\n  color: #aaa;\r\n`;\r\n\r\nconst DetailValue = styled.div`\r\n  color: #fff;\r\n`;\r\n\r\nconst IngredientsList = styled.div`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst IngredientItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  background: ${props => props.available ? 'rgba(0, 128, 0, 0.1)' : 'rgba(128, 0, 0, 0.1)'};\r\n`;\r\n\r\nconst IngredientName = styled.div`\r\n  flex: 1;\r\n  color: ${props => props.available ? '#5f5' : '#f55'};\r\n`;\r\n\r\nconst IngredientQuantity = styled.div`\r\n  color: ${props => props.available ? '#5f5' : '#f55'};\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: ${props => props.primary ? 'rgba(255, 215, 0, 0.2)' : 'rgba(80, 80, 80, 0.3)'};\r\n  color: ${props => props.primary ? '#ffd700' : '#ccc'};\r\n  border: 1px solid ${props => props.primary ? '#ffd700' : '#444'};\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n  margin-top: 15px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  \r\n  &:hover {\r\n    background: ${props => props.primary ? 'rgba(255, 215, 0, 0.3)' : 'rgba(80, 80, 80, 0.5)'};\r\n  }\r\n  \r\n  &:disabled {\r\n    background: rgba(50, 50, 50, 0.3);\r\n    color: #666;\r\n    border-color: #333;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  background: rgba(30, 30, 30, 0.7);\r\n  color: #fff;\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  font-size: 16px;\r\n  \r\n  &::placeholder {\r\n    color: #777;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst FilterSelect = styled.select`\r\n  background: rgba(30, 30, 30, 0.7);\r\n  color: #fff;\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst NoRecipesMessage = styled.div`\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #777;\r\n  font-style: italic;\r\n`;\r\n\r\nconst ResultMessage = styled.div`\r\n  margin-top: 20px;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  background: ${props => props.success ? 'rgba(0, 128, 0, 0.2)' : 'rgba(128, 0, 0, 0.2)'};\r\n  color: ${props => props.success ? '#5f5' : '#f55'};\r\n  text-align: center;\r\n`;\r\n\r\nconst CraftingProgress = styled.div`\r\n  margin-top: 20px;\r\n  height: 20px;\r\n  background: rgba(30, 30, 30, 0.7);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ProgressBar = styled.div`\r\n  height: 100%;\r\n  width: ${props => props.progress}%;\r\n  background: linear-gradient(to right, #ffd700, #ffaa00);\r\n  border-radius: 10px;\r\n  transition: width 0.1s linear;\r\n`;\r\n\r\n/**\r\n * Компонент вкладки \"Алхимия\"\r\n */\r\nconst AlchemyTab = () => {\r\n  const { state, actions } = useGame();\r\n  const { player, cultivation } = state;\r\n  \r\n  // Состояние компонента\r\n  const [activeTab, setActiveTab] = useState('pills'); // pills, talismans, weapons, armor, accessories\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [rarityFilter, setRarityFilter] = useState('all');\r\n  const [craftingStatus, setCraftingStatus] = useState(null); // null, 'crafting', 'success', 'failed'\r\n  const [craftingProgress, setCraftingProgress] = useState(0);\r\n  const [craftingResult, setCraftingResult] = useState(null);\r\n  \r\n  // Получение типа рецептов для активной вкладки\r\n  const getRecipeType = () => {\r\n    switch (activeTab) {\r\n      case 'pills': return 'pill';\r\n      case 'talismans': return 'talisman';\r\n      case 'weapons': return 'weapon';\r\n      case 'armor': return 'armor';\r\n      case 'accessories': return 'accessory';\r\n      default: return 'pill';\r\n    }\r\n  };\r\n  \r\n  // Загрузка рецептов при изменении вкладки\r\n  useEffect(() => {\r\n    const loadRecipes = async () => {\r\n      try {\r\n        // Здесь должен быть вызов API для получения рецептов\r\n        // Например: const response = await api.get(`/alchemy/recipes/${getRecipeType()}`);\r\n        \r\n        // Получаем текущий тип рецептов на основе активной вкладки\r\n        const currentType = getRecipeType();\r\n        \r\n        // Заглушка для демонстрации - в реальной реализации данные должны приходить с сервера\r\n        let mockRecipes = [];\r\n        \r\n        // Пилюли\r\n        if (currentType === 'pill') {\r\n          mockRecipes = [\r\n            {\r\n              id: 1,\r\n              name: 'Пилюля сбора ци',\r\n              description: 'Базовая пилюля, помогающая собирать и очищать ци.',\r\n              type: 'pill',\r\n              rarity: 'common',\r\n              requiredLevel: 1,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 95,\r\n              ingredients: [\r\n                { id: 'low_grade_herb', name: 'Трава низкого качества', quantity: 3 },\r\n                { id: 'medium_grade_herb', name: 'Трава среднего качества', quantity: 1 }\r\n              ]\r\n            },\r\n            {\r\n              id: 2,\r\n              name: 'Пилюля укрепления тела',\r\n              description: 'Укрепляет физическое тело, повышая выносливость и силу культиватора.',\r\n              type: 'pill',\r\n              rarity: 'uncommon',\r\n              requiredLevel: 3,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 85,\r\n              ingredients: [\r\n                { id: 'low_grade_herb', name: 'Трава низкого качества', quantity: 2 },\r\n                { id: 'medium_grade_herb', name: 'Трава среднего качества', quantity: 2 },\r\n                { id: 'spirit_iron', name: 'Духовное железо', quantity: 1 }\r\n              ]\r\n            },\r\n            {\r\n              id: 3,\r\n              name: 'Пилюля очищения меридианов',\r\n              description: 'Очищает и расширяет меридианы, облегчая циркуляцию ци по телу.',\r\n              type: 'pill',\r\n              rarity: 'uncommon',\r\n              requiredLevel: 5,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 80,\r\n              ingredients: [\r\n                { id: 'medium_grade_herb', name: 'Трава среднего качества', quantity: 3 },\r\n                { id: 'water_essence', name: 'Водная эссенция', quantity: 1 },\r\n                { id: 'spirit_stone', name: 'Духовный камень', quantity: 2 }\r\n              ]\r\n            }\r\n          ];\r\n        } \r\n        // Талисманы\r\n        else if (currentType === 'talisman') {\r\n          mockRecipes = [\r\n            {\r\n              id: 4,\r\n              name: 'Талисман отражения',\r\n              description: 'Базовый защитный талисман, отражающий слабые атаки.',\r\n              type: 'talisman',\r\n              rarity: 'common',\r\n              requiredLevel: 2,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 90,\r\n              ingredients: [\r\n                { id: 'spirit_paper', name: 'Духовная бумага', quantity: 2 },\r\n                { id: 'spirit_ink', name: 'Духовные чернила', quantity: 1 }\r\n              ]\r\n            },\r\n            {\r\n              id: 5,\r\n              name: 'Талисман огненной птицы',\r\n              description: 'Атакующий талисман, высвобождающий огненную энергию в форме птицы.',\r\n              type: 'talisman',\r\n              rarity: 'uncommon',\r\n              requiredLevel: 4,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 80,\r\n              ingredients: [\r\n                { id: 'spirit_paper', name: 'Духовная бумага', quantity: 3 },\r\n                { id: 'spirit_ink', name: 'Духовные чернила', quantity: 2 },\r\n                { id: 'fire_essence', name: 'Огненная эссенция', quantity: 2 }\r\n              ]\r\n            }\r\n          ];\r\n        } \r\n        // Оружие\r\n        else if (currentType === 'weapon') {\r\n          mockRecipes = [\r\n            {\r\n              id: 6,\r\n              name: 'Духовный кинжал',\r\n              description: 'Кинжал, способный проводить духовную энергию и наносить урон как физическим, так и духовным телам.',\r\n              type: 'weapon',\r\n              rarity: 'uncommon',\r\n              requiredLevel: 5,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 70,\r\n              ingredients: [\r\n                { id: 'spirit_iron', name: 'Духовное железо', quantity: 5 },\r\n                { id: 'spirit_stone', name: 'Духовный камень', quantity: 3 },\r\n                { id: 'spirit_essence', name: 'Эссенция духа', quantity: 1 }\r\n              ]\r\n            },\r\n            {\r\n              id: 7,\r\n              name: 'Меч пяти элементов',\r\n              description: 'Меч, способный проводить энергию пяти элементов, усиливая атаки соответствующей стихией.',\r\n              type: 'weapon',\r\n              rarity: 'rare',\r\n              requiredLevel: 3,\r\n              requiredStage: 'Очищение Ци',\r\n              successRate: 60,\r\n              ingredients: [\r\n                { id: 'spirit_iron', name: 'Духовное железо', quantity: 8 },\r\n                { id: 'spirit_crystal', name: 'Духовный кристалл', quantity: 3 },\r\n                { id: 'fire_essence', name: 'Огненная эссенция', quantity: 2 },\r\n                { id: 'water_essence', name: 'Водная эссенция', quantity: 2 }\r\n              ]\r\n            }\r\n          ];\r\n        } \r\n        // Броня\r\n        else if (currentType === 'armor') {\r\n          mockRecipes = [\r\n            {\r\n              id: 8,\r\n              name: 'Духовные одежды начального уровня',\r\n              description: 'Одежды, пропитанные духовной энергией, обеспечивающие базовую защиту от физических и духовных атак.',\r\n              type: 'armor',\r\n              rarity: 'uncommon',\r\n              requiredLevel: 4,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 75,\r\n              ingredients: [\r\n                { id: 'spirit_silk', name: 'Духовный шелк', quantity: 6 },\r\n                { id: 'spirit_thread', name: 'Духовная нить', quantity: 4 },\r\n                { id: 'spirit_essence', name: 'Эссенция духа', quantity: 2 }\r\n              ]\r\n            }\r\n          ];\r\n        } \r\n        // Аксессуары\r\n        else if (currentType === 'accessory') {\r\n          mockRecipes = [\r\n            {\r\n              id: 9,\r\n              name: 'Кольцо духовного усиления',\r\n              description: 'Кольцо, усиливающее контроль над духовной энергией и ускоряющее её восстановление.',\r\n              type: 'accessory',\r\n              rarity: 'uncommon',\r\n              requiredLevel: 3,\r\n              requiredStage: 'Закалка тела',\r\n              successRate: 80,\r\n              ingredients: [\r\n                { id: 'spirit_iron', name: 'Духовное железо', quantity: 3 },\r\n                { id: 'spirit_stone', name: 'Духовный камень', quantity: 2 },\r\n                { id: 'spirit_essence', name: 'Эссенция духа', quantity: 1 }\r\n              ]\r\n            },\r\n            {\r\n              id: 10,\r\n              name: 'Амулет пяти элементов',\r\n              description: 'Амулет, усиливающий контроль над энергиями пяти стихий и обеспечивающий защиту от них.',\r\n              type: 'accessory',\r\n              rarity: 'rare',\r\n              requiredLevel: 4,\r\n              requiredStage: 'Очищение Ци',\r\n              successRate: 70,\r\n              ingredients: [\r\n                { id: 'spirit_stone', name: 'Духовный камень', quantity: 5 },\r\n                { id: 'spirit_crystal', name: 'Духовный кристалл', quantity: 2 },\r\n                { id: 'fire_essence', name: 'Огненная эссенция', quantity: 1 },\r\n                { id: 'water_essence', name: 'Водная эссенция', quantity: 1 }\r\n              ]\r\n            }\r\n          ];\r\n        }\r\n        \r\n        setRecipes(mockRecipes);\r\n        setSelectedRecipe(null);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке рецептов алхимии:', error);\r\n      }\r\n    };\r\n    \r\n    loadRecipes();\r\n  }, [activeTab]);\r\n  \r\n  // Фильтрация рецептов\r\n  const filteredRecipes = React.useMemo(() => {\r\n    if (!recipes || recipes.length === 0) {\r\n      return [];\r\n    }\r\n    \r\n    return recipes.filter(recipe => {\r\n      // Фильтр по поисковому запросу\r\n      const matchesSearch = searchQuery === '' || \r\n        recipe.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        recipe.description.toLowerCase().includes(searchQuery.toLowerCase());\r\n      \r\n      // Фильтр по редкости\r\n      const matchesRarity = rarityFilter === 'all' || recipe.rarity === rarityFilter;\r\n      \r\n      // Фильтр по доступности (уровень культивации игрока)\r\n      const playerStage = cultivation?.stage || 'Закалка тела';\r\n      const playerLevel = cultivation?.level || 1;\r\n      \r\n      const stageOrder = ['Закалка тела', 'Очищение Ци', 'Золотое ядро', 'Формирование души'];\r\n      const playerStageIndex = stageOrder.indexOf(playerStage);\r\n      const recipeStageIndex = stageOrder.indexOf(recipe.requiredStage);\r\n      \r\n      let isAvailable = true;\r\n      \r\n      // Если ступень игрока ниже требуемой, рецепт недоступен\r\n      if (playerStageIndex < recipeStageIndex) {\r\n        isAvailable = false;\r\n      }\r\n      \r\n      // Если ступень та же, проверяем уровень\r\n      if (playerStageIndex === recipeStageIndex && playerLevel < recipe.requiredLevel) {\r\n        isAvailable = false;\r\n      }\r\n      \r\n      return matchesSearch && matchesRarity;\r\n    });\r\n  }, [recipes, searchQuery, rarityFilter, cultivation]);\r\n  \r\n  // Проверка наличия ингредиентов у игрока\r\n  const checkIngredients = (recipe) => {\r\n    if (!recipe || !recipe.ingredients || !player.inventory.items) {\r\n      return false;\r\n    }\r\n    \r\n    // Для каждого ингредиента проверяем наличие в инвентаре\r\n    for (const ingredient of recipe.ingredients) {\r\n      const inventoryItem = player.inventory.items.find(item => \r\n        item.itemId === ingredient.id && item.quantity >= ingredient.quantity\r\n      );\r\n      \r\n      if (!inventoryItem) {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  };\r\n  \r\n  // Получение количества ингредиента в инвентаре\r\n  const getIngredientQuantityInInventory = (ingredientId) => {\r\n    if (!player.inventory.items) {\r\n      return 0;\r\n    }\r\n    \r\n    const inventoryItem = player.inventory.items.find(item => item.itemId === ingredientId);\r\n    return inventoryItem ? inventoryItem.quantity : 0;\r\n  };\r\n  \r\n  // Обработчик нажатия кнопки создания предмета\r\n  const handleCraft = async () => {\r\n    if (!selectedRecipe) return;\r\n    \r\n    // Начинаем процесс крафта\r\n    setCraftingStatus('crafting');\r\n    setCraftingProgress(0);\r\n    \r\n    // Симулируем процесс крафта\r\n    const craftingTime = 3000; // 3 секунды\r\n    const interval = 50; // 50 миллисекунд для каждого обновления\r\n    const steps = craftingTime / interval;\r\n    let currentStep = 0;\r\n    \r\n    const craftingInterval = setInterval(() => {\r\n      currentStep++;\r\n      setCraftingProgress(Math.min(100, (currentStep / steps) * 100));\r\n      \r\n      if (currentStep >= steps) {\r\n        clearInterval(craftingInterval);\r\n        completeCrafting();\r\n      }\r\n    }, interval);\r\n  };\r\n  \r\n  // Завершение процесса крафта\r\n  const completeCrafting = () => {\r\n    // Симулируем шанс успеха\r\n    const roll = Math.random() * 100;\r\n    const isSuccess = roll <= selectedRecipe.successRate;\r\n    \r\n    if (isSuccess) {\r\n      setCraftingStatus('success');\r\n      setCraftingResult({\r\n        name: selectedRecipe.name,\r\n        description: selectedRecipe.description,\r\n        rarity: selectedRecipe.rarity\r\n      });\r\n      \r\n      // В реальной реализации здесь нужно добавить предмет в инвентарь\r\n      // и удалить использованные ингредиенты из инвентаря\r\n    } else {\r\n      setCraftingStatus('failed');\r\n      setCraftingResult(null);\r\n      \r\n      // В реальной реализации здесь нужно удалить использованные ингредиенты из инвентаря\r\n    }\r\n  };\r\n  \r\n  // Рендеринг иконки рецепта\r\n  const renderRecipeIcon = (type) => {\r\n    switch (type) {\r\n      case 'pill': return '💊';\r\n      case 'talisman': return '📜';\r\n      case 'weapon': return '⚔️';\r\n      case 'armor': return '🛡️';\r\n      case 'accessory': return '💍';\r\n      default: return '?';\r\n    }\r\n  };\r\n  \r\n  // Рендеринг сообщения о результате крафта\r\n  const renderCraftingResult = () => {\r\n    if (!craftingStatus || craftingStatus === 'crafting') {\r\n      return null;\r\n    }\r\n    \r\n    if (craftingStatus === 'success') {\r\n      return (\r\n        <ResultMessage success>\r\n          <h3>Создание успешно!</h3>\r\n          <p>Вы успешно создали {craftingResult.name}</p>\r\n        </ResultMessage>\r\n      );\r\n    } else {\r\n      return (\r\n        <ResultMessage success={false}>\r\n          <h3>Создание не удалось!</h3>\r\n          <p>Вы не смогли создать {selectedRecipe.name}. Ингредиенты потрачены впустую.</p>\r\n        </ResultMessage>\r\n      );\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <TabContainer>\r\n      <TabHeader>\r\n        <TabTitle>Алхимия и создание предметов</TabTitle>\r\n      </TabHeader>\r\n      \r\n      <TabMenu>\r\n        <TabButton \r\n          active={activeTab === 'pills'} \r\n          onClick={() => setActiveTab('pills')}\r\n        >\r\n          Пилюли\r\n        </TabButton>\r\n        <TabButton \r\n          active={activeTab === 'talismans'} \r\n          onClick={() => setActiveTab('talismans')}\r\n        >\r\n          Талисманы\r\n        </TabButton>\r\n        <TabButton \r\n          active={activeTab === 'weapons'} \r\n          onClick={() => setActiveTab('weapons')}\r\n        >\r\n          Оружие\r\n        </TabButton>\r\n        <TabButton \r\n          active={activeTab === 'armor'} \r\n          onClick={() => setActiveTab('armor')}\r\n        >\r\n          Броня\r\n        </TabButton>\r\n        <TabButton \r\n          active={activeTab === 'accessories'} \r\n          onClick={() => setActiveTab('accessories')}\r\n        >\r\n          Аксессуары\r\n        </TabButton>\r\n      </TabMenu>\r\n      \r\n      <TabContent>\r\n        <LeftPanel>\r\n          <SearchBar \r\n            placeholder=\"Поиск рецептов...\" \r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n          \r\n          <FilterContainer>\r\n            <FilterSelect \r\n              value={rarityFilter}\r\n              onChange={(e) => setRarityFilter(e.target.value)}\r\n            >\r\n              <option value=\"all\">Любая редкость</option>\r\n              <option value=\"common\">Обычные</option>\r\n              <option value=\"uncommon\">Необычные</option>\r\n              <option value=\"rare\">Редкие</option>\r\n              <option value=\"epic\">Эпические</option>\r\n              <option value=\"legendary\">Легендарные</option>\r\n            </FilterSelect>\r\n          </FilterContainer>\r\n          \r\n          <RecipeList>\r\n            {filteredRecipes.length > 0 ? (\r\n              filteredRecipes.map((recipe) => (\r\n                <RecipeCard \r\n                  key={recipe.id} \r\n                  selected={selectedRecipe && selectedRecipe.id === recipe.id}\r\n                  onClick={() => setSelectedRecipe(recipe)}\r\n                >\r\n                  <RecipeIcon>{renderRecipeIcon(recipe.type)}</RecipeIcon>\r\n                  <RecipeInfo>\r\n                    <RecipeName rarity={recipe.rarity}>{recipe.name}</RecipeName>\r\n                    <RecipeDescription>{recipe.description}</RecipeDescription>\r\n                  </RecipeInfo>\r\n                </RecipeCard>\r\n              ))\r\n            ) : (\r\n              <NoRecipesMessage>Нет доступных рецептов в этой категории</NoRecipesMessage>\r\n            )}\r\n          </RecipeList>\r\n        </LeftPanel>\r\n        \r\n        <RightPanel>\r\n          {selectedRecipe ? (\r\n            <>\r\n              <DetailTitle>{selectedRecipe.name}</DetailTitle>\r\n              <RecipeDescription>{selectedRecipe.description}</RecipeDescription>\r\n              \r\n              <RecipeDetails>\r\n                <DetailRow>\r\n                  <DetailLabel>Тип:</DetailLabel>\r\n                  <DetailValue>\r\n                    {(() => {\r\n                      switch(selectedRecipe.type) {\r\n                        case 'pill': return 'Пилюля';\r\n                        case 'talisman': return 'Талисман';\r\n                        case 'weapon': return 'Оружие';\r\n                        case 'armor': return 'Броня';\r\n                        case 'accessory': return 'Аксессуар';\r\n                        default: return selectedRecipe.type;\r\n                      }\r\n                    })()}\r\n                  </DetailValue>\r\n                </DetailRow>\r\n                \r\n                <DetailRow>\r\n                  <DetailLabel>Редкость:</DetailLabel>\r\n                  <DetailValue style={{\r\n                    color: (() => {\r\n                      switch(selectedRecipe.rarity) {\r\n                        case 'common': return '#aaa';\r\n                        case 'uncommon': return '#1eff00';\r\n                        case 'rare': return '#0070dd';\r\n                        case 'epic': return '#a335ee';\r\n                        case 'legendary': return '#ff8000';\r\n                        default: return '#aaa';\r\n                      }\r\n                    })()\r\n                  }}>\r\n                    {(() => {\r\n                      switch(selectedRecipe.rarity) {\r\n                        case 'common': return 'Обычное';\r\n                        case 'uncommon': return 'Необычное';\r\n                        case 'rare': return 'Редкое';\r\n                        case 'epic': return 'Эпическое';\r\n                        case 'legendary': return 'Легендарное';\r\n                        default: return selectedRecipe.rarity;\r\n                      }\r\n                    })()}\r\n                  </DetailValue>\r\n                </DetailRow>\r\n                \r\n                <DetailRow>\r\n                  <DetailLabel>Требуемая ступень:</DetailLabel>\r\n                  <DetailValue>{selectedRecipe.requiredStage}</DetailValue>\r\n                </DetailRow>\r\n                \r\n                <DetailRow>\r\n                  <DetailLabel>Требуемый уровень:</DetailLabel>\r\n                  <DetailValue>{selectedRecipe.requiredLevel}</DetailValue>\r\n                </DetailRow>\r\n                \r\n                <DetailRow>\r\n                  <DetailLabel>Шанс успеха:</DetailLabel>\r\n                  <DetailValue>{selectedRecipe.successRate}%</DetailValue>\r\n                </DetailRow>\r\n              </RecipeDetails>\r\n              \r\n              <IngredientsList>\r\n                <DetailTitle>Ингредиенты:</DetailTitle>\r\n                {selectedRecipe.ingredients.map((ingredient) => {\r\n                  const inventoryQuantity = getIngredientQuantityInInventory(ingredient.id);\r\n                  const hasEnough = inventoryQuantity >= ingredient.quantity;\r\n                  \r\n                  return (\r\n                    <IngredientItem \r\n                      key={ingredient.id} \r\n                      available={hasEnough}\r\n                    >\r\n                      <IngredientName available={hasEnough}>{ingredient.name}</IngredientName>\r\n                      <IngredientQuantity available={hasEnough}>\r\n                        {inventoryQuantity}/{ingredient.quantity}\r\n                      </IngredientQuantity>\r\n                    </IngredientItem>\r\n                  );\r\n                })}\r\n              </IngredientsList>\r\n              \r\n              {craftingStatus === 'crafting' && (\r\n                <CraftingProgress>\r\n                  <ProgressBar progress={craftingProgress} />\r\n                </CraftingProgress>\r\n              )}\r\n              \r\n              {renderCraftingResult()}\r\n              \r\n              <ActionButton \r\n                primary \r\n                onClick={handleCraft}\r\n                disabled={!checkIngredients(selectedRecipe) || craftingStatus === 'crafting'}\r\n              >\r\n                {craftingStatus === 'crafting' ? 'Создание...' : 'Создать'}\r\n              </ActionButton>\r\n            </>\r\n          ) : (\r\n            <NoRecipesMessage>Выберите рецепт для просмотра деталей</NoRecipesMessage>\r\n          )}\r\n        </RightPanel>\r\n      </TabContent>\r\n    </TabContainer>\r\n  );\r\n};\r\n\r\nexport default AlchemyTab;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { \r\n  petTypeNames, \r\n  petTypeDescriptions, \r\n  petTypeBaseStats,\r\n  petTypeAbilities,\r\n  evolutionStages,\r\n  calculateExpForLevel,\r\n  calculateStatBonus,\r\n  calculateCombatBonus\r\n} from '../../data/spirit-pets';\r\nimport './SpiritPetsTab.css';\r\n\r\n// Компонент карточки питомца\r\nconst PetCard = ({ pet, isActive, onActivate, onFeed, onTrain, onViewDetails }) => {\r\n  const getPetTypeColor = (type) => {\r\n    const typeColors = {\r\n      'fire': '#e74c3c',\r\n      'water': '#3498db',\r\n      'earth': '#8e44ad',\r\n      'wind': '#2ecc71',\r\n      'lightning': '#f1c40f',\r\n      'wood': '#27ae60',\r\n      'metal': '#95a5a6',\r\n      'darkness': '#34495e',\r\n      'light': '#f5f5f5'\r\n    };\r\n    return typeColors[type] || '#bdc3c7';\r\n  };\r\n\r\n  // Расчет процента опыта до следующего уровня\r\n  const expForCurrentLevel = calculateExpForLevel(pet.level);\r\n  const expPercentage = (pet.experience / expForCurrentLevel) * 100;\r\n  \r\n  // Расчет бонусов к боевым характеристикам\r\n  const combatBonus = calculateCombatBonus(pet);\r\n\r\n  return (\r\n    <div className={`pet-card ${isActive ? 'pet-card-active' : ''}`} style={{ borderColor: getPetTypeColor(pet.type) }}>\r\n      <div className=\"pet-card-header\" style={{ backgroundColor: getPetTypeColor(pet.type) }}>\r\n        <h3 className=\"pet-name\">{pet.name}</h3>\r\n        <div className=\"pet-type\">{petTypeNames[pet.type]}</div>\r\n        {isActive && <div className=\"pet-active-badge\">Активный</div>}\r\n      </div>\r\n      \r\n      <div className=\"pet-card-body\">\r\n        <div className=\"pet-info-row\">\r\n          <div className=\"pet-level\">Уровень {pet.level}</div>\r\n          <div className=\"pet-evolution\">Стадия: {evolutionStages[pet.evolutionStage].name}</div>\r\n        </div>\r\n        \r\n        <div className=\"pet-exp-bar-container\">\r\n          <div className=\"pet-exp-bar\" style={{ width: `${expPercentage}%` }}></div>\r\n          <div className=\"pet-exp-text\">{pet.experience} / {expForCurrentLevel} опыта</div>\r\n        </div>\r\n        \r\n        <div className=\"pet-stats-container\">\r\n          <div className=\"pet-stat\">\r\n            <span className=\"stat-name\">Сила:</span>\r\n            <span className=\"stat-value\">{pet.strength}</span>\r\n          </div>\r\n          <div className=\"pet-stat\">\r\n            <span className=\"stat-name\">Интеллект:</span>\r\n            <span className=\"stat-value\">{pet.intelligence}</span>\r\n          </div>\r\n          <div className=\"pet-stat\">\r\n            <span className=\"stat-name\">Ловкость:</span>\r\n            <span className=\"stat-value\">{pet.agility}</span>\r\n          </div>\r\n          <div className=\"pet-stat\">\r\n            <span className=\"stat-name\">Живучесть:</span>\r\n            <span className=\"stat-value\">{pet.vitality}</span>\r\n          </div>\r\n          <div className=\"pet-stat\">\r\n            <span className=\"stat-name\">Дух:</span>\r\n            <span className=\"stat-value\">{pet.spirit}</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"pet-indicators\">\r\n          <div className=\"pet-indicator\">\r\n            <span className=\"indicator-name\">Сытость:</span>\r\n            <div className=\"indicator-bar-container\">\r\n              <div className=\"indicator-bar\" style={{ width: `${pet.hunger}%`, backgroundColor: pet.hunger < 30 ? '#e74c3c' : '#2ecc71' }}></div>\r\n            </div>\r\n            <span className=\"indicator-value\">{pet.hunger}%</span>\r\n          </div>\r\n          <div className=\"pet-indicator\">\r\n            <span className=\"indicator-name\">Лояльность:</span>\r\n            <div className=\"indicator-bar-container\">\r\n              <div className=\"indicator-bar\" style={{ width: `${pet.loyalty}%`, backgroundColor: pet.loyalty < 50 ? '#e74c3c' : '#2ecc71' }}></div>\r\n            </div>\r\n            <span className=\"indicator-value\">{pet.loyalty}%</span>\r\n            {pet.loyalty <= 50 && (\r\n              <div className=\"loyalty-warning\" style={{ \r\n                color: pet.loyalty <= 25 ? '#e74c3c' : '#e67e22', \r\n                fontSize: '0.8rem', \r\n                fontWeight: 'bold',\r\n                marginTop: '5px',\r\n                textAlign: 'center',\r\n                padding: '3px',\r\n                border: `1px solid ${pet.loyalty <= 25 ? '#e74c3c' : '#e67e22'}`,\r\n                borderRadius: '4px',\r\n                background: pet.loyalty <= 25 ? 'rgba(231, 76, 60, 0.1)' : 'rgba(230, 126, 34, 0.1)'\r\n              }}>\r\n                {pet.loyalty <= 25 ? '⚠️ Питомец может сбежать в бою!' : '⚠️ Лояльность снижается быстрее при использовании в бою!'}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"pet-card-buttons\">\r\n          {!isActive && (\r\n            <button className=\"pet-action-button activate-button\" onClick={() => onActivate(pet.id)}>\r\n              Сделать активным\r\n            </button>\r\n          )}\r\n          <button className=\"pet-action-button feed-button\" onClick={() => onFeed(pet.id)}>\r\n            Покормить\r\n          </button>\r\n          <button className=\"pet-action-button train-button\" onClick={() => onTrain(pet.id)}>\r\n            Тренировать\r\n          </button>\r\n          <button className=\"pet-action-button details-button\" onClick={() => onViewDetails(pet)}>\r\n            Подробности\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Компонент модального окна для выбора еды при кормлении питомца\r\nconst PetFeedingModal = ({ pet, onClose, onSelect, availableFood }) => {\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>Кормление питомца {pet.name}</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>Выберите еду для питомца:</p>\r\n          \r\n          {availableFood.length > 0 ? (\r\n            <div className=\"food-items-list\">\r\n              {availableFood.map(food => (\r\n                <div \r\n                  key={food.id} \r\n                  className=\"food-item\"\r\n                  onClick={() => onSelect(food.id)}\r\n                  style={{\r\n                    padding: '10px',\r\n                    margin: '5px 0',\r\n                    border: '1px solid #444',\r\n                    borderRadius: '5px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    cursor: 'pointer',\r\n                    transition: 'background 0.2s',\r\n                    background: 'rgba(30, 30, 30, 0.7)'\r\n                  }}\r\n                  onMouseOver={(e) => {\r\n                    e.currentTarget.style.background = 'rgba(80, 80, 80, 0.7)';\r\n                  }}\r\n                  onMouseOut={(e) => {\r\n                    e.currentTarget.style.background = 'rgba(30, 30, 30, 0.7)';\r\n                  }}\r\n                >\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span style={{ fontWeight: 'bold', color: (() => {\r\n                      switch(food.rarity) {\r\n                        case 'common': return '#aaa';\r\n                        case 'uncommon': return '#1eff00';\r\n                        case 'rare': return '#0070dd';\r\n                        case 'epic': return '#a335ee';\r\n                        case 'legendary': return '#ff8000';\r\n                        default: return '#aaa';\r\n                      }\r\n                    })() }}>{food.name}</span>\r\n                    <span>x{food.quantity}</span>\r\n                  </div>\r\n                  <div style={{ fontSize: '0.9em', color: '#aaa', marginTop: '3px' }}>{food.description}</div>\r\n                  <div style={{ display: 'flex', marginTop: '5px' }}>\r\n                  <div style={{ \r\n                      flex: 1, \r\n                      color: '#2ecc71', \r\n                      fontSize: '0.9em' \r\n                    }}>\r\n                      Сытость: +{food.nutritionValue}%\r\n                    </div>\r\n                    <div style={{ \r\n                      flex: 1, \r\n                      color: '#e67e22', \r\n                      fontSize: '0.9em' \r\n                    }}>\r\n                      Лояльность: +{food.loyaltyBonus}%\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"no-food-message\" style={{ color: '#e74c3c' }}>\r\n              У вас нет еды для питомцев. Вы можете купить её у Старого Чена на рынке.\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Компонент модального окна для тренировки питомца\r\nconst PetTrainingModal = ({ pet, onClose, onTrain }) => {\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>Тренировка питомца {pet.name}</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>Выберите характеристику для тренировки:</p>\r\n          <p className=\"training-info\">Тренировка повысит выбранную характеристику на 1, но уменьшит сытость на 15%.</p>\r\n          \r\n          <div className=\"training-buttons\">\r\n            <button \r\n              className=\"training-button\" \r\n              onClick={() => onTrain(pet.id, 'strength')}\r\n              disabled={pet.hunger < 30}\r\n            >\r\n              Сила ({pet.strength})\r\n            </button>\r\n            <button \r\n              className=\"training-button\" \r\n              onClick={() => onTrain(pet.id, 'intelligence')}\r\n              disabled={pet.hunger < 30}\r\n            >\r\n              Интеллект ({pet.intelligence})\r\n            </button>\r\n            <button \r\n              className=\"training-button\" \r\n              onClick={() => onTrain(pet.id, 'agility')}\r\n              disabled={pet.hunger < 30}\r\n            >\r\n              Ловкость ({pet.agility})\r\n            </button>\r\n            <button \r\n              className=\"training-button\" \r\n              onClick={() => onTrain(pet.id, 'vitality')}\r\n              disabled={pet.hunger < 30}\r\n            >\r\n              Живучесть ({pet.vitality})\r\n            </button>\r\n            <button \r\n              className=\"training-button\" \r\n              onClick={() => onTrain(pet.id, 'spirit')}\r\n              disabled={pet.hunger < 30}\r\n            >\r\n              Дух ({pet.spirit})\r\n            </button>\r\n          </div>\r\n          \r\n          {pet.hunger < 30 && (\r\n            <p className=\"training-warning\">\r\n              Питомец слишком голоден для тренировки. Покормите его сначала!\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Компонент модального окна для деталей питомца\r\nconst PetDetailsModal = ({ pet, onClose }) => {\r\n  // Находим способности питомца\r\n  const petAbilities = pet.abilities.map(abilityId => {\r\n    const ability = petTypeAbilities[pet.type]?.find(a => a.id === abilityId);\r\n    return ability || { id: abilityId, name: 'Неизвестная способность', description: 'Описание отсутствует' };\r\n  });\r\n  \r\n  // Расчет бонусов к боевым характеристикам\r\n  const combatBonus = calculateCombatBonus(pet);\r\n  \r\n  // Расчет даты последнего кормления и тренировки\r\n  const formatDate = (date) => {\r\n    if (!date) return 'Никогда';\r\n    const d = new Date(date);\r\n    return `${d.toLocaleDateString()} ${d.toLocaleTimeString()}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content pet-details-modal\">\r\n        <div className=\"modal-header\">\r\n          <h3>{pet.name} - {petTypeNames[pet.type]}</h3>\r\n          <button className=\"modal-close\" onClick={onClose}>×</button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"pet-details-section\">\r\n            <h4>Основная информация</h4>\r\n            <p className=\"pet-description\">{petTypeDescriptions[pet.type]}</p>\r\n            <div className=\"pet-details-row\">\r\n              <div className=\"pet-detail\">\r\n                <span className=\"detail-label\">Уровень:</span>\r\n                <span className=\"detail-value\">{pet.level}</span>\r\n              </div>\r\n              <div className=\"pet-detail\">\r\n                <span className=\"detail-label\">Опыт:</span>\r\n                <span className=\"detail-value\">{pet.experience} / {calculateExpForLevel(pet.level)}</span>\r\n              </div>\r\n              <div className=\"pet-detail\">\r\n                <span className=\"detail-label\">Стадия эволюции:</span>\r\n                <span className=\"detail-value\">{evolutionStages[pet.evolutionStage].name}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"pet-evolution-description\">\r\n              {evolutionStages[pet.evolutionStage].description}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"pet-details-section\">\r\n            <h4>Характеристики</h4>\r\n            <div className=\"pet-details-stats\">\r\n              <div className=\"pet-detail-stat\">\r\n                <span className=\"detail-stat-name\">Сила:</span>\r\n                <span className=\"detail-stat-value\">{pet.strength}</span>\r\n              </div>\r\n              <div className=\"pet-detail-stat\">\r\n                <span className=\"detail-stat-name\">Интеллект:</span>\r\n                <span className=\"detail-stat-value\">{pet.intelligence}</span>\r\n              </div>\r\n              <div className=\"pet-detail-stat\">\r\n                <span className=\"detail-stat-name\">Ловкость:</span>\r\n                <span className=\"detail-stat-value\">{pet.agility}</span>\r\n              </div>\r\n              <div className=\"pet-detail-stat\">\r\n                <span className=\"detail-stat-name\">Живучесть:</span>\r\n                <span className=\"detail-stat-value\">{pet.vitality}</span>\r\n              </div>\r\n              <div className=\"pet-detail-stat\">\r\n                <span className=\"detail-stat-name\">Дух:</span>\r\n                <span className=\"detail-stat-value\">{pet.spirit}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"pet-details-section\">\r\n            <h4>Боевые бонусы</h4>\r\n            <div className=\"pet-details-combat\">\r\n              <div className=\"pet-combat-bonus\">\r\n                <span className=\"combat-bonus-name\">Атака:</span>\r\n                <span className=\"combat-bonus-value\">+{combatBonus.attack}</span>\r\n              </div>\r\n              <div className=\"pet-combat-bonus\">\r\n                <span className=\"combat-bonus-name\">Защита:</span>\r\n                <span className=\"combat-bonus-value\">+{combatBonus.defense}</span>\r\n              </div>\r\n              <div className=\"pet-combat-bonus\">\r\n                <span className=\"combat-bonus-name\">Скорость:</span>\r\n                <span className=\"combat-bonus-value\">+{combatBonus.speed}</span>\r\n              </div>\r\n              <div className=\"pet-combat-bonus\">\r\n                <span className=\"combat-bonus-name\">Шанс крит.удара:</span>\r\n                <span className=\"combat-bonus-value\">+{(combatBonus.critChance * 100).toFixed(1)}%</span>\r\n              </div>\r\n              <div className=\"pet-combat-bonus\">\r\n                <span className=\"combat-bonus-name\">Бонус здоровья:</span>\r\n                <span className=\"combat-bonus-value\">+{combatBonus.healthBonus}</span>\r\n              </div>\r\n              <div className=\"pet-combat-bonus\">\r\n                <span className=\"combat-bonus-name\">Бонус энергии:</span>\r\n                <span className=\"combat-bonus-value\">+{combatBonus.energyBonus}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"pet-details-section\">\r\n            <h4>Способности</h4>\r\n            <div className=\"pet-abilities-list\">\r\n              {petAbilities.map(ability => (\r\n                <div key={ability.id} className=\"pet-ability\">\r\n                  <div className=\"ability-header\">\r\n                    <span className=\"ability-name\">{ability.name}</span>\r\n                    <span className=\"ability-type\">{ability.type === 'attack' ? 'Атака' : ability.type === 'buff' ? 'Усиление' : 'Эффект'}</span>\r\n                  </div>\r\n                  <div className=\"ability-description\">{ability.description}</div>\r\n                  {ability.cooldown && (\r\n                    <div className=\"ability-cooldown\">Перезарядка: {ability.cooldown} ходов</div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {petAbilities.length === 0 && (\r\n              <p className=\"no-abilities\">У питомца пока нет способностей</p>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"pet-details-section\">\r\n            <h4>Информация об уходе</h4>\r\n            <div className=\"pet-details-care\">\r\n              <div className=\"pet-care-info\">\r\n                <span className=\"care-info-name\">Сытость:</span>\r\n                <div className=\"care-info-bar-container\">\r\n                  <div \r\n                    className=\"care-info-bar\" \r\n                    style={{ \r\n                      width: `${pet.hunger}%`, \r\n                      backgroundColor: pet.hunger < 30 ? '#e74c3c' : '#2ecc71' \r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <span className=\"care-info-value\">{pet.hunger}%</span>\r\n              </div>\r\n              <div className=\"pet-care-info\">\r\n                <span className=\"care-info-name\">Лояльность:</span>\r\n                <div className=\"care-info-bar-container\">\r\n                  <div \r\n                    className=\"care-info-bar\" \r\n                    style={{ \r\n                      width: `${pet.loyalty}%`, \r\n                      backgroundColor: pet.loyalty < 50 ? '#e74c3c' : '#2ecc71' \r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <span className=\"care-info-value\">{pet.loyalty}%</span>\r\n                {pet.loyalty <= 25 && (\r\n                  <div style={{\r\n                    color: '#e74c3c',\r\n                    fontSize: '0.85rem',\r\n                    fontWeight: 'bold',\r\n                    marginTop: '5px',\r\n                    textAlign: 'center',\r\n                    padding: '5px',\r\n                    border: '1px solid #e74c3c',\r\n                    borderRadius: '4px',\r\n                    background: 'rgba(231, 76, 60, 0.1)'\r\n                  }}>\r\n                    ⚠️ Внимание! При низкой лояльности питомец может сбежать во время боя!\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"pet-loyalty-mechanics\" style={{\r\n                marginTop: '10px',\r\n                padding: '10px',\r\n                backgroundColor: 'rgba(50, 50, 50, 0.5)',\r\n                borderRadius: '5px',\r\n                fontSize: '0.9em'\r\n              }}>\r\n                <h5 style={{ margin: '0 0 5px 0', fontSize: '1em' }}>Механика лояльности:</h5>\r\n                <ul style={{ margin: '0', paddingLeft: '20px' }}>\r\n                  <li>При использовании способности питомца в бою, он теряет лояльность</li>\r\n                  <li>Потеря лояльности: <span style={{ fontWeight: 'bold' }}>5 × (100 / сытость)</span></li>\r\n                  <li>Чем ниже сытость, тем больше потеря лояльности</li>\r\n                  <li>Примерная потеря при текущей сытости: <span style={{ fontWeight: 'bold', color: '#e74c3c' }}>{Math.round(5 * (100 / Math.max(pet.hunger, 1)))}%</span></li>\r\n                  <li>При лояльности ≤ 25%, питомец может убежать в бою</li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <div className=\"pet-care-timestamps\" style={{ marginTop: '10px' }}>\r\n                <div className=\"pet-timestamp\">\r\n                  <span className=\"timestamp-label\">Последнее кормление:</span>\r\n                  <span className=\"timestamp-value\">{formatDate(pet.lastFed)}</span>\r\n                </div>\r\n                <div className=\"pet-timestamp\">\r\n                  <span className=\"timestamp-label\">Последняя тренировка:</span>\r\n                  <span className=\"timestamp-value\">{formatDate(pet.lastTrained)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Функция для создания демо-питомца (используется только если нет питомцев в контексте)\r\nconst createDemoPet = (userId) => {\r\n  return {\r\n    id: `pet_${Date.now()}`,\r\n    userId: userId || 'demo_user',\r\n    name: 'Ветер',\r\n    type: 'wind',\r\n    level: 1,\r\n    experience: 0,\r\n    loyalty: 80,\r\n    hunger: 70,\r\n    strength: 7,\r\n    intelligence: 5,\r\n    agility: 6,\r\n    vitality: 4,\r\n    spirit: 6,\r\n    abilities: ['wind_breath'],\r\n    evolutionStage: 1,\r\n    isActive: true,\r\n    lastFed: new Date(),\r\n    lastTrained: new Date(),\r\n    createdAt: new Date(),\r\n    updatedAt: new Date()\r\n  };\r\n};\r\n\r\n// Основной компонент\r\nconst SpiritPetsTab = () => {\r\n  const { state, actions } = useGame();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Состояния для модальных окон\r\n  const [selectedPet, setSelectedPet] = useState(null);\r\n  const [showTrainingModal, setShowTrainingModal] = useState(false);\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n  const [showFeedingModal, setShowFeedingModal] = useState(false);\r\n  \r\n  // Получаем данные о питомцах из состояния игры\r\n  const spiritPets = state.player?.spiritPets || { pets: [], activePetId: null };\r\n  const pets = Array.isArray(spiritPets.pets) ? spiritPets.pets : [];\r\n  \r\n  // Находим активного питомца\r\n  const activePet = pets.find(pet => pet.id === spiritPets.activePetId);\r\n  \r\n  // Инициализация питомцев, если их нет в состоянии\r\n  useEffect(() => {\r\n    const userId = state.player?.id || 'demo_user';\r\n    \r\n    // Если у игрока нет питомцев, создаем демо-питомца\r\n    if (!state.player?.spiritPets || !Array.isArray(state.player?.spiritPets.pets) || state.player.spiritPets.pets.length === 0) {\r\n      console.log('Создаем демо-питомца для игрока');\r\n      const demoPet = createDemoPet(userId);\r\n      actions.addSpiritPet(demoPet);\r\n    }\r\n  }, [state.player?.id, state.player?.spiritPets, actions]);\r\n  \r\n  // Обработчик активации питомца\r\n  const handleActivatePet = (petId) => {\r\n    setIsLoading(true);\r\n    try {\r\n      actions.setActiveSpiritPet(petId);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.error('Ошибка при активации питомца:', err);\r\n      setError('Не удалось активировать питомца. Пожалуйста, попробуйте позже.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Функция для получения еды для питомцев из инвентаря\r\n  const getPetFoodFromInventory = () => {\r\n    // Получаем инвентарь игрока\r\n    const inventory = state.player?.inventory?.items || [];\r\n    \r\n    // Фильтруем предметы типа 'pet_food'\r\n    const petFood = inventory.filter(item => item.type === 'pet_food');\r\n    \r\n    return petFood;\r\n  };\r\n  \r\n  // Обработчик открытия модального окна кормления\r\n  const handleOpenFeedingModal = (petId) => {\r\n    const pet = pets.find(p => p.id === petId);\r\n    if (pet) {\r\n      setSelectedPet(pet);\r\n      setShowFeedingModal(true);\r\n    }\r\n  };\r\n  \r\n  // Обработчик кормления питомца\r\n  const handleFeedPet = (petId, foodItemId) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Если предмет питания указан\r\n      if (foodItemId) {\r\n        // Вызываем действие кормления с указанным ID предмета питания\r\n        actions.feedSpiritPet({\r\n          petId,\r\n          foodItemId\r\n        });\r\n      } else {\r\n        // Обратная совместимость - используем виртуальную еду\r\n        console.log('Использование виртуальной еды для обратной совместимости');\r\n        const defaultFood = {\r\n          id: 'default_food',\r\n          name: 'Обычная пища',\r\n          nutritionValue: 20,\r\n          loyaltyBonus: 5\r\n        };\r\n        \r\n        actions.feedSpiritPet({\r\n          petId,\r\n          foodItem: defaultFood\r\n        });\r\n      }\r\n      \r\n      // Закрываем модальное окно кормления\r\n      setShowFeedingModal(false);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.error('Ошибка при кормлении питомца:', err);\r\n      setError('Не удалось покормить питомца. Пожалуйста, попробуйте позже.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик тренировки питомца\r\n  const handleTrainPet = (petId, statToTrain) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Приводим statToTrain к ожидаемому trainingType\r\n      actions.trainSpiritPet({\r\n        petId,\r\n        trainingType: statToTrain  // Тут statToTrain уже один из: strength, intelligence, agility, etc.\r\n      });\r\n      \r\n      // Закрываем модальное окно тренировки\r\n      setShowTrainingModal(false);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.error('Ошибка при тренировке питомца:', err);\r\n      setError('Не удалось тренировать питомца. Пожалуйста, проверьте, что питомец не голоден.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Обработчик открытия модального окна тренировки\r\n  const handleOpenTraining = (petId) => {\r\n    const pet = pets.find(p => p.id === petId);\r\n    if (pet) {\r\n      setSelectedPet(pet);\r\n      setShowTrainingModal(true);\r\n    }\r\n  };\r\n  \r\n  // Обработчик открытия модального окна деталей питомца\r\n  const handleViewDetails = (pet) => {\r\n    setSelectedPet(pet);\r\n    setShowDetailsModal(true);\r\n  };\r\n  \r\n  // Обработчик приручения нового питомца\r\n  const handleTamePet = () => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Используем текущую локацию или дефолтную\r\n      const location = state.player?.location?.name || 'Мистический лес';\r\n      \r\n      // Создаем нового питомца локально\r\n      const userId = state.player?.id || 'demo_user';\r\n      const petTypes = ['fire', 'water', 'earth', 'wind', 'lightning'];\r\n      const randomType = petTypes[Math.floor(Math.random() * petTypes.length)];\r\n      \r\n      const names = [\r\n        'Искра', 'Шторм', 'Тень', 'Луна', 'Звезда', 'Гром', 'Молния', \r\n        'Ветер', 'Огонь', 'Вода', 'Земля', 'Камень', 'Лист', 'Туман'\r\n      ];\r\n      const randomName = names[Math.floor(Math.random() * names.length)];\r\n      \r\n      // Создаем базовые характеристики для нового питомца\r\n      const baseStats = petTypeBaseStats[randomType] || {\r\n        strength: 5,\r\n        intelligence: 5,\r\n        agility: 5,\r\n        vitality: 5,\r\n        spirit: 5\r\n      };\r\n      \r\n      const newPet = {\r\n        id: `pet_${Date.now()}`,\r\n        userId: userId,\r\n        name: randomName,\r\n        type: randomType,\r\n        level: 1,\r\n        experience: 0,\r\n        loyalty: 50,\r\n        hunger: 70,\r\n        strength: baseStats.strength,\r\n        intelligence: baseStats.intelligence,\r\n        agility: baseStats.agility,\r\n        vitality: baseStats.vitality,\r\n        spirit: baseStats.spirit,\r\n        abilities: [`${randomType}_breath`],\r\n        evolutionStage: 1,\r\n        isActive: false,\r\n        lastFed: new Date(),\r\n        lastTrained: new Date(),\r\n        createdAt: new Date(),\r\n        updatedAt: new Date()\r\n      };\r\n      \r\n      // Добавляем питомца через действие контекста\r\n      actions.addSpiritPet(newPet);\r\n      \r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.error('Ошибка при приручении питомца:', err);\r\n      setError('Не удалось приручить питомца. Пожалуйста, попробуйте позже.');\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Отображение состояния загрузки\r\n  if (isLoading && pets.length === 0) {\r\n    return (\r\n      <div className=\"pets-loading-container\">\r\n        <div className=\"pets-loading-spinner\"></div>\r\n        <div>Загрузка питомцев...</div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Отображение ошибки\r\n  if (error && pets.length === 0) {\r\n    return (\r\n      <div className=\"pets-error-container\">\r\n        <div className=\"pets-error-message\">{error}</div>\r\n        <button className=\"pets-refresh-button\" onClick={() => window.location.reload()}>\r\n          Попробовать снова\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"spirit-pets-container\">\r\n      <div className=\"pets-header\">\r\n        <h2>Духовные питомцы</h2>\r\n        <button className=\"tame-pet-button\" onClick={handleTamePet}>\r\n          Приручить нового питомца\r\n        </button>\r\n      </div>\r\n      \r\n      {error && <div className=\"pets-error-message\">{error}</div>}\r\n      \r\n      {pets.length === 0 ? (\r\n        <div className=\"no-pets-message\">\r\n          <p>У вас пока нет питомцев. Нажмите кнопку \"Приручить нового питомца\", чтобы начать.</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"pets-grid\">\r\n          {pets.map(pet => (\r\n            <PetCard\r\n              key={pet.id}\r\n              pet={pet}\r\n              isActive={activePet && activePet.id === pet.id}\r\n              onActivate={handleActivatePet}\r\n              onFeed={handleOpenFeedingModal}\r\n              onTrain={handleOpenTraining}\r\n              onViewDetails={handleViewDetails}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n      \r\n      {/* Модальное окно кормления */}\r\n      {showFeedingModal && selectedPet && (\r\n        <PetFeedingModal\r\n          pet={selectedPet}\r\n          onClose={() => setShowFeedingModal(false)}\r\n          onSelect={(foodItemId) => handleFeedPet(selectedPet.id, foodItemId)}\r\n          availableFood={getPetFoodFromInventory()}\r\n        />\r\n      )}\r\n      \r\n      {/* Модальное окно тренировки */}\r\n      {showTrainingModal && selectedPet && (\r\n        <PetTrainingModal\r\n          pet={selectedPet}\r\n          onClose={() => setShowTrainingModal(false)}\r\n          onTrain={handleTrainPet}\r\n        />\r\n      )}\r\n      \r\n      {/* Модальное окно деталей питомца */}\r\n      {showDetailsModal && selectedPet && (\r\n        <PetDetailsModal\r\n          pet={selectedPet}\r\n          onClose={() => setShowDetailsModal(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpiritPetsTab;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport styled from 'styled-components';\r\nimport ACTION_TYPES from '../../context/actions/actionTypes';\r\nimport { getAllMerchants } from '../../data/merchants';\r\nimport { getEquipmentItemById } from '../../data/equipment-items';\r\nimport BonusService from '../../services/bonus-service';\r\nimport { ensureItemHasCalculatedBonuses } from '../../utils/equipmentBonusHelper';\r\nimport { calculateMerchantDiscount, applyLoyaltyDiscount } from '../../utils/sectRelationshipSyncer';\r\n\r\n// Стилизованные компоненты\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  padding: 20px;\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst TabHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TabTitle = styled.h2`\r\n  font-size: 24px;\r\n  margin: 0;\r\n  color: #ffd700;\r\n`;\r\n\r\nconst TabContent = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  gap: 20px;\r\n`;\r\n\r\nconst LeftPanel = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst RightPanel = styled.div`\r\n  flex: 1;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst TabMenu = styled.div`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #444;\r\n`;\r\n\r\nconst TabButton = styled.button`\r\n  background: ${props => props.active ? 'rgba(255, 215, 0, 0.2)' : 'transparent'};\r\n  color: ${props => props.active ? '#ffd700' : '#ccc'};\r\n  border: none;\r\n  padding: 10px 15px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-bottom: ${props => props.active ? '2px solid #ffd700' : 'none'};\r\n  transition: all 0.3s;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 215, 0, 0.1);\r\n    color: #ffd700;\r\n  }\r\n`;\r\n\r\nconst ItemList = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ItemCard = styled.div`\r\n  display: flex;\r\n  background: ${props => props.selected ? 'rgba(255, 215, 0, 0.1)' : 'rgba(30, 30, 30, 0.7)'};\r\n  border: 1px solid ${props => props.selected ? '#ffd700' : '#444'};\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  \r\n  &:hover {\r\n    background: rgba(255, 215, 0, 0.05);\r\n    border-color: #ffd700;\r\n  }\r\n`;\r\n\r\nconst ItemIcon = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  background: #333;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst ItemName = styled.div`\r\n  font-weight: bold;\r\n  color: ${props => {\r\n    switch(props.rarity) {\r\n      case 'common': return '#aaa';\r\n      case 'uncommon': return '#1eff00';\r\n      case 'rare': return '#0070dd';\r\n      case 'epic': return '#a335ee';\r\n      case 'legendary': return '#ff8000';\r\n      default: return '#aaa';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst ItemPrice = styled.div`\r\n  color: ${props => {\r\n    switch(props.currencyType) {\r\n      case 'copper': return '#b87333';\r\n      case 'silver': return '#c0c0c0';\r\n      case 'gold': return '#ffd700';\r\n      case 'spiritStones': return '#7cb9e8';\r\n      default: return '#ffd700';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst ItemDescription = styled.div`\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst ItemDetails = styled.div`\r\n  padding: 15px;\r\n  background: rgba(30, 30, 30, 0.7);\r\n  border-radius: 5px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst DetailTitle = styled.h3`\r\n  margin: 0 0 10px 0;\r\n  color: #ffd700;\r\n`;\r\n\r\nconst DetailRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst DetailLabel = styled.div`\r\n  color: #aaa;\r\n`;\r\n\r\nconst DetailValue = styled.div`\r\n  color: #fff;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background: ${props => props.primary ? 'rgba(255, 215, 0, 0.2)' : 'rgba(80, 80, 80, 0.3)'};\r\n  color: ${props => props.primary ? '#ffd700' : '#ccc'};\r\n  border: 1px solid ${props => props.primary ? '#ffd700' : '#444'};\r\n  border-radius: 5px;\r\n  padding: 10px 15px;\r\n  margin-top: 15px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  \r\n  &:hover {\r\n    background: ${props => props.primary ? 'rgba(255, 215, 0, 0.3)' : 'rgba(80, 80, 80, 0.5)'};\r\n  }\r\n  \r\n  &:disabled {\r\n    background: rgba(50, 50, 50, 0.3);\r\n    color: #666;\r\n    border-color: #333;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst QuantityControl = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst QuantityButton = styled.button`\r\n  background: rgba(80, 80, 80, 0.3);\r\n  color: #ccc;\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background: rgba(80, 80, 80, 0.5);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: rgba(50, 50, 50, 0.3);\r\n    color: #666;\r\n    border-color: #333;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst QuantityInput = styled.input`\r\n  background: rgba(30, 30, 30, 0.7);\r\n  color: #fff;\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  width: 60px;\r\n  height: 30px;\r\n  margin: 0 10px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n  background: rgba(30, 30, 30, 0.7);\r\n  color: #fff;\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  font-size: 16px;\r\n  \r\n  &::placeholder {\r\n    color: #777;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst FilterSelect = styled.select`\r\n  background: rgba(30, 30, 30, 0.7);\r\n  color: #fff;\r\n  border: 1px solid #444;\r\n  border-radius: 5px;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst NoItemsMessage = styled.div`\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #777;\r\n  font-style: italic;\r\n`;\r\n\r\nconst CurrencyDisplay = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst CurrencyItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst CurrencyIcon = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-right: 5px;\r\n  background: ${props => {\r\n    switch(props.type) {\r\n      case 'copper': return '#b87333';\r\n      case 'silver': return '#c0c0c0';\r\n      case 'gold': return '#ffd700';\r\n      case 'spiritStone': return '#7cb9e8';\r\n      default: return '#ccc';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst CurrencyValue = styled.span`\r\n  color: #fff;\r\n`;\r\n\r\n/**\r\n * Компонент вкладки \"Рынок\"\r\n */\r\nconst MarketTab = () => {\r\n  const { state, actions } = useGame();\r\n  const { player, market, world } = state;\r\n  \r\n  // Состояние компонента\r\n  const [activeTab, setActiveTab] = useState('market'); // market, sell, merchants\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [itemTypeFilter, setItemTypeFilter] = useState('all');\r\n  const [rarityFilter, setRarityFilter] = useState('all');\r\n  const [selectedMerchant, setSelectedMerchant] = useState(null);\r\n  const [activeSellerFilter, setActiveSellerFilter] = useState(null); // Фильтр по ID продавца (торговца)\r\n  \r\n  // Загрузка данных рынка при монтировании компонента\r\n  useEffect(() => {\r\n    // Получаем данные о торговцах\r\n    const merchants = getAllMerchants();\r\n    \r\n    // Преобразуем данные о предметах торговцев в формат для отображения на рынке\r\n    const marketItems = [];\r\n    \r\n    merchants.forEach(merchant => {\r\n      // Получаем уровень отношений с этим торговцем для скидок\r\n      const relationshipLevel = getRelationshipLevel(merchant.id);\r\n      \r\n      if (merchant.items && merchant.items.length > 0) {\r\n        merchant.items.forEach(item => {\r\n          // Проверяем, не является ли предмет валютой\r\n          if (item.itemType === 'currency') {\r\n            console.log(`MarketTab: Пропускаем предмет типа \"currency\": ${item.name || 'без имени'} от торговца ${merchant.name}`);\r\n            return; // Пропускаем предметы типа \"currency\"\r\n          }\r\n          \r\n          // Применяем скидку на основе отношений\r\n          const basePrice = item.basePrice || 100;\r\n          const discount = calculateMerchantDiscount(relationshipLevel);\r\n          const { finalPrice } = applyLoyaltyDiscount(basePrice, relationshipLevel);\r\n          \r\n          // Создаем базовый объект предмета\r\n          const marketItem = {\r\n            id: marketItems.length + 1,\r\n            itemId: item.itemId,\r\n            itemType: item.itemType,\r\n            name: item.name || `Предмет ${item.itemId}`,\r\n            description: item.description || `Описание предмета ${item.itemId}`,\r\n            rarity: item.rarity || 'common',\r\n            quantity: item.quantity < 0 ? 10 : item.quantity, // Если количество отрицательное, считаем, что товар не ограничен (ставим 10)\r\n            price: finalPrice,\r\n            originalPrice: basePrice, // Сохраняем исходную цену для отображения скидки\r\n            discount: discount, // Сохраняем процент скидки\r\n            sellerId: merchant.id,\r\n            sellerName: merchant.name\r\n          };\r\n          \r\n          // Копируем все специфические свойства предмета\r\n          if (item.itemType === 'pet_food') {\r\n            // Копируем свойства для кормления питомцев\r\n            if (item.nutritionValue !== undefined) {\r\n              marketItem.nutritionValue = item.nutritionValue;\r\n            }\r\n            if (item.loyaltyBonus !== undefined) {\r\n              marketItem.loyaltyBonus = item.loyaltyBonus;\r\n            }\r\n          }\r\n          \r\n          marketItems.push(marketItem);\r\n        });\r\n      }\r\n    });\r\n    \r\n    // Используем действие UPDATE_MARKET_STATE для обновления состояния рынка\r\n    actions.dispatch({ \r\n      type: ACTION_TYPES.UPDATE_MARKET_STATE, \r\n      payload: { marketItems }\r\n    });\r\n  }, []); // Убираем зависимость от actions и market, чтобы эффект выполнялся только при монтировании\r\n  \r\n  // Сброс выбранного предмета при изменении фильтров\r\n  useEffect(() => {\r\n    setSelectedItem(null);\r\n  }, [itemTypeFilter, rarityFilter, activeSellerFilter, searchQuery]);\r\n  \r\n  // Фильтрация предметов\r\n  const filteredItems = React.useMemo(() => {\r\n    if (!market || !market.marketItems) {\r\n      return [];\r\n    }\r\n    \r\n    const filtered = market.marketItems.filter(item => {\r\n      // Фильтр по количеству - скрываем товары с количеством 0\r\n      if (item.quantity <= 0) {\r\n        return false;\r\n      }\r\n      \r\n      // Фильтр по поисковому запросу\r\n      const matchesSearch = searchQuery === '' || \r\n        (item.name && item.name.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n        (item.description && item.description.toLowerCase().includes(searchQuery.toLowerCase()));\r\n      \r\n      // Фильтр по типу предмета\r\n      const matchesType = itemTypeFilter === 'all' || (item.itemType && item.itemType === itemTypeFilter);\r\n      \r\n      // Фильтр по редкости\r\n      const matchesRarity = rarityFilter === 'all' || (item.rarity && item.rarity === rarityFilter);\r\n      \r\n      // Фильтр по продавцу (торговцу) - приводим к числовому типу для корректного сравнения\r\n      const itemSellerId = Number(item.sellerId);\r\n      const filterSellerId = Number(activeSellerFilter);\r\n      const matchesSeller = activeSellerFilter === null || \r\n                           (item.sellerId !== undefined && itemSellerId === filterSellerId);\r\n      \r\n      return matchesSearch && matchesType && matchesRarity && matchesSeller;\r\n    });\r\n    \r\n    return filtered;\r\n  }, [market?.marketItems, searchQuery, itemTypeFilter, rarityFilter, activeSellerFilter]);\r\n  \r\n  // Получение уровня отношений с торговцем\r\n  const getRelationshipLevel = (merchantId) => {\r\n    // Извлекаем отношения из социальной структуры игрока\r\n    let playerRelationships = state?.player?.social?.relationships || [];\r\n    \r\n    // Убедимся, что playerRelationships - это массив\r\n    if (!Array.isArray(playerRelationships)) {\r\n      console.warn('Отношения не являются массивом, преобразуем их:', playerRelationships);\r\n      playerRelationships = typeof playerRelationships === 'object' && playerRelationships !== null\r\n        ? Object.values(playerRelationships)\r\n        : [];\r\n    }\r\n    \r\n    // Находим торговца в данных\r\n    const merchantData = getAllMerchants().find(m => m.id === merchantId);\r\n    if (!merchantData) {\r\n      return 0;\r\n    }\r\n    \r\n    // Проверяем отношения в социальной структуре по имени торговца\r\n    const socialRelation = playerRelationships.find(rel => rel.name === merchantData.name);\r\n    if (socialRelation && socialRelation.level !== undefined) {\r\n      return socialRelation.level;\r\n    }\r\n    \r\n    // Проверяем через связь с сектой\r\n    if (merchantData.sect && state?.sect?.sect) {\r\n      const sectName = state.sect.sect.name;\r\n      if (merchantData.sect === sectName) {\r\n        // Сначала проверяем, является ли торговец членом секты\r\n        if (state.sect.sect.members && Array.isArray(state.sect.sect.members)) {\r\n          const sectMember = state.sect.sect.members.find(m => m.name === merchantData.name);\r\n          if (sectMember && sectMember.loyalty !== undefined) {\r\n            return sectMember.loyalty;\r\n          }\r\n        }\r\n        \r\n        // Если торговец не найден среди членов секты, но связан с ней\r\n        const sectRelation = playerRelationships.find(rel => rel.name === sectName);\r\n        if (sectRelation && sectRelation.level !== undefined) {\r\n          return sectRelation.level;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return 0;\r\n  };\r\n  \r\n  // Функция для определения типа валюты по редкости\r\n  const getCurrencyTypeByRarity = (rarity) => {\r\n    switch(rarity) {\r\n      case 'common': return 'copper';\r\n      case 'uncommon': return 'silver';\r\n      case 'rare': return 'gold';\r\n      case 'epic': return 'gold+spiritStones';\r\n      case 'legendary': return 'spiritStones';\r\n      default: return 'gold';\r\n    }\r\n  };\r\n  \r\n  // Форматирование отображения цены в зависимости от типа валюты\r\n  const formatPrice = (price, rarity) => {\r\n    const currencyType = getCurrencyTypeByRarity(rarity);\r\n    \r\n    switch(currencyType) {\r\n      case 'copper':\r\n        return `${price} меди`;\r\n      case 'silver':\r\n        return `${price} серебра`;\r\n      case 'gold':\r\n        return `${price} золота`;\r\n      case 'gold+spiritStones':\r\n        return `${Math.floor(price * 0.7)} золота + ${Math.ceil(price * 0.3 / 100)} дух. камней`;\r\n      case 'spiritStones':\r\n        return `${Math.ceil(price / 100)} дух. камней`;\r\n      default:\r\n        return `${price} золота`;\r\n    }\r\n  };\r\n  \r\n  // Проверка достаточности валюты для покупки\r\n  const hasSufficientCurrency = (price, rarity) => {\r\n    const currencyType = getCurrencyTypeByRarity(rarity);\r\n    const totalPrice = price * quantity;\r\n    \r\n    switch(currencyType) {\r\n      case 'copper':\r\n        return (player.inventory.currency.copper || 0) >= totalPrice;\r\n      case 'silver':\r\n        return (player.inventory.currency.silver || 0) >= totalPrice;\r\n      case 'gold':\r\n        return (player.inventory.currency.gold || 0) >= totalPrice;\r\n      case 'gold+spiritStones': {\r\n        const goldCost = Math.floor(totalPrice * 0.7);\r\n        const spiritStonesCost = Math.ceil(totalPrice * 0.3 / 100);\r\n        return (player.inventory.currency.gold || 0) >= goldCost && \r\n               (player.inventory.currency.spiritStones || 0) >= spiritStonesCost;\r\n      }\r\n      case 'spiritStones':\r\n        return (player.inventory.currency.spiritStones || 0) >= Math.ceil(totalPrice / 100);\r\n      default:\r\n        return (player.inventory.currency.gold || 0) >= totalPrice;\r\n    }\r\n  };\r\n  \r\n  // Обработчик покупки предмета\r\n  const handleBuyItem = () => {\r\n    if (!selectedItem) return;\r\n    \r\n    // Получаем тип валюты в зависимости от редкости\r\n    const currencyType = getCurrencyTypeByRarity(selectedItem.rarity);\r\n    const totalPrice = selectedItem.price * quantity;\r\n    \r\n    // Проверка наличия достаточного количества валюты\r\n    if (!hasSufficientCurrency(selectedItem.price, selectedItem.rarity)) {\r\n      alert(`Недостаточно ${\r\n        currencyType === 'copper' ? 'меди' : \r\n        currencyType === 'silver' ? 'серебра' : \r\n        currencyType === 'gold' ? 'золота' : \r\n        currencyType === 'gold+spiritStones' ? 'золота или духовных камней' : \r\n        'духовных камней'\r\n      } для покупки`);\r\n      return;\r\n    }\r\n    \r\n    // Проверяем, достаточно ли товаров у торговца\r\n    if (selectedItem.quantity < quantity) {\r\n      alert(`У торговца недостаточно товаров. Доступно: ${selectedItem.quantity}`);\r\n      return;\r\n    }\r\n    \r\n    // Отладочный вывод для отслеживания валюты до покупки\r\n    console.log('Валюта до покупки:', player.inventory.currency);\r\n    \r\n    // Создаем объект для обновления валюты с отрицательными значениями\r\n    // Эти значения будут добавлены к текущей валюте (вычтены, т.к. отрицательные)\r\n    const currencyUpdate = {};\r\n    \r\n    // Вычисляем изменения валюты в зависимости от типа\r\n    switch(currencyType) {\r\n      case 'copper':\r\n        currencyUpdate.copper = -totalPrice; // Просто отрицательное значение для вычитания\r\n        break;\r\n      case 'silver':\r\n        currencyUpdate.silver = -totalPrice; // Просто отрицательное значение для вычитания\r\n        break;\r\n      case 'gold':\r\n        currencyUpdate.gold = -totalPrice; // Просто отрицательное значение для вычитания\r\n        break;\r\n      case 'gold+spiritStones': {\r\n        const goldCost = Math.floor(totalPrice * 0.7);\r\n        const spiritStonesCost = Math.ceil(totalPrice * 0.3 / 100);\r\n        currencyUpdate.gold = -goldCost; // Отрицательное значение для вычитания\r\n        currencyUpdate.spiritStones = -spiritStonesCost; // Отрицательное значение для вычитания\r\n        break;\r\n      }\r\n      case 'spiritStones':\r\n        currencyUpdate.spiritStones = -Math.ceil(totalPrice / 100); // Отрицательное значение для вычитания\r\n        break;\r\n    }\r\n    \r\n    // Вывод сообщения о покупке\r\n    alert(`Покупка ${quantity} шт. предмета \"${selectedItem.name}\" за ${formatPrice(totalPrice, selectedItem.rarity)}`);\r\n    \r\n    // Создаем объект для добавления в инвентарь\r\n    const itemToAdd = {\r\n      id: selectedItem.itemId,\r\n      type: selectedItem.itemType,\r\n      name: selectedItem.name,\r\n      description: selectedItem.description,\r\n      rarity: selectedItem.rarity,\r\n      price: selectedItem.price,\r\n      quantity: quantity // Указываем количество покупаемых предметов\r\n    };\r\n    \r\n    // Для товаров для питомцев, добавляем специфические свойства\r\n    if (selectedItem.itemType === 'pet_food') {\r\n      // Копируем все свойства, которые могут быть полезны для кормления питомцев\r\n      if (selectedItem.nutritionValue !== undefined) {\r\n        itemToAdd.nutritionValue = selectedItem.nutritionValue;\r\n      }\r\n      if (selectedItem.loyaltyBonus !== undefined) {\r\n        itemToAdd.loyaltyBonus = selectedItem.loyaltyBonus;\r\n      }\r\n      // Добавляем другие возможные свойства питомцев\r\n      if (selectedItem.statBonus) {\r\n        itemToAdd.statBonus = selectedItem.statBonus;\r\n      }\r\n      if (selectedItem.preferredTypes) {\r\n        itemToAdd.preferredTypes = selectedItem.preferredTypes;\r\n      }\r\n      \r\n      console.log('Добавление еды для питомца с полными свойствами:', itemToAdd);\r\n    }\r\n    \r\n    // Добавление предмета в инвентарь\r\n    actions.addItem(itemToAdd);\r\n    \r\n    // Обновление валюты в аддитивном режиме (true = добавить/вычесть)\r\n    actions.updateCurrency(currencyUpdate, true);\r\n    \r\n    // Отладочный вывод для отслеживания валюты после покупки\r\n    console.log('Валюта после покупки (аддитивный режим):', currencyUpdate);\r\n    \r\n    // Обновляем количество предметов у торговца\r\n    // Находим торговца, которому принадлежит товар\r\n    const merchants = getAllMerchants();\r\n    const merchant = merchants.find(m => m.id === selectedItem.sellerId);\r\n    \r\n    if (merchant && merchant.items) {\r\n      // Находим товар в списке товаров торговца\r\n      const merchantItem = merchant.items.find(item => \r\n        item.itemId === selectedItem.itemId && \r\n        item.itemType === selectedItem.itemType\r\n      );\r\n      \r\n      if (merchantItem) {\r\n        // Уменьшаем количество товара у торговца\r\n        merchantItem.quantity -= quantity;\r\n        \r\n        // Предотвращаем отрицательное количество\r\n        if (merchantItem.quantity < 0) {\r\n          merchantItem.quantity = 0;\r\n        }\r\n        \r\n        // Записываем текущее время для отметки последней покупки\r\n        if (merchantItem.lastRestockTime !== undefined) {\r\n          merchantItem.lastRestockTime = Date.now() / 3600000; // Приблизительно текущее время в часах\r\n        }\r\n        \r\n        console.log(`Осталось товаров у торговца \"${merchant.name}\": ${merchantItem.quantity}`);\r\n        \r\n        // Обновляем состояние рынка с полностью обновленными данными, чтобы отразить изменения в UI\r\n        const updatedMerchants = getAllMerchants();\r\n        const updatedMarketItems = [];\r\n        \r\n        updatedMerchants.forEach(merchant => {\r\n          if (merchant.items && merchant.items.length > 0) {\r\n            // Получаем уровень отношений с торговцем для скидок\r\n            const relationshipLevel = getRelationshipLevel(merchant.id);\r\n            console.log(`При обновлении после покупки: уровень отношений с ${merchant.name}: ${relationshipLevel}`);\r\n            \r\n            merchant.items.forEach(item => {\r\n              // Пропускаем предметы типа \"currency\"\r\n              if (item.itemType === 'currency') return;\r\n              \r\n              // Применяем скидку на основе отношений\r\n              const basePrice = item.basePrice || 100;\r\n              const discount = calculateMerchantDiscount(relationshipLevel);\r\n              const { finalPrice } = applyLoyaltyDiscount(basePrice, relationshipLevel);\r\n              \r\n              // Создаем базовый объект предмета\r\n              const marketItem = {\r\n                id: updatedMarketItems.length + 1,\r\n                itemId: item.itemId,\r\n                itemType: item.itemType,\r\n                name: item.name || `Предмет ${item.itemId}`,\r\n                description: item.description || `Описание предмета ${item.itemId}`,\r\n                rarity: item.rarity || 'common',\r\n                quantity: item.quantity < 0 ? 10 : item.quantity,\r\n                price: finalPrice,\r\n                originalPrice: basePrice, // Сохраняем исходную цену для отображения скидки\r\n                discount: discount, // Сохраняем процент скидки\r\n                sellerId: merchant.id,\r\n                sellerName: merchant.name\r\n              };\r\n              \r\n              // Копируем все специфические свойства предмета\r\n              if (item.itemType === 'pet_food') {\r\n                // Копируем свойства для кормления питомцев\r\n                if (item.nutritionValue !== undefined) {\r\n                  marketItem.nutritionValue = item.nutritionValue;\r\n                }\r\n                if (item.loyaltyBonus !== undefined) {\r\n                  marketItem.loyaltyBonus = item.loyaltyBonus;\r\n                }\r\n              }\r\n              \r\n              updatedMarketItems.push(marketItem);\r\n            });\r\n          }\r\n        });\r\n        \r\n        // Отправляем полные обновленные данные\r\n        actions.dispatch({\r\n          type: ACTION_TYPES.UPDATE_MARKET_STATE,\r\n          payload: {\r\n            marketItems: updatedMarketItems,\r\n            merchantsUpdated: true,\r\n            timestamp: Date.now()\r\n          }\r\n        });\r\n      }\r\n    }\r\n    \r\n    setSelectedItem(null);\r\n    setQuantity(1);\r\n  };\r\n  \r\n  // Обработчик продажи предмета\r\n  const handleSellItem = () => {\r\n    if (!selectedItem) return;\r\n    \r\n    // Проверка наличия цены предмета\r\n    if (!selectedItem.price) {\r\n      alert(\"Этот предмет нельзя продать\");\r\n      return;\r\n    }\r\n    \r\n    // Проверка наличия достаточного количества предметов\r\n    if (selectedItem.quantity < quantity) {\r\n      alert(\"У вас недостаточно предметов для продажи\");\r\n      return;\r\n    }\r\n    \r\n    // Определяем тип валюты в зависимости от редкости предмета\r\n    const currencyType = getCurrencyTypeByRarity(selectedItem.rarity || 'common');\r\n    \r\n    // Вычисляем сумму валюты, которую нужно добавить (70% от базовой цены)\r\n    const sellPrice = Math.floor(selectedItem.price * 0.7) * quantity;\r\n    \r\n    // Создаем объект с валютой в зависимости от типа\r\n    const currencyToAdd = {};\r\n    \r\n    switch(currencyType) {\r\n      case 'copper':\r\n        currencyToAdd.copper = sellPrice;\r\n        break;\r\n      case 'silver':\r\n        currencyToAdd.silver = sellPrice;\r\n        break;\r\n      case 'gold':\r\n        currencyToAdd.gold = sellPrice;\r\n        break;\r\n      case 'gold+spiritStones': {\r\n        const goldAmount = Math.floor(sellPrice * 0.7);\r\n        const spiritStonesAmount = Math.ceil(sellPrice * 0.3 / 100);\r\n        currencyToAdd.gold = goldAmount;\r\n        currencyToAdd.spiritStones = spiritStonesAmount;\r\n        break;\r\n      }\r\n      case 'spiritStones':\r\n        currencyToAdd.spiritStones = Math.ceil(sellPrice / 100);\r\n        break;\r\n      default:\r\n        currencyToAdd.gold = sellPrice;\r\n    }\r\n    \r\n    // Вывод сообщения о продаже\r\n    alert(`Продажа ${quantity} шт. предмета \"${selectedItem.name}\" за ${formatPrice(sellPrice, selectedItem.rarity)}`);\r\n    \r\n    // Удаление предмета из инвентаря\r\n    actions.removeItem(selectedItem.id, quantity);\r\n    \r\n    // Обновление валюты\r\n    actions.updateCurrency(currencyToAdd, true);\r\n    \r\n    // Сброс выбранного предмета и количества\r\n    setSelectedItem(null);\r\n    setQuantity(1);\r\n  };\r\n  \r\n  // Разметка компонента\r\n  return (\r\n    <TabContainer>\r\n      <TabHeader>\r\n        <TabTitle>Рынок</TabTitle>\r\n        <CurrencyDisplay>\r\n          <CurrencyItem>\r\n            <CurrencyIcon type=\"copper\" />\r\n            <CurrencyValue>{player?.inventory?.currency?.copper || 0}</CurrencyValue>\r\n          </CurrencyItem>\r\n          <CurrencyItem>\r\n            <CurrencyIcon type=\"silver\" />\r\n            <CurrencyValue>{player?.inventory?.currency?.silver || 0}</CurrencyValue>\r\n          </CurrencyItem>\r\n          <CurrencyItem>\r\n            <CurrencyIcon type=\"gold\" />\r\n            <CurrencyValue>{player?.inventory?.currency?.gold || 0}</CurrencyValue>\r\n          </CurrencyItem>\r\n          <CurrencyItem>\r\n            <CurrencyIcon type=\"spiritStone\" />\r\n            <CurrencyValue>{player?.inventory?.currency?.spiritStones || 0}</CurrencyValue>\r\n          </CurrencyItem>\r\n        </CurrencyDisplay>\r\n      </TabHeader>\r\n      \r\n      <TabMenu>\r\n        <TabButton \r\n          active={activeTab === 'market'} \r\n          onClick={() => setActiveTab('market')}\r\n        >\r\n          Товары\r\n        </TabButton>\r\n        <TabButton \r\n          active={activeTab === 'sell'} \r\n          onClick={() => setActiveTab('sell')}\r\n        >\r\n          Продажа\r\n        </TabButton>\r\n        <TabButton \r\n          active={activeTab === 'merchants'} \r\n          onClick={() => setActiveTab('merchants')}\r\n        >\r\n          Торговцы\r\n        </TabButton>\r\n      </TabMenu>\r\n      \r\n      <TabContent>\r\n        {activeTab === 'market' && (\r\n          <>\r\n            <LeftPanel>\r\n              <SearchBar \r\n                placeholder=\"Поиск предметов...\" \r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n              />\r\n              \r\n              <FilterContainer>\r\n                <FilterSelect \r\n                  value={itemTypeFilter}\r\n                  onChange={(e) => setItemTypeFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Все типы</option>\r\n                  <option value=\"weapon\">Оружие</option>\r\n                  <option value=\"armor\">Броня</option>\r\n                  <option value=\"accessory\">Аксессуары</option>\r\n                  <option value=\"consumable\">Расходники</option>\r\n                  <option value=\"pet_food\">Еда для питомцев</option>\r\n                </FilterSelect>\r\n                \r\n                <FilterSelect \r\n                  value={rarityFilter}\r\n                  onChange={(e) => setRarityFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Любая редкость</option>\r\n                  <option value=\"common\">Обычный</option>\r\n                  <option value=\"uncommon\">Необычный</option>\r\n                  <option value=\"rare\">Редкий</option>\r\n                  <option value=\"epic\">Эпический</option>\r\n                  <option value=\"legendary\">Легендарный</option>\r\n                </FilterSelect>\r\n                \r\n                <FilterSelect \r\n                  value={activeSellerFilter || ''}\r\n                  onChange={(e) => setActiveSellerFilter(e.target.value === '' ? null : e.target.value)}\r\n                >\r\n                  <option value=\"\">Все торговцы</option>\r\n                  {market?.marketItems && [...new Set(market.marketItems.map(item => item.sellerId))].map(sellerId => {\r\n                    const seller = market.marketItems.find(item => item.sellerId === sellerId);\r\n                    return (\r\n                      <option key={sellerId} value={sellerId}>\r\n                        {seller?.sellerName || `Торговец #${sellerId}`}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </FilterSelect>\r\n              </FilterContainer>\r\n              \r\n              <ItemList>\r\n                {filteredItems.length > 0 ? (\r\n                  filteredItems.map(item => (\r\n                    <ItemCard \r\n                      key={item.id} \r\n                      selected={selectedItem && selectedItem.id === item.id}\r\n                      onClick={() => setSelectedItem(item)}\r\n                    >\r\n                      <ItemIcon>{item.itemType === 'weapon' ? '⚔️' : \r\n                        item.itemType === 'armor' ? '🛡️' : \r\n                        item.itemType === 'accessory' ? '💍' : \r\n                        item.itemType === 'consumable' ? '🧪' : \r\n                        item.itemType === 'pet_food' ? '🍖' : '📦'}\r\n                      </ItemIcon>\r\n                      <ItemInfo>\r\n                        <ItemName rarity={item.rarity}>{item.name}</ItemName>\r\n                        <ItemPrice currencyType={getCurrencyTypeByRarity(item.rarity)}>\r\n                          {formatPrice(item.price, item.rarity)}\r\n                          {item.discount > 0 && ` (-${item.discount}%)`}\r\n                        </ItemPrice>\r\n                      </ItemInfo>\r\n                    </ItemCard>\r\n                  ))\r\n                ) : (\r\n                  <NoItemsMessage>Предметы не найдены</NoItemsMessage>\r\n                )}\r\n              </ItemList>\r\n            </LeftPanel>\r\n            \r\n            <RightPanel>\r\n              {selectedItem ? (\r\n                <>\r\n                  <DetailTitle>{selectedItem.name}</DetailTitle>\r\n                  <ItemDescription>{selectedItem.description}</ItemDescription>\r\n                  \r\n                  <ItemDetails>\r\n                    <DetailRow>\r\n                      <DetailLabel>Тип:</DetailLabel>\r\n                      <DetailValue>\r\n                        {selectedItem.itemType === 'weapon' ? 'Оружие' : \r\n                         selectedItem.itemType === 'armor' ? 'Броня' : \r\n                         selectedItem.itemType === 'accessory' ? 'Аксессуар' : \r\n                         selectedItem.itemType === 'consumable' ? 'Расходник' : \r\n                         selectedItem.itemType === 'pet_food' ? 'Еда для питомцев' :\r\n                         'Предмет'}\r\n                      </DetailValue>\r\n                    </DetailRow>\r\n                    <DetailRow>\r\n                      <DetailLabel>Редкость:</DetailLabel>\r\n                      <DetailValue>\r\n                        {selectedItem.rarity === 'common' ? 'Обычный' : \r\n                         selectedItem.rarity === 'uncommon' ? 'Необычный' : \r\n                         selectedItem.rarity === 'rare' ? 'Редкий' : \r\n                         selectedItem.rarity === 'epic' ? 'Эпический' : \r\n                         selectedItem.rarity === 'legendary' ? 'Легендарный' : \r\n                         'Неизвестно'}\r\n                      </DetailValue>\r\n                    </DetailRow>\r\n                    <DetailRow>\r\n                      <DetailLabel>Цена:</DetailLabel>\r\n                      <DetailValue>\r\n                        {formatPrice(selectedItem.price, selectedItem.rarity)}\r\n                        {selectedItem.discount > 0 && (\r\n                          <span style={{ color: '#8AFF8A', marginLeft: '8px' }}>\r\n                            (-{selectedItem.discount}%)\r\n                          </span>\r\n                        )}\r\n                      </DetailValue>\r\n                    </DetailRow>\r\n                    <DetailRow>\r\n                      <DetailLabel>Продавец:</DetailLabel>\r\n                      <DetailValue>{selectedItem.sellerName}</DetailValue>\r\n                    </DetailRow>\r\n                    <DetailRow>\r\n                      <DetailLabel>В наличии:</DetailLabel>\r\n                      <DetailValue>{selectedItem.quantity}</DetailValue>\r\n                    </DetailRow>\r\n                    \r\n                    {/* Дополнительные свойства специфичные для типа предмета */}\r\n                    {selectedItem.itemType === 'pet_food' && (\r\n                      <>\r\n                        {selectedItem.nutritionValue !== undefined && (\r\n                          <DetailRow>\r\n                            <DetailLabel>Питательность:</DetailLabel>\r\n                            <DetailValue>{selectedItem.nutritionValue}</DetailValue>\r\n                          </DetailRow>\r\n                        )}\r\n                        {selectedItem.loyaltyBonus !== undefined && (\r\n                          <DetailRow>\r\n                            <DetailLabel>Бонус лояльности:</DetailLabel>\r\n                            <DetailValue>+{selectedItem.loyaltyBonus}</DetailValue>\r\n                          </DetailRow>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                  </ItemDetails>\r\n                  \r\n                  <QuantityControl>\r\n                    <QuantityButton \r\n                      onClick={() => setQuantity(prev => Math.max(1, prev - 1))}\r\n                      disabled={quantity <= 1}\r\n                    >-</QuantityButton>\r\n                    <QuantityInput \r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max={selectedItem.quantity}\r\n                      value={quantity}\r\n                      onChange={(e) => {\r\n                        const val = parseInt(e.target.value);\r\n                        if (!isNaN(val) && val > 0 && val <= selectedItem.quantity) {\r\n                          setQuantity(val);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <QuantityButton \r\n                      onClick={() => setQuantity(prev => Math.min(selectedItem.quantity, prev + 1))}\r\n                      disabled={quantity >= selectedItem.quantity}\r\n                    >+</QuantityButton>\r\n                  </QuantityControl>\r\n                  \r\n                  <ActionButton \r\n                    primary \r\n                    onClick={handleBuyItem}\r\n                    disabled={!hasSufficientCurrency(selectedItem.price, selectedItem.rarity)}\r\n                  >\r\n                    Купить за {formatPrice(selectedItem.price * quantity, selectedItem.rarity)}\r\n                  </ActionButton>\r\n                </>\r\n              ) : (\r\n                <NoItemsMessage>Выберите предмет для просмотра деталей</NoItemsMessage>\r\n              )}\r\n            </RightPanel>\r\n          </>\r\n        )}\r\n        \r\n        {activeTab === 'sell' && (\r\n          <>\r\n            <LeftPanel>\r\n              <SearchBar \r\n                placeholder=\"Поиск в инвентаре...\" \r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n              />\r\n              \r\n              <FilterContainer>\r\n                <FilterSelect \r\n                  value={itemTypeFilter}\r\n                  onChange={(e) => setItemTypeFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Все типы</option>\r\n                  <option value=\"weapon\">Оружие</option>\r\n                  <option value=\"armor\">Броня</option>\r\n                  <option value=\"accessory\">Аксессуары</option>\r\n                  <option value=\"consumable\">Расходники</option>\r\n                </FilterSelect>\r\n                \r\n                <FilterSelect \r\n                  value={rarityFilter}\r\n                  onChange={(e) => setRarityFilter(e.target.value)}\r\n                >\r\n                  <option value=\"all\">Любая редкость</option>\r\n                  <option value=\"common\">Обычный</option>\r\n                  <option value=\"uncommon\">Необычный</option>\r\n                  <option value=\"rare\">Редкий</option>\r\n                  <option value=\"epic\">Эпический</option>\r\n                  <option value=\"legendary\">Легендарный</option>\r\n                </FilterSelect>\r\n              </FilterContainer>\r\n              \r\n              <ItemList>\r\n                {player?.inventory?.items && player.inventory.items.length > 0 ? (\r\n                  player.inventory.items\r\n                    .filter(item => \r\n                      // Фильтрация предметов\r\n                      (itemTypeFilter === 'all' || item.type === itemTypeFilter) &&\r\n                      (rarityFilter === 'all' || item.rarity === rarityFilter) &&\r\n                      (searchQuery === '' || \r\n                        (item.name && item.name.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n                        (item.description && item.description.toLowerCase().includes(searchQuery.toLowerCase())))\r\n                    )\r\n                    .map(item => (\r\n                      <ItemCard \r\n                        key={item.id} \r\n                        selected={selectedItem && selectedItem.id === item.id}\r\n                        onClick={() => setSelectedItem(item)}\r\n                      >\r\n                        <ItemIcon>{item.type === 'weapon' ? '⚔️' : \r\n                          item.type === 'armor' ? '🛡️' : \r\n                          item.type === 'accessory' ? '💍' : \r\n                          item.type === 'consumable' ? '🧪' : '📦'}\r\n                        </ItemIcon>\r\n                        <ItemInfo>\r\n                          <ItemName rarity={item.rarity}>{item.name}</ItemName>\r\n                          <div>x{item.quantity || 1}</div>\r\n                        </ItemInfo>\r\n                      </ItemCard>\r\n                    ))\r\n                ) : (\r\n                  <NoItemsMessage>В инвентаре ничего нет</NoItemsMessage>\r\n                )}\r\n              </ItemList>\r\n            </LeftPanel>\r\n            \r\n            <RightPanel>\r\n              {selectedItem ? (\r\n                <>\r\n                  <DetailTitle>{selectedItem.name}</DetailTitle>\r\n                  <ItemDescription>{selectedItem.description}</ItemDescription>\r\n                  \r\n                  <ItemDetails>\r\n                    <DetailRow>\r\n                      <DetailLabel>Тип:</DetailLabel>\r\n                      <DetailValue>\r\n                        {selectedItem.type === 'weapon' ? 'Оружие' : \r\n                         selectedItem.type === 'armor' ? 'Броня' : \r\n                         selectedItem.type === 'accessory' ? 'Аксессуар' : \r\n                         selectedItem.type === 'consumable' ? 'Расходник' : \r\n                         'Предмет'}\r\n                      </DetailValue>\r\n                    </DetailRow>\r\n                    <DetailRow>\r\n                      <DetailLabel>Редкость:</DetailLabel>\r\n                      <DetailValue>\r\n                        {selectedItem.rarity === 'common' ? 'Обычный' : \r\n                         selectedItem.rarity === 'uncommon' ? 'Необычный' : \r\n                         selectedItem.rarity === 'rare' ? 'Редкий' : \r\n                         selectedItem.rarity === 'epic' ? 'Эпический' : \r\n                         selectedItem.rarity === 'legendary' ? 'Легендарный' : \r\n                         'Неизвестно'}\r\n                      </DetailValue>\r\n                    </DetailRow>\r\n                    {selectedItem.price && (\r\n                      <DetailRow>\r\n                        <DetailLabel>Цена продажи:</DetailLabel>\r\n                        <DetailValue>\r\n                          {formatPrice(Math.floor(selectedItem.price * 0.7), selectedItem.rarity)}\r\n                        </DetailValue>\r\n                      </DetailRow>\r\n                    )}\r\n                    <DetailRow>\r\n                      <DetailLabel>Количество:</DetailLabel>\r\n                      <DetailValue>{selectedItem.quantity || 1}</DetailValue>\r\n                    </DetailRow>\r\n                  </ItemDetails>\r\n                  \r\n                  <QuantityControl>\r\n                    <QuantityButton \r\n                      onClick={() => setQuantity(prev => Math.max(1, prev - 1))}\r\n                      disabled={quantity <= 1}\r\n                    >-</QuantityButton>\r\n                    <QuantityInput \r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      max={selectedItem.quantity || 1}\r\n                      value={quantity}\r\n                      onChange={(e) => {\r\n                        const val = parseInt(e.target.value);\r\n                        if (!isNaN(val) && val > 0 && val <= (selectedItem.quantity || 1)) {\r\n                          setQuantity(val);\r\n                        }\r\n                      }}\r\n                    />\r\n                    <QuantityButton \r\n                      onClick={() => setQuantity(prev => Math.min(selectedItem.quantity || 1, prev + 1))}\r\n                      disabled={quantity >= (selectedItem.quantity || 1)}\r\n                    >+</QuantityButton>\r\n                  </QuantityControl>\r\n                  \r\n                  <ActionButton \r\n                    primary \r\n                    onClick={handleSellItem}\r\n                    disabled={!selectedItem.price}\r\n                  >\r\n                    Продать за {selectedItem.price ? \r\n                      formatPrice(Math.floor(selectedItem.price * 0.7) * quantity, selectedItem.rarity) :\r\n                      \"нельзя продать\"}\r\n                  </ActionButton>\r\n                </>\r\n              ) : (\r\n                <NoItemsMessage>Выберите предмет для продажи</NoItemsMessage>\r\n              )}\r\n            </RightPanel>\r\n          </>\r\n        )}\r\n        \r\n        {activeTab === 'merchants' && (\r\n          <>\r\n            <LeftPanel>\r\n              <SearchBar \r\n                placeholder=\"Поиск торговцев...\" \r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n              />\r\n              \r\n              <ItemList>\r\n                {market?.marketItems && [...new Set(market.marketItems.map(item => item.sellerId))].map(sellerId => {\r\n                  const merchant = market.marketItems.find(item => item.sellerId === sellerId);\r\n                  \r\n                  if (!merchant) return null;\r\n                  \r\n                  const merchantName = merchant.sellerName || `Торговец #${sellerId}`;\r\n                  \r\n                  // Фильтрация по поиску\r\n                  if (searchQuery && !merchantName.toLowerCase().includes(searchQuery.toLowerCase())) {\r\n                    return null;\r\n                  }\r\n                  \r\n                  return (\r\n                    <ItemCard \r\n                      key={sellerId} \r\n                      selected={selectedMerchant && selectedMerchant.id === sellerId}\r\n                      onClick={() => {\r\n                        setSelectedMerchant({\r\n                          id: sellerId,\r\n                          name: merchantName\r\n                        });\r\n                        // Устанавливаем фильтр по торговцу для вкладки \"Товары\"\r\n                        setActiveSellerFilter(sellerId);\r\n                      }}\r\n                    >\r\n                      <ItemIcon>🧙</ItemIcon>\r\n                      <ItemInfo>\r\n                        <ItemName>{merchantName}</ItemName>\r\n                        <div>Отношения: {getRelationshipLevel(sellerId)}</div>\r\n                      </ItemInfo>\r\n                    </ItemCard>\r\n                  );\r\n                })}\r\n              </ItemList>\r\n            </LeftPanel>\r\n            \r\n            <RightPanel>\r\n              {selectedMerchant ? (\r\n                <>\r\n                  <DetailTitle>{selectedMerchant.name}</DetailTitle>\r\n                  \r\n                  <ItemDetails>\r\n                    <DetailRow>\r\n                      <DetailLabel>Отношения:</DetailLabel>\r\n                      <DetailValue>{getRelationshipLevel(selectedMerchant.id)}</DetailValue>\r\n                    </DetailRow>\r\n                    <DetailRow>\r\n                      <DetailLabel>Скидка:</DetailLabel>\r\n                      <DetailValue>{calculateMerchantDiscount(getRelationshipLevel(selectedMerchant.id))}%</DetailValue>\r\n                    </DetailRow>\r\n                  </ItemDetails>\r\n                  \r\n                  <ActionButton \r\n                    onClick={() => {\r\n                      setActiveTab('market');\r\n                      setActiveSellerFilter(selectedMerchant.id);\r\n                    }}\r\n                  >\r\n                    Показать товары\r\n                  </ActionButton>\r\n                </>\r\n              ) : (\r\n                <NoItemsMessage>Выберите торговца для просмотра информации</NoItemsMessage>\r\n              )}\r\n            </RightPanel>\r\n          </>\r\n        )}\r\n      </TabContent>\r\n    </TabContainer>\r\n  );\r\n};\r\n\r\nexport default MarketTab;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport apiService from '../../services/api';\r\n\r\n// Импортируем компоненты времени и погоды\r\nimport WorldTimeWidget from '../ui/WorldTimeWidget';\r\nimport ForecastWidget from '../world/ForecastWidget';\r\nimport ActiveEffectsPanel from '../ui/ActiveEffectsPanel';\r\nimport VisualEffectsLayer from '../effects/VisualEffectsLayer';\r\nimport WeatherDetailScreen from '../screens/WeatherDetailScreen';\r\n\r\n// Импортируем компоненты вкладок\r\nimport CultivationTab from '../tabs/CultivationTab';\r\nimport InventoryTab from '../tabs/InventoryTab';\r\nimport EquipmentTab from '../tabs/EquipmentTab';\r\nimport CharacterTab from '../tabs/CharacterTab';\r\nimport MapTab from '../tabs/MapTab';\r\nimport QuestsTab from '../tabs/QuestsTab';\r\nimport SectTab from '../tabs/SectTab';\r\nimport GroupsTab from '../tabs/GroupsTab';\r\nimport SkillsTab from '../tabs/SkillsTab';\r\nimport SocialTab from '../tabs/SocialTab';\r\nimport AchievementsTab from '../tabs/AchievementsTab';\r\nimport AlchemyTab from '../tabs/AlchemyTab';\r\nimport SpiritPetsTab from '../tabs/SpiritPetsTab';\r\nimport MarketTab from '../tabs/MarketTab';\r\n\r\n// Компоненты интерфейса\r\nconst GameContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr;\r\n  background: #1a1a1a;\r\n  color: #f0f0f0;\r\n`;\r\n\r\nconst TopBar = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  border-bottom: 1px solid #d4af37;\r\n  padding: 10px 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst PlayerInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: #d4af37;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  color: #000;\r\n`;\r\n\r\nconst PlayerStats = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 5px;\r\n`;\r\n\r\nconst PlayerName = styled.div`\r\n  font-size: 1.2rem;\r\n  color: #d4af37;\r\n`;\r\n\r\nconst CultivationInfo = styled.div`\r\n  font-size: 0.9rem;\r\n  color: #aaa;\r\n`;\r\n\r\nconst ResourcesInfo = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst Resource = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  \r\n  span {\r\n    color: #d4af37;\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  padding: 8px 15px;\r\n  background: rgba(212, 175, 55, 0.2);\r\n  border: 1px solid #d4af37;\r\n  border-radius: 4px;\r\n  color: #d4af37;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.3);\r\n  }\r\n`;\r\n\r\nconst MainArea = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr 300px;\r\n  gap: 1px;\r\n  background: #111;\r\n  height: 100%;\r\n`;\r\n\r\nconst Sidebar = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    background: rgba(212, 175, 55, 0.1);\r\n    color: #d4af37;\r\n  }\r\n  \r\n  ${props => props.active && `\r\n    background: rgba(212, 175, 55, 0.2);\r\n    color: #d4af37;\r\n  `}\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst RightPanel = styled.div`\r\n  background: rgba(30, 30, 30, 0.95);\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n`;\r\n\r\nconst StatusEffects = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 5px;\r\n`;\r\n\r\nconst Effect = styled.div`\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  background: rgba(212, 175, 55, 0.1);\r\n  font-size: 0.9rem;\r\n  \r\n  ${props => props.type === 'buff' && `\r\n    color: #4caf50;\r\n  `}\r\n  \r\n  ${props => props.type === 'debuff' && `\r\n    color: #f44336;\r\n  `}\r\n`;\r\n\r\nconst Notifications = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Notification = styled.div`\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border-left: 3px solid #d4af37;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nfunction GamePage() {\r\n  const { state, actions } = useGame();\r\n  const [activeTab, setActiveTab] = useState('cultivation');\r\n  const navigate = useNavigate();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [showWeatherDetail, setShowWeatherDetail] = useState(false);\r\n  \r\n  // Имитация получения уведомлений\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const events = [\r\n        'Вы чувствуете прилив духовной энергии...',\r\n        'Поблизости появился редкий духовный зверь!',\r\n        'Ваша техника культивации становится более совершенной.',\r\n        'В округе замечены следы древнего артефакта...'\r\n      ];\r\n      \r\n      actions.addNotification({\r\n        message: events[Math.floor(Math.random() * events.length)],\r\n        type: 'info'\r\n      });\r\n    }, 30000); // Каждые 30 секунд\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [actions]);\r\n  \r\n  // Имитация игрового времени\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      // Получаем текущие значения\r\n      const currentHour = state.world.time.hour;\r\n      const currentMinute = state.world.time.minute;\r\n      const currentDay = state.world.time.day;\r\n      \r\n      // Вычисляем новые значения\r\n      const newMinute = (currentMinute + 10) % 60;\r\n      const hourIncrement = currentMinute + 10 >= 60 ? 1 : 0;\r\n      const newHour = (currentHour + hourIncrement) % 24;\r\n      \r\n      // ОЧЕНЬ ВАЖНО: проверяем переход через полночь\r\n      // Если был переход с 23 часов на 0, увеличиваем день\r\n      const dayIncrement = (currentHour === 23 && newHour === 0) ? 1 : 0;\r\n      const newDay = currentDay + dayIncrement;\r\n      \r\n      console.log('⏱️ Обновление времени в таймере:', {\r\n        текущее: `${currentHour}:${currentMinute} день ${currentDay}`,\r\n        новое: `${newHour}:${newMinute} день ${newDay}`,\r\n        переход_полночи: dayIncrement === 1\r\n      });\r\n      \r\n      // Обновляем время с сохранением дня\r\n      actions.updateTime({\r\n        minute: newMinute,\r\n        hour: newHour,\r\n        day: newDay, // Явно задаем день\r\n        // Сохраняем текущий сезон\r\n        season: state.world.time.season\r\n      });\r\n    }, 1000); // Каждую секунду = 10 игровых минут\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [actions, state.world.time]);\r\n  \r\n  const formatTime = (hour, minute) => {\r\n    return `${hour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\r\n  };\r\n  \r\n  // Функция для выхода из игры\r\n  const handleLogout = async () => {\r\n    try {\r\n      setIsSaving(true);\r\n      \r\n      // Показываем уведомление о сохранении\r\n      actions.addNotification({\r\n        message: 'Сохранение прогресса...',\r\n        type: 'info'\r\n      });\r\n      \r\n      // Сохраняем прогресс на сервере\r\n      await apiService.saveGameState(state);\r\n      \r\n      // Показываем уведомление об успешном сохранении\r\n      actions.addNotification({\r\n        message: 'Прогресс сохранен. Выход из игры...',\r\n        type: 'success'\r\n      });\r\n      \r\n      // Выходим из системы\r\n      await apiService.logout();\r\n      \r\n      // Небольшая задержка перед выходом\r\n      setTimeout(() => {\r\n        // Перенаправляем на страницу входа\r\n        navigate('/');\r\n      }, 1500);\r\n    } catch (error) {\r\n      console.error('Ошибка при выходе из игры:', error);\r\n      \r\n      // Показываем уведомление об ошибке\r\n      actions.addNotification({\r\n        message: 'Ошибка при сохранении прогресса: ' + error.message,\r\n        type: 'error'\r\n      });\r\n      \r\n      setIsSaving(false);\r\n    }\r\n  };\r\n  \r\n  // Проверка авторизации перед сохранением\r\n  const saveWithAuthCheck = async () => {\r\n    try {\r\n      // Проверяем авторизацию\r\n      const isAuthenticated = await apiService.checkAuth();\r\n      \r\n      if (!isAuthenticated) {\r\n        console.warn('Сохранение пропущено - пользователь не авторизован');\r\n        return false;\r\n      }\r\n      \r\n      // Сохраняем прогресс на сервере\r\n      await apiService.saveGameState(state);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Ошибка при сохранении прогресса:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // Автоматическое сохранение каждые 5 минут и при каждом действии пользователя\r\n  useEffect(() => {\r\n    // Сохранение по таймеру\r\n    const saveInterval = setInterval(async () => {\r\n      try {\r\n        const saved = await saveWithAuthCheck();\r\n        \r\n        if (saved) {\r\n          // Показываем уведомление об успешном сохранении\r\n          actions.addNotification({\r\n            message: 'Прогресс автоматически сохранен',\r\n            type: 'info'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Ошибка при автосохранении:', error);\r\n      }\r\n    }, 5 * 60 * 1000); // Каждые 5 минут\r\n    \r\n    // Сохранение при изменении важных данных\r\n    const saveData = async () => {\r\n      const saved = await saveWithAuthCheck();\r\n      if (saved) {\r\n        //console.log('Прогресс сохранен после действия пользователя');\r\n      }\r\n    };\r\n    \r\n    // Сохраняем данные при изменении важных частей состояния\r\n    if (state.isInitialized && !state.isLoading) {\r\n      saveData();\r\n    }\r\n    \r\n    return () => clearInterval(saveInterval);\r\n  }, [\r\n    state.player.stats, \r\n    state.player.cultivation, \r\n    state.player.inventory, \r\n    state.player.techniques, \r\n    state.player.progress.quests, \r\n    state.achievements,\r\n    state.isInitialized,\r\n    state.isLoading,\r\n    actions\r\n  ]);\r\n  \r\n  // Функция для рендеринга активной вкладки\r\n  const renderActiveTab = () => {\r\n    switch (activeTab) {\r\n      case 'cultivation':\r\n        return <CultivationTab />;\r\n      case 'inventory':\r\n        return <InventoryTab />;\r\n      case 'equipment':\r\n        return <EquipmentTab />;\r\n      case 'character':\r\n        return <CharacterTab />;\r\n      case 'map':\r\n        return <MapTab />;\r\n      case 'quests':\r\n        return <QuestsTab />;\r\n      case 'sect':\r\n        return <SectTab />;\r\n      case 'groups':\r\n        return <GroupsTab />;\r\n      case 'skills':\r\n        return <SkillsTab />;\r\n      case 'alchemy':\r\n        return <AlchemyTab />;\r\n      case 'social':\r\n        return <SocialTab />;\r\n      case 'achievements':\r\n        return <AchievementsTab />;\r\n      case 'spiritPets':\r\n        return <SpiritPetsTab />;\r\n      case 'market':\r\n        return <MarketTab />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <GameContainer>\r\n      {/* Слой визуальных эффектов для погоды и времени суток */}\r\n      <VisualEffectsLayer />\r\n      \r\n      {/* Модальное окно с детальной информацией о погоде */}\r\n      {showWeatherDetail && (\r\n        <div style={{ \r\n          position: 'fixed', \r\n          top: 0, \r\n          left: 0, \r\n          width: '100%', \r\n          height: '100%', \r\n          background: 'rgba(0,0,0,0.7)', \r\n          zIndex: 1000, \r\n          display: 'flex', \r\n          justifyContent: 'center', \r\n          alignItems: 'center' \r\n        }}>\r\n          <WeatherDetailScreen onClose={() => setShowWeatherDetail(false)} />\r\n        </div>\r\n      )}\r\n      <TopBar>\r\n        <PlayerInfo>\r\n          <Avatar>\r\n            {state.player.name[0]}\r\n          </Avatar>\r\n          <PlayerStats>\r\n            <PlayerName>{state.player.name}</PlayerName>\r\n            <CultivationInfo>\r\n              {state.player.cultivation.stage} ({state.player.cultivation.level})\r\n            </CultivationInfo>\r\n          </PlayerStats>\r\n        </PlayerInfo>\r\n        \r\n        <ResourcesInfo>\r\n          <Resource>\r\n            Духовная энергия: <span>{state.player.cultivation.energy || 0}/{state.player.cultivation.maxEnergy || 100}</span>\r\n          </Resource>\r\n          <Resource>\r\n            Опыт: <span>{state.player.cultivation.experience || 0}/{state.player.cultivation.experienceToNextLevel || 100}</span>\r\n          </Resource>\r\n          <Resource>\r\n            Золото: <span>{state.player.inventory.currency.gold || 0}</span>\r\n          </Resource>\r\n          <LogoutButton onClick={handleLogout} disabled={isSaving}>\r\n            {isSaving ? 'Сохранение...' : 'Выйти из игры'}\r\n          </LogoutButton>\r\n        </ResourcesInfo>\r\n      </TopBar>\r\n      \r\n      <MainArea>\r\n        <Sidebar>\r\n          <MenuItem \r\n            active={activeTab === 'cultivation'}\r\n            onClick={() => setActiveTab('cultivation')}\r\n          >\r\n            Культивация\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'inventory'}\r\n            onClick={() => setActiveTab('inventory')}\r\n          >\r\n            Инвентарь\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'equipment'}\r\n            onClick={() => setActiveTab('equipment')}\r\n          >\r\n            Экипировка\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'character'}\r\n            onClick={() => setActiveTab('character')}\r\n          >\r\n            Персонаж\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'map'}\r\n            onClick={() => setActiveTab('map')}\r\n          >\r\n            Карта\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'quests'}\r\n            onClick={() => setActiveTab('quests')}\r\n          >\r\n            Задания\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'sect'}\r\n            onClick={() => setActiveTab('sect')}\r\n          >\r\n            Секта\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'groups'}\r\n            onClick={() => setActiveTab('groups')}\r\n          >\r\n            Группы\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'skills'}\r\n            onClick={() => setActiveTab('skills')}\r\n          >\r\n            Техники\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'alchemy'}\r\n            onClick={() => setActiveTab('alchemy')}\r\n          >\r\n            Алхимия\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'social'}\r\n            onClick={() => setActiveTab('social')}\r\n          >\r\n            Социальное\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'achievements'}\r\n            onClick={() => setActiveTab('achievements')}\r\n          >\r\n            Достижения\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'spiritPets'}\r\n            onClick={() => setActiveTab('spiritPets')}\r\n          >\r\n            Питомцы\r\n          </MenuItem>\r\n          <MenuItem \r\n            active={activeTab === 'market'}\r\n            onClick={() => setActiveTab('market')}\r\n          >\r\n            Рынок\r\n          </MenuItem>\r\n        </Sidebar>\r\n        \r\n        <MainContent>\r\n          {renderActiveTab()}\r\n        </MainContent>\r\n        \r\n        <RightPanel>\r\n          {/* Виджет времени и погоды */}\r\n          <div style={{ cursor: 'pointer' }} onClick={() => setShowWeatherDetail(true)}>\r\n            <WorldTimeWidget />\r\n          </div>\r\n          \r\n          {/* Панель активных эффектов от погоды, времени суток и локации */}\r\n          <ActiveEffectsPanel />\r\n          \r\n          <div>\r\n            <h3>Уведомления</h3>\r\n            <Notifications>\r\n              {state.ui.notifications.map(notification => (\r\n                <Notification key={notification.id}>\r\n                  {notification.message}\r\n                </Notification>\r\n              ))}\r\n            </Notifications>\r\n          </div>\r\n        </RightPanel>\r\n      </MainArea>\r\n    </GameContainer>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","import { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { useGame } from '../../context/GameContext';\r\nimport { updateGameTime, INITIALIZE_WEATHER } from '../../context/actions/weather-actions';\r\nimport { connectDebugTools } from '../../utils/debugTools';\r\nimport WeatherService from '../../services/weather-service';\r\nimport { restockMerchantItems } from '../../data/merchants';\r\nimport ACTION_TYPES from '../../context/actions/actionTypes';\r\n\r\n// Время последнего ручного обновления времени (глобальное)\r\nconst lastManualUpdateStamp = { time: 0 };\r\n\r\n// Отключаем логи для улучшения производительности\r\nconst ENABLE_LOGS = false;\r\n\r\n/**\r\n * Компонент для обновления игрового времени\r\n * Обновляет игровое время каждые 15 секунд, что вызывает обновление погоды\r\n * через middleware\r\n * @param {Object} props - Свойства компонента\r\n * @param {boolean} props.debug - Флаг для включения отладочной информации\r\n */\r\nfunction GameTimeUpdater({ debug = false }) {\r\n  const { actions } = useGame();\r\n  // Используем useRef для хранения ссылки на интервал и предотвращения утечек памяти\r\n  const intervalRef = useRef(null);\r\n  // Используем useRef для хранения последней версии dispatch\r\n  const dispatchRef = useRef(actions.dispatch);\r\n  \r\n  // Обновляем ссылку на dispatch при изменении\r\n  useEffect(() => {\r\n    dispatchRef.current = actions.dispatch;\r\n  }, [actions.dispatch]);\r\n\r\n  // Используем useRef вместо useState для отслеживания последнего обновления времени\r\n  // чтобы избежать перерендеринга компонента\r\n  const lastUpdateRef = useRef(new Date());\r\n  // Длительность интервала обновления в миллисекундах (15 секунд вместо 60 секунд)\r\n  const updateInterval = 15000;\r\n\r\n  // Функция для проверки, можно ли выполнить автоматическое обновление\r\n  const canPerformAutoUpdate = useCallback(() => {\r\n    const timeSinceLastManual = Date.now() - lastManualUpdateStamp.time;\r\n    if (timeSinceLastManual < 2000) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }, []);\r\n\r\n  // Создаем функцию обновления с помощью useCallback, чтобы она была стабильной между рендерами\r\n  const updateTime = useCallback(() => {\r\n    // Проверяем, можно ли выполнить автоматическое обновление\r\n    if (!canPerformAutoUpdate()) {\r\n      return;\r\n    }\r\n    \r\n    const now = new Date();\r\n    // Вычисляем фактическое время, прошедшее с последнего обновления (в минутах)\r\n    const elapsedMinutes = (now - lastUpdateRef.current) / 60000;\r\n    \r\n    // Обновляем игровое время с учетом прошедшего реального времени\r\n    // Второй параметр false - указывает, что это автоматическое обновление\r\n    dispatchRef.current(updateGameTime(elapsedMinutes, false));\r\n    \r\n    // Обновляем время последнего обновления в ref (не вызывает перерендеринг)\r\n    lastUpdateRef.current = now;\r\n    \r\n    // Автоматические обновления не логируем\r\n  }, [canPerformAutoUpdate]); // Уменьшаем зависимости, так как lastUpdateRef - это ref\r\n\r\n  // После монтирования компонента синхронизируем день сезона с мировым днем и инициализируем погоду\r\n  useEffect(() => {\r\n    // Принудительно синхронизируем день сезона и инициализируем погоду при старте\r\n    const initializeGameState = () => {\r\n      // Сначала синхронизируем день сезона\r\n      dispatchRef.current({ type: 'SYNC_SEASON_DAY' });\r\n      console.log('📅 GameTimeUpdater: день сезона принудительно синхронизирован с мировым днем');\r\n      \r\n      // Используем полную инициализацию погоды с прогнозом вместо принудительной смены\r\n      dispatchRef.current({ type: INITIALIZE_WEATHER });\r\n      console.log('🌤️ GameTimeUpdater: запущена полная инициализация погоды при запуске');\r\n      \r\n      // Оповещаем о смене погоды через DOM-событие\r\n      window.dispatchEvent(new CustomEvent('weather_changed', { \r\n        detail: { auto: true, initialization: true, withForecast: true } \r\n      }));\r\n    };\r\n    \r\n    // Вызываем инициализацию с небольшой задержкой, чтобы гарантировать, что состояние уже загружено\r\n    const timer = setTimeout(() => {\r\n      initializeGameState();\r\n    }, 500);\r\n    \r\n    // Очищаем таймер при размонтировании\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Эффект для настройки и очистки таймера\r\n  useEffect(() => {\r\n    // Обновляем время сразу при монтировании компонента\r\n    updateTime();\r\n    \r\n    // Устанавливаем интервал обновления времени\r\n    intervalRef.current = setInterval(updateTime, updateInterval);\r\n    \r\n    // Очищаем интервал при размонтировании компонента\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    };\r\n  }, [updateTime]); // Добавляем updateTime как зависимость\r\n\r\n  // Эффект для синхронизации дня сезона и проверки нулевого таймера погоды каждые 15 секунд\r\n  useEffect(() => {\r\n    const syncAndCheckInterval = setInterval(() => {\r\n      if (canPerformAutoUpdate()) {\r\n        // Синхронизируем день сезона\r\n        dispatchRef.current({ type: 'SYNC_SEASON_DAY' });\r\n        \r\n        // Проверяем, не стал ли таймер погоды равным нулю\r\n        if (actions.state?.weather?.nextWeatherChange === 0) {\r\n          console.log('⚠️ GameTimeUpdater: Обнаружен нулевой nextWeatherChange, инициируем смену погоды');\r\n          dispatchRef.current({ type: 'FORCE_WEATHER_CHANGE' });\r\n          \r\n          // Оповещаем пользователя о смене погоды через DOM-событие\r\n          window.dispatchEvent(new CustomEvent('weather_changed', { detail: { auto: true } }));\r\n        }\r\n        \r\n        if (ENABLE_LOGS) {\r\n          console.log('🔄 GameTimeUpdater: периодическая синхронизация дня сезона и проверка таймера погоды');\r\n        }\r\n      }\r\n    }, 15000); // Каждые 15 секунд\r\n    \r\n    return () => clearInterval(syncAndCheckInterval);\r\n  }, [canPerformAutoUpdate, actions.state]);\r\n  \r\n  // Эффект для восстановления товаров у торговцев на основе игрового времени\r\n  useEffect(() => {\r\n    // Получаем текущее игровое время из состояния\r\n    const currentGameTime = actions.state?.world?.time?.gameTime;\r\n    \r\n    // Если время не определено, ничего не делаем\r\n    if (currentGameTime === undefined) return;\r\n    \r\n    // Создаем функцию для восстановления товаров\r\n    const restockItems = () => {\r\n      if (canPerformAutoUpdate()) {\r\n        // Вызываем функцию восстановления товаров\r\n        const restockOccurred = restockMerchantItems(currentGameTime);\r\n        \r\n        // Если произошло восстановление товаров, обновляем состояние рынка\r\n        if (restockOccurred) {\r\n          if (ENABLE_LOGS) {\r\n            console.log('🛒 GameTimeUpdater: восстановлены товары у торговцев');\r\n          }\r\n          \r\n          // Обновляем состояние рынка\r\n          dispatchRef.current({ \r\n            type: ACTION_TYPES.UPDATE_MARKET_STATE, \r\n            payload: { \r\n              // Обновляем состояние рынка с отметкой, что товары были восстановлены\r\n              merchantsUpdated: true,\r\n              timestamp: Date.now()\r\n            } \r\n          });\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Запускаем восстановление товаров сразу\r\n    restockItems();\r\n    \r\n    // Затем настраиваем интервал для восстановления товаров (раз в 5 минут реального времени)\r\n    const merchantRestockInterval = setInterval(restockItems, 5 * 60 * 1000);\r\n    \r\n    // Очищаем интервал при размонтировании компонента\r\n    return () => clearInterval(merchantRestockInterval);\r\n  }, [actions.state?.world?.time?.gameTime, canPerformAutoUpdate]);\r\n\r\n  // Эффект для обработки ручных обновлений времени\r\n  useEffect(() => {\r\n    // Функция для обнаружения ручных обновлений\r\n    const handleManualTimeUpdate = (event) => {\r\n      // Убедимся, что это наше событие с правильным типом\r\n      if (event.detail?.type === 'manual_time_update') {\r\n        lastManualUpdateStamp.time = Date.now();\r\n      }\r\n    };\r\n    \r\n    // Добавляем глобальный обработчик для событий ручного обновления времени\r\n    window.addEventListener('manual_time_update', handleManualTimeUpdate);\r\n    \r\n    // Удаляем обработчик при размонтировании\r\n    return () => {\r\n      window.removeEventListener('manual_time_update', handleManualTimeUpdate);\r\n    };\r\n  }, [debug]);\r\n\r\n  // Эффект для обработки изменения видимости страницы (когда пользователь переключает вкладки)\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === 'visible') {\r\n        const now = new Date();\r\n        const elapsedMinutes = (now - lastUpdateRef.current) / 60000;\r\n        \r\n        // Если прошло более 0.25 минуты (15 секунд), принудительно обновляем время\r\n        if (elapsedMinutes > 0.25 && canPerformAutoUpdate()) {\r\n          updateTime();\r\n        }\r\n      }\r\n    };\r\n    \r\n    // Добавляем слушатель события изменения видимости\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    \r\n    // Удаляем слушатель при размонтировании\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n    };\r\n  }, [updateTime, canPerformAutoUpdate]);\r\n\r\n  // Если включен режим отладки, подключаем инструменты отладки\r\n  useEffect(() => {\r\n    if (debug) {\r\n      // Подключаем отладочные инструменты к контексту игры молча, без логов\r\n      connectDebugTools({ context: { state: actions.state } });\r\n    }\r\n  }, [debug, actions]);\r\n  \r\n  // Обновляем ссылку на состояние при его изменении\r\n  useEffect(() => {\r\n    if (debug && actions.state) {\r\n      connectDebugTools({ context: { state: actions.state } });\r\n    }\r\n  }, [actions.state, debug]);\r\n\r\n  // Компонент не рендерит никакой UI\r\n  return null;\r\n}\r\n\r\nexport default GameTimeUpdater;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n// Импорт утилит отладки\r\nimport { initDebugTools } from './utils/debugTools';\r\nimport DebugTools from './components/debug/DebugTools';\r\n\r\n// Импорт страниц\r\nimport LoginPage from './components/pages/LoginPage';\r\nimport CharacterCreationPage from './components/pages/CharacterCreationPage';\r\nimport GamePage from './components/pages/GamePage';\r\n\r\n// Импорт компонентов\r\nimport GameTimeUpdater from './components/common/GameTimeUpdater';\r\n\r\n// Импорт контекста для хранения состояния игры\r\nimport { GameContextProvider as OriginalGameContextProvider } from './context/GameContext';\r\nimport { integrateRelationshipSyncer } from './utils/sectRelationshipSyncer';\r\n\r\n// Создаем расширенный GameContextProvider с синхронизацией отношений\r\nconst GameContextProvider = integrateRelationshipSyncer(OriginalGameContextProvider);\r\n\r\nconst AppContainer = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #1a1a1a;\r\n`;\r\n\r\nconst LoadingScreen = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: #111;\r\n  color: #f0f0f0;\r\n  font-family: '\"Ma Shan Zheng\", cursive';\r\n  font-size: 2rem;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nconst ErrorScreen = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: #111;\r\n  color: #ff6b6b;\r\n  font-family: '\"Ma Shan Zheng\", cursive';\r\n  font-size: 1.5rem;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst ErrorTitle = styled.h1`\r\n  color: #ff6b6b;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst RetryButton = styled.button`\r\n  padding: 10px 20px;\r\n  background: #d4af37;\r\n  color: #000;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n  \r\n  &:hover {\r\n    background: #f4cf47;\r\n  }\r\n`;\r\n\r\n// Функция для определения браузера\r\nfunction detectBrowser() {\r\n  const userAgent = navigator.userAgent;\r\n  let browserName;\r\n\r\n  if (userAgent.match(/chrome|chromium|crios/i)) {\r\n    browserName = \"Chrome\";\r\n  } else if (userAgent.match(/firefox|fxios/i)) {\r\n    browserName = \"Firefox\";\r\n  } else if (userAgent.match(/safari/i)) {\r\n    browserName = \"Safari\";\r\n  } else if (userAgent.match(/opr\\//i)) {\r\n    browserName = \"Opera\";\r\n  } else if (userAgent.match(/edg/i)) {\r\n    browserName = \"Edge\";\r\n  } else {\r\n    browserName = \"Unknown\";\r\n  }\r\n\r\n  return browserName;\r\n}\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [browserInfo, setBrowserInfo] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    // Определяем браузер\r\n    const browser = detectBrowser();\r\n    setBrowserInfo(browser);\r\n    console.log('Обнаружен браузер:', browser);\r\n    \r\n    // Если это Chrome, проверяем и исправляем localStorage\r\n    if (browser === 'Chrome') {\r\n      try {\r\n        // Проверяем, есть ли сохраненная игра\r\n        const savedState = localStorage.getItem('gameState');\r\n        if (savedState) {\r\n          try {\r\n            // Проверяем, что сохранение валидное\r\n            const parsedState = JSON.parse(savedState);\r\n            \r\n            // Проверяем и исправляем структуру состояния для Chrome\r\n            if (parsedState && typeof parsedState === 'object') {\r\n              // Убедимся, что все необходимые объекты существуют\r\n              if (!parsedState.player) parsedState.player = {};\r\n              if (!parsedState.player.social) parsedState.player.social = {};\r\n              if (!parsedState.player.social.relationships) parsedState.player.social.relationships = {};\r\n              if (!parsedState.player.progress) parsedState.player.progress = {};\r\n              if (!parsedState.player.progress.discoveries) parsedState.player.progress.discoveries = {};\r\n              \r\n              // Сохраняем исправленное состояние\r\n              localStorage.setItem('gameState', JSON.stringify(parsedState));\r\n              console.log('Состояние исправлено для Chrome');\r\n            }\r\n          } catch (parseError) {\r\n            console.error('Ошибка при парсинге сохранения:', parseError);\r\n            // Если сохранение повреждено, удаляем его\r\n            localStorage.removeItem('gameState');\r\n            console.log('Удалено поврежденное сохранение');\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Ошибка при работе с localStorage:', err);\r\n      }\r\n    }\r\n    \r\n    // Имитация загрузки ресурсов\r\n    const timer = setTimeout(() => {\r\n      try {\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        console.error('Ошибка при инициализации приложения:', err);\r\n        setError('Произошла ошибка при загрузке приложения. Пожалуйста, попробуйте еще раз.');\r\n        setIsLoading(false);\r\n      }\r\n    }, 2000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n  \r\n  // Инициализация инструментов отладки\r\n  useEffect(() => {\r\n    // Инициализируем инструменты отладки без передачи store,\r\n    // т.к. мы используем React Context вместо Redux\r\n    initDebugTools();\r\n    \r\n    // Для удобства, добавляем метод, который будет выводить сообщение о том,\r\n    // как получить доступ к информации о времени\r\n    if (typeof window !== 'undefined') {\r\n      window.showTimeHelp = () => {\r\n        console.group('🕒 Как получить информацию о времени суток:');\r\n        console.log('1. В консоли введите команду: getGameTime()');\r\n        console.log('2. Это выведет подробную информацию о текущем игровом времени');\r\n        console.log('3. Альтернативный способ: gameDebug.getTime()');\r\n        console.log('4. Для получения только текущего часа и минуты: getGameTime().formattedTime');\r\n        console.log('5. Для получения названия периода суток: getGameTime().daytimeName');\r\n        console.groupEnd();\r\n      };\r\n      \r\n      // Автоматически показываем справку в консоли\r\n      setTimeout(() => {\r\n        console.info('💡 Для помощи по получению игрового времени введите: showTimeHelp()');\r\n      }, 3000);\r\n    }\r\n  }, []);\r\n  \r\n  const handleRetry = () => {\r\n    window.location.reload();\r\n  };\r\n  \r\n  if (isLoading) {\r\n    return (\r\n      <LoadingScreen>\r\n        <h1>Путь к Бессмертию</h1>\r\n        <p>Загрузка мира культивации...</p>\r\n        {browserInfo && <p style={{ fontSize: '1rem', marginTop: '10px' }}>Браузер: {browserInfo}</p>}\r\n      </LoadingScreen>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <ErrorScreen>\r\n        <ErrorTitle>Ошибка загрузки</ErrorTitle>\r\n        <ErrorMessage>{error}</ErrorMessage>\r\n        {browserInfo && <p>Браузер: {browserInfo}</p>}\r\n        <RetryButton onClick={handleRetry}>Попробовать снова</RetryButton>\r\n      </ErrorScreen>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <GameContextProvider>\r\n      {/* GameTimeUpdater обновляет время и погоду автоматически */}\r\n      <GameTimeUpdater debug={true} />\r\n      {/* Инструменты отладки */}\r\n      <DebugTools enabled={true} />\r\n      <Router>\r\n        <AppContainer>\r\n          <Routes>\r\n            <Route path=\"/\" element={<LoginPage />} />\r\n            <Route path=\"/character-creation\" element={<CharacterCreationPage />} />\r\n            <Route path=\"/game\" element={<GamePage />} />\r\n          </Routes>\r\n        </AppContainer>\r\n      </Router>\r\n    </GameContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","e","unifiedDatabase","initializeDatabaseConnection","Sequelize","sequelize","async","getSequelizeInstance","db","elementTypes","FIRE","WATER","EARTH","WIND","LIGHTNING","DARKNESS","LIGHT","VOID","elementColors","techniques","techniquesByLevel","calculateUpgradeCost","baseLevel","targetLevel","experienceCost","Math","floor","pow","totalCost","currencyCost","gold","max","silver","copper","experience","currency","convertTechniqueFromDB","technique","formattedEffects","undefined","map","effect","effectObj","duration","damage","damageType","damage_type","healing","stats","id","technique_id","description","icon","level","energyCost","energy_cost","cooldown","effects","maxLevel","max_level","requiredLevel","required_level","upgradeCost","loadTechniques","seq","techniquesData","query","QueryTypes","SELECT","effectsQuery","t","join","effectsData","effectsByTechniqueId","forEach","push","loadedTechniques","byLevel","reduce","acc","error","console","catch","techniqueTypes","ATTACK","DEFENSE","SUPPORT","CULTIVATION","techniqueCategories","getTechniqueByIdAsync","techniqueData","replacements","find","getTechniqueById","getTechniquesByType","filter","getTechniquesByLevel","Model","DataTypes","sequelizeInstance","CultivationProgress","associate","models","belongsTo","User","foreignKey","as","init","result","getSequelize","call","this","userId","INTEGER","references","model","onUpdate","onDelete","unique","stage","ENUM","defaultValue","experienceToNextLevel","breakthroughProgress","dailyCultivationLimit","dailyCultivationUsed","lastCultivationReset","DATE","NOW","energy","maxEnergy","tribulationCompleted","BOOLEAN","insightPoints","bottleneckProgress","requiredBottleneckProgress","lastInsightTime","cultivationEfficiency","FLOAT","requiredResources","JSON","modelName","tableName","log","stack","hashPassword","password","encoder","TextEncoder","saltedPassword","encode","saltedData","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","b","toString","padStart","comparePassword","hash","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_CONSUMER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","REACT_CLIENT_REFERENCE","typeOf","object","$$typeof","getModuleId","createCleanEffect","modifier","options","displayType","cleanName","split","word","charAt","toUpperCase","slice","replace","displayValue","sectBenefitsToEffects","sectBenefits","isArray","benefit","effectType","cleanEffects","values","normalizeSectBenefits","rawBenefits","round","cultivationSpeedBonus","resourceGatheringBonus","energyRegenBonus","techniqueDiscountPercent","maxEnergyBonus","collectAllSectBenefits","sectState","sectData","benefits","uniqueBenefits","abs","getBenefitValueByType","getSectEffectsObject","effectsObject","createNormalizedSectData","benefitsArray","normalizedEffects","sect","normalizedBenefits","effectsArray","getBenefitValue","checkAndNormalizeSectData","gameState","hasProblems","normalizedSectState","some","normalizeSectData","state","effectTypeNames","collectAllEffects","standardEffects","thunderstormEffects","player","statusEffects","inventory","equipment","item","spiritPets","activePetId","pets","activePet","pet","world","weather","weatherEffectsArray","weatherEffects","currentWeather","createThunderstormEffect","value","currentLocation","combat","active","temporaryEffects","validStandardEffects","mergeEffects","standardizeEffect","standardized","match","parseFloat","includes","effectKey","absModifier","formattedValue","toFixed","calculateMerchantDiscount","applyLoyaltyDiscount","convertMerchantFromDB","merchantDB","inventoryItems","merchantId","items","Promise","all","itemId","requirements","properties","target","operation","parseInt","req","itemType","nutritionValue","loyaltyBonus","basePrice","price","quantity","maxQuantity","restockRate","lastRestockTime","rarity","location","specialization","reputation","getAllMerchants","merchantsFromDB","merchants","initMerchantData","getMerchantById","merchant","m","getMerchantsByLocation","getMerchantsBySpecialization","calculatePrice","merchantReputation","playerReputation","basePriceMultiplier","adjustedBasePrice","finalPrice","restockMerchantItems","currentGameTime","restockHappened","allItems","daysSinceLastRestock","unitsToRestock","oldQuantity","min","UPDATE","cacheRestockHappened","addEquipmentToMerchant","warn","merchantFromDB","addAlchemyItemsToMerchants","merchantsArray","f","k","l","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","c","a","g","d","h","props","_owner","current","Fragment","jsx","jsxs","ResourceService","isBrowser","window","browserCultivationData","getCultivationProgress","Date","cultivation","findOne","where","create","updateCultivationProgress","data","updateData","update","generateBreakthroughRequirements","resources","tribulation","getBreakthroughResources","toLowerCase","difficulty","checkBreakthroughPossibility","canBreakthrough","missingRequirements","message","hasEnoughExperience","hasEnoughEnergy","needsTribulation","passedTribulation","passedBottleneck","hasRequiredResources","completeTribulation","tribulationResult","success","rewards","penalties","increaseBottleneckProgress","amount","newProgress","isCompleted","gainInsight","now","hoursSinceLastInsight","hoursRemaining","insightType","random","insightEffect","insightMessage","efficiencyBonus","bottleneckBonus","experienceBonus","energyBonus","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","promise","timeoutMs","errorMessage","timeoutId","timeoutPromise","_","reject","race","finally","withTimeout","sequelizeProxy","Proxy","modelManager","getModel","define","authenticate","get","prop","targetManager","managerProp","_len","_key","then","err","_len2","_key2","CharacterStats","browserCharacterStatsData","getCharacterStats","strength","intellect","spirit","agility","health","physicalDefense","spiritualDefense","attackSpeed","criticalChance","movementSpeed","luck","updateCharacterStats","calculateSecondaryStats","stageValues","totalLevel","physicalAttack","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","document","createElement","ja","ka","la","ma","v","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","ta","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","trim","Na","Oa","prepareStackTrace","set","Reflect","construct","Pa","tag","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","constructor","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","String","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","range","search","tel","text","time","url","week","me","ne","oe","event","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","sf","bind","capture","passive","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Jf","queueMicrotask","resolve","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","refs","Mg","Ng","Og","index","Pg","Qg","Rg","implementation","Sg","Tg","r","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","loadResources","formattedResources","resource","stackable","maxStack","max_stack","getResourceByIdAsync","resourceData","getResourceById","getResourcesByTypeAsync","getResourcesByType","getResourcesByRarityAsync","getResourcesByRarity","qiResources","InventoryItem","browserInventoryData","getInventoryItems","equipped","findAll","addInventoryItem","existingItemIndex","findIndex","existingItem","newItem","save","removeInventoryItem","itemIndex","toggleEquipItem","hasOne","initializedUserModel","initializationPromise","getInitializedUserModel","autoIncrement","primaryKey","username","STRING","allowNull","passwordHash","field","cultivationLevel","lastLogin","timestamps","underscored","initializeUserModel","equipmentItems","convertEquipmentItemFromDB","specialEffects","subType","sub_type","statName","stat_name","isPercentage","is_percentage","reqType","requirement_type","triggerCondition","trigger_condition","parse","calculated_bonuses","calculatedBonuses","loadEquipmentItems","itemsData","itemIds","requirementsQuery","requirementsData","specialEffectsQuery","specialEffectsData","effectsByItemId","item_id","requirementsByItemId","specialEffectsByItemId","formattedItems","getEquipmentItemByIdAsync","itemData","getEquipmentItemById","getEquipmentItemsByTypeAsync","getEquipmentItemsByType","getEquipmentItemsByLevelAsync","getEquipmentItemsByLevel","getEquipmentItemsByRarityAsync","getEquipmentItemsByRarity","React","loyaltyLevel","discount","syncSectRelationshipToSocial","relationships","sectLoyalty","sectRelationIndex","rel","updatedRelationships","newRelationship","role","events","surcharge","syncSectRelationships","syncRelationshipsFromLoyalty","social","members","loyalty","member","existingRelationIndex","lastUpdated","syncLoyaltyFromRelationships","updatedMembers","sectRelation","updatedSect","relation","memberIndex","syncSocialToSectRelationship","findRelatedMerchantId","sectName","affiliation","syncSingleMember","updateLoyalty","relationIndex","initRelationshipSync","getState","updateRelationshipAndLoyalty","newValue","newState","isSect","integrateRelationshipSyncer","GameContextProvider","setState","forceUpdate","escape","_status","_result","default","Children","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","WeatherService","updateMultiplier","TIME_MULTIPLIER","SEASON_LENGTH","SEASON_ORDER","weatherTypes","clear","baseChance","cloudy","rain","thunderstorm","fog","snow","seasons","spring","weatherModifiers","resourceModifiers","herbs","specialEvents","summer","minerals","autumn","food","winter","bloom","visualEffects","spirit_tide","solstice","encounters","meteor_shower","harvest","chance","spirit_wind","ice_tribulation","blizzard","daytimeEffects","dawn","morning","noon","afternoon","evening","night","deepNight","initWeather","hour","minute","currentSeason","dayCount","worldTime","getHours","getMinutes","day","season","getMonth","initialWeather","_calculateWeather","forecast","_generateForecast","seasonDay","calculatedSeason","seasonIndex","мировой_день","день_сезона","вычисленный_сезон","исходный_сезон","isDayTime","daytimePeriod","_getDaytimePeriod","_collectWeatherEffects","weatherChangeAt","weatherIntensity","intensity","nextWeatherChange","seasonLength","activeEvent","eventRemainingTime","_roundToMultipleOf5","weatherType","roundedEffects","roundedTimeEffects","seasonData","entries","percentBonus","currentWeatherType","periods","totalDuration","previousWeatherType","allWeatherTypes","usedTypesInForecast","newWeather","attempts","maxAttempts","unusedTypes","randomUnusedType","baseWeather","durationVariation","adjustedDuration","finalDuration","baseTimeToOccur","timeVariation","roundedTimeToOccur","intensityVariation","timeToOccur","forceWeatherChange","eventName","событие","processedEffects","тип","интенсивность","продолжительность","время_следующей_смены","probabilities","info","totalProbability","sum","cumulative","probability","baseDuration","durationModifiers","updateTime","realMinutesPassed","множитель","absoluteMinutes","текущее_абсолютное_время","смена_погоды_в","разница","текущая_погода","updatedState","previousSeasonDay","newSeasonDay","прошлый_день_сезона","новый_день_сезона","текущий_мировой_день","прошлый_сезон","новый_сезон","длина_сезона","newSeasonWeather","текущее_время","время_смены","старая_погода","счетчик_next_weather_change","причина","новая_погода","следующая_смена_через","абсолютное_время_смены","remainingMinutes","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Lazy","Portal","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","Resource","RESOURCE_TYPES","RARITY","getResourceByIdFromData","initializeResources","getAllResources","findByPk","getResourceTypes","getRarityTypes","fs","path","basename","initializePromise","modelFiles","readdirSync","file","modelDefinition","assocError","initializeModels","normalizeId","findBaseTechniqueById","normalizedId","calculateTechniqueStats","baseTechnique","levelMultiplier","calculatedStats","updatedEffect","isSameId","id1","id2","normalizeTechniquesIds","newId","newKey","isTechniqueValid","requiredFields","repairTechniques","playerTechniques","masteryLevel","lastUsed","repairedTechnique","webpackEmptyContext","normalizeStatusEffects","effectArrays","cleanedArrays","allEffects","effectModifiersByType","effectNamesByType","_ref","totalModifier","reindexEffects","reindexed","normalizePlayerEffects","playerState","rawStatusEffects","sectEffects","mergedEffects","indexedEffects","TechniqueEffect","Technique","techniqueId","hasMany","LearnedTechnique","TEXT","JSONB","QuestProgress","Quest","getQuests","questProgress","include","quests","available","completed","progress","quest","objectives","status","startedAt","completedAt","acceptQuest","questId","existingProgress","updateQuestProgress","completeQuest","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","objA","objB","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","checkDCE","databaseConfig","config","host","port","Client","client","database","user","connectionTimeoutMillis","connect","rows","current_time","testDirectPostgresConnection","directError","dialect","logging","pool","acquire","idle","dialectOptions","connectTimeout","statement_timeout","idle_in_transaction_session_timeout","databasePromise","getCollection","transaction","checkStatus","connected","using","timeoutError","sql","ensureItemHasCalculatedBonuses","baseItem","ensureEquipmentHasCalculatedBonuses","equippedItems","slot","ensureItemsHaveCalculatedBonuses","browserTechniquesData","browserLearnedTechniquesData","getAllTechniques","getLearnedTechniques","learned","learnTechnique","tech","learnedTechnique","mockTechnique","upgradeTechnique","useTechnique","masteryThreshold","calculatedEffects","calculatedEffect","toJSON","calculatedDamage","calculatedHealing","getTechniqueByName","techniqueName","QuestObjective","QuestReward","category","repeatable","isServerEnvironment","UUID","ARRAY","DECIMAL","VIRTUAL","ABSTRACT","Function","sequelizePackage","aggregateBonuses","bonusesArray","dexterity","vitality","intelligence","perception","physicalDamage","magicDamage","magicDefense","critChance","critDamage","dodgeChance","energyMax","energyRegen","comprehensionRate","breakthroughChance","elemental","fire","water","earth","air","light","dark","special","bonuses","stat","getItemBonuses","getEquipmentTotalBonuses","hasCalculatedBonuses","createEmptyBonusStructure","completedObjectives","isEquipped","learnedAt","convertPetFromDB","abilities","growthRates","unlockCondition","unlock_condition","evolutionPath","evolution_path","ability","unlockLevel","unlock_level","baseStats","loadSpiritPets","petsData","petIds","abilitiesQuery","abilitiesData","statsQuery","statsData","growthRatesQuery","growthRatesData","abilitiesByPetId","pet_id","statsByPetId","stat_value","growthRatesByPetId","rate","growth_rate","formattedPets","getSpiritPetById","getSpiritPetsByType","getSpiritPetsByElement","getSpiritPetsByRarity","PET_TYPES","ELEMENTAL","BEAST","MYTHICAL","CELESTIAL","DEMONIC","PET_RARITY","COMMON","UNCOMMON","RARE","EPIC","LEGENDARY","MYTHIC","getSpiritPetByIdAsync","petData","getSpiritPetsByTypeAsync","getSpiritPetsByElementAsync","getSpiritPetsByRarityAsync","petTypeNames","petTypeDescriptions","petTypeBaseStats","petTypeAbilities","damageMultiplier","evolutionStages","calculateExpForLevel","calculateStatBonus","calculateCombatBonus","attack","defense","speed","healthBonus","getObjectivesFromDB","steps","step","getRewardsFromDB","rewardsData","getIconForItem","getTechniqueIcon","icons","mapStatus","required_cultivation_level","dbStatus","initQuestData","questCategories","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","leafPrototypes","getProto","obj","ns","def","definition","o","chunkId","promises","miniCssF","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","self","Action","PopStateEventType","invariant","warning","cond","getHistoryState","usr","createLocation","to","_extends","pathname","parsePath","substr","createPath","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","relative","useNavigateUnstable","useRoutesImpl","dataRouterState","isStatic","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","v7_partialHydration","initialized","errorIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned$1","getChildren","hookName","ctx","useRouteContext","thisRoute","logV6DeprecationWarnings","renderFuture","routerFuture","v7_startTransition","v7_fetcherPersist","v7_normalizeFormMethod","v7_skipActionErrorRevalidation","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","HashRouter","historyRef","querySelector","setStateImpl","UNSAFE_logV6DeprecationWarnings","charCodeAt","prefix","use","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","WebkitLineClamp","memoize","arg","reactPropsRegex","isPropValid","freeze","styledComponentId","REACT_APP_SC_ATTR","SC_ATTR","Boolean","SC_DISABLE_SPEEDY","REACT_APP_SC_DISABLE_SPEEDY","groupSizes","Uint32Array","indexOfGroup","insertRules","insertRule","clearGroup","deleteRule","getGroup","getRule","registerName","getTag","__webpack_nonce__","childNodes","hasAttribute","sheet","styleSheets","ownerNode","cssRules","cssText","$","nodes","rules","isServer","useCSSOMInjection","gs","names","server","registerId","reconstructWithOptions","allocateGSInstance","hasNameForId","clearNames","clearRules","clearTag","staticRulesId","componentId","baseHash","baseStyle","generateAndInjectStyles","_e","plugins","lastIndexOf","stylisPlugins","disableCSSOMInjection","disableVendorPrefixes","getName","isCss","theme","attrs","parentComponentId","shouldForwardProp","componentStyle","foldedComponentIds","$as","className","withComponent","_foldedDefaultProps","withConfig","createStyles","removeStyles","renderStyles","_emitSheetCSS","getStyleTags","sealed","getStyleElement","nonce","seal","collectStyles","interleaveWithNodeStream","add1000Currency","gameContext","__GAME_CONTEXT__","__GAME_STATE__","gameDispatch","__GAME_DISPATCH__","actions","updateCurrency","_gameContext$state","_gameContext$state$pl","_gameContext$state$pl2","updatedCurrency","spiritStones","_gameState$player","_gameState$player$inv","currentCurrency","reactInstance","findReactComponent","rootElement","getElementById","showPlayerInfo","_state$player$cultiva","vitalStats","combatData","healthEl","energyEl","maxHealth","debug","domError","getPlayerVitalStats","repairAllTechniques","_gameContext$state2","_gameContext$state2$p","_gameState$player2","дать1000Ресурсов","показатьИгрока","восстановитьТехники","gameStateRef","stateLoggingIntervalId","connectDebugTools","_context$value","contextState","API_URL","registerUser","response","fetch","method","headers","errorData","json","loginUser","usernameOrEmail","updateUserProgress","localStorage","getItem","getUserProfile","userIdOrUsername","endpoint","getAuthService","serverModule","AuthServiceAPI","service","getCultivationService","CultivationServiceAPI","CharacterProfile","gender","region","background","avatar","browserProfileData","getCharacterProfile","profile","updateCharacterProfile","_data$currency","_data$currency2","_data$currency3","_data$currency4","updatedProfile","_data$currency5","_data$currency6","_data$currency7","_data$currency8","isCharacterCreated","updateRelationships","initialRelationships","getInitialRelationships","ms","login","AuthService","token","setItem","register","CharacterProfileService","friends","logout","removeItem","checkAuth","getCurrentUser","characterProfile","saveGameState","CultivationService","CharacterStatsService","InventoryService","learnedTechniques","TechniqueService","QuestService","loadGameState","discoveries","achievements","year","currentScreen","notifications","dialogs","settings","soundVolume","musicVolume","graphicsQuality","points","inCombat","enemy","turn","secondaryStats","migrateUsersToDatabase","users","migrationResults","processed","migrated","skipped","localUser","dbUser","UserModel","findError","createdAt","updatedAt","createError","unassignedPoints","reputationLegacy","activeTechniques","combatHistory","generatedEnemies","playerCombatState","enemyCombatState","isPlayerTurn","combatStats","damageDealt","techniquesUsed","criticalHits","dodges","lastCombatResult","loading","userRank","privileges","selectedMember","market","playerItems","marketItems","cities","factions","global","features","changing","isInitialized","SET_GROUPS","SET_CURRENT_GROUP","CREATE_GROUP","UPDATE_GROUP","DELETE_GROUP","JOIN_GROUP","LEAVE_GROUP","SET_GROUP_ACTIVITIES","SET_CURRENT_ACTIVITY","FETCH_USER_INVITATIONS","SET_USER_INVITATIONS","RESPOND_TO_INVITATION","CREATE_ACTIVITY_INSTANCE","FETCH_GROUP_ACTIVITY_INSTANCES","SET_GROUP_ACTIVITY_INSTANCES","UPDATE_ACTIVITY_INSTANCE","START_ACTIVITY","UPDATE_ACTIVITY_PROGRESS","COMPLETE_ACTIVITY","FAIL_ACTIVITY","ABANDON_ACTIVITY","ADD_ACTIVITY_PARTICIPANT","REMOVE_ACTIVITY_PARTICIPANT","UPDATE_ACTIVITY_REWARDS","ADD_REWARDS","INITIALIZE_WEATHER","UPDATE_PLAYER","UPDATE_PLAYER_STATS","UPDATE_CULTIVATION","ADD_ITEM","REMOVE_ITEM","EQUIP_ITEM","UNEQUIP_ITEM","UPDATE_CURRENCY","UPDATE_LOCATION","UPDATE_TIME","UPDATE_WEATHER","ADD_EVENT","REMOVE_EVENT","CHANGE_SCREEN","ADD_NOTIFICATION","REMOVE_NOTIFICATION","UPDATE_SETTINGS","SAVE_GAME","LOAD_GAME","ACCEPT_QUEST","COMPLETE_QUEST","UPDATE_QUEST_OBJECTIVE","CHECK_ACHIEVEMENTS","COMPLETE_ACHIEVEMENT","LEARN_TECHNIQUE","UPGRADE_TECHNIQUE","USE_TECHNIQUE","START_COMBAT","END_COMBAT","UPDATE_COMBAT","UPDATE_COMBAT_STATE","ADD_COMBAT_LOG","ADD_STATUS_EFFECT","UPDATE_STATUS_EFFECT","REMOVE_STATUS_EFFECT","SET_INITIALIZED","SET_ERROR","SET_SECT","UPDATE_SECT","JOIN_SECT","LEAVE_SECT","CONTRIBUTE_TO_SECT","TRAIN_SECT_MEMBER","UPDATE_SECT_MEMBER","UPDATE_SECT_BENEFITS","UPDATE_SECT_RANK","ADD_SPIRIT_PET","REMOVE_SPIRIT_PET","REMOVE_FLEEING_PET","UPDATE_SPIRIT_PET","SET_ACTIVE_SPIRIT_PET","FEED_SPIRIT_PET","TRAIN_SPIRIT_PET","USE_PET_ABILITY","UPDATE_PETS_STATE","ADD_MARKET_ITEM","REMOVE_MARKET_ITEM","UPDATE_MARKET_ITEM","BUY_MARKET_ITEM","SELL_MARKET_ITEM","UPDATE_MERCHANT_REPUTATION","UPDATE_MARKET_STATE","CACHE_GENERATED_ENEMY","APPLY_EQUIPMENT_BONUSES","UPDATE_RELATIONSHIP","REPAIR_TECHNIQUES","ADD_COMBAT_HISTORY","NORMALIZE_SECT_DATA","NORMALIZE_EFFECTS","SYNC_SECT_TO_SOCIAL","SYNC_SOCIAL_TO_SECT","UPDATE_SECT_LOYALTY","UPDATE_SOCIAL_RELATIONSHIPS","UPDATE_SECT_DATA","UPDATE_RELATIONSHIP_AND_LOYALTY","playerReducer","ACTION_TYPES","updatedItems","itemToRemoveIndex","itemToRemove","quantityToRemove","newCurrency","isAdditive","было","новое","режим","locationPayload","defaultLocations","fullLocationInfo","matchedLocation","loc","effectsWithNew","playerWithNewEffect","normalizedPlayerWithNew","effectTypeToUpdate","cleanUpdatePayload","updatedEffects","playerWithUpdatedEffect","normalizedPlayerWithUpdated","filteredEffects","playerWithRemovedEffect","normalizedPlayerWithRemoved","normalizedPlayer","itemToEquip","updatedInventoryItems","_item$properties","_itemToEquip$properti","itemArmorType","armorType","newItemArmorType","getArmorTypeFromName","effectiveItemType","effectiveNewItemType","updatedPlayer","_item$properties2","stateWithItem","slotToUnequip","itemsToUpdate","_item$properties3","itemSlot","playerAfterUnequip","remainingEquippedItems","_item$properties4","stateAfterUnequip","equipmentBonuses","equippedItemsWithBonuses","_ref2","_ref3","_ref4","BonusService","baseSecondaryStats","secondaryWithBonuses","magicalAttack","evasion","learnCost","currentExperience","newExperience","learnCurrencyUpdate","toISOString","cost","currentExp","updatedExperience","upgradeCurrencyUpdate","_ref7","updatedTechniques","newLevel","updatedTechnique","character","defaultRelationships","existingCharIndex","socialObj","repairedTechniques","playerTechnique","saveError","techniqueIndex","currentHistory","limitedHistory","timestamp","updatedSocial","newLoyalty","calculatedSectLoyalty","SET_TIME_OF_DAY","WEATHER_SPECIAL_EVENT","UPDATE_GAME_TIME","FORCE_WEATHER_CHANGE","updateWeather","weatherData","updateGameTime","minutesToAdd","isManual","minutes","calculateSeasonDay","worldDay","calculateSeason","initialWeatherState","currentTime","timeOfDay","formattedTime","damageModifiers","hitChanceModifier","dodgeChanceModifier","critChanceModifier","enemySpawnRateModifier","elementModifiers","meditationEfficiencyModifier","breakthroughChanceModifier","bottleneckProgressModifier","exploration","movementEnergyCostModifier","resourceFindRateModifier","resourceQualityModifier","hiddenLocationChanceModifier","visibilityModifier","crafting","alchemySuccessRateModifier","alchemyQualityModifier","spiritEnergyConsumptionModifier","system","specialEncounterChance","uniqueResourceSpawnChance","activeSpecialEvent","originalPrice","oldItem","initialState","safeState","normalizedPayload","setSectState","rank","sectRank","sectExperience","requiredExperience","sectRequiredExperience","influence","sectInfluence","memberId","memberLevel","memberExperience","memberRequiredExperience","memberRole","memberLoyalty","updatedMembersArray","normalizedState","dataWithNormalizedBenefits","updatedSectState","reputationData","availableFeatures","entityType","entityId","sphere","relatedChanges","updatedData","city","spheres","faction","change","notification","list","currentGroup","activities","currentActivity","activityInstances","invitations","group","groupId","instanceId","participant","participants","reward","isClaimed","invite","invitationId","rootReducer","gameStateReducer","stateToSave","onSuccess","_loadedState$player","_loadedState$player2","_loadedState$player3","_loadedState$player3$","_loadedState$player4","_loadedState$player5","_loadedState$player5$","_loadedState$player6","_loadedState$player6$","_loadedState$player7","_loadedState$player7$","_loadedState$player7$2","_loadedState$player8","_loadedState$player8$","_loadedState$player8$2","_loadedState$player9","_loadedState$player9$","_loadedState$player9$2","_loadedState$player10","_loadedState$player11","_loadedState$player12","_loadedState$player13","_loadedState$player14","_loadedState$player15","_loadedState$player16","_loadedState$player17","_loadedState$player18","_loadedState$player19","_loadedState$player20","_loadedState$player21","_loadedState$player22","_loadedState$player23","_loadedState$achievem","_validatedState$playe","loadedState","validatedState","isLoading","worldReducer","_state$world","_state$world$time","_state$world2","_state$world2$time","_state$world3","_state$world3$time","_state$world4","_state$world4$time","_state$world5","_state$world5$time","_state$world6","_state$world6$time","_state$world7","_state$world7$time","_state$world8","_state$weather","_state$weather2","_state$weather3","_state$world9","_state$world9$time","_state$weather4","_state$weather5","_state$weather6","_state$world10","_state$world11","_state$world12","_action$payload","_action$payload2","_state$world16","raw_payload","raw_day_value","raw_day_type","raw_state_day","raw_state_day_type","newDay","Number","newHour","newMinute","newSeason","currentDay","parsedNewDay","diff","actionPayload","currentValues","conversion_details","raw","after_number","after_parse_int","after_force_num_check","dayChangedFlag","newHourInMinutes","formattedTimeValue","timeOfDayValue","calculatedSeasonDay","вычисленный_день_сезона","текущий_сезон","сезон","updatedNextWeatherChange","currentAbsoluteMinutes","новое_значение","updatedWeather","время_до_смены","есть_прогноз","cleanedNextWeatherChange","correctSeasonDay","формула","eventType","eventData","dayCountType","currentDayType","providedSeason","directUpdateSeasonDay","directUpdateSeason","worldTimeHour","worldTimeMinute","worldTimeDay","worldTimeSeason","syncTotalMinutes","syncFormattedTime","syncTimeOfDay","syncSeasonDay","syncSeason","worldDaySync","currentSeasonDaySync","calculatedSeasonDaySync","currentSeasonDay","вычисленныйДеньСезона","_state$world13","_state$world13$time","_state$world14","_state$world14$time","_state$world15","weatherService","validNextWeatherChange","validWeatherChangeAt","время_до_следующей_смены","multiplier","currentMinute","minuteType","fixedMinute","newTotalMinutes","newFormattedTime","hours","gameCurrentHour","gameCurrentMinute","gameCurrentDay","gameCurrentSeason","gameNewHour","gameNewMinute","gameNewDay","gameNewHourInMinutes","gameFormattedTimeValue","gameTimeOfDayValue","gameCalculatedSeasonDay","gameCalculatedSeason","gameUpdatedWeather","час","минута","день","период_суток","areaId","enemyId","уровень","uiReducer","notificationWithId","updatedNotifications","combatReducer","questsReducer","rewardsPromise","accPromise","techniqueService","objectiveId","achievementsReducer","userAgent","isChrome","_state$player$social","_state$player$progres","_state$player$invento","_state$player$social2","_state$player$progres2","_state$player$invento2","newAchievements","achievement","hasCondition","condition","conditionResult","isNotCompleted","currencyAmount","currencyType","количество","итоговоеСостояние","ach","total","spiritPetsReducer","_state$player","_state$player$spiritP","_state$player2","_state$player2$spirit","_state$player3","_state$player3$spirit","_state$player4","_state$player4$spirit","_state$player5","_state$player5$spirit","_state$player6","_state$player6$spirit","currentPets","updates","updatedPets","isActive","_state$player7","_state$player7$spirit","petId","foodItemId","foodItem","_state$player8","_state$player8$invent","playerInventory","foodItemInInventory","updatedPet","hunger","lastFed","updatedInventory","_state$player9","_state$player9$spirit","_state$player10","_state$player10$spiri","statToTrain","trainingType","lastTrained","expForNextLevel","_state$player11","_state$player11$spiri","abilityId","hungerCost","loyaltyCost","remainingPets","lastUsedAbility","_state$player12","_state$player12$spiri","_state$player13","_state$player13$spiri","marketReducer","sectReducer","reputationReducer","groups","groupReducer","isUpdatingWeather","weatherServiceInstance","lastManualUpdateTime","GameContext","useGameContext","sectService","cultivationService","resourceService","getSectById","sectId","Sect","SectMember","savedSectData","parsedData","territories","calculateRequiredExperience","updateRank","updateBenefits","getUserSect","sectMember","demoSect","createSect","_user$cultivation","leaderId","joinSect","_user$cultivation2","contributeToSect","energyAmount","contributionXP","influenceGain","oldLevel","leveledUp","trainWithMember","savedMemberData","savedData","canTrainToday","addExperience","requiredExp","updateRole","dataToSave","userMember","memberXPGain","lastTrainingDate","опыт","требуется","лояльность","levelUpResult","loyaltyIncrease","__gameContext","userXPGain","userLevelBefore","userLevelUp","memberName","memberLeveledUp","memberOldLevel","memberNewLevel","userGainedXP","userLevel","energySpent","getSectBenefits","getUserSectRank","inSect","useGame","DebugPanel","styled","div","PanelTitle","h3","CloseButton","TimeInfo","Label","span","Value","ButtonGroup","SliderContainer","SliderRow","Slider","Button","onClose","timeInfo","setTimeInfo","isVisible","setIsVisible","customMultiplier","setCustomMultiplier","clickedButton","setClickedButton","refreshTimerRef","fetchTimeInfo","world_time","daytimeName","synchronizedSeasonDay","текущий_день_сезона","действие","computedTimeInfo","prevDayRef","setInterval","clearInterval","prevDay","worldTimeObject","detectedChange","_state$weather7","CustomEvent","__forceSyncWeatherTime","checkTimestamps","scheduleChecks","worldHour","isNumber","worldMinute","weatherHour","weatherMinute","valuesAreValid","minuteStringsEqual","isHourSynced","isMinuteSynced","isDaySynced","isSeasonSynced","hourSynced","minuteSynced","daySynced","seasonSynced","hourRaw","minuteRaw","advanceGameHours","showConsoleDebug","getGameTime","updateTimeMultiplier","oldMultiplier","timeMultiplier","_jsxs","_jsx","handleClose","marginLeft","onChange","textAlign","transform","boxShadow","borderColor","DebugButtonContainer","DebugButton","enabled","showTools","setShowTools","keyActivated","setKeyActivated","toggleTools","handleKeyDown","_Fragment","position","right","maxWidth","TimeDebugPanel","marginTop","borderRadius","margin","fontSize","addCurrency","border","cursor","LoginContainer","LoginPanel","Title","h1","Form","InputGroup","label","Input","SwitchMode","ErrorMessage","LoadingContainer","LoadingText","isLogin","setIsLogin","setUsername","setPassword","confirmPassword","setConfirmPassword","setError","setIsLoading","isPageLoading","setIsPageLoading","apiService","loadGame","onSubmit","placeholder","Container","CreationPanel","Row","Column","Select","select","StatsContainer","StatRow","StatLabel","StatValue","StatButton","Description","textarea","PointsRemaining","formData","setFormData","setStats","pointsRemaining","setPointsRemaining","handleInputChange","handleStatChange","getStartingItems","quality","updatePlayer","updatePlayerStats","addItem","central","mountain","coastal","desert","forest","commoner","noble","warrior","scholar","updating","setUpdating","lastTime","setLastTime","lastWeather","setLastWeather","prevStateRef","forceUpdateCounter","setForceUpdateCounter","handleManualTimeUpdate","_prevState$worldTime","prevState","hasTimeChanged","hasDayChanged","prevWorldTime","currentWeatherValue","_prevState$worldTime2","oldHour","oldMinute","oldDay","oldTime","newTime","oldWeather","WidgetContainer","TimeSection","TimeIcon","TimeText","WeatherSection","WeatherIcon","WeatherText","SeasonIndicator","weatherNames","daytimeNames","daytimeIcons","weatherIcons","seasonNames","timeWeather","useTimeWeather","EffectsContainer","EffectsList","EffectItem","EffectIcon","EffectName","EffectValue","activeEffects","localeCompare","rainAnimation","keyframes","snowAnimation","fogAnimation","thunderAnimation","WeatherOverlay","css","SpecialEffectsOverlay","specialEvent","SeasonalOverlay","LocationEffectsOverlay","worldState","_worldState$time","DetailContainer","DetailTitle","h2","Section","SectionTitle","Grid","ForecastGrid","InfoBox","InfoRow","highlight","ForecastItem","ForecastHeader","ForecastIcon","ForecastTime","ProgressBar","seasonIcons","eventNames","eventIcons","_weather$specialEvent","_weather$specialEvent2","weatherProgress","hookWeather","stateWeather","timer","seasonProgress","dayProgress","locationEffects","locationType","baseEnergy","positive","basePerception","resourceBonus","energyRecovery","baseStrength","baseStamina","cultivationSpeed","insightChance","baseWisdom","baseHealing","spiritualEnergy","baseSocial","baseLuck","tradeBonus","stealthBonus","baseAttack","baseDefense","defenseBonus","attackBonus","dawnPerception","dawnMeditation","dayStamina","nightEnergy","nightMonsterStrength","bloomHerbQuality","tideSpiritualPower","solsticeCultivation","meteorRareMaterials","pulse","glow","fadeIn","TabsContainer","Tab","CultivationArea","Panel","MeditationPanel","ProgressInfo","ProgressText","StatsList","StatItem","BreakthroughRequirements","Requirement","met","ResourceList","ResourceItem","TribulationProgressBar","TabContent","isMeditating","setIsMeditating","meditationProgress","setMeditationProgress","activeTab","setActiveTab","tribulationActive","setTribulationActive","tribulationProgress","setTribulationProgress","setTribulationResult","insightCooldown","setInsightCooldown","handleMeditationComplete","experienceGain","energyGain","currentBottleneckProgress","newBottleneckProgress","bottleneckGain","addNotification","updateCultivation","setRequiredResources","setHasRequiredResources","resourceIds","resourcesNeeded","stageResources","currentStageResources","hasAll","handleBreakthrough","currentLevel","currentStage","currentExpToNextLevel","currentMaxEnergy","currentUnassignedPoints","currentEnergy","successChance","stages","currentStageIndex","newStage","newMaxEnergy","messages","rewardExperience","energyReward","energyPenalty","healthPenalty","handleStartTribulation","newEnergy","handleGainInsight","currentEfficiency","newEfficiency","currentInsightPoints","insightResult","InventoryGrid","ItemSlot","ItemIcon","ItemQuantity","ItemDetails","ItemName","ItemType","ItemDescription","ActionButton","CurrencyInfo","CurrencyItem","selectedItem","setSelectedItem","canUseItem","handleItemClick","handleUseItem","itemWithBonuses","equipItem","printEquipmentBonuses","colorStyle","groupEnd","suffix","elementName","printEquippedItems","slotName","rarityColor","debugEquipment","weapon","itemName","headArmor","legArmor","handArmor","bodyArmor","accessory1","accessory2","artifact1","artifact2","EquipmentDisplay","EquipmentSlot","SlotName","StatsPanel","UnequipButton","DropButton","StatGrid","FilterButtons","FilterButton","setEquipped","setFilter","selectedSlot","setSelectedSlot","selectedEquippedItem","setSelectedEquippedItem","selectedInventoryItem","setSelectedInventoryItem","updateEquippedItems","applyEquipmentBonuses","equippedItemsList","handleSlotClick","slotType","itemInSlot","handleDropItem","unequipItem","handleUnequipItem","CharacterPanel","Avatar","CharacterInfo","CharacterName","CharacterTitle","CultivationRealm","StatGroup","StatGroupTitle","StatControls","UnassignedPoints","BackgroundInfo","BackgroundTitle","BackgroundText","_player$equipmentBonu","_player$equipmentBonu2","_player$equipmentBonu3","_player$equipmentBonu4","_player$equipmentBonu5","_player$equipmentBonu6","_player$equipmentBonu7","_player$equipmentBonu8","_player$equipmentBonu9","_player$equipmentBonu10","_player$equipmentBonu11","_player$equipmentBonu12","_player$equipmentBonu13","_player$equipmentBonu14","_player$equipmentBonu15","_player$equipmentBonu16","_player$equipmentBonu17","_player$equipmentBonu18","_player$equipmentBonu19","_player$equipmentBonu20","_player$equipmentBonu21","_player$equipmentBonu22","derivedStats","formatStat","increaseStat","newStats","magicalDefense","accuracy","experienceRequired","daoUnderstanding","breakthroughs","BarContainer","BarFill","maxValue","percentage","BarText","Icon","showValues","showPercentage","safeMaxValue","safeValue","PortraitContainer","isEnemy","PortraitContent","NamePlate","Name","Level","StyledResourceBar","ResourceBar","isPet","ActionIcon","ActionName","ActionCost","ActionCooldown","Tooltip","TooltipTitle","TooltipDescription","TooltipStats","actionIcons","defend","heal","flee","onActionSelect","getDisabledReason","_action$effects","isAvailable","isActionAvailable","EffectsWrapper","EffectDuration","LogEntry","Timestamp","containerRef","scrollHeight","formatTime","getSeconds","entry","Portrait","ActionBar","StatusEffects","CombatLog","CombatArea","CharacterContainer","EffectsTitle","CenterArea","TurnIndicator","ActionArea","LogArea","playerActions","combatLog","ResultsPanel","victory","StatBlock","StatTitle","StatList","negative","RewardsContainer","RewardsList","RewardItem","results","playerStats","enemyStats","seconds","damageTypes","_state$combat$enemyCo","_state$combat$enemyCo2","_state$combat$enemyCo3","_enemy$stats2","_enemy$stats4","initialEnemy","onEnd","hasSavedCombatState","hasSavedState","savedEnemyId","savedEnemyHealth","setEnemy","savedEnemy","attacks","setPlayer","_state$player$equipme","_state$player$seconda","_state$player$seconda2","_state$player$seconda3","_state$player$seconda4","_state$player$seconda5","_state$player$seconda6","_state$player$seconda7","_state$player$seconda8","equipBonuses","playerMaxHealth","playerHealth","playerMaxEnergy","playerEnergy","initialStats","criticalDamage","setIsPlayerTurn","setDisabled","setCombatLog","setCombatStats","isFinished","setIsFinished","setResults","_state$combat","_state$combat$playerC","_state$combat$playerC2","_enemy$stats","_state$combat2","_state$combat2$enemyC","_state$combat2$enemyC2","_state$combat3","_state$combat4","_state$combat4$log","_state$combat5","_state$combat5$combat","_state$combat5$combat2","_state$combat6","_state$combat6$combat","_state$combat6$combat2","updateCombatState","addLogEntry","updateStats","effectiveWeatherEffects","getWeatherDamageModifier","combatState","hitChance","getWeatherCombatModifiers","calculateDamage","attacker","defender","_attacker$action","_attacker$action2","базовыйУрон","типУрона","атакующий","защитник","isPreCalculatedTechnique","damageBonus","originalType","isCombatEffect","bonusValue","weatherDamageModifier","isTechniqueDamage","finalMultiplier","baseCritChance","modifiedCritChance","isCritical","critMultiplier","weatherModifier","attackPower","reduction","applyDamage","handleAction","actionType","actionTypeJSON","actionTypeIsString","actionTypeConstructor","actionHasTypeProp","actionName","actionID","attackerType","defenderType","hitRoll","baseDamage","техникаИмя","техникаID","рассчитанныйУрон","затратыЭнергии","доступнаяЭнергия","имя","здоровье","максЗдоровье","энергия","максЭнергия","используемыйУрон","attackerWithInfo","итоговыйУрон","критический","removeFleePet","petBaseDamage","playerAttackBonus","attackerWithPetInfo","initialHunger","initialLoyalty","calculatedLoyaltyCost","usePetAbility","newHunger","updatedActivePet","updateSpiritPet","petType","handleCombatEnd","currentTimestamp","combatResult","addCombatHistory","_effectiveWeatherEffe","remainingValue","currencyGain","lootChanceModifier","lootItems","loot","_enemy$stats3","enemyAttacks","enemyEnergy","всегоАтак","энергияПротивника","availableActions","roll","totalChance","selectedAction","actionChance","dummyDefense","exactDamage","totalAttackPower","petAbilitiesWithDisabled","_petTypeAbilities$act","fullAbility","abilityLocalNames","totalDamage","localName","CombatResults","playerType","enemyType","CombatInterface","getTimeOfDaySpawnModifiers","modifiers","timeOfDayModifiers","mod","time_of_day","timeOfDaySpawnModifiers","getWeatherSpawnModifiers","weather_type","weatherSpawnModifiers","getEnemies","enemiesFromDB","enemiesData","attacksWithEffects","attackId","effectData","formattedLoot","physical_defense","spiritual_defense","min_amount","max_amount","getEnemy","getEnemySpawns","spawns","spawnsByLocation","spawn","location_id","spawnData","enemy_id","minLevel","min_level","weight","weather_condition","conditions","starting_area","mountain_path","ancient_ruins","forest_lake","thunder_peak","enemies","enemySpawns","initEnemyData","WorldArea","WeatherBanner","WeatherInfo","WeatherDetails","WeatherType","TimeOfDay","WeatherEffects","getTimeIcon","getWeatherIcon","AreaInfo","AreaTitle","AreaDescription","EnemiesList","EnemyCard","EnemyHeader","EnemyIcon","EnemyInfo","EnemyName","EnemyLevel","EnemyDescription","EnemyStats","_state$weather2$weath","_weather$weatherEffec","_weather$weatherEffec2","_weather$weatherEffec3","_weather$weatherEffec4","selectedEnemy","setSelectedEnemy","defaultWeather","spawnEnemy","_state$world$generate","baseEnemy","cacheKey","cachedEnemy","getEnemyLevel","newEnemy","cacheGeneratedEnemy","availableEnemies","locationId","locationSpawns","allEnemies","timeModifiers","modifiedSpawn","_timeModifiers$timeOf","_weatherModifiers$wea","_timeOfDaySpawnModifi","_weatherSpawnModifier","getModifiedEnemySpawns","CombatManager","handleEnemySelect","fadeInOut","floatAnimation","shineAnimation","TimeWeatherPanel","InfoColumn","InfoLabel","InfoValue","AnimatedIcon","DayCycleProgress","SeasonProgress","SeasonName","SeasonDays","UpcomingChange","specialEventShine","SpecialEventContainer","EventTitle","EventDescription","EventProgress","WeatherEffectsPanel","MapArea","EventOverlay","MapGrid","MapCell","isPlayerLocation","LocationInfo","LocationHeader","LocationName","LocationType","LocationDescription","ResourcesList","ResourceLabel","ResourceValue","BackButton","locationTypeToAreaId","_world$map","_eventInfo$activeEven","_eventInfo$activeEven2","_eventInfo$activeEven3","_timeWeather$weatherE","_timeWeather$weatherE2","_timeWeather$weatherE3","_timeWeather$weatherE4","_timeWeather$weatherE5","_timeWeather$weatherE6","_timeWeather$weatherE7","_timeWeather$weatherE8","_timeWeather$weatherE9","_timeWeather$weatherE10","selectedLocation","setSelectedLocation","isExploring","setIsExploring","currentAreaId","setCurrentAreaId","playerLocation","locations","renderCount","currentSeasonIndex","nextSeason","eventProgress","handleTimeUpdate","counter","eventInfo","timeEffect","handleLocationClick","handleTravel","updateLocation","handleExplore","marginBottom","QuestsList","QuestCategories","CategoryButton","QuestCard","QuestTitle","QuestInfo","QuestDifficulty","QuestDetails","DetailHeader","DetailDescription","Objectives","Objective","Rewards","selectedCategory","setSelectedCategory","selectedQuest","setSelectedQuest","filteredQuests","defaultQuests","cq","canCompleteQuest","handleQuestSelect","objective","handleAcceptQuest","handleCompleteQuest","SectInfo","SectHeader","SectName","SectRank","SectStats","MembersList","MembersHeader","MembersTitle","MembersCount","MemberInfo","MemberName","MemberRole","MemberLevel","ContributionPanel","ContributionTitle","ContributionDescription","defaultSect","BenefitsSection","BenefitsTitle","BenefitsList","BenefitItem","BenefitLabel","BenefitValue","MemberDetails","MemberDetailsHeader","MemberDetailName","MemberDetailRole","MemberProgress","MemberProgressLabel","MemberTrainingInfo","TrainingInfoText","MemberLoyalty","MemberItem","setSelectedMember","_state$sect","loadUserSect","loadSectData","allSectBenefits","updatedSectData","savedMember","selectSectMember","handleMemberClick","trainSectMember","updatedMember","handleTrainMember","getRandomValues","rnds8","rng","msCrypto","uuid","REGEX","byteToHex","arr","validate","TypeError","buf","rnds","getUserGroups","groupsQuery","groupsSnapshot","groupDoc","docs","getGroupMembers","getGroupById","groupsCollection","doc","exists","membersCollection","membersSnapshot","memberDoc","usersCollection","userDoc","_userDoc$data$cultiva","_userDoc$data$cultiva2","cultivationStage","createGroup","groupData","userData","minCultivationLevel","uuidv4","memberIds","maxMembers","isPrivate","requiresApproval","leaderSpecialization","joinedAt","updateGroup","updatedGroup","deleteGroup","batch","addMember","_user$cultivation3","_user$cultivation4","removeMember","removedById","empty","removerSnapshot","removerRole","officersSnapshot","newLeaderId","otherMembersSnapshot","snapshot","updateMemberRole","newRole","updatedById","updaterSnapshot","updaterRole","memberSnapshot","sendInvitation","inviteeId","inviterId","_invitee$cultivation","collection","inviterSnapshot","inviterRole","inviteeDoc","invitee","inviteeLevel","expiresAt","getTime","invitation","inviterDoc","inviter","getUserInvitations","invitationsQuery","orderBy","invitationsSnapshot","invitationDoc","memberCount","respondToInvitation","statusUpdate","getGroupActivities","sortField","sortDirection","limit","activitiesSnapshot","activityDoc","activity","includeParticipants","createGroupActivity","activityData","creatorId","activityId","minParticipants","maxParticipants","endTime","joinGroupActivity","participantsSnapshot","participantId","getAllActivityTypes","getActivityById","typeId","typeDoc","getActivityParticipants","includeType","participantCount","participantDoc","createActivity","activityType","updateActivity","cancelActivity","reason","cancelReason","joinActivity","leaveActivity","participantSnapshot","startActivity","completeActivity","setCurrentGroup","setCurrentActivity","fetchUserGroups","GroupService","setGroups","fetchGroupActivities","filters","GroupActivityService","getActivities","setGroupActivities","fetchGroupActivityInstances","instances","getGroupActivityInstances","_group$activityInstan","isSelected","hasActiveActivity","styles","leader","selectedGroup","onSelectGroup","safeGroups","GroupListItem","StyledButton","variant","fullWidth","IconWrapper","iconPosition","currentUserId","currentUserRole","setLoading","getSpecIcon","getSpecName","canManageMember","roleInfo","getRoleInfo","isLeader","isCurrentUser","canManage","handlePromote","handleDemote","confirm","handleTransferLeadership","handleKick","selectedActivity","onSelectActivity","safeActivities","getActivityTypeIcon","getActivityTypeName","getDifficultyText","getDifficultyClass","recommendedCultivationLevel","_activity$rewardStruc","_activity$rewardStruc2","_activity$rewardStruc3","_activity$rewardStruc4","_activity$rewardStruc5","_activity$rewardStruc6","onCreateActivityInstance","onStartActivity","canManageActivities","selectedDifficulty","setSelectedDifficulty","specialOptions","setSpecialOptions","createdInstance","setCreatedInstance","difficultyLabels","activityTypeLabels","canStartActivity","hasEnoughMembers","allMembersHaveRequiredLevel","hasActiveInstanceOfSameType","legendaryRequirementsMet","renderSpecialOptions","useTimeLimit","wildHunt","expeditionFocus","rewardStructure","ProgressBarContainer","showShadow","ProgressFill","gradient","interactive","ProgressLabel","labelColor","labelSize","StageIndicators","StageIndicator","showLabel","labelText","calculatedLabel","_participants$find","_instance$activityTyp8","_instance$activityTyp9","_instance$activityTyp10","onComplete","currentEvent","setCurrentEvent","eventResult","setEventResult","userRole","isLeaderOrOfficer","difficultyEasy","difficultyMedium","difficultyHard","difficultyExtreme","difficultyLegendary","generateEventForCurrentStage","_instance$activityTyp","getEventsForActivityType","randomIndex","_events$type","generateRewards","generatePenalties","handleAbandonActivity","abandonActivity","_instance$activityTyp2","_instance$activityTyp3","_instance$activityTyp4","_instance$activityTyp5","_instance$activityTyp6","_instance$activityTyp7","_instance$specialCond","_instance$specialCond2","activityInstance","header","titleContainer","typeIcon","statusPreparing","infoSection","infoGrid","infoItem","totalStages","preparingMessage","startButton","abandonButton","statusCompleted","statusFailed","statusAbandoned","toLocaleString","resultSection","resultTitle","rewardsList","rewardsTitle","rewardItem","rewardType","rewardIcon","rewardName","rewardValue","rewardId","noRewards","specialConditions","failReason","abandonReason","closeButton","statusInProgress","progressContainer","progressBar","progressText","eventSection","eventTitle","eventDescription","eventOptions","option","optionIndex","handleOptionSelect","optionButton","failure","resultDescription","resultRewards","resultPenalties","penaltiesTitle","penaltiesList","penalty","penaltyItem","penaltyIcon","penaltyName","penaltyValue","nextStage","additionalData","battleLog","updateActivityProgress","nextButton","actionsSection","failureData","failActivity","failButton","_members$find","onRefresh","selectedInstance","setSelectedInstance","safeActivityInstances","loadActivities","cultivationLevels","_m$user","handleLeaveGroup","MemberList","ActivityList","ActivityDetails","createActivityInstance","initiatorId","ActivityInstance","handleActivityInstanceComplete","abandonedAt","toLocaleDateString","onCancel","handleChange","alert","htmlFor","maxLength","spec","GroupsTab","safeInvitations","showCreateForm","setShowCreateForm","loadUserGroups","loadUserInvitations","interval","fetchUserInvitations","handleInvitationResponse","accept","accepted","loadGroupActivities","CreateGroupForm","newGroup","_invite$group","_invite$inviter","small","primary","secondary","GroupList","GroupDetails","TechniquesList","Categories","TechniqueCard","elementColor","TechniqueHeader","TechniqueIcon","TechniqueTitle","TechniqueDescription","TechniqueStats","Details","EffectRow","hasSufficientCurrency","playerCurrency","requiredCurrency","selectedTechnique","setSelectedTechnique","filteredTechniques","defaultTechniques","handleTechniqueSelect","handleUpgradeTechnique","currencyText","handleLearnTechnique","RelationshipsList","RelationshipCategory","CategoryTitle","RelationshipItem","RelationType","RelationshipLevel","InteractionPanel","CharacterHeader","CharacterRole","RelationshipStats","InteractionsList","InteractionButton","EventLog","EventList","selectedCharacter","setSelectedCharacter","relationshipCategories","characters","allies","neutral","handleInteraction","chat","gift","train","relationshipChange","updatedCharacter","eventText","characterWithEvents","updateRelationship","handleCharacterClick","friendlyCount","filterError","npcId","achievementCategories","AchievementsList","AchievementCard","AchievementHeader","AchievementIcon","AchievementTitle","AchievementDescription","Stats","selectedAchievement","setSelectedAchievement","completedAchievements","defaultAchievements","filteredAchievements","handleAchievementSelect","TabContainer","TabHeader","TabTitle","LeftPanel","RightPanel","TabMenu","TabButton","RecipeList","RecipeCard","RecipeIcon","RecipeInfo","RecipeName","RecipeDescription","RecipeDetails","DetailRow","DetailLabel","DetailValue","IngredientsList","IngredientItem","IngredientName","IngredientQuantity","SearchBar","FilterContainer","FilterSelect","NoRecipesMessage","ResultMessage","CraftingProgress","AlchemyTab","recipes","setRecipes","selectedRecipe","setSelectedRecipe","searchQuery","setSearchQuery","rarityFilter","setRarityFilter","craftingStatus","setCraftingStatus","craftingProgress","setCraftingProgress","craftingResult","setCraftingResult","currentType","getRecipeType","mockRecipes","requiredStage","successRate","ingredients","loadRecipes","filteredRecipes","recipe","matchesSearch","matchesRarity","playerStage","playerLevel","stageOrder","playerStageIndex","recipeStageIndex","completeCrafting","renderRecipeIcon","ingredient","inventoryQuantity","ingredientId","inventoryItem","getIngredientQuantityInInventory","hasEnough","currentStep","craftingInterval","craftingTime","checkIngredients","PetCard","onActivate","onFeed","onTrain","onViewDetails","getPetTypeColor","expForCurrentLevel","expPercentage","evolutionStage","PetFeedingModal","onSelect","availableFood","flexDirection","onMouseOver","onMouseOut","justifyContent","PetTrainingModal","PetDetailsModal","petAbilities","_petTypeAbilities$pet","combatBonus","formatDate","toLocaleTimeString","paddingLeft","SpiritPetsTab","selectedPet","setSelectedPet","showTrainingModal","setShowTrainingModal","showDetailsModal","setShowDetailsModal","showFeedingModal","setShowFeedingModal","demoPet","createDemoPet","addSpiritPet","handleActivatePet","setActiveSpiritPet","handleOpenFeedingModal","handleOpenTraining","handleViewDetails","reload","handleTamePet","_state$player8$locati","petTypes","randomType","randomName","newPet","handleFeedPet","feedSpiritPet","defaultFood","getPetFoodFromInventory","_state$player7$invent","handleTrainPet","trainSpiritPet","ItemList","ItemCard","ItemInfo","ItemPrice","QuantityControl","QuantityButton","QuantityInput","NoItemsMessage","CurrencyDisplay","CurrencyIcon","CurrencyValue","MarketTab","_player$inventory","_player$inventory$cur","_player$inventory2","_player$inventory2$cu","_player$inventory3","_player$inventory3$cu","_player$inventory4","_player$inventory4$cu","_player$inventory5","setQuantity","itemTypeFilter","setItemTypeFilter","selectedMerchant","setSelectedMerchant","activeSellerFilter","setActiveSellerFilter","relationshipLevel","getRelationshipLevel","marketItem","sellerId","sellerName","filteredItems","matchesType","itemSellerId","filterSellerId","matchesSeller","playerRelationships","merchantData","socialRelation","getCurrencyTypeByRarity","formatPrice","totalPrice","goldCost","spiritStonesCost","seller","val","handleBuyItem","currencyUpdate","itemToAdd","statBonus","preferredTypes","merchantItem","updatedMerchants","updatedMarketItems","merchantsUpdated","handleSellItem","sellPrice","currencyToAdd","goldAmount","spiritStonesAmount","merchantName","GameContainer","TopBar","PlayerInfo","PlayerStats","PlayerName","CultivationInfo","ResourcesInfo","LogoutButton","MainArea","Sidebar","MenuItem","MainContent","Notifications","Notification","isSaving","setIsSaving","showWeatherDetail","setShowWeatherDetail","currentHour","dayIncrement","текущее","переход_полночи","saveWithAuthCheck","saveInterval","saveData","VisualEffectsLayer","alignItems","WeatherDetailScreen","renderActiveTab","CultivationTab","InventoryTab","EquipmentTab","CharacterTab","MapTab","QuestsTab","SectTab","SkillsTab","SocialTab","AchievementsTab","WorldTimeWidget","ActiveEffectsPanel","lastManualUpdateStamp","_actions$state3","_actions$state3$world","_actions$state3$world2","intervalRef","dispatchRef","lastUpdateRef","canPerformAutoUpdate","elapsedMinutes","auto","initialization","withForecast","syncAndCheckInterval","_actions$state","_actions$state$weathe","_actions$state2","_actions$state2$world","_actions$state2$world2","gameTime","restockItems","merchantRestockInterval","_event$detail","handleVisibilityChange","visibilityState","dispatchBase","initialProcessedState","wasUpdated","текущий_сезон_world_time","initializeWeatherState","_state$player$stats","_state$player$stats2","stateUpdateEvent","middlewareEnhancer","middlewareResult","store","initializedWeather","currentWeatherState","updatedWeatherState","updateWeatherState","outerError","_freshState$world","_freshState$world3","_freshState$world4","_freshState$world4$ti","_freshState$world5","_freshState$world5$ti","_freshState$world6","_freshState$world6$ti","_freshState$world7","_freshState$world7$ti","_freshState$world8","_freshState$weather","freshState","_freshState$world2","totalMinutes","weatherState","gameMinutesToAdd","totalGameMinutes","gameMinutes","totalOldMinutes","minutesToAddTotal","daysToAdd","newTotalMinutesOfDay","isTransition","check1","check2","isMidnightTransition","explicitFullDays","criteriaMatched","totalDaysToAdd","oldTotalMinutes","minutesDiff","newWorldHour","newWorldMinute","oldWorldTime","newWorldTime","minutesAdded","currentWorldDay","worldTimeDayType","isMidnightCrossing","time_values","oldMinutes","newMinutes","actions_taken","condition1","condition2","explicit_days","state_world_time","updateTimeAction","cleanedUpdateTimeAction","исходное_действие","итоговое_значение_дня","тип_значения_дня","очищенное_действие","_afterDispatchState$w","_afterDispatchState$w2","afterDispatchState","weather_dayCount","получено_от_сервиса","предыдущее_значение","изменение","dayDiff","_syncCheckState$weath","_syncCheckState$weath2","_syncCheckState$weath3","syncCheckState","_syncCheckState$weath4","_syncCheckState$weath5","_syncCheckState$weath6","weatherTime","hoursBefore","minutesBefore","hoursAfter","minutesAfter","gameMinutesBefore","gameMinutesAfter","gameMinutesAdded","weatherMiddleware","savedState","initializeGame","normalizeEffectsAction","normalizeEffects","addEvent","removeEvent","eventId","changeScreen","screen","removeNotification","notificationId","updateSettings","saveGame","callbacks","updateQuestObjective","checkAchievements","completeAchievement","startCombat","endCombat","updateCombat","addCombatLog","addStatusEffect","updateStatusEffect","removeStatusEffect","effectId","removeSpiritPet","updatePetsState","validEquippedItems","detailedItem","benefitsObj","processedBenefits","rankInfo","currentLoyalty","cappedLoyalty","leaveSect","refreshGameState","forced","AppContainer","LoadingScreen","ErrorScreen","ErrorTitle","RetryButton","browserInfo","setBrowserInfo","browserName","detectBrowser","parsedState","parseError","add1000ToEverything","добавить1000Всего","gameDebug","_window$gameContext","_weatherService$dayti","_weatherService$dayti2","timeData","startStateLogging","logGameState","_window$gameContext2","_window$__GAME_CONTEX","_state$player2$cultiv","_state$player3$stats","_state$player4$stats","_state$player5$stats","_state$player6$stats","_state$world2$current","renderers","_currentFiber","fiber","maxIterations","reactError","gameStateAttribute","__LAST_LOGGED_STATE__","stopStateLogging","getLastLoggedState","getGameDebugInfo","debugInfo","globalGameState","lastLoggedState","reactDevTools","initDebugTools","showTimeHelp","handleRetry","GameTimeUpdater","DebugTools","LoginPage","CharacterCreationPage","GamePage","App"],"sourceRoot":""}