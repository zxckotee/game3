services:
  # Единое приложение (React + Express) БЕЗ PostgreSQL
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: immortal-path-app
    ports:
      - "80:80"      # React dev server
      - "3001:3001"  # Express API server
    volumes:
      # Монтируем исходный код для hot reload
      - .:/app
      # Исключаем node_modules для производительности
      - /app/node_modules
      # Монтируем конфигурационные файлы
      - ./package.json:/app/package.json:ro
      - ./craco.config.js:/app/craco.config.js:ro
      - ./.env:/app/.env:ro
    environment:
      # Переменные для разработки
      - NODE_ENV=development
      - PORT=3001
      - REACT_APP_PORT=80
      - REACT_APP_API_URL=http://localhost:3001
      # Hot reload настройки
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - GENERATE_SOURCEMAP=false
      - SKIP_PREFLIGHT_CHECK=true
      - FAST_REFRESH=true
      - CI=false
      # Безопасность (для разработки)
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - SESSION_SECRET=dev_session_secret_change_in_production
      # Database - ПОЛНОСТЬЮ ОТКЛЮЧЕНО
      - USE_DATABASE=false
      - USE_MERCHANT_FILES=true
      # Отключаем все попытки подключения к PostgreSQL
      - SKIP_DB_CONNECTION=true
      - DB_DISABLED=true
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

# Volumes не нужны, так как PostgreSQL исключен